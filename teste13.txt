Input SHA256 : 20C8E7E36547BE558B004FCB34A8FFCF1AB0EBC057F312839CDA0B84FFD1E361
.text:0000000180001000 ; Input MD5    : C41F702CF9B76C1B5687B4CC532EE197
.text:0000000180001000 ; Input CRC32  : 52EB8CA9
.text:0000000180001000
.text:0000000180001000 ; File Name   : C:\Users\Hamlet Company\OneDrive\Área de Trabalho\MF Testes\Install_FSUIPC7\Utils\FSUIPC_WAPID.dll
.text:0000000180001000 ; Format      : Portable executable for AMD64 (PE)
.text:0000000180001000 ; Imagebase   : 180000000
.text:0000000180001000 ; Timestamp   : 6411D53B (Wed Mar 15 14:24:59 2023)
.text:0000000180001000 ; Section 1. (virtual address 00001000)
.text:0000000180001000 ; Virtual size                  : 0001092B (  67883.)
.text:0000000180001000 ; Section size in file          : 00010A00 (  68096.)
.text:0000000180001000 ; Offset to raw data for section: 00000400
.text:0000000180001000 ; Flags 60000020: Text Executable Readable
.text:0000000180001000 ; Alignment     : default
.text:0000000180001000 ; PDB File Name : E:\Repos\FSUIPC_WDLL\x64\Release\FSUIPC_WAPID.pdb
.text:0000000180001000 ; OS type         :  MS Windows
.text:0000000180001000 ; Application type:  DLL
.text:0000000180001000
.text:0000000180001000                 .686p
.text:0000000180001000                 .mmx
.text:0000000180001000                 .model flat
.text:0000000180001000
.text:0000000180001000 ; ===========================================================================
.text:0000000180001000
.text:0000000180001000 ; Segment type: Pure code
.text:0000000180001000 ; Segment permissions: Read/Execute
.text:0000000180001000 _text           segment para public 'CODE' use64
.text:0000000180001000                 assume cs:_text
.text:0000000180001000                 ;org 180001000h
.text:0000000180001000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:0000000180001000
.text:0000000180001000 ; =============== S U B R O U T I N E =======================================
.text:0000000180001000
.text:0000000180001000
.text:0000000180001000 sub_180001000   proc near               ; DATA XREF: .rdata:00000001800125E8↓o
.text:0000000180001000                 lea     rcx, unknown_libname_8 ; Microsoft VisualC v14 64bit runtime
.text:0000000180001007                 jmp     atexit
.text:0000000180001007 sub_180001000   endp
.text:0000000180001007
.text:0000000180001007 ; ---------------------------------------------------------------------------
.text:000000018000100C                 align 10h
.text:0000000180001010
.text:0000000180001010 ; =============== S U B R O U T I N E =======================================
.text:0000000180001010
.text:0000000180001010
.text:0000000180001010 sub_180001010   proc near               ; DATA XREF: .pdata:ExceptionDir↓o
.text:0000000180001010                 push    rbx
.text:0000000180001012                 sub     rsp, 20h
.text:0000000180001016                 mov     rbx, rcx
.text:0000000180001019                 mov     rax, rdx
.text:000000018000101C                 lea     rcx, off_180012710
.text:0000000180001023                 xorps   xmm0, xmm0
.text:0000000180001026                 lea     rdx, [rbx+8]
.text:000000018000102A                 mov     [rbx], rcx
.text:000000018000102D                 lea     rcx, [rax+8]
.text:0000000180001031                 movups  xmmword ptr [rdx], xmm0
.text:0000000180001034                 call    cs:__std_exception_copy
.text:000000018000103A                 mov     rax, rbx
.text:000000018000103D                 add     rsp, 20h
.text:0000000180001041                 pop     rbx
.text:0000000180001042                 retn
.text:0000000180001042 sub_180001010   endp
.text:0000000180001042
.text:0000000180001042 ; ---------------------------------------------------------------------------
.text:0000000180001043 algn_180001043:                         ; DATA XREF: .pdata:ExceptionDir↓o
.text:0000000180001043                 align 10h
.text:0000000180001050
.text:0000000180001050 ; =============== S U B R O U T I N E =======================================
.text:0000000180001050
.text:0000000180001050
.text:0000000180001050 sub_180001050   proc near               ; DATA XREF: .rdata:0000000180012718↓o
.text:0000000180001050                                         ; .rdata:0000000180012730↓o ...
.text:0000000180001050                 mov     rdx, [rcx+8]
.text:0000000180001054                 lea     rax, aUnknownExcepti ; "Unknown exception"
.text:000000018000105B                 test    rdx, rdx
.text:000000018000105E                 cmovnz  rax, rdx
.text:0000000180001062                 retn
.text:0000000180001062 sub_180001050   endp
.text:0000000180001062
.text:0000000180001062 ; ---------------------------------------------------------------------------
.text:0000000180001063                 align 10h
.text:0000000180001070
.text:0000000180001070 ; =============== S U B R O U T I N E =======================================
.text:0000000180001070
.text:0000000180001070
.text:0000000180001070 ; __int64 __fastcall sub_180001070(void *Block)
.text:0000000180001070 sub_180001070   proc near               ; DATA XREF: .rdata:off_180012710↓o
.text:0000000180001070                                         ; .rdata:off_180012728↓o ...
.text:0000000180001070
.text:0000000180001070 arg_0           = qword ptr  8
.text:0000000180001070
.text:0000000180001070                 mov     [rsp+arg_0], rbx
.text:0000000180001075                 push    rdi
.text:0000000180001076                 sub     rsp, 20h
.text:000000018000107A                 lea     rax, off_180012710
.text:0000000180001081                 mov     rdi, rcx
.text:0000000180001084                 mov     [rcx], rax
.text:0000000180001087                 mov     ebx, edx
.text:0000000180001089                 add     rcx, 8
.text:000000018000108D                 call    cs:__std_exception_destroy
.text:0000000180001093                 test    bl, 1
.text:0000000180001096                 jz      short loc_1800010A5
.text:0000000180001098                 mov     edx, 18h
.text:000000018000109D                 mov     rcx, rdi        ; Block
.text:00000001800010A0                 call    j_j_free
.text:00000001800010A5
.text:00000001800010A5 loc_1800010A5:                          ; CODE XREF: sub_180001070+26↑j
.text:00000001800010A5                 mov     rbx, [rsp+28h+arg_0]
.text:00000001800010AA                 mov     rax, rdi
.text:00000001800010AD                 add     rsp, 20h
.text:00000001800010B1                 pop     rdi
.text:00000001800010B2                 retn
.text:00000001800010B2 sub_180001070   endp
.text:00000001800010B2
.text:00000001800010B2 ; ---------------------------------------------------------------------------
.text:00000001800010B3 algn_1800010B3:                         ; DATA XREF: .pdata:000000018001C00C↓o
.text:00000001800010B3                 align 20h
.text:00000001800010C0                 lea     rax, off_180012710
.text:00000001800010C7                 mov     [rcx], rax
.text:00000001800010CA                 add     rcx, 8
.text:00000001800010CE                 jmp     cs:__std_exception_destroy
.text:00000001800010CE ; ---------------------------------------------------------------------------
.text:00000001800010D5                 align 20h
.text:00000001800010E0
.text:00000001800010E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800010E0
.text:00000001800010E0
.text:00000001800010E0 sub_1800010E0   proc near               ; CODE XREF: Concurrency::cancel_current_task(void)+9↓p
.text:00000001800010E0                 lea     rax, aBadArrayNewLen ; "bad array new length"
.text:00000001800010E7                 mov     qword ptr [rcx+10h], 0
.text:00000001800010EF                 mov     [rcx+8], rax
.text:00000001800010F3                 lea     rax, off_180012740
.text:00000001800010FA                 mov     [rcx], rax
.text:00000001800010FD                 mov     rax, rcx
.text:0000000180001100                 retn
.text:0000000180001100 sub_1800010E0   endp
.text:0000000180001100
.text:0000000180001100 ; ---------------------------------------------------------------------------
.text:0000000180001101                 align 10h
.text:0000000180001110 ; [00000020 BYTES: COLLAPSED FUNCTION Concurrency::cancel_current_task(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180001130
.text:0000000180001130 ; =============== S U B R O U T I N E =======================================
.text:0000000180001130
.text:0000000180001130
.text:0000000180001130 sub_180001130   proc near               ; DATA XREF: .pdata:000000018001C018↓o
.text:0000000180001130                                         ; .pdata:000000018001C024↓o
.text:0000000180001130                 push    rbx
.text:0000000180001132                 sub     rsp, 20h
.text:0000000180001136                 mov     rbx, rcx
.text:0000000180001139                 mov     rax, rdx
.text:000000018000113C                 lea     rcx, off_180012710
.text:0000000180001143                 xorps   xmm0, xmm0
.text:0000000180001146                 lea     rdx, [rbx+8]
.text:000000018000114A                 mov     [rbx], rcx
.text:000000018000114D                 lea     rcx, [rax+8]
.text:0000000180001151                 movups  xmmword ptr [rdx], xmm0
.text:0000000180001154                 call    cs:__std_exception_copy
.text:000000018000115A                 lea     rax, off_180012740
.text:0000000180001161                 mov     [rbx], rax
.text:0000000180001164                 mov     rax, rbx
.text:0000000180001167                 add     rsp, 20h
.text:000000018000116B                 pop     rbx
.text:000000018000116C                 retn
.text:000000018000116C sub_180001130   endp
.text:000000018000116C
.text:000000018000116C ; ---------------------------------------------------------------------------
.text:000000018000116D algn_18000116D:                         ; DATA XREF: .pdata:000000018001C024↓o
.text:000000018000116D                 align 10h
.text:0000000180001170
.text:0000000180001170 ; =============== S U B R O U T I N E =======================================
.text:0000000180001170
.text:0000000180001170
.text:0000000180001170 sub_180001170   proc near               ; DATA XREF: .pdata:000000018001C030↓o
.text:0000000180001170                 push    rbx
.text:0000000180001172                 sub     rsp, 20h
.text:0000000180001176                 mov     rbx, rcx
.text:0000000180001179                 mov     rax, rdx
.text:000000018000117C                 lea     rcx, off_180012710
.text:0000000180001183                 xorps   xmm0, xmm0
.text:0000000180001186                 lea     rdx, [rbx+8]
.text:000000018000118A                 mov     [rbx], rcx
.text:000000018000118D                 lea     rcx, [rax+8]
.text:0000000180001191                 movups  xmmword ptr [rdx], xmm0
.text:0000000180001194                 call    cs:__std_exception_copy
.text:000000018000119A                 lea     rax, off_180012728
.text:00000001800011A1                 mov     [rbx], rax
.text:00000001800011A4                 mov     rax, rbx
.text:00000001800011A7                 add     rsp, 20h
.text:00000001800011AB                 pop     rbx
.text:00000001800011AC                 retn
.text:00000001800011AC sub_180001170   endp
.text:00000001800011AC
.text:00000001800011AC ; ---------------------------------------------------------------------------
.text:00000001800011AD algn_1800011AD:                         ; DATA XREF: .pdata:000000018001C030↓o
.text:00000001800011AD                 align 10h
.text:00000001800011B0 ; Exported entry  16. fsuipcw_init
.text:00000001800011B0
.text:00000001800011B0 ; =============== S U B R O U T I N E =======================================
.text:00000001800011B0
.text:00000001800011B0
.text:00000001800011B0                 public fsuipcw_init
.text:00000001800011B0 fsuipcw_init    proc near               ; DATA XREF: .rdata:0000000180014BCC↓o
.text:00000001800011B0                                         ; .rdata:0000000180014BDC↓o ...
.text:00000001800011B0
.text:00000001800011B0 arg_0           = qword ptr  8
.text:00000001800011B0
.text:00000001800011B0                 push    rdi
.text:00000001800011B2                 sub     rsp, 20h
.text:00000001800011B6                 cmp     cs:lpParameter, 0
.text:00000001800011BE                 mov     rdi, rcx
.text:00000001800011C1                 jnz     loc_1800012F0
.text:00000001800011C7                 cmp     cs:qword_180019AD0, 0
.text:00000001800011CF                 jnz     loc_1800012E2
.text:00000001800011D5                 mov     ecx, 418h       ; Size
.text:00000001800011DA
.text:00000001800011DA loc_1800011DA:                          ; DATA XREF: .rdata:0000000180014BCC↓o
.text:00000001800011DA                                         ; .rdata:0000000180014BDC↓o ...
.text:00000001800011DA                 mov     [rsp+28h+arg_0], rbx
.text:00000001800011DF                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:00000001800011E4                 xor     edx, edx        ; Val
.text:00000001800011E6                 mov     r8d, 418h       ; Size
.text:00000001800011EC                 mov     rcx, rax        ; void *
.text:00000001800011EF                 mov     rbx, rax
.text:00000001800011F2                 call    memset
.text:00000001800011F7                 mov     rcx, rbx
.text:00000001800011FA                 call    sub_180002AE0
.text:00000001800011FF                 mov     rbx, cs:qword_180019AE0
.text:0000000180001206                 mov     cs:qword_180019AD0, rax
.text:000000018000120D                 test    rdi, rdi
.text:0000000180001210                 jnz     short loc_180001256
.text:0000000180001212                 test    rbx, rbx
.text:0000000180001215                 jnz     loc_1800012D6
.text:000000018000121B                 mov     ecx, 160h       ; Size
.text:0000000180001220                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180001225                 xor     edx, edx        ; Val
.text:0000000180001227                 mov     r8d, 160h       ; Size
.text:000000018000122D                 mov     rcx, rax        ; void *
.text:0000000180001230                 mov     rbx, rax
.text:0000000180001233                 call    memset
.text:0000000180001238                 lea     rdx, aFsuipcWasmif ; ".\\FSUIPC_WASMIF"
.text:000000018000123F                 mov     rcx, rbx
.text:0000000180001242                 call    sub_180007030
.text:0000000180001247                 mov     rbx, rax
.text:000000018000124A                 mov     cs:qword_180019AE0, rax
.text:0000000180001251                 jmp     loc_1800012D6
.text:0000000180001256 ; ---------------------------------------------------------------------------
.text:0000000180001256
.text:0000000180001256 loc_180001256:                          ; CODE XREF: fsuipcw_init+60↑j
.text:0000000180001256                 test    rbx, rbx
.text:0000000180001259                 jnz     short loc_1800012D6
.text:000000018000125B                 mov     ecx, 160h       ; Size
.text:0000000180001260                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180001265                 xor     edx, edx        ; Val
.text:0000000180001267                 mov     r8d, 160h       ; Size
.text:000000018000126D                 mov     rcx, rax        ; void *
.text:0000000180001270                 mov     rbx, rax
.text:0000000180001273                 call    memset
.text:0000000180001278                 mov     rcx, rbx
.text:000000018000127B                 call    sub_180009480
.text:0000000180001280                 xorps   xmm0, xmm0
.text:0000000180001283                 lea     rcx, [rbx+138h] ; lpCriticalSection
.text:000000018000128A                 movups  xmmword ptr [rbx+110h], xmm0
.text:0000000180001291                 mov     qword ptr [rbx+120h], 0
.text:000000018000129C                 mov     qword ptr [rbx+128h], 0Fh
.text:00000001800012A7                 mov     byte ptr [rbx+110h], 0
.text:00000001800012AE                 mov     [rbx+130h], rdi
.text:00000001800012B5                 mov     dword ptr [rbx+108h], 2
.text:00000001800012BF                 mov     dword ptr [rbx+10Ch], 3
.text:00000001800012C9                 call    cs:InitializeCriticalSection
.text:00000001800012CF                 mov     cs:qword_180019AE0, rbx
.text:00000001800012D6
.text:00000001800012D6 loc_1800012D6:                          ; CODE XREF: fsuipcw_init+65↑j
.text:00000001800012D6                                         ; fsuipcw_init+A1↑j ...
.text:00000001800012D6                 mov     cs:qword_180019AC8, rbx
.text:00000001800012DD                 mov     rbx, [rsp+28h+arg_0]
.text:00000001800012E2
.text:00000001800012E2 loc_1800012E2:                          ; CODE XREF: fsuipcw_init+1F↑j
.text:00000001800012E2                                         ; DATA XREF: .pdata:000000018001C048↓o ...
.text:00000001800012E2                 mov     rax, cs:qword_180019AD0
.text:00000001800012E9                 mov     cs:lpParameter, rax
.text:00000001800012F0
.text:00000001800012F0 loc_1800012F0:                          ; CODE XREF: fsuipcw_init+11↑j
.text:00000001800012F0                 add     rsp, 20h
.text:00000001800012F4                 pop     rdi
.text:00000001800012F5                 retn
.text:00000001800012F5 fsuipcw_init    endp
.text:00000001800012F5
.text:00000001800012F5 ; ---------------------------------------------------------------------------
.text:00000001800012F6 algn_1800012F6:                         ; DATA XREF: .pdata:000000018001C054↓o
.text:00000001800012F6                 align 20h
.text:0000000180001300 ; Exported entry  32. fsuipcw_start
.text:0000000180001300
.text:0000000180001300 ; =============== S U B R O U T I N E =======================================
.text:0000000180001300
.text:0000000180001300
.text:0000000180001300                 public fsuipcw_start
.text:0000000180001300 fsuipcw_start   proc near               ; DATA XREF: .rdata:0000000180014C04↓o
.text:0000000180001300                                         ; .rdata:0000000180014C14↓o ...
.text:0000000180001300
.text:0000000180001300 dwCreationFlags = dword ptr -138h
.text:0000000180001300 lpThreadId      = qword ptr -130h
.text:0000000180001300 ThreadId        = dword ptr -128h
.text:0000000180001300 Buffer          = byte ptr -118h
.text:0000000180001300 var_18          = qword ptr -18h
.text:0000000180001300 arg_0           = qword ptr  8
.text:0000000180001300
.text:0000000180001300 ; __unwind { // __GSHandlerCheck
.text:0000000180001300                 push    rbx
.text:0000000180001302                 sub     rsp, 150h
.text:0000000180001309                 mov     rax, cs:__security_cookie
.text:0000000180001310                 xor     rax, rsp
.text:0000000180001313                 mov     [rsp+158h+var_18], rax
.text:000000018000131B                 mov     rbx, cs:lpParameter
.text:0000000180001322                 test    rbx, rbx
.text:0000000180001325                 jz      loc_1800014AC
.text:0000000180001325 ; } // starts at 180001300
.text:000000018000132B
.text:000000018000132B loc_18000132B:                          ; DATA XREF: .rdata:0000000180014C04↓o
.text:000000018000132B                                         ; .rdata:0000000180014C14↓o ...
.text:000000018000132B ; __unwind { // __GSHandlerCheck
.text:000000018000132B                 mov     [rsp+158h+arg_0], rdi
.text:0000000180001333                 xor     edi, edi
.text:0000000180001335                 mov     [rsp+158h+ThreadId], edi
.text:0000000180001339                 cmp     [rbx], rdi
.text:000000018000133C                 jz      short loc_180001357
.text:000000018000133E                 call    sub_180007430
.text:0000000180001343                 mov     rcx, rax
.text:0000000180001346                 lea     rdx, aAlreadyStarted ; "Already started!"
.text:000000018000134D                 call    sub_180007930
.text:0000000180001352                 jmp     loc_1800014A4
.text:0000000180001357 ; ---------------------------------------------------------------------------
.text:0000000180001357
.text:0000000180001357 loc_180001357:                          ; CODE XREF: fsuipcw_start+3C↑j
.text:0000000180001357                 mov     eax, [rbx+358h]
.text:000000018000135D                 lea     r9, a102        ; "1.0.2"
.text:0000000180001364                 mov     dword ptr [rsp+158h+lpThreadId], eax
.text:0000000180001368                 lea     r8, aStartingFsuipc ; "**** Starting FSUIPC7 WASM Interface (W"...
.text:000000018000136F                 mov     edx, 100h       ; BufferCount
.text:0000000180001374                 mov     qword ptr [rsp+158h+dwCreationFlags], r9
.text:0000000180001379                 lea     rcx, [rsp+158h+Buffer] ; Buffer
.text:000000018000137E                 mov     [rbx+18h], edi
.text:0000000180001381                 call    sub_1800029E0
.text:0000000180001386                 call    sub_180007430
.text:000000018000138B                 mov     rcx, rax
.text:000000018000138E                 lea     rdx, [rsp+158h+Buffer]
.text:0000000180001393                 call    sub_180007B30
.text:0000000180001398                 cmp     [rbx+10h], rdi
.text:000000018000139C                 jnz     short loc_1800013B2
.text:000000018000139E                 xor     r9d, r9d        ; lpName
.text:00000001800013A1                 xor     r8d, r8d        ; bInitialState
.text:00000001800013A4                 xor     edx, edx        ; bManualReset
.text:00000001800013A6                 xor     ecx, ecx        ; lpEventAttributes
.text:00000001800013A8                 call    cs:CreateEventA
.text:00000001800013AE                 mov     [rbx+10h], rax
.text:00000001800013B2
.text:00000001800013B2 loc_1800013B2:                          ; CODE XREF: fsuipcw_start+9C↑j
.text:00000001800013B2                 mov     eax, [rbx+358h]
.text:00000001800013B8                 lea     rdx, aFsuipcWasmIf ; "FSUIPC-WASM-IF"
.text:00000001800013BF                 mov     dword ptr [rsp+158h+lpThreadId], eax
.text:00000001800013C3                 xor     r9d, r9d
.text:00000001800013C6                 mov     rax, [rbx+10h]
.text:00000001800013CA                 xor     r8d, r8d
.text:00000001800013CD                 mov     rcx, rbx
.text:00000001800013D0                 mov     qword ptr [rsp+158h+dwCreationFlags], rax
.text:00000001800013D5                 call    sub_18000BFD0
.text:00000001800013DA                 test    eax, eax
.text:00000001800013DC                 js      loc_180001462
.text:00000001800013E2                 call    sub_180007430
.text:00000001800013E7                 mov     rcx, rax
.text:00000001800013EA                 lea     rdx, aConnectedToMsf ; "Connected to MSFS"
.text:00000001800013F1                 call    sub_180007B30
.text:00000001800013F6                 mov     rax, [rbx+8]
.text:00000001800013FA                 test    rax, rax
.text:00000001800013FD                 jnz     short loc_18000144C
.text:00000001800013FF                 lea     rax, [rsp+158h+ThreadId]
.text:0000000180001404                 mov     r9, rbx         ; lpParameter
.text:0000000180001407                 mov     [rsp+158h+lpThreadId], rax ; lpThreadId
.text:000000018000140C                 lea     r8, StartAddress ; lpStartAddress
.text:0000000180001413                 xor     edx, edx        ; dwStackSize
.text:0000000180001415                 mov     [rsp+158h+dwCreationFlags], edi ; dwCreationFlags
.text:0000000180001419                 xor     ecx, ecx        ; lpThreadAttributes
.text:000000018000141B                 call    cs:CreateThread
.text:0000000180001421                 mov     [rbx+8], rax
.text:0000000180001425                 mov     rax, [rbx+8]
.text:0000000180001429                 test    rax, rax
.text:000000018000142C                 jnz     short loc_1800014A4
.text:000000018000142E                 call    sub_180007430
.text:0000000180001433                 mov     rcx, rax
.text:0000000180001436                 lea     rdx, aErrorCreatingS ; "Error creating SimConnect thread"
.text:000000018000143D                 call    sub_180007930
.text:0000000180001442                 mov     rcx, rbx
.text:0000000180001445                 call    sub_180003260
.text:000000018000144A                 jmp     short loc_1800014A4
.text:000000018000144C ; ---------------------------------------------------------------------------
.text:000000018000144C
.text:000000018000144C loc_18000144C:                          ; CODE XREF: fsuipcw_start+FD↑j
.text:000000018000144C                 call    sub_180007430
.text:0000000180001451                 mov     rcx, rax
.text:0000000180001454                 lea     rdx, aSimconnectThre ; "**** SimConnect thread already running "...
.text:000000018000145B                 call    sub_180007930
.text:0000000180001460                 jmp     short loc_1800014A4
.text:0000000180001462 ; ---------------------------------------------------------------------------
.text:0000000180001462
.text:0000000180001462 loc_180001462:                          ; CODE XREF: fsuipcw_start+DC↑j
.text:0000000180001462                 cmp     eax, 80070057h
.text:0000000180001467                 lea     rcx, aEInvalidarg ; "E_INVALIDARG"
.text:000000018000146E                 lea     r9, aEFail      ; "E_FAIL"
.text:0000000180001475                 mov     edx, 100h       ; BufferCount
.text:000000018000147A                 cmovz   r9, rcx
.text:000000018000147E                 lea     r8, aFailedOnSimcon ; "Failed on SimConnect Open: cannot conne"...
.text:0000000180001485                 lea     rcx, [rsp+158h+Buffer] ; Buffer
.text:000000018000148A                 call    sub_1800029E0
.text:000000018000148F                 call    sub_180007430
.text:0000000180001494                 mov     rcx, rax
.text:0000000180001497                 lea     rdx, [rsp+158h+Buffer]
.text:000000018000149C                 call    sub_180007930
.text:00000001800014A1                 mov     [rbx], rdi
.text:00000001800014A4
.text:00000001800014A4 loc_1800014A4:                          ; CODE XREF: fsuipcw_start+52↑j
.text:00000001800014A4                                         ; fsuipcw_start+12C↑j ...
.text:00000001800014A4                 mov     rdi, [rsp+158h+arg_0]
.text:00000001800014A4 ; } // starts at 18000132B
.text:00000001800014AC
.text:00000001800014AC loc_1800014AC:                          ; CODE XREF: fsuipcw_start+25↑j
.text:00000001800014AC                                         ; DATA XREF: .pdata:000000018001C06C↓o ...
.text:00000001800014AC ; __unwind { // __GSHandlerCheck
.text:00000001800014AC                 mov     rcx, [rsp+158h+var_18]
.text:00000001800014B4                 xor     rcx, rsp        ; StackCookie
.text:00000001800014B7                 call    __security_check_cookie
.text:00000001800014BC                 add     rsp, 150h
.text:00000001800014C3                 pop     rbx
.text:00000001800014C4                 retn
.text:00000001800014C4 ; } // starts at 1800014AC
.text:00000001800014C4 fsuipcw_start   endp
.text:00000001800014C4
.text:00000001800014C4 ; ---------------------------------------------------------------------------
.text:00000001800014C5 algn_1800014C5:                         ; DATA XREF: .pdata:000000018001C078↓o
.text:00000001800014C5                 align 10h
.text:00000001800014D0 ; Exported entry   4. fsuipcw_end
.text:00000001800014D0
.text:00000001800014D0 ; =============== S U B R O U T I N E =======================================
.text:00000001800014D0
.text:00000001800014D0
.text:00000001800014D0                 public fsuipcw_end
.text:00000001800014D0 fsuipcw_end     proc near               ; DATA XREF: .rdata:off_1800166E8↓o
.text:00000001800014D0                 mov     rax, cs:lpParameter
.text:00000001800014D7                 test    rax, rax
.text:00000001800014DA                 jz      short locret_1800014E3
.text:00000001800014DC                 mov     dword ptr [rax+18h], 1
.text:00000001800014E3
.text:00000001800014E3 locret_1800014E3:                       ; CODE XREF: fsuipcw_end+A↑j
.text:00000001800014E3                 retn
.text:00000001800014E3 fsuipcw_end     endp
.text:00000001800014E3
.text:00000001800014E3 ; ---------------------------------------------------------------------------
.text:00000001800014E4                 align 10h
.text:00000001800014F0 ; Exported entry   2. fsuipcw_createAircraftLvarFile
.text:00000001800014F0
.text:00000001800014F0 ; =============== S U B R O U T I N E =======================================
.text:00000001800014F0
.text:00000001800014F0
.text:00000001800014F0                 public fsuipcw_createAircraftLvarFile
.text:00000001800014F0 fsuipcw_createAircraftLvarFile proc near
.text:00000001800014F0                                         ; DATA XREF: .rdata:off_1800166E8↓o
.text:00000001800014F0                                         ; .pdata:000000018001C084↓o
.text:00000001800014F0
.text:00000001800014F0 var_18          = dword ptr -18h
.text:00000001800014F0 var_10          = dword ptr -10h
.text:00000001800014F0
.text:00000001800014F0                 sub     rsp, 38h
.text:00000001800014F4                 mov     rcx, cs:lpParameter
.text:00000001800014FB                 test    rcx, rcx
.text:00000001800014FE                 jz      short loc_18000153D
.text:0000000180001500                 mov     rcx, [rcx]
.text:0000000180001503                 xor     r9d, r9d
.text:0000000180001506                 mov     [rsp+38h+var_10], 10h
.text:000000018000150E                 xor     edx, edx
.text:0000000180001510                 mov     [rsp+38h+var_18], 1
.text:0000000180001518                 lea     r8d, [r9+4]
.text:000000018000151C                 call    sub_18000C4B0
.text:0000000180001521                 test    eax, eax
.text:0000000180001523                 jns     short loc_18000153D
.text:0000000180001525                 call    sub_180007430
.text:000000018000152A                 mov     rcx, rax
.text:000000018000152D                 lea     rdx, aSimconnectTran ; "SimConnect_TransmitClientEvent for EVEN"...
.text:0000000180001534                 add     rsp, 38h
.text:0000000180001538                 jmp     sub_180007930
.text:000000018000153D ; ---------------------------------------------------------------------------
.text:000000018000153D
.text:000000018000153D loc_18000153D:                          ; CODE XREF: fsuipcw_createAircraftLvarFile+E↑j
.text:000000018000153D                                         ; fsuipcw_createAircraftLvarFile+33↑j
.text:000000018000153D                 add     rsp, 38h
.text:0000000180001541                 retn
.text:0000000180001541 fsuipcw_createAircraftLvarFile endp
.text:0000000180001541
.text:0000000180001541 ; ---------------------------------------------------------------------------
.text:0000000180001542 algn_180001542:                         ; DATA XREF: .pdata:000000018001C084↓o
.text:0000000180001542                 align 10h
.text:0000000180001550 ; Exported entry  23. fsuipcw_reload
.text:0000000180001550
.text:0000000180001550 ; =============== S U B R O U T I N E =======================================
.text:0000000180001550
.text:0000000180001550
.text:0000000180001550                 public fsuipcw_reload
.text:0000000180001550 fsuipcw_reload  proc near               ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180001550                                         ; .pdata:000000018001C090↓o
.text:0000000180001550
.text:0000000180001550 var_18          = dword ptr -18h
.text:0000000180001550 var_10          = dword ptr -10h
.text:0000000180001550
.text:0000000180001550                 sub     rsp, 38h
.text:0000000180001554                 mov     rcx, cs:lpParameter
.text:000000018000155B                 test    rcx, rcx
.text:000000018000155E                 jz      short loc_18000159D
.text:0000000180001560                 mov     rcx, [rcx]
.text:0000000180001563                 xor     r9d, r9d
.text:0000000180001566                 mov     [rsp+38h+var_10], 10h
.text:000000018000156E                 xor     edx, edx
.text:0000000180001570                 mov     [rsp+38h+var_18], 1
.text:0000000180001578                 lea     r8d, [r9+5]
.text:000000018000157C                 call    sub_18000C4B0
.text:0000000180001581                 test    eax, eax
.text:0000000180001583                 jns     short loc_18000159D
.text:0000000180001585                 call    sub_180007430
.text:000000018000158A                 mov     rcx, rax
.text:000000018000158D                 lea     rdx, aSimconnectTran_0 ; "SimConnect_TransmitClientEvent for EVEN"...
.text:0000000180001594                 add     rsp, 38h
.text:0000000180001598                 jmp     sub_180007930
.text:000000018000159D ; ---------------------------------------------------------------------------
.text:000000018000159D
.text:000000018000159D loc_18000159D:                          ; CODE XREF: fsuipcw_reload+E↑j
.text:000000018000159D                                         ; fsuipcw_reload+33↑j
.text:000000018000159D                 add     rsp, 38h
.text:00000001800015A1                 retn
.text:00000001800015A1 fsuipcw_reload  endp
.text:00000001800015A1
.text:00000001800015A1 ; ---------------------------------------------------------------------------
.text:00000001800015A2 algn_1800015A2:                         ; DATA XREF: .pdata:000000018001C090↓o
.text:00000001800015A2                 align 10h
.text:00000001800015B0 ; Exported entry  30. fsuipcw_setLvarUpdateFrequency
.text:00000001800015B0
.text:00000001800015B0 ; =============== S U B R O U T I N E =======================================
.text:00000001800015B0
.text:00000001800015B0
.text:00000001800015B0                 public fsuipcw_setLvarUpdateFrequency
.text:00000001800015B0 fsuipcw_setLvarUpdateFrequency proc near
.text:00000001800015B0                                         ; DATA XREF: .rdata:off_1800166E8↓o
.text:00000001800015B0                 mov     rax, cs:lpParameter
.text:00000001800015B7                 test    rax, rax
.text:00000001800015BA                 jz      short locret_1800015BF
.text:00000001800015BC                 mov     [rax+28h], ecx
.text:00000001800015BF
.text:00000001800015BF locret_1800015BF:                       ; CODE XREF: fsuipcw_setLvarUpdateFrequency+A↑j
.text:00000001800015BF                 retn
.text:00000001800015BF fsuipcw_setLvarUpdateFrequency endp
.text:00000001800015BF
.text:00000001800015C0 ; Exported entry  31. fsuipcw_setSimConfigConnection
.text:00000001800015C0
.text:00000001800015C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800015C0
.text:00000001800015C0
.text:00000001800015C0                 public fsuipcw_setSimConfigConnection
.text:00000001800015C0 fsuipcw_setSimConfigConnection proc near
.text:00000001800015C0                                         ; DATA XREF: .rdata:off_1800166E8↓o
.text:00000001800015C0                 mov     rax, cs:lpParameter
.text:00000001800015C7                 test    rax, rax
.text:00000001800015CA                 jz      short locret_1800015D2
.text:00000001800015CC                 mov     [rax+358h], ecx
.text:00000001800015D2
.text:00000001800015D2 locret_1800015D2:                       ; CODE XREF: fsuipcw_setSimConfigConnection+A↑j
.text:00000001800015D2                 retn
.text:00000001800015D2 fsuipcw_setSimConfigConnection endp
.text:00000001800015D2
.text:00000001800015D2 ; ---------------------------------------------------------------------------
.text:00000001800015D3                 align 20h
.text:00000001800015E0 ; Exported entry  14. fsuipcw_getLvarUpdateFrequency
.text:00000001800015E0
.text:00000001800015E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800015E0
.text:00000001800015E0
.text:00000001800015E0                 public fsuipcw_getLvarUpdateFrequency
.text:00000001800015E0 fsuipcw_getLvarUpdateFrequency proc near
.text:00000001800015E0                                         ; DATA XREF: .rdata:off_1800166E8↓o
.text:00000001800015E0                 mov     rax, cs:lpParameter
.text:00000001800015E7                 test    rax, rax
.text:00000001800015EA                 jz      short loc_1800015F0
.text:00000001800015EC                 mov     eax, [rax+28h]
.text:00000001800015EF                 retn
.text:00000001800015F0 ; ---------------------------------------------------------------------------
.text:00000001800015F0
.text:00000001800015F0 loc_1800015F0:                          ; CODE XREF: fsuipcw_getLvarUpdateFrequency+A↑j
.text:00000001800015F0                 mov     eax, 0FFFFFFFFh
.text:00000001800015F5                 retn
.text:00000001800015F5 fsuipcw_getLvarUpdateFrequency endp
.text:00000001800015F5
.text:00000001800015F5 ; ---------------------------------------------------------------------------
.text:00000001800015F6                 align 20h
.text:0000000180001600 ; Exported entry  25. fsuipcw_setLogLevel
.text:0000000180001600
.text:0000000180001600 ; =============== S U B R O U T I N E =======================================
.text:0000000180001600
.text:0000000180001600
.text:0000000180001600                 public fsuipcw_setLogLevel
.text:0000000180001600 fsuipcw_setLogLevel proc near           ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180001600                 cmp     cs:lpParameter, 0
.text:0000000180001608                 jz      short locret_180001617
.text:000000018000160A                 mov     rax, cs:qword_180019AC8
.text:0000000180001611                 mov     [rax+108h], ecx
.text:0000000180001617
.text:0000000180001617 locret_180001617:                       ; CODE XREF: fsuipcw_setLogLevel+8↑j
.text:0000000180001617                 retn
.text:0000000180001617 fsuipcw_setLogLevel endp
.text:0000000180001617
.text:0000000180001617 ; ---------------------------------------------------------------------------
.text:0000000180001618                 align 20h
.text:0000000180001620 ; Exported entry   9. fsuipcw_getLvarFromId
.text:0000000180001620
.text:0000000180001620 ; =============== S U B R O U T I N E =======================================
.text:0000000180001620
.text:0000000180001620
.text:0000000180001620                 public fsuipcw_getLvarFromId
.text:0000000180001620 fsuipcw_getLvarFromId proc near         ; DATA XREF: .rdata:0000000180014C40↓o
.text:0000000180001620                                         ; .rdata:0000000180014C58↓o ...
.text:0000000180001620
.text:0000000180001620 var_18          = xmmword ptr -18h
.text:0000000180001620 arg_0           = qword ptr  8
.text:0000000180001620 arg_8           = qword ptr  10h
.text:0000000180001620
.text:0000000180001620                 mov     [rsp+arg_8], rbx
.text:0000000180001625                 push    rsi
.text:0000000180001626                 sub     rsp, 30h
.text:000000018000162A                 mov     rbx, cs:lpParameter
.text:0000000180001631                 movsxd  rsi, ecx
.text:0000000180001634                 test    rbx, rbx
.text:0000000180001637                 jz      loc_1800016C4
.text:000000018000163D
.text:000000018000163D loc_18000163D:                          ; DATA XREF: .rdata:0000000180014C40↓o
.text:000000018000163D                                         ; .rdata:0000000180014C58↓o ...
.text:000000018000163D                 mov     [rsp+38h+arg_0], rdi
.text:0000000180001642                 lea     rcx, [rbx+360h] ; lpCriticalSection
.text:0000000180001649                 movaps  [rsp+38h+var_18], xmm6
.text:000000018000164E                 call    cs:EnterCriticalSection
.text:0000000180001654                 test    esi, esi
.text:0000000180001656                 js      short loc_18000169C
.text:0000000180001658                 mov     rcx, [rbx+300h]
.text:000000018000165F                 mov     rax, [rbx+308h]
.text:0000000180001666                 sub     rax, rcx
.text:0000000180001669                 sar     rax, 3
.text:000000018000166D                 cmp     rsi, rax
.text:0000000180001670                 jnb     short loc_18000169C
.text:0000000180001672                 movsd   xmm6, qword ptr [rcx+rsi*8]
.text:0000000180001677                 lea     rcx, [rbx+360h] ; lpCriticalSection
.text:000000018000167E                 call    cs:LeaveCriticalSection
.text:0000000180001684                 mov     rdi, [rsp+38h+arg_0]
.text:0000000180001689                 movaps  xmm0, xmm6
.text:000000018000168C                 movaps  xmm6, [rsp+38h+var_18]
.text:0000000180001691                 mov     rbx, [rsp+38h+arg_8]
.text:0000000180001696                 add     rsp, 30h
.text:000000018000169A                 pop     rsi
.text:000000018000169B                 retn
.text:000000018000169C ; ---------------------------------------------------------------------------
.text:000000018000169C
.text:000000018000169C loc_18000169C:                          ; CODE XREF: fsuipcw_getLvarFromId+36↑j
.text:000000018000169C                                         ; fsuipcw_getLvarFromId+50↑j
.text:000000018000169C                                         ; DATA XREF: ...
.text:000000018000169C                 lea     rcx, [rbx+360h] ; lpCriticalSection
.text:00000001800016A3                 call    cs:LeaveCriticalSection
.text:00000001800016A9                 mov     rdi, [rsp+38h+arg_0]
.text:00000001800016AE                 xorps   xmm6, xmm6
.text:00000001800016B1                 movaps  xmm0, xmm6
.text:00000001800016B4                 movaps  xmm6, [rsp+38h+var_18]
.text:00000001800016B9                 mov     rbx, [rsp+38h+arg_8]
.text:00000001800016BE                 add     rsp, 30h
.text:00000001800016C2                 pop     rsi
.text:00000001800016C3                 retn
.text:00000001800016C4 ; ---------------------------------------------------------------------------
.text:00000001800016C4
.text:00000001800016C4 loc_1800016C4:                          ; CODE XREF: fsuipcw_getLvarFromId+17↑j
.text:00000001800016C4                                         ; DATA XREF: .pdata:000000018001C0B4↓o ...
.text:00000001800016C4                 mov     rbx, [rsp+38h+arg_8]
.text:00000001800016C9                 xorps   xmm0, xmm0
.text:00000001800016CC                 add     rsp, 30h
.text:00000001800016D0                 pop     rsi
.text:00000001800016D1                 retn
.text:00000001800016D1 fsuipcw_getLvarFromId endp
.text:00000001800016D1
.text:00000001800016D1 ; ---------------------------------------------------------------------------
.text:00000001800016D2 algn_1800016D2:                         ; DATA XREF: .pdata:000000018001C0C0↓o
.text:00000001800016D2                 align 20h
.text:00000001800016E0 ; Exported entry  10. fsuipcw_getLvarFromName
.text:00000001800016E0
.text:00000001800016E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800016E0
.text:00000001800016E0
.text:00000001800016E0                 public fsuipcw_getLvarFromName
.text:00000001800016E0 fsuipcw_getLvarFromName proc near       ; DATA XREF: .rdata:0000000180014C94↓o
.text:00000001800016E0                                         ; .rdata:0000000180014CA4↓o ...
.text:00000001800016E0
.text:00000001800016E0 var_18          = xmmword ptr -18h
.text:00000001800016E0 arg_0           = qword ptr  8
.text:00000001800016E0 arg_8           = qword ptr  10h
.text:00000001800016E0 arg_10          = qword ptr  18h
.text:00000001800016E0 arg_18          = qword ptr  20h
.text:00000001800016E0
.text:00000001800016E0                 mov     [rsp+arg_18], rsi
.text:00000001800016E5                 push    rdi
.text:00000001800016E6                 sub     rsp, 30h
.text:00000001800016EA                 mov     rdi, cs:lpParameter
.text:00000001800016F1                 mov     rsi, rcx
.text:00000001800016F4                 test    rdi, rdi
.text:00000001800016F7                 jz      loc_1800017F3
.text:00000001800016FD
.text:00000001800016FD loc_1800016FD:                          ; DATA XREF: .rdata:0000000180014C94↓o
.text:00000001800016FD                                         ; .rdata:0000000180014CA4↓o ...
.text:00000001800016FD                 mov     [rsp+38h+arg_0], rbx
.text:0000000180001702                 lea     rcx, [rdi+360h] ; lpCriticalSection
.text:0000000180001709                 mov     [rsp+38h+arg_8], rbp
.text:000000018000170E                 mov     [rsp+38h+arg_10], r14
.text:0000000180001713                 call    cs:EnterCriticalSection
.text:0000000180001719                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:0000000180001720                 call    cs:EnterCriticalSection
.text:0000000180001726                 mov     r9, [rdi+2E8h]
.text:000000018000172D                 xor     r10d, r10d
.text:0000000180001730                 mov     rbx, [rdi+2F0h]
.text:0000000180001737                 sub     rbx, r9
.text:000000018000173A                 sar     rbx, 5
.text:000000018000173E                 test    rbx, rbx
.text:0000000180001741                 jz      short loc_18000178B
.text:0000000180001743                 mov     r11d, r10d
.text:0000000180001746
.text:0000000180001746 loc_180001746:                          ; CODE XREF: fsuipcw_getLvarFromName+A9↓j
.text:0000000180001746                 cmp     rbx, r11
.text:0000000180001749                 jbe     loc_180001801
.text:000000018000174F                 cmp     qword ptr [r9+18h], 10h
.text:0000000180001754                 mov     r8, r9
.text:0000000180001757                 jb      short loc_18000175C
.text:0000000180001759                 mov     r8, [r9]
.text:000000018000175C
.text:000000018000175C loc_18000175C:                          ; CODE XREF: fsuipcw_getLvarFromName+77↑j
.text:000000018000175C                 mov     rax, rsi
.text:000000018000175F                 sub     r8, rsi
.text:0000000180001762
.text:0000000180001762 loc_180001762:                          ; CODE XREF: fsuipcw_getLvarFromName+93↓j
.text:0000000180001762                 movzx   edx, byte ptr [rax]
.text:0000000180001765                 movzx   ecx, byte ptr [rax+r8]
.text:000000018000176A                 sub     edx, ecx
.text:000000018000176C                 jnz     short loc_180001775
.text:000000018000176E                 inc     rax
.text:0000000180001771                 test    ecx, ecx
.text:0000000180001773                 jnz     short loc_180001762
.text:0000000180001775
.text:0000000180001775 loc_180001775:                          ; CODE XREF: fsuipcw_getLvarFromName+8C↑j
.text:0000000180001775                 test    edx, edx
.text:0000000180001777                 jz      short loc_18000178B
.text:0000000180001779                 inc     r10d
.text:000000018000177C                 inc     r11
.text:000000018000177F                 movsxd  rax, r10d
.text:0000000180001782                 add     r9, 20h ; ' '
.text:0000000180001786                 cmp     rax, rbx
.text:0000000180001789                 jb      short loc_180001746
.text:000000018000178B
.text:000000018000178B loc_18000178B:                          ; CODE XREF: fsuipcw_getLvarFromName+61↑j
.text:000000018000178B                                         ; fsuipcw_getLvarFromName+97↑j
.text:000000018000178B                 mov     rcx, [rdi+300h]
.text:0000000180001792                 mov     rax, [rdi+308h]
.text:0000000180001799                 sub     rax, rcx
.text:000000018000179C                 movsxd  rdx, r10d
.text:000000018000179F                 sar     rax, 3
.text:00000001800017A3                 movaps  [rsp+38h+var_18], xmm6
.text:00000001800017A8                 cmp     rdx, rax
.text:00000001800017AB                 jnb     short loc_1800017B4
.text:00000001800017AD                 movsd   xmm6, qword ptr [rcx+rdx*8]
.text:00000001800017B2                 jmp     short loc_1800017B7
.text:00000001800017B4 ; ---------------------------------------------------------------------------
.text:00000001800017B4
.text:00000001800017B4 loc_1800017B4:                          ; CODE XREF: fsuipcw_getLvarFromName+CB↑j
.text:00000001800017B4                 xorps   xmm6, xmm6
.text:00000001800017B7
.text:00000001800017B7 loc_1800017B7:                          ; CODE XREF: fsuipcw_getLvarFromName+D2↑j
.text:00000001800017B7                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:00000001800017BE                 call    cs:LeaveCriticalSection
.text:00000001800017C4                 lea     rcx, [rdi+360h] ; lpCriticalSection
.text:00000001800017CB
.text:00000001800017CB loc_1800017CB:                          ; DATA XREF: .rdata:0000000180015088↓o
.text:00000001800017CB                 call    cs:LeaveCriticalSection
.text:00000001800017D1                 mov     rbp, [rsp+38h+arg_8]
.text:00000001800017D6                 movaps  xmm0, xmm6
.text:00000001800017D9                 movaps  xmm6, [rsp+38h+var_18]
.text:00000001800017DE                 mov     rbx, [rsp+38h+arg_0]
.text:00000001800017E3                 mov     r14, [rsp+38h+arg_10]
.text:00000001800017E8                 mov     rsi, [rsp+38h+arg_18]
.text:00000001800017ED                 add     rsp, 30h
.text:00000001800017F1                 pop     rdi
.text:00000001800017F2                 retn
.text:00000001800017F3 ; ---------------------------------------------------------------------------
.text:00000001800017F3
.text:00000001800017F3 loc_1800017F3:                          ; CODE XREF: fsuipcw_getLvarFromName+17↑j
.text:00000001800017F3                                         ; DATA XREF: .pdata:000000018001C0D8↓o ...
.text:00000001800017F3                 mov     rsi, [rsp+38h+arg_18]
.text:00000001800017F8                 xorps   xmm0, xmm0
.text:00000001800017FB                 add     rsp, 30h
.text:00000001800017FF                 pop     rdi
.text:0000000180001800                 retn
.text:0000000180001801 ; ---------------------------------------------------------------------------
.text:0000000180001801
.text:0000000180001801 loc_180001801:                          ; CODE XREF: fsuipcw_getLvarFromName+69↑j
.text:0000000180001801                                         ; DATA XREF: .pdata:000000018001C0E4↓o ...
.text:0000000180001801                 call    sub_1800058B0
.text:0000000180001801 ; ---------------------------------------------------------------------------
.text:0000000180001806                 db 0CCh
.text:0000000180001806 fsuipcw_getLvarFromName endp
.text:0000000180001806
.text:0000000180001807 algn_180001807:                         ; DATA XREF: .pdata:000000018001C0F0↓o
.text:0000000180001807                 align 10h
.text:0000000180001810 ; Exported entry  26. fsuipcw_setLvarAsDouble
.text:0000000180001810
.text:0000000180001810 ; =============== S U B R O U T I N E =======================================
.text:0000000180001810
.text:0000000180001810
.text:0000000180001810                 public fsuipcw_setLvarAsDouble
.text:0000000180001810 fsuipcw_setLvarAsDouble proc near       ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180001810                 movzx   edx, cx
.text:0000000180001813                 mov     rcx, cs:lpParameter
.text:000000018000181A                 test    rcx, rcx
.text:000000018000181D                 jz      short locret_180001827
.text:000000018000181F                 movaps  xmm2, xmm1
.text:0000000180001822                 jmp     sub_180004ED0
.text:0000000180001827 ; ---------------------------------------------------------------------------
.text:0000000180001827
.text:0000000180001827 locret_180001827:                       ; CODE XREF: fsuipcw_setLvarAsDouble+D↑j
.text:0000000180001827                 retn
.text:0000000180001827 fsuipcw_setLvarAsDouble endp
.text:0000000180001827
.text:0000000180001827 ; ---------------------------------------------------------------------------
.text:0000000180001828                 align 10h
.text:0000000180001830 ; Exported entry  27. fsuipcw_setLvarAsShort
.text:0000000180001830
.text:0000000180001830 ; =============== S U B R O U T I N E =======================================
.text:0000000180001830
.text:0000000180001830
.text:0000000180001830                 public fsuipcw_setLvarAsShort
.text:0000000180001830 fsuipcw_setLvarAsShort proc near        ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180001830                 movzx   eax, cx
.text:0000000180001833                 mov     rcx, cs:lpParameter
.text:000000018000183A                 test    rcx, rcx
.text:000000018000183D                 jz      short locret_18000184B
.text:000000018000183F                 movzx   r8d, dx
.text:0000000180001843                 movzx   edx, ax
.text:0000000180001846                 jmp     sub_180005000
.text:000000018000184B ; ---------------------------------------------------------------------------
.text:000000018000184B
.text:000000018000184B locret_18000184B:                       ; CODE XREF: fsuipcw_setLvarAsShort+D↑j
.text:000000018000184B                 retn
.text:000000018000184B fsuipcw_setLvarAsShort endp
.text:000000018000184B
.text:000000018000184B ; ---------------------------------------------------------------------------
.text:000000018000184C                 align 10h
.text:0000000180001850 ; Exported entry  28. fsuipcw_setLvarAsString
.text:0000000180001850
.text:0000000180001850 ; =============== S U B R O U T I N E =======================================
.text:0000000180001850
.text:0000000180001850
.text:0000000180001850                 public fsuipcw_setLvarAsString
.text:0000000180001850 fsuipcw_setLvarAsString proc near       ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180001850                 cmp     cs:lpParameter, 0
.text:0000000180001858                 jz      short locret_180001865
.text:000000018000185A                 mov     r8, rdx
.text:000000018000185D                 movzx   edx, cx
.text:0000000180001860                 jmp     sub_180004D10
.text:0000000180001865 ; ---------------------------------------------------------------------------
.text:0000000180001865
.text:0000000180001865 locret_180001865:                       ; CODE XREF: fsuipcw_setLvarAsString+8↑j
.text:0000000180001865                 retn
.text:0000000180001865 fsuipcw_setLvarAsString endp
.text:0000000180001865
.text:0000000180001865 ; ---------------------------------------------------------------------------
.text:0000000180001866                 align 10h
.text:0000000180001870 ; Exported entry  29. fsuipcw_setLvarAsUShort
.text:0000000180001870
.text:0000000180001870 ; =============== S U B R O U T I N E =======================================
.text:0000000180001870
.text:0000000180001870
.text:0000000180001870                 public fsuipcw_setLvarAsUShort
.text:0000000180001870 fsuipcw_setLvarAsUShort proc near       ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180001870                 movzx   eax, cx
.text:0000000180001873                 mov     rcx, cs:lpParameter
.text:000000018000187A                 test    rcx, rcx
.text:000000018000187D                 jz      short locret_18000188B
.text:000000018000187F                 movzx   r8d, dx
.text:0000000180001883                 movzx   edx, ax
.text:0000000180001886                 jmp     sub_1800050E0
.text:000000018000188B ; ---------------------------------------------------------------------------
.text:000000018000188B
.text:000000018000188B locret_18000188B:                       ; CODE XREF: fsuipcw_setLvarAsUShort+D↑j
.text:000000018000188B                 retn
.text:000000018000188B fsuipcw_setLvarAsUShort endp
.text:000000018000188B
.text:000000018000188B ; ---------------------------------------------------------------------------
.text:000000018000188C                 align 10h
.text:0000000180001890 ; Exported entry  24. fsuipcw_setHvar
.text:0000000180001890
.text:0000000180001890 ; =============== S U B R O U T I N E =======================================
.text:0000000180001890
.text:0000000180001890
.text:0000000180001890                 public fsuipcw_setHvar
.text:0000000180001890 fsuipcw_setHvar proc near               ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180001890                                         ; .pdata:000000018001C0FC↓o
.text:0000000180001890
.text:0000000180001890 var_128         = dword ptr -128h
.text:0000000180001890 var_120         = dword ptr -120h
.text:0000000180001890 Buffer          = byte ptr -118h
.text:0000000180001890 var_18          = qword ptr -18h
.text:0000000180001890
.text:0000000180001890 ; __unwind { // __GSHandlerCheck
.text:0000000180001890                 push    rbx
.text:0000000180001892                 sub     rsp, 140h
.text:0000000180001899                 mov     rax, cs:__security_cookie
.text:00000001800018A0                 xor     rax, rsp
.text:00000001800018A3                 mov     [rsp+148h+var_18], rax
.text:00000001800018AB                 mov     ebx, ecx
.text:00000001800018AD                 mov     rcx, cs:lpParameter
.text:00000001800018B4                 test    rcx, rcx
.text:00000001800018B7                 jz      short loc_180001923
.text:00000001800018B9                 mov     rcx, [rcx]
.text:00000001800018BC                 xor     edx, edx
.text:00000001800018BE                 mov     [rsp+148h+var_120], 10h
.text:00000001800018C6                 mov     r9d, ebx
.text:00000001800018C9                 mov     [rsp+148h+var_128], 1
.text:00000001800018D1                 lea     r8d, [rdx+2]
.text:00000001800018D5                 call    sub_18000C4B0
.text:00000001800018DA                 test    eax, eax
.text:00000001800018DC                 jns     short loc_1800018F4
.text:00000001800018DE                 call    sub_180007430
.text:00000001800018E3                 mov     rcx, rax
.text:00000001800018E6                 lea     rdx, aSimconnectTran_1 ; "SimConnect_TransmitClientEvent for EVEN"...
.text:00000001800018ED                 call    sub_180007930
.text:00000001800018F2                 jmp     short loc_180001923
.text:00000001800018F4 ; ---------------------------------------------------------------------------
.text:00000001800018F4
.text:00000001800018F4 loc_1800018F4:                          ; CODE XREF: fsuipcw_setHvar+4C↑j
.text:00000001800018F4                 mov     r9d, ebx
.text:00000001800018F7                 mov     [rsp+148h+var_128], ebx
.text:00000001800018FB                 lea     r8, aControlSentToS ; "Control sent to set hvar with id=%d (%X"...
.text:0000000180001902                 mov     edx, 100h       ; BufferCount
.text:0000000180001907                 lea     rcx, [rsp+148h+Buffer] ; Buffer
.text:000000018000190C                 call    sub_1800029E0
.text:0000000180001911                 call    sub_180007430
.text:0000000180001916                 mov     rcx, rax
.text:0000000180001919                 lea     rdx, [rsp+148h+Buffer]
.text:000000018000191E                 call    sub_180007F50
.text:0000000180001923
.text:0000000180001923 loc_180001923:                          ; CODE XREF: fsuipcw_setHvar+27↑j
.text:0000000180001923                                         ; fsuipcw_setHvar+62↑j
.text:0000000180001923                 mov     rcx, [rsp+148h+var_18]
.text:000000018000192B                 xor     rcx, rsp        ; StackCookie
.text:000000018000192E                 call    __security_check_cookie
.text:0000000180001933                 add     rsp, 140h
.text:000000018000193A                 pop     rbx
.text:000000018000193B                 retn
.text:000000018000193B ; } // starts at 180001890
.text:000000018000193B fsuipcw_setHvar endp
.text:000000018000193B
.text:000000018000193B ; ---------------------------------------------------------------------------
.text:000000018000193C algn_18000193C:                         ; DATA XREF: .pdata:000000018001C0FC↓o
.text:000000018000193C                 align 20h
.text:0000000180001940 ; Exported entry  19. fsuipcw_logLvars
.text:0000000180001940
.text:0000000180001940 ; =============== S U B R O U T I N E =======================================
.text:0000000180001940
.text:0000000180001940
.text:0000000180001940                 public fsuipcw_logLvars
.text:0000000180001940 fsuipcw_logLvars proc near              ; DATA XREF: .rdata:0000000180014D0C↓o
.text:0000000180001940                                         ; .rdata:0000000180014D1C↓o ...
.text:0000000180001940
.text:0000000180001940 var_138         = qword ptr -138h
.text:0000000180001940 var_130         = qword ptr -130h
.text:0000000180001940 Buffer          = byte ptr -128h
.text:0000000180001940 var_28          = qword ptr -28h
.text:0000000180001940 var_18          = qword ptr -18h
.text:0000000180001940 var_10          = qword ptr -10h
.text:0000000180001940 arg_0           = qword ptr  8
.text:0000000180001940 arg_8           = qword ptr  10h
.text:0000000180001940 arg_10          = qword ptr  18h
.text:0000000180001940
.text:0000000180001940 ; __unwind { // __GSHandlerCheck
.text:0000000180001940                 mov     r11, rsp
.text:0000000180001943                 push    rbx
.text:0000000180001944                 sub     rsp, 150h
.text:000000018000194B                 mov     rax, cs:__security_cookie
.text:0000000180001952                 xor     rax, rsp
.text:0000000180001955                 mov     [rsp+158h+var_28], rax
.text:000000018000195D                 mov     rbx, cs:lpParameter
.text:0000000180001964                 test    rbx, rbx
.text:0000000180001967                 jz      loc_180001AE7
.text:0000000180001967 ; } // starts at 180001940
.text:000000018000196D
.text:000000018000196D loc_18000196D:                          ; DATA XREF: .rdata:0000000180014D0C↓o
.text:000000018000196D                                         ; .rdata:0000000180014D1C↓o ...
.text:000000018000196D ; __unwind { // __GSHandlerCheck
.text:000000018000196D                 mov     [r11+8], rbp
.text:0000000180001971                 lea     rcx, [rbx+360h] ; lpCriticalSection
.text:0000000180001978                 mov     [r11+10h], rsi
.text:000000018000197C                 mov     [r11+18h], rdi
.text:0000000180001980                 mov     [r11-10h], r14
.text:0000000180001984                 mov     [r11-18h], r15
.text:0000000180001988                 call    cs:EnterCriticalSection
.text:000000018000198E                 lea     rcx, [rbx+388h] ; lpCriticalSection
.text:0000000180001995                 call    cs:EnterCriticalSection
.text:000000018000199B                 mov     r8, [rbx+2F0h]
.text:00000001800019A2                 lea     rdx, Format     ; "We have %03llu lvars: "
.text:00000001800019A9                 sub     r8, [rbx+2E8h]
.text:00000001800019B0                 lea     rcx, [rsp+158h+Buffer] ; Buffer
.text:00000001800019B5                 sar     r8, 5
.text:00000001800019B9                 call    sub_180002980
.text:00000001800019BE                 call    sub_180007430
.text:00000001800019C3                 mov     rcx, rax
.text:00000001800019C6                 lea     rdx, [rsp+158h+Buffer]
.text:00000001800019CB                 call    sub_180007B30
.text:00000001800019D0                 mov     rdx, [rbx+2F0h]
.text:00000001800019D7                 xor     ebp, ebp
.text:00000001800019D9                 mov     r8, [rbx+2E8h]
.text:00000001800019E0                 mov     rax, rdx
.text:00000001800019E3                 sub     rax, r8
.text:00000001800019E6                 sar     rax, 5
.text:00000001800019EA                 test    rax, rax
.text:00000001800019ED                 jz      loc_180001AA5
.text:00000001800019F3                 mov     edi, ebp
.text:00000001800019F5                 mov     esi, ebp
.text:00000001800019F7                 nop     word ptr [rax+rax+00000000h]
.text:0000000180001A00
.text:0000000180001A00 loc_180001A00:                          ; CODE XREF: fsuipcw_logLvars+15F↓j
.text:0000000180001A00                 mov     rcx, [rbx+300h]
.text:0000000180001A07                 mov     rax, [rbx+308h]
.text:0000000180001A0E                 sub     rax, rcx
.text:0000000180001A11                 sar     rax, 3
.text:0000000180001A15                 cmp     rax, rdi
.text:0000000180001A18                 jbe     loc_180001B06
.text:0000000180001A1E                 sub     rdx, r8
.text:0000000180001A21                 sar     rdx, 5
.text:0000000180001A25                 cmp     rdx, rdi
.text:0000000180001A28                 jbe     loc_180001B00
.text:0000000180001A2E                 cmp     qword ptr [rsi+r8+18h], 10h
.text:0000000180001A34                 lea     rax, [rsi+r8]
.text:0000000180001A38                 jb      short loc_180001A3D
.text:0000000180001A3A                 mov     rax, [rax]
.text:0000000180001A3D
.text:0000000180001A3D loc_180001A3D:                          ; CODE XREF: fsuipcw_logLvars+F8↑j
.text:0000000180001A3D                 movsd   xmm0, qword ptr [rcx+rdi*8]
.text:0000000180001A42                 lea     r8, aId03dSF    ; "    ID=%03d %s = %f"
.text:0000000180001A49                 movsd   [rsp+158h+var_130], xmm0
.text:0000000180001A4F                 lea     rcx, [rsp+158h+Buffer] ; Buffer
.text:0000000180001A54                 mov     r9d, ebp
.text:0000000180001A57                 mov     [rsp+158h+var_138], rax
.text:0000000180001A5C                 mov     edx, 100h       ; BufferCount
.text:0000000180001A61                 call    sub_1800029E0
.text:0000000180001A66                 call    sub_180007430
.text:0000000180001A6B                 mov     rcx, rax
.text:0000000180001A6E                 lea     rdx, [rsp+158h+Buffer]
.text:0000000180001A73                 call    sub_180007B30
.text:0000000180001A78                 mov     rdx, [rbx+2F0h]
.text:0000000180001A7F                 inc     ebp
.text:0000000180001A81                 mov     r8, [rbx+2E8h]
.text:0000000180001A88                 mov     rcx, rdx
.text:0000000180001A8B                 sub     rcx, r8
.text:0000000180001A8E                 movsxd  rax, ebp
.text:0000000180001A91                 sar     rcx, 5
.text:0000000180001A95                 inc     rdi
.text:0000000180001A98                 add     rsi, 20h ; ' '
.text:0000000180001A9C                 cmp     rax, rcx
.text:0000000180001A9F                 jb      loc_180001A00
.text:0000000180001AA5
.text:0000000180001AA5 loc_180001AA5:                          ; CODE XREF: fsuipcw_logLvars+AD↑j
.text:0000000180001AA5                 lea     rcx, [rbx+388h] ; lpCriticalSection
.text:0000000180001AAC                 call    cs:LeaveCriticalSection
.text:0000000180001AB2                 lea     rcx, [rbx+360h] ; lpCriticalSection
.text:0000000180001AB9                 call    cs:LeaveCriticalSection
.text:0000000180001ABF                 mov     r14, [rsp+158h+var_10]
.text:0000000180001AC7                 mov     rdi, [rsp+158h+arg_10]
.text:0000000180001ACF                 mov     rsi, [rsp+158h+arg_8]
.text:0000000180001AD7                 mov     rbp, [rsp+158h+arg_0]
.text:0000000180001ADF                 mov     r15, [rsp+158h+var_18]
.text:0000000180001ADF ; } // starts at 18000196D
.text:0000000180001AE7
.text:0000000180001AE7 loc_180001AE7:                          ; CODE XREF: fsuipcw_logLvars+27↑j
.text:0000000180001AE7                                         ; DATA XREF: .pdata:000000018001C114↓o ...
.text:0000000180001AE7 ; __unwind { // __GSHandlerCheck
.text:0000000180001AE7                 mov     rcx, [rsp+158h+var_28]
.text:0000000180001AEF                 xor     rcx, rsp        ; StackCookie
.text:0000000180001AF2                 call    __security_check_cookie
.text:0000000180001AF7                 add     rsp, 150h
.text:0000000180001AFE                 pop     rbx
.text:0000000180001AFF                 retn
.text:0000000180001AFF ; } // starts at 180001AE7
.text:0000000180001B00 ; ---------------------------------------------------------------------------
.text:0000000180001B00
.text:0000000180001B00 loc_180001B00:                          ; CODE XREF: fsuipcw_logLvars+E8↑j
.text:0000000180001B00                                         ; DATA XREF: .pdata:000000018001C120↓o ...
.text:0000000180001B00 ; __unwind { // __GSHandlerCheck
.text:0000000180001B00                 call    sub_1800058B0
.text:0000000180001B00 ; ---------------------------------------------------------------------------
.text:0000000180001B05                 align 2
.text:0000000180001B06
.text:0000000180001B06 loc_180001B06:                          ; CODE XREF: fsuipcw_logLvars+D8↑j
.text:0000000180001B06                 call    sub_1800058B0
.text:0000000180001B06 ; ---------------------------------------------------------------------------
.text:0000000180001B0B                 db 0CCh
.text:0000000180001B0B ; } // starts at 180001B00
.text:0000000180001B0B fsuipcw_logLvars endp
.text:0000000180001B0B
.text:0000000180001B0C algn_180001B0C:                         ; DATA XREF: .pdata:000000018001C12C↓o
.text:0000000180001B0C                 align 10h
.text:0000000180001B10 ; Exported entry  18. fsuipcw_logHvars
.text:0000000180001B10
.text:0000000180001B10 ; =============== S U B R O U T I N E =======================================
.text:0000000180001B10
.text:0000000180001B10
.text:0000000180001B10                 public fsuipcw_logHvars
.text:0000000180001B10 fsuipcw_logHvars proc near              ; DATA XREF: .rdata:0000000180014D74↓o
.text:0000000180001B10                                         ; .rdata:0000000180014D84↓o ...
.text:0000000180001B10
.text:0000000180001B10 var_128         = qword ptr -128h
.text:0000000180001B10 Buffer          = byte ptr -118h
.text:0000000180001B10 var_18          = qword ptr -18h
.text:0000000180001B10 arg_0           = qword ptr  8
.text:0000000180001B10 arg_8           = qword ptr  10h
.text:0000000180001B10 arg_10          = qword ptr  18h
.text:0000000180001B10 arg_18          = qword ptr  20h
.text:0000000180001B10
.text:0000000180001B10 ; __unwind { // __GSHandlerCheck
.text:0000000180001B10                 mov     r11, rsp
.text:0000000180001B13                 push    rbx
.text:0000000180001B14                 sub     rsp, 140h
.text:0000000180001B1B                 mov     rax, cs:__security_cookie
.text:0000000180001B22                 xor     rax, rsp
.text:0000000180001B25                 mov     [rsp+148h+var_18], rax
.text:0000000180001B2D                 mov     rbx, cs:lpParameter
.text:0000000180001B34                 test    rbx, rbx
.text:0000000180001B37                 jz      loc_180001C25
.text:0000000180001B37 ; } // starts at 180001B10
.text:0000000180001B3D
.text:0000000180001B3D loc_180001B3D:                          ; DATA XREF: .rdata:0000000180014D74↓o
.text:0000000180001B3D                                         ; .rdata:0000000180014D84↓o ...
.text:0000000180001B3D ; __unwind { // __GSHandlerCheck
.text:0000000180001B3D                 mov     [r11+8], rbp
.text:0000000180001B41                 lea     rcx, [rbx+3B0h] ; lpCriticalSection
.text:0000000180001B48                 mov     [r11+10h], rsi
.text:0000000180001B4C                 mov     [r11+18h], rdi
.text:0000000180001B50                 mov     [r11+20h], r14
.text:0000000180001B54                 call    cs:EnterCriticalSection
.text:0000000180001B5A                 mov     rax, [rbx+340h]
.text:0000000180001B61                 xor     ebp, ebp
.text:0000000180001B63                 mov     r8, [rbx+338h]
.text:0000000180001B6A                 mov     rcx, rax
.text:0000000180001B6D                 sub     rcx, r8
.text:0000000180001B70                 sar     rcx, 5
.text:0000000180001B74                 test    rcx, rcx
.text:0000000180001B77                 jz      short loc_180001BF8
.text:0000000180001B79                 mov     esi, ebp
.text:0000000180001B7B                 mov     edi, ebp
.text:0000000180001B7D                 nop     dword ptr [rax]
.text:0000000180001B80
.text:0000000180001B80 loc_180001B80:                          ; CODE XREF: fsuipcw_logHvars+E6↓j
.text:0000000180001B80                 sub     rax, r8
.text:0000000180001B83                 sar     rax, 5
.text:0000000180001B87                 cmp     rax, rsi
.text:0000000180001B8A                 jbe     loc_180001C3E
.text:0000000180001B90                 cmp     qword ptr [rdi+r8+18h], 10h
.text:0000000180001B96                 lea     rax, [rdi+r8]
.text:0000000180001B9A                 jb      short loc_180001B9F
.text:0000000180001B9C                 mov     rax, [rax]
.text:0000000180001B9F
.text:0000000180001B9F loc_180001B9F:                          ; CODE XREF: fsuipcw_logHvars+8A↑j
.text:0000000180001B9F                 mov     r9d, ebp
.text:0000000180001BA2                 mov     [rsp+148h+var_128], rax
.text:0000000180001BA7                 lea     r8, aId03dS     ; "ID=%03d %s"
.text:0000000180001BAE                 mov     edx, 100h       ; BufferCount
.text:0000000180001BB3                 lea     rcx, [rsp+148h+Buffer] ; Buffer
.text:0000000180001BB8                 call    sub_1800029E0
.text:0000000180001BBD                 call    sub_180007430
.text:0000000180001BC2                 mov     rcx, rax
.text:0000000180001BC5                 lea     rdx, [rsp+148h+Buffer]
.text:0000000180001BCA                 call    sub_180007B30
.text:0000000180001BCF                 mov     rax, [rbx+340h]
.text:0000000180001BD6                 inc     ebp
.text:0000000180001BD8                 mov     r8, [rbx+338h]
.text:0000000180001BDF                 mov     rdx, rax
.text:0000000180001BE2                 sub     rdx, r8
.text:0000000180001BE5                 movsxd  rcx, ebp
.text:0000000180001BE8                 sar     rdx, 5
.text:0000000180001BEC                 inc     rsi
.text:0000000180001BEF                 add     rdi, 20h ; ' '
.text:0000000180001BF3                 cmp     rcx, rdx
.text:0000000180001BF6                 jb      short loc_180001B80
.text:0000000180001BF8
.text:0000000180001BF8 loc_180001BF8:                          ; CODE XREF: fsuipcw_logHvars+67↑j
.text:0000000180001BF8                 lea     rcx, [rbx+3B0h] ; lpCriticalSection
.text:0000000180001BFF                 call    cs:LeaveCriticalSection
.text:0000000180001C05                 mov     rdi, [rsp+148h+arg_10]
.text:0000000180001C0D                 mov     rsi, [rsp+148h+arg_8]
.text:0000000180001C15                 mov     rbp, [rsp+148h+arg_0]
.text:0000000180001C1D                 mov     r14, [rsp+148h+arg_18]
.text:0000000180001C1D ; } // starts at 180001B3D
.text:0000000180001C25
.text:0000000180001C25 loc_180001C25:                          ; CODE XREF: fsuipcw_logHvars+27↑j
.text:0000000180001C25                                         ; DATA XREF: .pdata:000000018001C144↓o ...
.text:0000000180001C25 ; __unwind { // __GSHandlerCheck
.text:0000000180001C25                 mov     rcx, [rsp+148h+var_18]
.text:0000000180001C2D                 xor     rcx, rsp        ; StackCookie
.text:0000000180001C30                 call    __security_check_cookie
.text:0000000180001C35                 add     rsp, 140h
.text:0000000180001C3C                 pop     rbx
.text:0000000180001C3D                 retn
.text:0000000180001C3D ; } // starts at 180001C25
.text:0000000180001C3E ; ---------------------------------------------------------------------------
.text:0000000180001C3E
.text:0000000180001C3E loc_180001C3E:                          ; CODE XREF: fsuipcw_logHvars+7A↑j
.text:0000000180001C3E                                         ; DATA XREF: .pdata:000000018001C150↓o ...
.text:0000000180001C3E ; __unwind { // __GSHandlerCheck
.text:0000000180001C3E                 call    sub_1800058B0
.text:0000000180001C3E ; ---------------------------------------------------------------------------
.text:0000000180001C43                 db 0CCh
.text:0000000180001C43 ; } // starts at 180001C3E
.text:0000000180001C43 fsuipcw_logHvars endp
.text:0000000180001C43
.text:0000000180001C44 algn_180001C44:                         ; DATA XREF: .pdata:000000018001C15C↓o
.text:0000000180001C44                 align 10h
.text:0000000180001C50 ; Exported entry  15. fsuipcw_getLvarValues
.text:0000000180001C50
.text:0000000180001C50 ; =============== S U B R O U T I N E =======================================
.text:0000000180001C50
.text:0000000180001C50
.text:0000000180001C50                 public fsuipcw_getLvarValues
.text:0000000180001C50 fsuipcw_getLvarValues proc near         ; DATA XREF: .rdata:0000000180014DE0↓o
.text:0000000180001C50                                         ; .rdata:0000000180014DF0↓o ...
.text:0000000180001C50
.text:0000000180001C50 var_78          = qword ptr -78h
.text:0000000180001C50 var_60          = qword ptr -60h
.text:0000000180001C50 var_58          = qword ptr -58h
.text:0000000180001C50 var_50          = byte ptr -50h
.text:0000000180001C50 Block           = qword ptr -40h
.text:0000000180001C50 var_30          = qword ptr -30h
.text:0000000180001C50 var_28          = qword ptr -28h
.text:0000000180001C50 var_20          = qword ptr -20h
.text:0000000180001C50 var_18          = qword ptr -18h
.text:0000000180001C50 var_10          = qword ptr -10h
.text:0000000180001C50 arg_8           = qword ptr  10h
.text:0000000180001C50 arg_10          = qword ptr  18h
.text:0000000180001C50
.text:0000000180001C50 ; __unwind { // __GSHandlerCheck
.text:0000000180001C50                 mov     r11, rsp
.text:0000000180001C53                 push    r14
.text:0000000180001C55                 sub     rsp, 90h
.text:0000000180001C5C                 mov     rax, cs:__security_cookie
.text:0000000180001C63                 xor     rax, rsp
.text:0000000180001C66                 mov     [rsp+98h+var_30], rax
.text:0000000180001C6B                 cmp     cs:lpParameter, 0
.text:0000000180001C73                 mov     r14, rcx
.text:0000000180001C76                 jz      loc_180001EB5
.text:0000000180001C76 ; } // starts at 180001C50
.text:0000000180001C7C
.text:0000000180001C7C loc_180001C7C:                          ; DATA XREF: .rdata:0000000180014DE0↓o
.text:0000000180001C7C                                         ; .rdata:0000000180014DF0↓o ...
.text:0000000180001C7C ; __unwind { // __GSHandlerCheck
.text:0000000180001C7C                 mov     [r11+10h], rbx
.text:0000000180001C80                 mov     [r11+18h], rbp
.text:0000000180001C84                 mov     [r11-10h], rsi
.text:0000000180001C88                 mov     [r11-18h], rdi
.text:0000000180001C8C                 xor     edi, edi
.text:0000000180001C8E                 mov     [r11-20h], r12
.text:0000000180001C92                 mov     [r11-28h], r15
.text:0000000180001C96                 mov     [r11-38h], rdi
.text:0000000180001C9A                 lea     ecx, [rdi+48h]  ; Size
.text:0000000180001C9D                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180001CA2                 mov     rbx, cs:lpParameter
.text:0000000180001CA9                 mov     [rax], rax
.text:0000000180001CAC                 mov     [rax+8], rax
.text:0000000180001CB0                 lea     rcx, [rbx+360h] ; lpCriticalSection
.text:0000000180001CB7                 mov     [rax+10h], rax
.text:0000000180001CBB                 mov     word ptr [rax+18h], 101h
.text:0000000180001CC1                 mov     [rsp+98h+Block], rax
.text:0000000180001CC6                 call    cs:EnterCriticalSection
.text:0000000180001CCC                 lea     rcx, [rbx+388h] ; lpCriticalSection
.text:0000000180001CD3                 call    cs:EnterCriticalSection
.text:0000000180001CD9                 mov     rdx, [rbx+2F0h]
.text:0000000180001CE0                 mov     r8, [rbx+2E8h]
.text:0000000180001CE7                 mov     rax, rdx
.text:0000000180001CEA                 sub     rax, r8
.text:0000000180001CED                 sar     rax, 5
.text:0000000180001CF1                 test    rax, rax
.text:0000000180001CF4                 jz      loc_180001DC9
.text:0000000180001CFA                 mov     esi, edi
.text:0000000180001CFC                 nop     dword ptr [rax+00h]
.text:0000000180001D00
.text:0000000180001D00 loc_180001D00:                          ; CODE XREF: fsuipcw_getLvarValues+173↓j
.text:0000000180001D00                 mov     rbp, [rbx+300h]
.text:0000000180001D07                 mov     rax, [rbx+308h]
.text:0000000180001D0E                 sub     rax, rbp
.text:0000000180001D11                 sar     rax, 3
.text:0000000180001D15                 cmp     rax, rsi
.text:0000000180001D18                 jbe     loc_180001ECC
.text:0000000180001D1E                 sub     rdx, r8
.text:0000000180001D21                 movsxd  rax, edi
.text:0000000180001D24                 sar     rdx, 5
.text:0000000180001D28                 cmp     rdx, rax
.text:0000000180001D2B                 jbe     loc_180001ED2
.text:0000000180001D31                 shl     rax, 5
.text:0000000180001D35                 lea     rcx, [rsp+98h+var_78]
.text:0000000180001D3A                 lea     rdx, [r8+rax]
.text:0000000180001D3E                 call    sub_180005770
.text:0000000180001D43                 movsd   xmm0, qword ptr [rbp+rsi*8+0]
.text:0000000180001D49                 lea     r8, [rsp+98h+var_78]
.text:0000000180001D4E                 lea     rdx, [rsp+98h+var_50]
.text:0000000180001D53                 movsd   [rsp+98h+var_58], xmm0
.text:0000000180001D59                 lea     rcx, [rsp+98h+Block]
.text:0000000180001D5E                 call    sub_1800069B0
.text:0000000180001D63                 mov     rdx, [rsp+98h+var_60]
.text:0000000180001D68                 cmp     rdx, 10h
.text:0000000180001D6C                 jb      short loc_180001DA0
.text:0000000180001D6E                 mov     rcx, [rsp+98h+var_78]
.text:0000000180001D73                 inc     rdx
.text:0000000180001D76                 mov     rax, rcx
.text:0000000180001D79                 cmp     rdx, 1000h
.text:0000000180001D80                 jb      short loc_180001D9B
.text:0000000180001D82                 mov     rcx, [rcx-8]    ; Block
.text:0000000180001D86                 add     rdx, 27h ; '''
.text:0000000180001D8A                 sub     rax, rcx
.text:0000000180001D8D                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180001D91                 cmp     rax, 1Fh
.text:0000000180001D95                 ja      loc_180001E38
.text:0000000180001D9B
.text:0000000180001D9B loc_180001D9B:                          ; CODE XREF: fsuipcw_getLvarValues+130↑j
.text:0000000180001D9B                 call    j_j_free
.text:0000000180001DA0
.text:0000000180001DA0 loc_180001DA0:                          ; CODE XREF: fsuipcw_getLvarValues+11C↑j
.text:0000000180001DA0                 mov     rdx, [rbx+2F0h]
.text:0000000180001DA7                 inc     edi
.text:0000000180001DA9                 mov     r8, [rbx+2E8h]
.text:0000000180001DB0                 mov     rcx, rdx
.text:0000000180001DB3                 sub     rcx, r8
.text:0000000180001DB6                 movsxd  rax, edi
.text:0000000180001DB9                 sar     rcx, 5
.text:0000000180001DBD                 inc     rsi
.text:0000000180001DC0                 cmp     rax, rcx
.text:0000000180001DC3                 jb      loc_180001D00
.text:0000000180001DC9
.text:0000000180001DC9 loc_180001DC9:                          ; CODE XREF: fsuipcw_getLvarValues+A4↑j
.text:0000000180001DC9                 lea     rcx, [rbx+388h] ; lpCriticalSection
.text:0000000180001DD0                 call    cs:LeaveCriticalSection
.text:0000000180001DD6                 lea     rcx, [rbx+360h] ; lpCriticalSection
.text:0000000180001DDD                 call    cs:LeaveCriticalSection
.text:0000000180001DE3                 mov     r8, [rsp+98h+Block]
.text:0000000180001DE8                 mov     rbx, [r8]
.text:0000000180001DEB                 cmp     rbx, r8
.text:0000000180001DEE                 jz      short loc_180001E69
.text:0000000180001DF0
.text:0000000180001DF0 loc_180001DF0:                          ; CODE XREF: fsuipcw_getLvarValues+217↓j
.text:0000000180001DF0                 cmp     qword ptr [rbx+38h], 10h
.text:0000000180001DF5                 lea     rcx, [rbx+20h]
.text:0000000180001DF9                 jb      short loc_180001DFE
.text:0000000180001DFB                 mov     rcx, [rcx]
.text:0000000180001DFE
.text:0000000180001DFE loc_180001DFE:                          ; CODE XREF: fsuipcw_getLvarValues+1A9↑j
.text:0000000180001DFE                 movsd   xmm1, qword ptr [rbx+40h]
.text:0000000180001E03                 call    r14
.text:0000000180001E06                 mov     rax, [rbx+10h]
.text:0000000180001E0A                 cmp     byte ptr [rax+19h], 0
.text:0000000180001E0E                 jz      short loc_180001E3F
.text:0000000180001E10                 mov     rax, [rbx+8]
.text:0000000180001E14                 cmp     byte ptr [rax+19h], 0
.text:0000000180001E18                 jnz     short loc_180001E33
.text:0000000180001E1A                 nop     word ptr [rax+rax+00h]
.text:0000000180001E20
.text:0000000180001E20 loc_180001E20:                          ; CODE XREF: fsuipcw_getLvarValues+1E1↓j
.text:0000000180001E20                 cmp     rbx, [rax+10h]
.text:0000000180001E24                 jnz     short loc_180001E33
.text:0000000180001E26                 mov     rbx, rax
.text:0000000180001E29                 mov     rax, [rax+8]
.text:0000000180001E2D                 cmp     byte ptr [rax+19h], 0
.text:0000000180001E31                 jz      short loc_180001E20
.text:0000000180001E33
.text:0000000180001E33 loc_180001E33:                          ; CODE XREF: fsuipcw_getLvarValues+1C8↑j
.text:0000000180001E33                                         ; fsuipcw_getLvarValues+1D4↑j
.text:0000000180001E33                 mov     rbx, rax
.text:0000000180001E36                 jmp     short loc_180001E5F
.text:0000000180001E38 ; ---------------------------------------------------------------------------
.text:0000000180001E38
.text:0000000180001E38 loc_180001E38:                          ; CODE XREF: fsuipcw_getLvarValues+145↑j
.text:0000000180001E38                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180001E3E                 int     3               ; Trap to Debugger
.text:0000000180001E3F ; ---------------------------------------------------------------------------
.text:0000000180001E3F
.text:0000000180001E3F loc_180001E3F:                          ; CODE XREF: fsuipcw_getLvarValues+1BE↑j
.text:0000000180001E3F                 mov     rcx, [rax]
.text:0000000180001E42                 mov     rbx, rax
.text:0000000180001E45                 cmp     byte ptr [rcx+19h], 0
.text:0000000180001E49                 jnz     short loc_180001E5F
.text:0000000180001E4B                 nop     dword ptr [rax+rax+00h]
.text:0000000180001E50
.text:0000000180001E50 loc_180001E50:                          ; CODE XREF: fsuipcw_getLvarValues+20D↓j
.text:0000000180001E50                 mov     rax, [rcx]
.text:0000000180001E53                 mov     rbx, rcx
.text:0000000180001E56                 mov     rcx, rax
.text:0000000180001E59                 cmp     byte ptr [rax+19h], 0
.text:0000000180001E5D                 jz      short loc_180001E50
.text:0000000180001E5F
.text:0000000180001E5F loc_180001E5F:                          ; CODE XREF: fsuipcw_getLvarValues+1E6↑j
.text:0000000180001E5F                                         ; fsuipcw_getLvarValues+1F9↑j
.text:0000000180001E5F                 mov     r8, [rsp+98h+Block]
.text:0000000180001E64                 cmp     rbx, r8
.text:0000000180001E67                 jnz     short loc_180001DF0
.text:0000000180001E69
.text:0000000180001E69 loc_180001E69:                          ; CODE XREF: fsuipcw_getLvarValues+19E↑j
.text:0000000180001E69                 mov     r8, [r8+8]
.text:0000000180001E6D                 lea     rdx, [rsp+98h+Block]
.text:0000000180001E72                 lea     rcx, [rsp+98h+Block]
.text:0000000180001E77                 call    sub_1800028A0
.text:0000000180001E7C                 mov     rcx, [rsp+98h+Block] ; Block
.text:0000000180001E81                 mov     edx, 48h ; 'H'
.text:0000000180001E86                 call    j_j_free
.text:0000000180001E8B                 mov     r12, [rsp+98h+var_20]
.text:0000000180001E90                 mov     rdi, [rsp+98h+var_18]
.text:0000000180001E98                 mov     rsi, [rsp+98h+var_10]
.text:0000000180001EA0                 mov     rbp, [rsp+98h+arg_10]
.text:0000000180001EA8                 mov     rbx, [rsp+98h+arg_8]
.text:0000000180001EB0                 mov     r15, [rsp+98h+var_28]
.text:0000000180001EB0 ; } // starts at 180001C7C
.text:0000000180001EB5
.text:0000000180001EB5 loc_180001EB5:                          ; CODE XREF: fsuipcw_getLvarValues+26↑j
.text:0000000180001EB5                                         ; DATA XREF: .pdata:000000018001C174↓o ...
.text:0000000180001EB5 ; __unwind { // __GSHandlerCheck
.text:0000000180001EB5                 mov     rcx, [rsp+98h+var_30]
.text:0000000180001EBA                 xor     rcx, rsp        ; StackCookie
.text:0000000180001EBD                 call    __security_check_cookie
.text:0000000180001EC2                 add     rsp, 90h
.text:0000000180001EC9                 pop     r14
.text:0000000180001ECB                 retn
.text:0000000180001ECB ; } // starts at 180001EB5
.text:0000000180001ECC ; ---------------------------------------------------------------------------
.text:0000000180001ECC
.text:0000000180001ECC loc_180001ECC:                          ; CODE XREF: fsuipcw_getLvarValues+C8↑j
.text:0000000180001ECC                                         ; DATA XREF: .pdata:000000018001C180↓o ...
.text:0000000180001ECC ; __unwind { // __GSHandlerCheck
.text:0000000180001ECC                 call    sub_1800058B0
.text:0000000180001ECC ; ---------------------------------------------------------------------------
.text:0000000180001ED1                 align 2
.text:0000000180001ED2
.text:0000000180001ED2 loc_180001ED2:                          ; CODE XREF: fsuipcw_getLvarValues+DB↑j
.text:0000000180001ED2                 call    sub_1800058B0
.text:0000000180001ED2 ; ---------------------------------------------------------------------------
.text:0000000180001ED7                 db 0CCh
.text:0000000180001ED7 ; } // starts at 180001ECC
.text:0000000180001ED7 fsuipcw_getLvarValues endp
.text:0000000180001ED7
.text:0000000180001ED8 algn_180001ED8:                         ; DATA XREF: .pdata:000000018001C18C↓o
.text:0000000180001ED8                 align 20h
.text:0000000180001EE0 ; Exported entry  12. fsuipcw_getLvarList
.text:0000000180001EE0
.text:0000000180001EE0 ; =============== S U B R O U T I N E =======================================
.text:0000000180001EE0
.text:0000000180001EE0
.text:0000000180001EE0                 public fsuipcw_getLvarList
.text:0000000180001EE0 fsuipcw_getLvarList proc near           ; DATA XREF: .rdata:0000000180014E48↓o
.text:0000000180001EE0                                         ; .rdata:0000000180014E58↓o ...
.text:0000000180001EE0
.text:0000000180001EE0 var_98          = dword ptr -98h
.text:0000000180001EE0 var_90          = qword ptr -90h
.text:0000000180001EE0 var_78          = qword ptr -78h
.text:0000000180001EE0 var_70          = byte ptr -70h
.text:0000000180001EE0 var_58          = dword ptr -58h
.text:0000000180001EE0 var_54          = dword ptr -54h
.text:0000000180001EE0 var_50          = qword ptr -50h
.text:0000000180001EE0 var_40          = qword ptr -40h
.text:0000000180001EE0 var_38          = xmmword ptr -38h
.text:0000000180001EE0 var_28          = qword ptr -28h
.text:0000000180001EE0 var_20          = qword ptr -20h
.text:0000000180001EE0 var_18          = qword ptr -18h
.text:0000000180001EE0 arg_8           = qword ptr  10h
.text:0000000180001EE0 arg_10          = qword ptr  18h
.text:0000000180001EE0 arg_18          = qword ptr  20h
.text:0000000180001EE0
.text:0000000180001EE0 ; __unwind { // __GSHandlerCheck
.text:0000000180001EE0                 mov     r11, rsp
.text:0000000180001EE3                 push    rsi
.text:0000000180001EE4                 sub     rsp, 0B0h
.text:0000000180001EEB                 mov     rax, cs:__security_cookie
.text:0000000180001EF2                 xor     rax, rsp
.text:0000000180001EF5                 mov     [rsp+0B8h+var_18], rax
.text:0000000180001EFD                 cmp     cs:lpParameter, 0
.text:0000000180001F05                 mov     rsi, rcx
.text:0000000180001F08                 jz      loc_1800020BF
.text:0000000180001F08 ; } // starts at 180001EE0
.text:0000000180001F0E
.text:0000000180001F0E loc_180001F0E:                          ; DATA XREF: .rdata:0000000180014E48↓o
.text:0000000180001F0E                                         ; .rdata:0000000180014E58↓o ...
.text:0000000180001F0E ; __unwind { // __GSHandlerCheck
.text:0000000180001F0E                 mov     [r11+10h], rbx
.text:0000000180001F12                 xor     ebx, ebx
.text:0000000180001F14                 mov     [r11+18h], rbp
.text:0000000180001F18                 mov     [rsp+0B8h+var_54], ebx
.text:0000000180001F1C                 mov     [r11+20h], rdi
.text:0000000180001F20                 lea     ecx, [rbx+38h]  ; Size
.text:0000000180001F23                 mov     [r11-48h], rbx
.text:0000000180001F27                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180001F2C                 xorps   xmm0, xmm0
.text:0000000180001F2F                 lea     edx, [rbx+10h]
.text:0000000180001F32                 mov     r8, rax
.text:0000000180001F35                 lea     rcx, [rsp+0B8h+var_40]
.text:0000000180001F3A                 mov     [rax], rax
.text:0000000180001F3D                 mov     [rax+8], rax
.text:0000000180001F41                 movdqa  [rsp+0B8h+var_38], xmm0
.text:0000000180001F4A                 movss   xmm0, cs:dword_180013C40
.text:0000000180001F52                 movss   [rsp+0B8h+var_58], xmm0
.text:0000000180001F58                 mov     [rsp+0B8h+var_50], rax
.text:0000000180001F5D                 mov     [rsp+0B8h+var_40], rbx
.text:0000000180001F62                 mov     [rsp+0B8h+var_28], 7
.text:0000000180001F6E                 mov     [rsp+0B8h+var_20], 8
.text:0000000180001F7A                 call    sub_1800026C0
.text:0000000180001F7F                 mov     rdi, cs:lpParameter
.text:0000000180001F86                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:0000000180001F8D                 call    cs:EnterCriticalSection
.text:0000000180001F93                 mov     rcx, [rdi+2F0h]
.text:0000000180001F9A                 mov     r8, [rdi+2E8h]
.text:0000000180001FA1                 mov     rax, rcx
.text:0000000180001FA4                 sub     rax, r8
.text:0000000180001FA7                 sar     rax, 5
.text:0000000180001FAB                 test    rax, rax
.text:0000000180001FAE                 jz      loc_18000205C
.text:0000000180001FB4                 mov     edx, ebx
.text:0000000180001FB6                 db      66h, 66h
.text:0000000180001FB6                 nop     word ptr [rax+rax+00000000h]
.text:0000000180001FC0
.text:0000000180001FC0 loc_180001FC0:                          ; CODE XREF: fsuipcw_getLvarList+176↓j
.text:0000000180001FC0                 sub     rcx, r8
.text:0000000180001FC3                 sar     rcx, 5
.text:0000000180001FC7                 cmp     rcx, rdx
.text:0000000180001FCA                 jbe     loc_1800020DF
.text:0000000180001FD0                 shl     rdx, 5
.text:0000000180001FD4                 lea     rcx, [rsp+0B8h+var_90]
.text:0000000180001FD9                 add     rdx, r8
.text:0000000180001FDC                 mov     [rsp+0B8h+var_98], ebx
.text:0000000180001FE0                 call    sub_180005770
.text:0000000180001FE5                 lea     r8, [rsp+0B8h+var_98]
.text:0000000180001FEA                 lea     rdx, [rsp+0B8h+var_70]
.text:0000000180001FEF                 lea     rcx, [rsp+0B8h+var_58]
.text:0000000180001FF4                 call    sub_180005D10
.text:0000000180001FF9                 mov     rdx, [rsp+0B8h+var_78]
.text:0000000180001FFE                 cmp     rdx, 10h
.text:0000000180002002                 jb      short loc_180002036
.text:0000000180002004                 mov     rcx, [rsp+0B8h+var_90]
.text:0000000180002009                 inc     rdx
.text:000000018000200C                 mov     rax, rcx
.text:000000018000200F                 cmp     rdx, 1000h
.text:0000000180002016                 jb      short loc_180002031
.text:0000000180002018                 mov     rcx, [rcx-8]    ; Block
.text:000000018000201C                 add     rdx, 27h ; '''
.text:0000000180002020                 sub     rax, rcx
.text:0000000180002023                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180002027                 cmp     rax, 1Fh
.text:000000018000202B                 ja      loc_1800020D8
.text:0000000180002031
.text:0000000180002031 loc_180002031:                          ; CODE XREF: fsuipcw_getLvarList+136↑j
.text:0000000180002031                 call    j_j_free
.text:0000000180002036
.text:0000000180002036 loc_180002036:                          ; CODE XREF: fsuipcw_getLvarList+122↑j
.text:0000000180002036                 mov     rcx, [rdi+2F0h]
.text:000000018000203D                 inc     ebx
.text:000000018000203F                 mov     r8, [rdi+2E8h]
.text:0000000180002046                 mov     rax, rcx
.text:0000000180002049                 sub     rax, r8
.text:000000018000204C                 movsxd  rdx, ebx
.text:000000018000204F                 sar     rax, 5
.text:0000000180002053                 cmp     rdx, rax
.text:0000000180002056                 jb      loc_180001FC0
.text:000000018000205C
.text:000000018000205C loc_18000205C:                          ; CODE XREF: fsuipcw_getLvarList+CE↑j
.text:000000018000205C                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:0000000180002063                 call    cs:LeaveCriticalSection
.text:0000000180002069                 mov     rax, [rsp+0B8h+var_50]
.text:000000018000206E                 mov     rbx, [rax]
.text:0000000180002071                 cmp     rbx, rax
.text:0000000180002074                 jz      short loc_18000209D
.text:0000000180002076                 db      66h, 66h
.text:0000000180002076                 nop     word ptr [rax+rax+00000000h]
.text:0000000180002080
.text:0000000180002080 loc_180002080:                          ; CODE XREF: fsuipcw_getLvarList+1BB↓j
.text:0000000180002080                 cmp     qword ptr [rbx+30h], 10h
.text:0000000180002085                 lea     rdx, [rbx+18h]
.text:0000000180002089                 jb      short loc_18000208E
.text:000000018000208B                 mov     rdx, [rdx]
.text:000000018000208E
.text:000000018000208E loc_18000208E:                          ; CODE XREF: fsuipcw_getLvarList+1A9↑j
.text:000000018000208E                 mov     ecx, [rbx+10h]
.text:0000000180002091                 call    rsi
.text:0000000180002093                 mov     rbx, [rbx]
.text:0000000180002096                 cmp     rbx, [rsp+0B8h+var_50]
.text:000000018000209B                 jnz     short loc_180002080
.text:000000018000209D
.text:000000018000209D loc_18000209D:                          ; CODE XREF: fsuipcw_getLvarList+194↑j
.text:000000018000209D                 lea     rcx, [rsp+0B8h+var_58]
.text:00000001800020A2                 call    sub_1800020F0
.text:00000001800020A7                 mov     rbp, [rsp+0B8h+arg_10]
.text:00000001800020AF                 mov     rbx, [rsp+0B8h+arg_8]
.text:00000001800020B7                 mov     rdi, [rsp+0B8h+arg_18]
.text:00000001800020B7 ; } // starts at 180001F0E
.text:00000001800020BF
.text:00000001800020BF loc_1800020BF:                          ; CODE XREF: fsuipcw_getLvarList+28↑j
.text:00000001800020BF                                         ; DATA XREF: .pdata:000000018001C1A4↓o ...
.text:00000001800020BF ; __unwind { // __GSHandlerCheck
.text:00000001800020BF                 mov     rcx, [rsp+0B8h+var_18]
.text:00000001800020C7                 xor     rcx, rsp        ; StackCookie
.text:00000001800020CA                 call    __security_check_cookie
.text:00000001800020CF                 add     rsp, 0B0h
.text:00000001800020D6                 pop     rsi
.text:00000001800020D7                 retn
.text:00000001800020D7 ; } // starts at 1800020BF
.text:00000001800020D8 ; ---------------------------------------------------------------------------
.text:00000001800020D8
.text:00000001800020D8 loc_1800020D8:                          ; CODE XREF: fsuipcw_getLvarList+14B↑j
.text:00000001800020D8                                         ; DATA XREF: .pdata:000000018001C1B0↓o ...
.text:00000001800020D8 ; __unwind { // __GSHandlerCheck
.text:00000001800020D8                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800020DE                 int     3               ; Trap to Debugger
.text:00000001800020DF ; ---------------------------------------------------------------------------
.text:00000001800020DF
.text:00000001800020DF loc_1800020DF:                          ; CODE XREF: fsuipcw_getLvarList+EA↑j
.text:00000001800020DF                 call    sub_1800058B0
.text:00000001800020DF ; ---------------------------------------------------------------------------
.text:00000001800020E4                 db 0CCh
.text:00000001800020E4 ; } // starts at 1800020D8
.text:00000001800020E4 fsuipcw_getLvarList endp
.text:00000001800020E4
.text:00000001800020E5 algn_1800020E5:                         ; DATA XREF: .pdata:000000018001C1BC↓o
.text:00000001800020E5                 align 10h
.text:00000001800020F0
.text:00000001800020F0 ; =============== S U B R O U T I N E =======================================
.text:00000001800020F0
.text:00000001800020F0
.text:00000001800020F0 sub_1800020F0   proc near               ; CODE XREF: fsuipcw_getLvarList+1C2↑p
.text:00000001800020F0                                         ; fsuipcw_getHvarList+1C2↓p
.text:00000001800020F0                                         ; DATA XREF: ...
.text:00000001800020F0                 push    rbx
.text:00000001800020F2                 sub     rsp, 20h
.text:00000001800020F6                 mov     rbx, rcx
.text:00000001800020F9                 mov     rcx, [rcx+18h]
.text:00000001800020FD                 test    rcx, rcx
.text:0000000180002100                 jz      short loc_180002141
.text:0000000180002102                 mov     rdx, [rbx+28h]
.text:0000000180002106                 sub     rdx, rcx
.text:0000000180002109                 and     rdx, 0FFFFFFFFFFFFFFF8h
.text:000000018000210D                 cmp     rdx, 1000h
.text:0000000180002114                 jb      short loc_18000212E
.text:0000000180002116                 mov     r8, [rcx-8]
.text:000000018000211A                 add     rdx, 27h ; '''
.text:000000018000211E                 sub     rcx, r8
.text:0000000180002121                 lea     rax, [rcx-8]
.text:0000000180002125                 cmp     rax, 1Fh
.text:0000000180002129                 ja      short loc_18000215D
.text:000000018000212B                 mov     rcx, r8         ; Block
.text:000000018000212E
.text:000000018000212E loc_18000212E:                          ; CODE XREF: sub_1800020F0+24↑j
.text:000000018000212E                 call    j_j_free
.text:0000000180002133                 xor     eax, eax
.text:0000000180002135                 mov     [rbx+18h], rax
.text:0000000180002139                 mov     [rbx+20h], rax
.text:000000018000213D                 mov     [rbx+28h], rax
.text:0000000180002141
.text:0000000180002141 loc_180002141:                          ; CODE XREF: sub_1800020F0+10↑j
.text:0000000180002141                 mov     rdx, [rbx+8]
.text:0000000180002145                 call    sub_180002800
.text:000000018000214A                 mov     rcx, [rbx+8]    ; Block
.text:000000018000214E                 mov     edx, 38h ; '8'
.text:0000000180002153                 add     rsp, 20h
.text:0000000180002157                 pop     rbx
.text:0000000180002158                 jmp     j_j_free
.text:000000018000215D ; ---------------------------------------------------------------------------
.text:000000018000215D
.text:000000018000215D loc_18000215D:                          ; CODE XREF: sub_1800020F0+39↑j
.text:000000018000215D                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000215D ; ---------------------------------------------------------------------------
.text:0000000180002163                 db 0CCh
.text:0000000180002163 sub_1800020F0   endp
.text:0000000180002163
.text:0000000180002164 algn_180002164:                         ; DATA XREF: .pdata:000000018001C1C8↓o
.text:0000000180002164                 align 10h
.text:0000000180002170 ; Exported entry   8. fsuipcw_getHvarList
.text:0000000180002170
.text:0000000180002170 ; =============== S U B R O U T I N E =======================================
.text:0000000180002170
.text:0000000180002170
.text:0000000180002170                 public fsuipcw_getHvarList
.text:0000000180002170 fsuipcw_getHvarList proc near           ; DATA XREF: .rdata:0000000180014E90↓o
.text:0000000180002170                                         ; .rdata:0000000180014EA0↓o ...
.text:0000000180002170
.text:0000000180002170 var_98          = dword ptr -98h
.text:0000000180002170 var_90          = qword ptr -90h
.text:0000000180002170 var_78          = qword ptr -78h
.text:0000000180002170 var_70          = byte ptr -70h
.text:0000000180002170 var_58          = dword ptr -58h
.text:0000000180002170 var_54          = dword ptr -54h
.text:0000000180002170 var_50          = qword ptr -50h
.text:0000000180002170 var_40          = qword ptr -40h
.text:0000000180002170 var_38          = xmmword ptr -38h
.text:0000000180002170 var_28          = qword ptr -28h
.text:0000000180002170 var_20          = qword ptr -20h
.text:0000000180002170 var_18          = qword ptr -18h
.text:0000000180002170 arg_8           = qword ptr  10h
.text:0000000180002170 arg_10          = qword ptr  18h
.text:0000000180002170 arg_18          = qword ptr  20h
.text:0000000180002170
.text:0000000180002170 ; __unwind { // __GSHandlerCheck
.text:0000000180002170                 mov     r11, rsp
.text:0000000180002173                 push    rsi
.text:0000000180002174                 sub     rsp, 0B0h
.text:000000018000217B                 mov     rax, cs:__security_cookie
.text:0000000180002182                 xor     rax, rsp
.text:0000000180002185                 mov     [rsp+0B8h+var_18], rax
.text:000000018000218D                 cmp     cs:lpParameter, 0
.text:0000000180002195                 mov     rsi, rcx
.text:0000000180002198                 jz      loc_18000234F
.text:0000000180002198 ; } // starts at 180002170
.text:000000018000219E
.text:000000018000219E loc_18000219E:                          ; DATA XREF: .rdata:0000000180014E90↓o
.text:000000018000219E                                         ; .rdata:0000000180014EA0↓o ...
.text:000000018000219E ; __unwind { // __GSHandlerCheck
.text:000000018000219E                 mov     [r11+10h], rbx
.text:00000001800021A2                 xor     ebx, ebx
.text:00000001800021A4                 mov     [r11+18h], rbp
.text:00000001800021A8                 mov     [rsp+0B8h+var_54], ebx
.text:00000001800021AC                 mov     [r11+20h], rdi
.text:00000001800021B0                 lea     ecx, [rbx+38h]  ; Size
.text:00000001800021B3                 mov     [r11-48h], rbx
.text:00000001800021B7                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:00000001800021BC                 xorps   xmm0, xmm0
.text:00000001800021BF                 lea     edx, [rbx+10h]
.text:00000001800021C2                 mov     r8, rax
.text:00000001800021C5                 lea     rcx, [rsp+0B8h+var_40]
.text:00000001800021CA                 mov     [rax], rax
.text:00000001800021CD                 mov     [rax+8], rax
.text:00000001800021D1                 movdqa  [rsp+0B8h+var_38], xmm0
.text:00000001800021DA                 movss   xmm0, cs:dword_180013C40
.text:00000001800021E2                 movss   [rsp+0B8h+var_58], xmm0
.text:00000001800021E8                 mov     [rsp+0B8h+var_50], rax
.text:00000001800021ED                 mov     [rsp+0B8h+var_40], rbx
.text:00000001800021F2                 mov     [rsp+0B8h+var_28], 7
.text:00000001800021FE                 mov     [rsp+0B8h+var_20], 8
.text:000000018000220A                 call    sub_1800026C0
.text:000000018000220F                 mov     rdi, cs:lpParameter
.text:0000000180002216                 lea     rcx, [rdi+3B0h] ; lpCriticalSection
.text:000000018000221D                 call    cs:EnterCriticalSection
.text:0000000180002223                 mov     rcx, [rdi+340h]
.text:000000018000222A                 mov     r8, [rdi+338h]
.text:0000000180002231                 mov     rax, rcx
.text:0000000180002234                 sub     rax, r8
.text:0000000180002237                 sar     rax, 5
.text:000000018000223B                 test    rax, rax
.text:000000018000223E                 jz      loc_1800022EC
.text:0000000180002244                 mov     edx, ebx
.text:0000000180002246                 db      66h, 66h
.text:0000000180002246                 nop     word ptr [rax+rax+00000000h]
.text:0000000180002250
.text:0000000180002250 loc_180002250:                          ; CODE XREF: fsuipcw_getHvarList+176↓j
.text:0000000180002250                 sub     rcx, r8
.text:0000000180002253                 sar     rcx, 5
.text:0000000180002257                 cmp     rcx, rdx
.text:000000018000225A                 jbe     loc_18000236F
.text:0000000180002260                 shl     rdx, 5
.text:0000000180002264                 lea     rcx, [rsp+0B8h+var_90]
.text:0000000180002269                 add     rdx, r8
.text:000000018000226C                 mov     [rsp+0B8h+var_98], ebx
.text:0000000180002270                 call    sub_180005770
.text:0000000180002275                 lea     r8, [rsp+0B8h+var_98]
.text:000000018000227A                 lea     rdx, [rsp+0B8h+var_70]
.text:000000018000227F                 lea     rcx, [rsp+0B8h+var_58]
.text:0000000180002284                 call    sub_180005D10
.text:0000000180002289                 mov     rdx, [rsp+0B8h+var_78]
.text:000000018000228E                 cmp     rdx, 10h
.text:0000000180002292                 jb      short loc_1800022C6
.text:0000000180002294                 mov     rcx, [rsp+0B8h+var_90]
.text:0000000180002299                 inc     rdx
.text:000000018000229C                 mov     rax, rcx
.text:000000018000229F                 cmp     rdx, 1000h
.text:00000001800022A6                 jb      short loc_1800022C1
.text:00000001800022A8                 mov     rcx, [rcx-8]    ; Block
.text:00000001800022AC                 add     rdx, 27h ; '''
.text:00000001800022B0                 sub     rax, rcx
.text:00000001800022B3                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:00000001800022B7                 cmp     rax, 1Fh
.text:00000001800022BB                 ja      loc_180002368
.text:00000001800022C1
.text:00000001800022C1 loc_1800022C1:                          ; CODE XREF: fsuipcw_getHvarList+136↑j
.text:00000001800022C1                 call    j_j_free
.text:00000001800022C6
.text:00000001800022C6 loc_1800022C6:                          ; CODE XREF: fsuipcw_getHvarList+122↑j
.text:00000001800022C6                 mov     rcx, [rdi+340h]
.text:00000001800022CD                 inc     ebx
.text:00000001800022CF                 mov     r8, [rdi+338h]
.text:00000001800022D6                 mov     rax, rcx
.text:00000001800022D9                 sub     rax, r8
.text:00000001800022DC                 movsxd  rdx, ebx
.text:00000001800022DF                 sar     rax, 5
.text:00000001800022E3                 cmp     rdx, rax
.text:00000001800022E6                 jb      loc_180002250
.text:00000001800022EC
.text:00000001800022EC loc_1800022EC:                          ; CODE XREF: fsuipcw_getHvarList+CE↑j
.text:00000001800022EC                 lea     rcx, [rdi+3B0h] ; lpCriticalSection
.text:00000001800022F3                 call    cs:LeaveCriticalSection
.text:00000001800022F9                 mov     rax, [rsp+0B8h+var_50]
.text:00000001800022FE                 mov     rbx, [rax]
.text:0000000180002301                 cmp     rbx, rax
.text:0000000180002304                 jz      short loc_18000232D
.text:0000000180002306                 db      66h, 66h
.text:0000000180002306                 nop     word ptr [rax+rax+00000000h]
.text:0000000180002310
.text:0000000180002310 loc_180002310:                          ; CODE XREF: fsuipcw_getHvarList+1BB↓j
.text:0000000180002310                 cmp     qword ptr [rbx+30h], 10h
.text:0000000180002315                 lea     rdx, [rbx+18h]
.text:0000000180002319                 jb      short loc_18000231E
.text:000000018000231B                 mov     rdx, [rdx]
.text:000000018000231E
.text:000000018000231E loc_18000231E:                          ; CODE XREF: fsuipcw_getHvarList+1A9↑j
.text:000000018000231E                 mov     ecx, [rbx+10h]
.text:0000000180002321                 call    rsi
.text:0000000180002323                 mov     rbx, [rbx]
.text:0000000180002326                 cmp     rbx, [rsp+0B8h+var_50]
.text:000000018000232B                 jnz     short loc_180002310
.text:000000018000232D
.text:000000018000232D loc_18000232D:                          ; CODE XREF: fsuipcw_getHvarList+194↑j
.text:000000018000232D                 lea     rcx, [rsp+0B8h+var_58]
.text:0000000180002332                 call    sub_1800020F0
.text:0000000180002337                 mov     rbp, [rsp+0B8h+arg_10]
.text:000000018000233F                 mov     rbx, [rsp+0B8h+arg_8]
.text:0000000180002347                 mov     rdi, [rsp+0B8h+arg_18]
.text:0000000180002347 ; } // starts at 18000219E
.text:000000018000234F
.text:000000018000234F loc_18000234F:                          ; CODE XREF: fsuipcw_getHvarList+28↑j
.text:000000018000234F                                         ; DATA XREF: .pdata:000000018001C1E0↓o ...
.text:000000018000234F ; __unwind { // __GSHandlerCheck
.text:000000018000234F                 mov     rcx, [rsp+0B8h+var_18]
.text:0000000180002357                 xor     rcx, rsp        ; StackCookie
.text:000000018000235A                 call    __security_check_cookie
.text:000000018000235F                 add     rsp, 0B0h
.text:0000000180002366                 pop     rsi
.text:0000000180002367                 retn
.text:0000000180002367 ; } // starts at 18000234F
.text:0000000180002368 ; ---------------------------------------------------------------------------
.text:0000000180002368
.text:0000000180002368 loc_180002368:                          ; CODE XREF: fsuipcw_getHvarList+14B↑j
.text:0000000180002368                                         ; DATA XREF: .pdata:000000018001C1EC↓o ...
.text:0000000180002368 ; __unwind { // __GSHandlerCheck
.text:0000000180002368                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000236E                 int     3               ; Trap to Debugger
.text:000000018000236F ; ---------------------------------------------------------------------------
.text:000000018000236F
.text:000000018000236F loc_18000236F:                          ; CODE XREF: fsuipcw_getHvarList+EA↑j
.text:000000018000236F                 call    sub_1800058B0
.text:000000018000236F ; ---------------------------------------------------------------------------
.text:0000000180002374                 db 0CCh
.text:0000000180002374 ; } // starts at 180002368
.text:0000000180002374 fsuipcw_getHvarList endp
.text:0000000180002374
.text:0000000180002375 algn_180002375:                         ; DATA XREF: .pdata:000000018001C1F8↓o
.text:0000000180002375                 align 20h
.text:0000000180002380 ; Exported entry  17. fsuipcw_isRunning
.text:0000000180002380
.text:0000000180002380 ; =============== S U B R O U T I N E =======================================
.text:0000000180002380
.text:0000000180002380
.text:0000000180002380                 public fsuipcw_isRunning
.text:0000000180002380 fsuipcw_isRunning proc near             ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180002380                 mov     rax, cs:lpParameter
.text:0000000180002387                 test    rax, rax
.text:000000018000238A                 jz      short locret_180002394
.text:000000018000238C                 cmp     qword ptr [rax], 0
.text:0000000180002390                 setnz   al
.text:0000000180002393                 retn
.text:0000000180002394 ; ---------------------------------------------------------------------------
.text:0000000180002394
.text:0000000180002394 locret_180002394:                       ; CODE XREF: fsuipcw_isRunning+A↑j
.text:0000000180002394                 retn
.text:0000000180002394 fsuipcw_isRunning endp
.text:0000000180002394
.text:0000000180002394 ; ---------------------------------------------------------------------------
.text:0000000180002395                 align 20h
.text:00000001800023A0 ; Exported entry   5. fsuipcw_executeCalclatorCode
.text:00000001800023A0
.text:00000001800023A0 ; =============== S U B R O U T I N E =======================================
.text:00000001800023A0
.text:00000001800023A0
.text:00000001800023A0                 public fsuipcw_executeCalclatorCode
.text:00000001800023A0 fsuipcw_executeCalclatorCode proc near  ; DATA XREF: .rdata:off_1800166E8↓o
.text:00000001800023A0                 mov     rdx, rcx
.text:00000001800023A3                 mov     rcx, cs:lpParameter
.text:00000001800023AA                 test    rcx, rcx
.text:00000001800023AD                 jnz     sub_1800051C0
.text:00000001800023B3                 retn
.text:00000001800023B3 fsuipcw_executeCalclatorCode endp
.text:00000001800023B3
.text:00000001800023B3 ; ---------------------------------------------------------------------------
.text:00000001800023B4                 align 20h
.text:00000001800023C0 ; Exported entry  11. fsuipcw_getLvarIdFromName
.text:00000001800023C0
.text:00000001800023C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800023C0
.text:00000001800023C0
.text:00000001800023C0                 public fsuipcw_getLvarIdFromName
.text:00000001800023C0 fsuipcw_getLvarIdFromName proc near     ; DATA XREF: .rdata:off_1800166E8↓o
.text:00000001800023C0                 mov     rdx, rcx
.text:00000001800023C3                 mov     rcx, cs:lpParameter
.text:00000001800023CA                 test    rcx, rcx
.text:00000001800023CD                 jnz     sub_180005390
.text:00000001800023D3                 retn
.text:00000001800023D3 fsuipcw_getLvarIdFromName endp
.text:00000001800023D3
.text:00000001800023D3 ; ---------------------------------------------------------------------------
.text:00000001800023D4                 align 20h
.text:00000001800023E0 ; Exported entry  13. fsuipcw_getLvarNameFromId
.text:00000001800023E0
.text:00000001800023E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800023E0
.text:00000001800023E0
.text:00000001800023E0                 public fsuipcw_getLvarNameFromId
.text:00000001800023E0 fsuipcw_getLvarNameFromId proc near     ; DATA XREF: .rdata:0000000180014EE0↓o
.text:00000001800023E0                                         ; .rdata:0000000180014EF0↓o ...
.text:00000001800023E0
.text:00000001800023E0 arg_0           = qword ptr  8
.text:00000001800023E0 arg_8           = qword ptr  10h
.text:00000001800023E0 arg_10          = qword ptr  18h
.text:00000001800023E0
.text:00000001800023E0                 mov     [rsp+arg_8], rbx
.text:00000001800023E5                 mov     [rsp+arg_10], rbp
.text:00000001800023EA                 push    rdi
.text:00000001800023EB                 sub     rsp, 20h
.text:00000001800023EF                 mov     rbx, cs:lpParameter
.text:00000001800023F6                 mov     rbp, rdx
.text:00000001800023F9                 movsxd  rdi, ecx
.text:00000001800023FC                 test    rbx, rbx
.text:00000001800023FF                 jz      short loc_18000247D
.text:0000000180002401                 lea     rcx, [rbx+388h] ; lpCriticalSection
.text:0000000180002408
.text:0000000180002408 loc_180002408:                          ; DATA XREF: .rdata:0000000180014EE0↓o
.text:0000000180002408                                         ; .rdata:0000000180014EF0↓o ...
.text:0000000180002408                 mov     [rsp+28h+arg_0], rsi
.text:000000018000240D                 call    cs:EnterCriticalSection
.text:0000000180002413                 test    edi, edi
.text:0000000180002415                 js      short loc_18000246B
.text:0000000180002417                 mov     rdx, [rbx+2E8h]
.text:000000018000241E                 mov     rcx, rdi
.text:0000000180002421                 mov     rax, [rbx+2F0h]
.text:0000000180002428                 sub     rax, rdx
.text:000000018000242B                 sar     rax, 5
.text:000000018000242F                 cmp     rdi, rax
.text:0000000180002432                 jnb     short loc_18000246B
.text:0000000180002434                 shl     rcx, 5
.text:0000000180002438                 cmp     qword ptr [rcx+rdx+18h], 10h
.text:000000018000243E                 lea     r8, [rcx+rdx]   ; Source
.text:0000000180002442                 jb      short loc_18000244C
.text:0000000180002444                 mov     rcx, [r8]
.text:0000000180002447                 mov     r8, rcx
.text:000000018000244A                 jmp     short loc_18000244F
.text:000000018000244C ; ---------------------------------------------------------------------------
.text:000000018000244C
.text:000000018000244C loc_18000244C:                          ; CODE XREF: fsuipcw_getLvarNameFromId+62↑j
.text:000000018000244C                 mov     rcx, r8
.text:000000018000244F
.text:000000018000244F loc_18000244F:                          ; CODE XREF: fsuipcw_getLvarNameFromId+6A↑j
.text:000000018000244F                 mov     rdx, 0FFFFFFFFFFFFFFFFh
.text:0000000180002456
.text:0000000180002456 loc_180002456:                          ; CODE XREF: fsuipcw_getLvarNameFromId+7D↓j
.text:0000000180002456                 inc     rdx
.text:0000000180002459                 cmp     byte ptr [rcx+rdx], 0
.text:000000018000245D                 jnz     short loc_180002456
.text:000000018000245F                 inc     rdx             ; SizeInBytes
.text:0000000180002462                 mov     rcx, rbp        ; Destination
.text:0000000180002465                 call    cs:strcpy_s
.text:000000018000246B
.text:000000018000246B loc_18000246B:                          ; CODE XREF: fsuipcw_getLvarNameFromId+35↑j
.text:000000018000246B                                         ; fsuipcw_getLvarNameFromId+52↑j
.text:000000018000246B                 lea     rcx, [rbx+388h] ; lpCriticalSection
.text:0000000180002472                 call    cs:LeaveCriticalSection
.text:0000000180002478                 mov     rsi, [rsp+28h+arg_0]
.text:000000018000247D
.text:000000018000247D loc_18000247D:                          ; CODE XREF: fsuipcw_getLvarNameFromId+1F↑j
.text:000000018000247D                                         ; DATA XREF: .pdata:000000018001C210↓o ...
.text:000000018000247D                 mov     rbx, [rsp+28h+arg_8]
.text:0000000180002482                 mov     rbp, [rsp+28h+arg_10]
.text:0000000180002487                 add     rsp, 20h
.text:000000018000248B                 pop     rdi
.text:000000018000248C                 retn
.text:000000018000248C fsuipcw_getLvarNameFromId endp
.text:000000018000248C
.text:000000018000248C ; ---------------------------------------------------------------------------
.text:000000018000248D algn_18000248D:                         ; DATA XREF: .pdata:000000018001C21C↓o
.text:000000018000248D                 align 10h
.text:0000000180002490 ; Exported entry   3. fsuipcw_createLvar
.text:0000000180002490
.text:0000000180002490 ; =============== S U B R O U T I N E =======================================
.text:0000000180002490
.text:0000000180002490
.text:0000000180002490                 public fsuipcw_createLvar
.text:0000000180002490 fsuipcw_createLvar proc near            ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180002490                                         ; .pdata:000000018001C228↓o
.text:0000000180002490
.text:0000000180002490 var_428         = qword ptr -428h
.text:0000000180002490 Buffer          = byte ptr -418h
.text:0000000180002490 var_18          = qword ptr -18h
.text:0000000180002490
.text:0000000180002490 ; __unwind { // __GSHandlerCheck
.text:0000000180002490                 push    rbx
.text:0000000180002492                 sub     rsp, 440h
.text:0000000180002499                 mov     rax, cs:__security_cookie
.text:00000001800024A0                 xor     rax, rsp
.text:00000001800024A3                 mov     [rsp+448h+var_18], rax
.text:00000001800024AB                 mov     rbx, cs:lpParameter
.text:00000001800024B2                 test    rbx, rbx
.text:00000001800024B5                 jz      short loc_1800024FF
.text:00000001800024B7                 mov     rax, 0FFFFFFFFFFFFFFFFh
.text:00000001800024BE                 xchg    ax, ax
.text:00000001800024C0
.text:00000001800024C0 loc_1800024C0:                          ; CODE XREF: fsuipcw_createLvar+37↓j
.text:00000001800024C0                 inc     rax
.text:00000001800024C3                 cmp     byte ptr [rcx+rax], 0
.text:00000001800024C7                 jnz     short loc_1800024C0
.text:00000001800024C9                 cmp     rax, 38h ; '8'
.text:00000001800024CD                 ja      short loc_1800024FF
.text:00000001800024CF                 mov     r9, rcx
.text:00000001800024D2                 movsd   [rsp+448h+var_428], xmm1
.text:00000001800024D8                 lea     rcx, [rsp+448h+Buffer] ; Buffer
.text:00000001800024DD                 mov     edx, 400h       ; BufferCount
.text:00000001800024E2                 lea     r8, aSLf        ; "::%s = %lf"
.text:00000001800024E9                 call    sub_1800029E0
.text:00000001800024EE                 lea     rdx, [rsp+448h+Buffer]
.text:00000001800024F3                 mov     rcx, rbx
.text:00000001800024F6                 call    sub_1800051C0
.text:00000001800024FB                 mov     al, 1
.text:00000001800024FD                 jmp     short loc_180002501
.text:00000001800024FF ; ---------------------------------------------------------------------------
.text:00000001800024FF
.text:00000001800024FF loc_1800024FF:                          ; CODE XREF: fsuipcw_createLvar+25↑j
.text:00000001800024FF                                         ; fsuipcw_createLvar+3D↑j
.text:00000001800024FF                 xor     al, al
.text:0000000180002501
.text:0000000180002501 loc_180002501:                          ; CODE XREF: fsuipcw_createLvar+6D↑j
.text:0000000180002501                 mov     rcx, [rsp+448h+var_18]
.text:0000000180002509                 xor     rcx, rsp        ; StackCookie
.text:000000018000250C                 call    __security_check_cookie
.text:0000000180002511                 add     rsp, 440h
.text:0000000180002518                 pop     rbx
.text:0000000180002519                 retn
.text:0000000180002519 ; } // starts at 180002490
.text:0000000180002519 fsuipcw_createLvar endp
.text:0000000180002519
.text:0000000180002519 ; ---------------------------------------------------------------------------
.text:000000018000251A algn_18000251A:                         ; DATA XREF: .pdata:000000018001C228↓o
.text:000000018000251A                 align 20h
.text:0000000180002520 ; Exported entry   1. fsuipcw_MyDispatchProc
.text:0000000180002520
.text:0000000180002520 ; =============== S U B R O U T I N E =======================================
.text:0000000180002520
.text:0000000180002520
.text:0000000180002520                 public fsuipcw_MyDispatchProc
.text:0000000180002520 fsuipcw_MyDispatchProc proc near        ; DATA XREF: sub_180002E20+359↓o
.text:0000000180002520                                         ; .rdata:off_1800166E8↓o
.text:0000000180002520                 mov     rax, r8
.text:0000000180002523                 mov     r8d, edx
.text:0000000180002526                 mov     rdx, rcx
.text:0000000180002529                 mov     rcx, rax        ; Parameter
.text:000000018000252C                 jmp     sub_1800034B0
.text:000000018000252C fsuipcw_MyDispatchProc endp
.text:000000018000252C
.text:000000018000252C ; ---------------------------------------------------------------------------
.text:0000000180002531                 align 20h
.text:0000000180002540 ; Exported entry  22. fsuipcw_registerUpdateCallback
.text:0000000180002540
.text:0000000180002540 ; =============== S U B R O U T I N E =======================================
.text:0000000180002540
.text:0000000180002540
.text:0000000180002540                 public fsuipcw_registerUpdateCallback
.text:0000000180002540 fsuipcw_registerUpdateCallback proc near
.text:0000000180002540                                         ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180002540                 mov     rax, cs:lpParameter
.text:0000000180002547                 test    rax, rax
.text:000000018000254A                 jz      short locret_180002553
.text:000000018000254C                 mov     [rax+400h], rcx
.text:0000000180002553
.text:0000000180002553 locret_180002553:                       ; CODE XREF: fsuipcw_registerUpdateCallback+A↑j
.text:0000000180002553                 retn
.text:0000000180002553 fsuipcw_registerUpdateCallback endp
.text:0000000180002553
.text:0000000180002553 ; ---------------------------------------------------------------------------
.text:0000000180002554                 align 20h
.text:0000000180002560 ; Exported entry  20. fsuipcw_registerLvarUpdateCallbackById
.text:0000000180002560
.text:0000000180002560 ; =============== S U B R O U T I N E =======================================
.text:0000000180002560
.text:0000000180002560
.text:0000000180002560                 public fsuipcw_registerLvarUpdateCallbackById
.text:0000000180002560 fsuipcw_registerLvarUpdateCallbackById proc near
.text:0000000180002560                                         ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180002560                 mov     rax, cs:lpParameter
.text:0000000180002567                 test    rax, rax
.text:000000018000256A                 jz      short locret_180002573
.text:000000018000256C                 mov     [rax+408h], rcx
.text:0000000180002573
.text:0000000180002573 locret_180002573:                       ; CODE XREF: fsuipcw_registerLvarUpdateCallbackById+A↑j
.text:0000000180002573                 retn
.text:0000000180002573 fsuipcw_registerLvarUpdateCallbackById endp
.text:0000000180002573
.text:0000000180002573 ; ---------------------------------------------------------------------------
.text:0000000180002574                 align 20h
.text:0000000180002580 ; Exported entry  21. fsuipcw_registerLvarUpdateCallbackByName
.text:0000000180002580
.text:0000000180002580 ; =============== S U B R O U T I N E =======================================
.text:0000000180002580
.text:0000000180002580
.text:0000000180002580                 public fsuipcw_registerLvarUpdateCallbackByName
.text:0000000180002580 fsuipcw_registerLvarUpdateCallbackByName proc near
.text:0000000180002580                                         ; DATA XREF: .rdata:off_1800166E8↓o
.text:0000000180002580                 mov     rax, cs:lpParameter
.text:0000000180002587                 test    rax, rax
.text:000000018000258A                 jz      short locret_180002593
.text:000000018000258C                 mov     [rax+410h], rcx
.text:0000000180002593
.text:0000000180002593 locret_180002593:                       ; CODE XREF: fsuipcw_registerLvarUpdateCallbackByName+A↑j
.text:0000000180002593                 retn
.text:0000000180002593 fsuipcw_registerLvarUpdateCallbackByName endp
.text:0000000180002593
.text:0000000180002593 ; ---------------------------------------------------------------------------
.text:0000000180002594                 align 20h
.text:00000001800025A0 ; Exported entry   6. fsuipcw_flagLvarForUpdateCallbackById
.text:00000001800025A0
.text:00000001800025A0 ; =============== S U B R O U T I N E =======================================
.text:00000001800025A0
.text:00000001800025A0
.text:00000001800025A0                 public fsuipcw_flagLvarForUpdateCallbackById
.text:00000001800025A0 fsuipcw_flagLvarForUpdateCallbackById proc near
.text:00000001800025A0                                         ; DATA XREF: .rdata:off_1800166E8↓o
.text:00000001800025A0                 mov     edx, ecx
.text:00000001800025A2                 mov     rcx, cs:lpParameter
.text:00000001800025A9                 test    rcx, rcx
.text:00000001800025AC                 jnz     sub_180005500
.text:00000001800025B2                 retn
.text:00000001800025B2 fsuipcw_flagLvarForUpdateCallbackById endp
.text:00000001800025B2
.text:00000001800025B2 ; ---------------------------------------------------------------------------
.text:00000001800025B3                 align 20h
.text:00000001800025C0 ; Exported entry   7. fsuipcw_flagLvarForUpdateCallbackByName
.text:00000001800025C0
.text:00000001800025C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800025C0
.text:00000001800025C0
.text:00000001800025C0                 public fsuipcw_flagLvarForUpdateCallbackByName
.text:00000001800025C0 fsuipcw_flagLvarForUpdateCallbackByName proc near
.text:00000001800025C0                                         ; DATA XREF: .rdata:off_1800166E8↓o
.text:00000001800025C0                                         ; .pdata:000000018001C234↓o
.text:00000001800025C0
.text:00000001800025C0 Buffer          = byte ptr -118h
.text:00000001800025C0 var_18          = qword ptr -18h
.text:00000001800025C0 arg_8           = qword ptr  10h
.text:00000001800025C0
.text:00000001800025C0 ; __unwind { // __GSHandlerCheck
.text:00000001800025C0                 mov     [rsp+arg_8], rbx
.text:00000001800025C5                 push    rdi
.text:00000001800025C6                 sub     rsp, 130h
.text:00000001800025CD                 mov     rax, cs:__security_cookie
.text:00000001800025D4                 xor     rax, rsp
.text:00000001800025D7                 mov     [rsp+138h+var_18], rax
.text:00000001800025DF                 mov     rbx, cs:lpParameter
.text:00000001800025E6                 mov     rdi, rcx
.text:00000001800025E9                 test    rbx, rbx
.text:00000001800025EC                 jz      short loc_180002634
.text:00000001800025EE                 mov     rdx, rcx
.text:00000001800025F1                 mov     rcx, rbx
.text:00000001800025F4                 call    sub_180005390
.text:00000001800025F9                 test    eax, eax
.text:00000001800025FB                 jns     short loc_18000262A
.text:00000001800025FD                 mov     r9, rdi
.text:0000000180002600                 lea     r8, aErrorFlaggingL ; "Error flagging lvar for update callback"...
.text:0000000180002607                 mov     edx, 100h       ; BufferCount
.text:000000018000260C                 lea     rcx, [rsp+138h+Buffer] ; Buffer
.text:0000000180002611                 call    sub_1800029E0
.text:0000000180002616                 call    sub_180007430
.text:000000018000261B                 mov     rcx, rax
.text:000000018000261E                 lea     rdx, [rsp+138h+Buffer]
.text:0000000180002623                 call    sub_180007930
.text:0000000180002628                 jmp     short loc_180002634
.text:000000018000262A ; ---------------------------------------------------------------------------
.text:000000018000262A
.text:000000018000262A loc_18000262A:                          ; CODE XREF: fsuipcw_flagLvarForUpdateCallbackByName+3B↑j
.text:000000018000262A                 mov     edx, eax
.text:000000018000262C                 mov     rcx, rbx
.text:000000018000262F                 call    sub_180005500
.text:0000000180002634
.text:0000000180002634 loc_180002634:                          ; CODE XREF: fsuipcw_flagLvarForUpdateCallbackByName+2C↑j
.text:0000000180002634                                         ; fsuipcw_flagLvarForUpdateCallbackByName+68↑j
.text:0000000180002634                 mov     rcx, [rsp+138h+var_18]
.text:000000018000263C                 xor     rcx, rsp        ; StackCookie
.text:000000018000263F                 call    __security_check_cookie
.text:0000000180002644                 mov     rbx, [rsp+138h+arg_8]
.text:000000018000264C                 add     rsp, 130h
.text:0000000180002653                 pop     rdi
.text:0000000180002654                 retn
.text:0000000180002654 ; } // starts at 1800025C0
.text:0000000180002654 fsuipcw_flagLvarForUpdateCallbackByName endp
.text:0000000180002654
.text:0000000180002654 ; ---------------------------------------------------------------------------
.text:0000000180002655 algn_180002655:                         ; DATA XREF: .pdata:000000018001C234↓o
.text:0000000180002655                 align 20h
.text:0000000180002660
.text:0000000180002660 ; =============== S U B R O U T I N E =======================================
.text:0000000180002660
.text:0000000180002660
.text:0000000180002660 sub_180002660   proc near               ; CODE XREF: sub_18000F090+AE↓p
.text:0000000180002660                                         ; sub_18000F090:loc_18000F15B↓p ...
.text:0000000180002660                 push    rbx
.text:0000000180002662                 sub     rsp, 20h
.text:0000000180002666                 mov     rdx, [rcx+18h]
.text:000000018000266A                 mov     rbx, rcx
.text:000000018000266D                 cmp     rdx, 10h
.text:0000000180002671                 jb      short loc_18000269F
.text:0000000180002673                 mov     rcx, [rcx]
.text:0000000180002676                 inc     rdx
.text:0000000180002679                 cmp     rdx, 1000h
.text:0000000180002680                 jb      short loc_18000269A
.text:0000000180002682                 mov     r8, [rcx-8]
.text:0000000180002686                 add     rdx, 27h ; '''
.text:000000018000268A                 sub     rcx, r8
.text:000000018000268D                 lea     rax, [rcx-8]
.text:0000000180002691                 cmp     rax, 1Fh
.text:0000000180002695                 ja      short loc_1800026B8
.text:0000000180002697                 mov     rcx, r8         ; Block
.text:000000018000269A
.text:000000018000269A loc_18000269A:                          ; CODE XREF: sub_180002660+20↑j
.text:000000018000269A                 call    j_j_free
.text:000000018000269F
.text:000000018000269F loc_18000269F:                          ; CODE XREF: sub_180002660+11↑j
.text:000000018000269F                 mov     qword ptr [rbx+10h], 0
.text:00000001800026A7                 mov     qword ptr [rbx+18h], 0Fh
.text:00000001800026AF                 mov     byte ptr [rbx], 0
.text:00000001800026B2                 add     rsp, 20h
.text:00000001800026B6                 pop     rbx
.text:00000001800026B7                 retn
.text:00000001800026B8 ; ---------------------------------------------------------------------------
.text:00000001800026B8
.text:00000001800026B8 loc_1800026B8:                          ; CODE XREF: sub_180002660+35↑j
.text:00000001800026B8                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800026B8 ; ---------------------------------------------------------------------------
.text:00000001800026BE                 db 0CCh
.text:00000001800026BE sub_180002660   endp
.text:00000001800026BE
.text:00000001800026BF algn_1800026BF:                         ; DATA XREF: .pdata:000000018001C240↓o
.text:00000001800026BF                 align 20h
.text:00000001800026C0
.text:00000001800026C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800026C0
.text:00000001800026C0
.text:00000001800026C0 sub_1800026C0   proc near               ; CODE XREF: fsuipcw_getLvarList+9A↑p
.text:00000001800026C0                                         ; fsuipcw_getHvarList+9A↑p ...
.text:00000001800026C0
.text:00000001800026C0 arg_10          = qword ptr  18h
.text:00000001800026C0
.text:00000001800026C0                 push    rbx
.text:00000001800026C2                 push    rdi
.text:00000001800026C3                 push    r14
.text:00000001800026C5                 sub     rsp, 20h
.text:00000001800026C9                 mov     r9, [rcx+8]
.text:00000001800026CD                 mov     r14, rcx
.text:00000001800026D0                 mov     rbx, r8
.text:00000001800026D3                 mov     r8, [rcx]
.text:00000001800026D6                 mov     rcx, r9
.text:00000001800026D9                 sub     rcx, r8
.text:00000001800026DC                 mov     rax, rcx
.text:00000001800026DF                 sar     rax, 3
.text:00000001800026E3                 cmp     rax, rdx
.text:00000001800026E6                 jnb     loc_1800027D1
.text:00000001800026EC                 mov     rax, 1FFFFFFFFFFFFFFFh
.text:00000001800026F6
.text:00000001800026F6 loc_1800026F6:                          ; DATA XREF: .rdata:0000000180014F3C↓o
.text:00000001800026F6                                         ; .rdata:0000000180014F4C↓o ...
.text:00000001800026F6                 mov     [rsp+38h+arg_10], rsi
.text:00000001800026FB                 cmp     rdx, rax
.text:00000001800026FE                 ja      loc_1800027F9
.text:0000000180002704                 lea     rsi, ds:0[rdx*8]
.text:000000018000270C                 cmp     rsi, 1000h
.text:0000000180002713                 jb      short loc_18000273E
.text:0000000180002715                 lea     rcx, [rsi+27h]  ; Size
.text:0000000180002719                 cmp     rcx, rsi
.text:000000018000271C                 jbe     loc_1800027F9
.text:0000000180002722                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180002727                 test    rax, rax
.text:000000018000272A                 jz      loc_1800027CA
.text:0000000180002730                 lea     rdi, [rax+27h]
.text:0000000180002734                 and     rdi, 0FFFFFFFFFFFFFFE0h
.text:0000000180002738                 mov     [rdi-8], rax
.text:000000018000273C                 jmp     short loc_180002752
.text:000000018000273E ; ---------------------------------------------------------------------------
.text:000000018000273E
.text:000000018000273E loc_18000273E:                          ; CODE XREF: sub_1800026C0+53↑j
.text:000000018000273E                 test    rsi, rsi
.text:0000000180002741                 jz      short loc_180002750
.text:0000000180002743                 mov     rcx, rsi        ; Size
.text:0000000180002746                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000274B                 mov     rdi, rax
.text:000000018000274E                 jmp     short loc_180002752
.text:0000000180002750 ; ---------------------------------------------------------------------------
.text:0000000180002750
.text:0000000180002750 loc_180002750:                          ; CODE XREF: sub_1800026C0+81↑j
.text:0000000180002750                 xor     edi, edi
.text:0000000180002752
.text:0000000180002752 loc_180002752:                          ; CODE XREF: sub_1800026C0+7C↑j
.text:0000000180002752                                         ; sub_1800026C0+8E↑j
.text:0000000180002752                 mov     rcx, [r14]
.text:0000000180002755                 mov     rax, [r14+10h]
.text:0000000180002759                 sub     rax, rcx
.text:000000018000275C                 sar     rax, 3
.text:0000000180002760                 test    rax, rax
.text:0000000180002763                 jz      short loc_180002793
.text:0000000180002765                 lea     rdx, ds:0[rax*8]
.text:000000018000276D                 cmp     rdx, 1000h
.text:0000000180002774                 jb      short loc_18000278E
.text:0000000180002776                 mov     r8, [rcx-8]
.text:000000018000277A                 add     rdx, 27h ; '''
.text:000000018000277E                 sub     rcx, r8
.text:0000000180002781                 lea     rax, [rcx-8]
.text:0000000180002785                 cmp     rax, 1Fh
.text:0000000180002789                 ja      short loc_1800027CA
.text:000000018000278B                 mov     rcx, r8         ; Block
.text:000000018000278E
.text:000000018000278E loc_18000278E:                          ; CODE XREF: sub_1800026C0+B4↑j
.text:000000018000278E                 call    j_j_free
.text:0000000180002793
.text:0000000180002793 loc_180002793:                          ; CODE XREF: sub_1800026C0+A3↑j
.text:0000000180002793                 lea     rax, [rsi+rdi]
.text:0000000180002797                 mov     [r14], rdi
.text:000000018000279A                 mov     [r14+8], rax
.text:000000018000279E                 mov     [r14+10h], rax
.text:00000001800027A2                 cmp     rdi, rax
.text:00000001800027A5                 jz      short loc_1800027BC
.text:00000001800027A7                 nop     word ptr [rax+rax+00000000h]
.text:00000001800027B0
.text:00000001800027B0 loc_1800027B0:                          ; CODE XREF: sub_1800026C0+FA↓j
.text:00000001800027B0                 mov     [rdi], rbx
.text:00000001800027B3                 add     rdi, 8
.text:00000001800027B7                 cmp     rdi, rax
.text:00000001800027BA                 jnz     short loc_1800027B0
.text:00000001800027BC
.text:00000001800027BC loc_1800027BC:                          ; CODE XREF: sub_1800026C0+E5↑j
.text:00000001800027BC                 mov     rsi, [rsp+38h+arg_10]
.text:00000001800027C1
.text:00000001800027C1 loc_1800027C1:                          ; CODE XREF: sub_1800026C0+125↓j
.text:00000001800027C1                                         ; DATA XREF: .pdata:000000018001C258↓o ...
.text:00000001800027C1                 add     rsp, 20h
.text:00000001800027C5                 pop     r14
.text:00000001800027C7                 pop     rdi
.text:00000001800027C8                 pop     rbx
.text:00000001800027C9                 retn
.text:00000001800027CA ; ---------------------------------------------------------------------------
.text:00000001800027CA
.text:00000001800027CA loc_1800027CA:                          ; CODE XREF: sub_1800026C0+6A↑j
.text:00000001800027CA                                         ; sub_1800026C0+C9↑j
.text:00000001800027CA                                         ; DATA XREF: ...
.text:00000001800027CA                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800027D0                 int     3               ; Trap to Debugger
.text:00000001800027D1 ; ---------------------------------------------------------------------------
.text:00000001800027D1
.text:00000001800027D1 loc_1800027D1:                          ; CODE XREF: sub_1800026C0+26↑j
.text:00000001800027D1                                         ; DATA XREF: .pdata:000000018001C270↓o ...
.text:00000001800027D1                 add     rcx, 7
.text:00000001800027D5                 xor     edi, edi
.text:00000001800027D7                 shr     rcx, 3
.text:00000001800027DB                 cmp     r8, r9
.text:00000001800027DE                 cmova   rcx, rdi
.text:00000001800027E2                 test    rcx, rcx
.text:00000001800027E5                 jz      short loc_1800027C1
.text:00000001800027E7                 mov     rdi, r8
.text:00000001800027EA                 mov     rax, rbx
.text:00000001800027ED                 rep stosq
.text:00000001800027F0                 add     rsp, 20h
.text:00000001800027F4                 pop     r14
.text:00000001800027F6                 pop     rdi
.text:00000001800027F7                 pop     rbx
.text:00000001800027F8                 retn
.text:00000001800027F9 ; ---------------------------------------------------------------------------
.text:00000001800027F9
.text:00000001800027F9 loc_1800027F9:                          ; CODE XREF: sub_1800026C0+3E↑j
.text:00000001800027F9                                         ; sub_1800026C0+5C↑j
.text:00000001800027F9                                         ; DATA XREF: ...
.text:00000001800027F9                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:00000001800027F9 ; ---------------------------------------------------------------------------
.text:00000001800027FE                 db 0CCh
.text:00000001800027FE sub_1800026C0   endp
.text:00000001800027FE
.text:00000001800027FF algn_1800027FF:                         ; DATA XREF: .pdata:000000018001C288↓o
.text:00000001800027FF                 align 20h
.text:0000000180002800
.text:0000000180002800 ; =============== S U B R O U T I N E =======================================
.text:0000000180002800
.text:0000000180002800
.text:0000000180002800 sub_180002800   proc near               ; CODE XREF: sub_1800020F0+55↑p
.text:0000000180002800                                         ; DATA XREF: .rdata:0000000180014F80↓o ...
.text:0000000180002800
.text:0000000180002800 arg_0           = qword ptr  8
.text:0000000180002800 arg_10          = qword ptr  18h
.text:0000000180002800
.text:0000000180002800                 mov     [rsp+arg_10], rbx
.text:0000000180002805                 push    rsi
.text:0000000180002806                 sub     rsp, 20h
.text:000000018000280A                 mov     rax, [rdx+8]
.text:000000018000280E                 xor     esi, esi
.text:0000000180002810                 mov     [rax], rsi
.text:0000000180002813                 mov     rbx, [rdx]
.text:0000000180002816                 test    rbx, rbx
.text:0000000180002819                 jz      short loc_180002884
.text:000000018000281B
.text:000000018000281B loc_18000281B:                          ; DATA XREF: .rdata:0000000180014F80↓o
.text:000000018000281B                                         ; .rdata:0000000180014F90↓o ...
.text:000000018000281B                 mov     [rsp+28h+arg_0], rdi
.text:0000000180002820
.text:0000000180002820 loc_180002820:                          ; CODE XREF: sub_180002800+7D↓j
.text:0000000180002820                 mov     rdx, [rbx+30h]
.text:0000000180002824                 mov     rdi, [rbx]
.text:0000000180002827                 cmp     rdx, 10h
.text:000000018000282B                 jb      short loc_18000285A
.text:000000018000282D                 mov     rcx, [rbx+18h]
.text:0000000180002831                 inc     rdx
.text:0000000180002834                 cmp     rdx, 1000h
.text:000000018000283B                 jb      short loc_180002855
.text:000000018000283D                 mov     r8, [rcx-8]
.text:0000000180002841                 add     rdx, 27h ; '''
.text:0000000180002845                 sub     rcx, r8
.text:0000000180002848                 lea     rax, [rcx-8]
.text:000000018000284C                 cmp     rax, 1Fh
.text:0000000180002850                 ja      short loc_18000288F
.text:0000000180002852                 mov     rcx, r8         ; Block
.text:0000000180002855
.text:0000000180002855 loc_180002855:                          ; CODE XREF: sub_180002800+3B↑j
.text:0000000180002855                 call    j_j_free
.text:000000018000285A
.text:000000018000285A loc_18000285A:                          ; CODE XREF: sub_180002800+2B↑j
.text:000000018000285A                 mov     edx, 38h ; '8'
.text:000000018000285F                 mov     [rbx+28h], rsi
.text:0000000180002863                 mov     rcx, rbx        ; Block
.text:0000000180002866                 mov     qword ptr [rbx+30h], 0Fh
.text:000000018000286E                 mov     [rbx+18h], sil
.text:0000000180002872                 call    j_j_free
.text:0000000180002877                 mov     rbx, rdi
.text:000000018000287A                 test    rdi, rdi
.text:000000018000287D                 jnz     short loc_180002820
.text:000000018000287F                 mov     rdi, [rsp+28h+arg_0]
.text:0000000180002884
.text:0000000180002884 loc_180002884:                          ; CODE XREF: sub_180002800+19↑j
.text:0000000180002884                                         ; DATA XREF: .pdata:000000018001C2A0↓o ...
.text:0000000180002884                 mov     rbx, [rsp+28h+arg_10]
.text:0000000180002889                 add     rsp, 20h
.text:000000018000288D                 pop     rsi
.text:000000018000288E                 retn
.text:000000018000288F ; ---------------------------------------------------------------------------
.text:000000018000288F
.text:000000018000288F loc_18000288F:                          ; CODE XREF: sub_180002800+50↑j
.text:000000018000288F                                         ; DATA XREF: .pdata:000000018001C2AC↓o ...
.text:000000018000288F                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000288F ; ---------------------------------------------------------------------------
.text:0000000180002895                 db 0CCh
.text:0000000180002895 sub_180002800   endp
.text:0000000180002895
.text:0000000180002896 algn_180002896:                         ; DATA XREF: .pdata:000000018001C2B8↓o
.text:0000000180002896                 align 20h
.text:00000001800028A0
.text:00000001800028A0 ; =============== S U B R O U T I N E =======================================
.text:00000001800028A0
.text:00000001800028A0
.text:00000001800028A0 sub_1800028A0   proc near               ; CODE XREF: fsuipcw_getLvarValues+227↑p
.text:00000001800028A0                                         ; sub_1800028A0+3A↓p ...
.text:00000001800028A0
.text:00000001800028A0 var_28          = qword ptr -28h
.text:00000001800028A0 var_20          = qword ptr -20h
.text:00000001800028A0
.text:00000001800028A0                 push    rbp
.text:00000001800028A2                 push    rsi
.text:00000001800028A3                 push    rdi
.text:00000001800028A4                 sub     rsp, 30h
.text:00000001800028A8                 cmp     byte ptr [r8+19h], 0
.text:00000001800028AD                 mov     rdi, r8
.text:00000001800028B0                 mov     rbp, rdx
.text:00000001800028B3                 mov     rsi, rcx
.text:00000001800028B6                 jnz     loc_180002949
.text:00000001800028BC
.text:00000001800028BC loc_1800028BC:                          ; DATA XREF: .rdata:0000000180014FC8↓o
.text:00000001800028BC                                         ; .rdata:0000000180014FD8↓o ...
.text:00000001800028BC                 mov     [rsp+48h+var_20], rbx
.text:00000001800028C1                 mov     [rsp+48h+var_28], r14
.text:00000001800028C6                 xor     r14d, r14d
.text:00000001800028C9                 nop     dword ptr [rax+00000000h]
.text:00000001800028D0
.text:00000001800028D0 loc_1800028D0:                          ; CODE XREF: sub_1800028A0+9D↓j
.text:00000001800028D0                 mov     r8, [rdi+10h]
.text:00000001800028D4                 mov     rdx, rbp
.text:00000001800028D7                 mov     rcx, rsi
.text:00000001800028DA                 call    sub_1800028A0
.text:00000001800028DF                 mov     rbx, rdi
.text:00000001800028E2                 mov     rdi, [rdi]
.text:00000001800028E5                 mov     rdx, [rbx+38h]
.text:00000001800028E9                 cmp     rdx, 10h
.text:00000001800028ED                 jb      short loc_18000291C
.text:00000001800028EF                 mov     rcx, [rbx+20h]
.text:00000001800028F3                 inc     rdx
.text:00000001800028F6                 cmp     rdx, 1000h
.text:00000001800028FD                 jb      short loc_180002917
.text:00000001800028FF                 mov     r8, [rcx-8]
.text:0000000180002903                 add     rdx, 27h ; '''
.text:0000000180002907                 sub     rcx, r8
.text:000000018000290A                 lea     rax, [rcx-8]
.text:000000018000290E                 cmp     rax, 1Fh
.text:0000000180002912                 ja      short loc_180002951
.text:0000000180002914                 mov     rcx, r8         ; Block
.text:0000000180002917
.text:0000000180002917 loc_180002917:                          ; CODE XREF: sub_1800028A0+5D↑j
.text:0000000180002917                 call    j_j_free
.text:000000018000291C
.text:000000018000291C loc_18000291C:                          ; CODE XREF: sub_1800028A0+4D↑j
.text:000000018000291C                 mov     edx, 48h ; 'H'
.text:0000000180002921                 mov     [rbx+30h], r14
.text:0000000180002925                 mov     rcx, rbx        ; Block
.text:0000000180002928                 mov     qword ptr [rbx+38h], 0Fh
.text:0000000180002930                 mov     [rbx+20h], r14b
.text:0000000180002934                 call    j_j_free
.text:0000000180002939                 cmp     [rdi+19h], r14b
.text:000000018000293D                 jz      short loc_1800028D0
.text:000000018000293F                 mov     rbx, [rsp+48h+var_20]
.text:0000000180002944                 mov     r14, [rsp+48h+var_28]
.text:0000000180002949
.text:0000000180002949 loc_180002949:                          ; CODE XREF: sub_1800028A0+16↑j
.text:0000000180002949                                         ; DATA XREF: .pdata:000000018001C2D0↓o ...
.text:0000000180002949                 add     rsp, 30h
.text:000000018000294D                 pop     rdi
.text:000000018000294E                 pop     rsi
.text:000000018000294F                 pop     rbp
.text:0000000180002950                 retn
.text:0000000180002951 ; ---------------------------------------------------------------------------
.text:0000000180002951
.text:0000000180002951 loc_180002951:                          ; CODE XREF: sub_1800028A0+72↑j
.text:0000000180002951                                         ; DATA XREF: .pdata:000000018001C2DC↓o ...
.text:0000000180002951                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180002951 ; ---------------------------------------------------------------------------
.text:0000000180002957                 db 0CCh
.text:0000000180002957 sub_1800028A0   endp
.text:0000000180002957
.text:0000000180002958 algn_180002958:                         ; DATA XREF: .pdata:000000018001C2E8↓o
.text:0000000180002958                 align 20h
.text:0000000180002960
.text:0000000180002960 ; =============== S U B R O U T I N E =======================================
.text:0000000180002960
.text:0000000180002960
.text:0000000180002960 sub_180002960   proc near               ; CODE XREF: sub_180002980+21↓p
.text:0000000180002960                                         ; sub_1800029E0+20↓p ...
.text:0000000180002960                 lea     rax, unk_18001B2A0
.text:0000000180002967                 retn
.text:0000000180002967 sub_180002960   endp
.text:0000000180002967
.text:0000000180002967 ; ---------------------------------------------------------------------------
.text:0000000180002968                 align 10h
.text:0000000180002970
.text:0000000180002970 ; =============== S U B R O U T I N E =======================================
.text:0000000180002970
.text:0000000180002970
.text:0000000180002970 sub_180002970   proc near               ; CODE XREF: sub_180002A40+21↓p
.text:0000000180002970                                         ; __scrt_initialize_default_local_stdio_options+D↓p
.text:0000000180002970                 lea     rax, unk_18001B2A8
.text:0000000180002977                 retn
.text:0000000180002977 sub_180002970   endp
.text:0000000180002977
.text:0000000180002977 ; ---------------------------------------------------------------------------
.text:0000000180002978                 align 20h
.text:0000000180002980
.text:0000000180002980 ; =============== S U B R O U T I N E =======================================
.text:0000000180002980
.text:0000000180002980
.text:0000000180002980 ; __int64 __fastcall sub_180002980(char *Buffer, char *Format)
.text:0000000180002980 sub_180002980   proc near               ; CODE XREF: fsuipcw_logLvars+79↑p
.text:0000000180002980                                         ; sub_1800034B0+132A↓p
.text:0000000180002980                                         ; DATA XREF: ...
.text:0000000180002980
.text:0000000180002980 Locale          = qword ptr -28h
.text:0000000180002980 ArgList         = qword ptr -20h
.text:0000000180002980 arg_8           = qword ptr  10h
.text:0000000180002980 arg_10          = byte ptr  18h
.text:0000000180002980 arg_18          = qword ptr  20h
.text:0000000180002980
.text:0000000180002980                 mov     [rsp+arg_8], rdx
.text:0000000180002985                 mov     qword ptr [rsp+arg_10], r8
.text:000000018000298A                 mov     [rsp+arg_18], r9
.text:000000018000298F                 push    rbx
.text:0000000180002990                 push    rsi
.text:0000000180002991                 push    rdi
.text:0000000180002992                 sub     rsp, 30h
.text:0000000180002996                 mov     rbx, rdx
.text:0000000180002999                 lea     rsi, [rsp+48h+arg_10]
.text:000000018000299E                 mov     rdi, rcx
.text:00000001800029A1                 call    sub_180002960
.text:00000001800029A6                 mov     r9, rbx         ; Format
.text:00000001800029A9                 mov     [rsp+48h+ArgList], rsi ; ArgList
.text:00000001800029AE                 mov     rbx, 0FFFFFFFFFFFFFFFFh
.text:00000001800029B5                 mov     [rsp+48h+Locale], 0 ; Locale
.text:00000001800029BE                 mov     r8, rbx         ; BufferCount
.text:00000001800029C1                 mov     rdx, rdi        ; Buffer
.text:00000001800029C4                 mov     rcx, [rax]
.text:00000001800029C7                 or      rcx, 1          ; Options
.text:00000001800029CB                 call    cs:__stdio_common_vsprintf
.text:00000001800029D1                 test    eax, eax
.text:00000001800029D3                 cmovs   eax, ebx
.text:00000001800029D6                 add     rsp, 30h
.text:00000001800029DA                 pop     rdi
.text:00000001800029DB                 pop     rsi
.text:00000001800029DC                 pop     rbx
.text:00000001800029DD                 retn
.text:00000001800029DD sub_180002980   endp
.text:00000001800029DD
.text:00000001800029DD ; ---------------------------------------------------------------------------
.text:00000001800029DE algn_1800029DE:                         ; DATA XREF: .pdata:000000018001C2F4↓o
.text:00000001800029DE                 align 20h
.text:00000001800029E0
.text:00000001800029E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800029E0
.text:00000001800029E0
.text:00000001800029E0 ; __int64 __fastcall sub_1800029E0(char *Buffer, size_t BufferCount, char *Format)
.text:00000001800029E0 sub_1800029E0   proc near               ; CODE XREF: fsuipcw_start+81↑p
.text:00000001800029E0                                         ; fsuipcw_start+18A↑p ...
.text:00000001800029E0
.text:00000001800029E0 Locale          = qword ptr -38h
.text:00000001800029E0 ArgList         = qword ptr -30h
.text:00000001800029E0 arg_10          = qword ptr  18h
.text:00000001800029E0 arg_18          = byte ptr  20h
.text:00000001800029E0
.text:00000001800029E0                 mov     [rsp+arg_10], r8
.text:00000001800029E5                 mov     qword ptr [rsp+arg_18], r9
.text:00000001800029EA                 push    rbx
.text:00000001800029EB                 push    rbp
.text:00000001800029EC                 push    rsi
.text:00000001800029ED                 push    rdi
.text:00000001800029EE                 sub     rsp, 38h
.text:00000001800029F2                 mov     rsi, r8
.text:00000001800029F5                 lea     rbp, [rsp+58h+arg_18]
.text:00000001800029FA                 mov     rdi, rdx
.text:00000001800029FD                 mov     rbx, rcx
.text:0000000180002A00                 call    sub_180002960
.text:0000000180002A05                 mov     [rsp+58h+ArgList], rbp ; ArgList
.text:0000000180002A0A                 mov     r9, rsi         ; Format
.text:0000000180002A0D                 mov     r8, rdi         ; BufferCount
.text:0000000180002A10                 mov     [rsp+58h+Locale], 0 ; Locale
.text:0000000180002A19                 mov     rdx, rbx        ; Buffer
.text:0000000180002A1C                 mov     rcx, [rax]      ; Options
.text:0000000180002A1F                 call    cs:__stdio_common_vsprintf_s
.text:0000000180002A25                 test    eax, eax
.text:0000000180002A27                 mov     ecx, 0FFFFFFFFh
.text:0000000180002A2C                 cmovs   eax, ecx
.text:0000000180002A2F                 add     rsp, 38h
.text:0000000180002A33                 pop     rdi
.text:0000000180002A34                 pop     rsi
.text:0000000180002A35                 pop     rbp
.text:0000000180002A36                 pop     rbx
.text:0000000180002A37                 retn
.text:0000000180002A37 sub_1800029E0   endp
.text:0000000180002A37
.text:0000000180002A37 ; ---------------------------------------------------------------------------
.text:0000000180002A38 algn_180002A38:                         ; DATA XREF: .pdata:000000018001C300↓o
.text:0000000180002A38                 align 20h
.text:0000000180002A40
.text:0000000180002A40 ; =============== S U B R O U T I N E =======================================
.text:0000000180002A40
.text:0000000180002A40
.text:0000000180002A40 ; __int64 __fastcall sub_180002A40(char *Buffer, char *Format)
.text:0000000180002A40 sub_180002A40   proc near               ; CODE XREF: sub_180004D10+A7↓p
.text:0000000180002A40                                         ; DATA XREF: .pdata:000000018001C30C↓o
.text:0000000180002A40
.text:0000000180002A40 Locale          = qword ptr -28h
.text:0000000180002A40 ArgList         = qword ptr -20h
.text:0000000180002A40 arg_8           = qword ptr  10h
.text:0000000180002A40 arg_10          = byte ptr  18h
.text:0000000180002A40 arg_18          = qword ptr  20h
.text:0000000180002A40
.text:0000000180002A40                 mov     [rsp+arg_8], rdx
.text:0000000180002A45                 mov     qword ptr [rsp+arg_10], r8
.text:0000000180002A4A                 mov     [rsp+arg_18], r9
.text:0000000180002A4F                 push    rbx
.text:0000000180002A50                 push    rsi
.text:0000000180002A51                 push    rdi
.text:0000000180002A52                 sub     rsp, 30h
.text:0000000180002A56                 mov     rbx, rdx
.text:0000000180002A59                 lea     rsi, [rsp+48h+arg_10]
.text:0000000180002A5E                 mov     rdi, rcx
.text:0000000180002A61                 call    sub_180002970
.text:0000000180002A66                 mov     [rsp+48h+ArgList], rsi ; ArgList
.text:0000000180002A6B                 mov     r9, rbx         ; Format
.text:0000000180002A6E                 mov     r8, 0FFFFFFFFFFFFFFFFh ; BufferCount
.text:0000000180002A75                 mov     [rsp+48h+Locale], 0 ; Locale
.text:0000000180002A7E                 mov     rdx, rdi        ; Buffer
.text:0000000180002A81                 mov     rcx, [rax]
.text:0000000180002A84                 or      rcx, 1          ; Options
.text:0000000180002A88                 call    cs:__stdio_common_vsscanf
.text:0000000180002A8E                 add     rsp, 30h
.text:0000000180002A92                 pop     rdi
.text:0000000180002A93                 pop     rsi
.text:0000000180002A94                 pop     rbx
.text:0000000180002A95                 retn
.text:0000000180002A95 sub_180002A40   endp
.text:0000000180002A95
.text:0000000180002A95 ; ---------------------------------------------------------------------------
.text:0000000180002A96 algn_180002A96:                         ; DATA XREF: .pdata:000000018001C30C↓o
.text:0000000180002A96                 align 20h
.text:0000000180002AA0
.text:0000000180002AA0 ; =============== S U B R O U T I N E =======================================
.text:0000000180002AA0
.text:0000000180002AA0 ; Attributes: noreturn
.text:0000000180002AA0
.text:0000000180002AA0 sub_180002AA0   proc near               ; CODE XREF: sub_1800069B0:loc_180006B8D↓p
.text:0000000180002AA0                                         ; sub_18000ADD0:loc_18000B1B3↓p ...
.text:0000000180002AA0                 sub     rsp, 28h
.text:0000000180002AA4                 lea     rcx, aMapSetTooLong ; "map/set too long"
.text:0000000180002AAB                 call    cs:__imp_?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
.text:0000000180002AAB ; ---------------------------------------------------------------------------
.text:0000000180002AB1                 db 0CCh
.text:0000000180002AB1 sub_180002AA0   endp
.text:0000000180002AB1
.text:0000000180002AB2 algn_180002AB2:                         ; DATA XREF: .pdata:000000018001C318↓o
.text:0000000180002AB2                 align 20h
.text:0000000180002AC0
.text:0000000180002AC0 ; =============== S U B R O U T I N E =======================================
.text:0000000180002AC0
.text:0000000180002AC0 ; Attributes: noreturn
.text:0000000180002AC0
.text:0000000180002AC0 sub_180002AC0   proc near               ; CODE XREF: sub_180005650:loc_180005763↓p
.text:0000000180002AC0                                         ; sub_180005770:loc_18000587D↓p ...
.text:0000000180002AC0                 sub     rsp, 28h
.text:0000000180002AC4                 lea     rcx, aStringTooLong ; "string too long"
.text:0000000180002ACB                 call    cs:__imp_?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
.text:0000000180002ACB ; ---------------------------------------------------------------------------
.text:0000000180002AD1                 db 0CCh
.text:0000000180002AD1 sub_180002AC0   endp
.text:0000000180002AD1
.text:0000000180002AD2 algn_180002AD2:                         ; DATA XREF: .pdata:000000018001C324↓o
.text:0000000180002AD2                 align 20h
.text:0000000180002AE0
.text:0000000180002AE0 ; =============== S U B R O U T I N E =======================================
.text:0000000180002AE0
.text:0000000180002AE0
.text:0000000180002AE0 sub_180002AE0   proc near               ; CODE XREF: fsuipcw_init+4A↑p
.text:0000000180002AE0                                         ; DATA XREF: .pdata:000000018001C330↓o
.text:0000000180002AE0
.text:0000000180002AE0 arg_0           = qword ptr  8
.text:0000000180002AE0
.text:0000000180002AE0                 mov     [rsp+arg_0], rbx
.text:0000000180002AE5                 push    rdi
.text:0000000180002AE6                 sub     rsp, 20h
.text:0000000180002AEA                 xor     edi, edi
.text:0000000180002AEC                 mov     rbx, rcx
.text:0000000180002AEF                 mov     [rcx+2E8h], rdi
.text:0000000180002AF6                 mov     [rcx+2F0h], rdi
.text:0000000180002AFD                 mov     [rcx+2F8h], rdi
.text:0000000180002B04                 mov     [rcx+300h], rdi
.text:0000000180002B0B                 mov     [rcx+308h], rdi
.text:0000000180002B12                 mov     [rcx+310h], rdi
.text:0000000180002B19                 mov     [rcx+318h], rdi
.text:0000000180002B20                 mov     [rcx+320h], rdi
.text:0000000180002B27                 mov     [rcx+328h], rdi
.text:0000000180002B2E                 mov     [rcx+330h], rdi
.text:0000000180002B35                 mov     [rcx+338h], rdi
.text:0000000180002B3C                 mov     [rcx+340h], rdi
.text:0000000180002B43                 mov     [rcx+348h], rdi
.text:0000000180002B4A                 mov     dword ptr [rcx+358h], 0FFFFFFFFh
.text:0000000180002B54                 mov     [rcx+8], rdi
.text:0000000180002B58                 mov     [rcx+10h], rdi
.text:0000000180002B5C                 mov     [rcx+30h], rdi
.text:0000000180002B60                 mov     [rcx+38h], rdi
.text:0000000180002B64                 mov     [rcx+40h], rdi
.text:0000000180002B68                 mov     [rcx+400h], rdi
.text:0000000180002B6F                 mov     [rcx+408h], rdi
.text:0000000180002B76                 mov     [rcx+410h], rdi
.text:0000000180002B7D                 mov     [rcx], rdi
.text:0000000180002B80                 mov     [rcx+18h], rdi
.text:0000000180002B84                 mov     [rcx+20h], rdi
.text:0000000180002B88                 mov     [rcx+28h], edi
.text:0000000180002B8B                 add     rcx, 360h       ; lpCriticalSection
.text:0000000180002B92                 call    cs:InitializeCriticalSection
.text:0000000180002B98                 lea     rcx, [rbx+388h] ; lpCriticalSection
.text:0000000180002B9F                 call    cs:InitializeCriticalSection
.text:0000000180002BA5                 lea     rcx, [rbx+3B0h] ; lpCriticalSection
.text:0000000180002BAC                 call    cs:InitializeCriticalSection
.text:0000000180002BB2                 lea     rcx, [rbx+3D8h] ; lpCriticalSection
.text:0000000180002BB9                 call    cs:InitializeCriticalSection
.text:0000000180002BBF                 mov     dword ptr [rbx+358h], 0FFFFFFFFh
.text:0000000180002BC9                 mov     [rbx+350h], rdi
.text:0000000180002BD0                 mov     [rbx+48h], rdi
.text:0000000180002BD4                 mov     [rbx+50h], rdi
.text:0000000180002BD8                 mov     [rbx+58h], rdi
.text:0000000180002BDC                 mov     [rbx+60h], rdi
.text:0000000180002BE0                 mov     [rbx+68h], rdi
.text:0000000180002BE4                 mov     [rbx+70h], rdi
.text:0000000180002BE8                 mov     [rbx+78h], rdi
.text:0000000180002BEC                 mov     [rbx+80h], rdi
.text:0000000180002BF3                 mov     [rbx+88h], rdi
.text:0000000180002BFA                 mov     [rbx+90h], rdi
.text:0000000180002C01                 mov     [rbx+98h], rdi
.text:0000000180002C08                 mov     [rbx+0A0h], rdi
.text:0000000180002C0F                 mov     [rbx+0A8h], rdi
.text:0000000180002C16                 mov     [rbx+0B0h], rdi
.text:0000000180002C1D                 mov     [rbx+0B8h], rdi
.text:0000000180002C24                 mov     [rbx+0C0h], rdi
.text:0000000180002C2B                 mov     [rbx+0C8h], rdi
.text:0000000180002C32                 mov     [rbx+0D0h], rdi
.text:0000000180002C39                 mov     [rbx+0D8h], rdi
.text:0000000180002C40                 mov     [rbx+0E0h], rdi
.text:0000000180002C47                 mov     [rbx+0E8h], rdi
.text:0000000180002C4E                 mov     [rbx+0F0h], rdi
.text:0000000180002C55                 mov     [rbx+0F8h], rdi
.text:0000000180002C5C                 mov     [rbx+100h], rdi
.text:0000000180002C63                 mov     [rbx+108h], rdi
.text:0000000180002C6A                 mov     [rbx+110h], rdi
.text:0000000180002C71                 mov     [rbx+118h], rdi
.text:0000000180002C78                 mov     [rbx+120h], rdi
.text:0000000180002C7F                 mov     [rbx+128h], rdi
.text:0000000180002C86                 mov     [rbx+130h], rdi
.text:0000000180002C8D                 mov     [rbx+138h], rdi
.text:0000000180002C94                 mov     [rbx+140h], rdi
.text:0000000180002C9B                 mov     [rbx+148h], rdi
.text:0000000180002CA2                 mov     [rbx+150h], rdi
.text:0000000180002CA9                 mov     [rbx+158h], rdi
.text:0000000180002CB0                 mov     [rbx+160h], rdi
.text:0000000180002CB7                 mov     [rbx+168h], rdi
.text:0000000180002CBE                 mov     [rbx+170h], rdi
.text:0000000180002CC5                 mov     [rbx+178h], rdi
.text:0000000180002CCC                 mov     [rbx+180h], rdi
.text:0000000180002CD3                 mov     [rbx+188h], rdi
.text:0000000180002CDA                 mov     [rbx+190h], rdi
.text:0000000180002CE1                 mov     [rbx+198h], rdi
.text:0000000180002CE8                 mov     [rbx+1A0h], rdi
.text:0000000180002CEF                 mov     rax, rbx
.text:0000000180002CF2                 mov     [rbx+1A8h], rdi
.text:0000000180002CF9                 mov     [rbx+1B0h], rdi
.text:0000000180002D00                 mov     [rbx+1B8h], rdi
.text:0000000180002D07                 mov     [rbx+1C0h], rdi
.text:0000000180002D0E                 mov     [rbx+1C8h], rdi
.text:0000000180002D15                 mov     [rbx+1D0h], rdi
.text:0000000180002D1C                 mov     [rbx+1D8h], rdi
.text:0000000180002D23                 mov     [rbx+1E0h], rdi
.text:0000000180002D2A                 mov     [rbx+1E8h], rdi
.text:0000000180002D31                 mov     [rbx+1F0h], rdi
.text:0000000180002D38                 mov     [rbx+1F8h], rdi
.text:0000000180002D3F                 mov     [rbx+200h], rdi
.text:0000000180002D46                 mov     [rbx+208h], rdi
.text:0000000180002D4D                 mov     [rbx+210h], rdi
.text:0000000180002D54                 mov     [rbx+218h], rdi
.text:0000000180002D5B                 mov     [rbx+220h], rdi
.text:0000000180002D62                 mov     [rbx+228h], rdi
.text:0000000180002D69                 mov     [rbx+230h], rdi
.text:0000000180002D70                 mov     [rbx+238h], rdi
.text:0000000180002D77                 mov     [rbx+240h], rdi
.text:0000000180002D7E                 mov     [rbx+248h], rdi
.text:0000000180002D85                 mov     [rbx+250h], rdi
.text:0000000180002D8C                 mov     [rbx+258h], rdi
.text:0000000180002D93                 mov     [rbx+260h], rdi
.text:0000000180002D9A                 mov     [rbx+268h], rdi
.text:0000000180002DA1                 mov     [rbx+270h], rdi
.text:0000000180002DA8                 mov     [rbx+278h], rdi
.text:0000000180002DAF                 mov     [rbx+280h], rdi
.text:0000000180002DB6                 mov     [rbx+288h], rdi
.text:0000000180002DBD                 mov     [rbx+290h], rdi
.text:0000000180002DC4                 mov     [rbx+298h], rdi
.text:0000000180002DCB                 mov     [rbx+2A0h], rdi
.text:0000000180002DD2                 mov     [rbx+2A8h], rdi
.text:0000000180002DD9                 mov     [rbx+2B0h], rdi
.text:0000000180002DE0                 mov     [rbx+2B8h], rdi
.text:0000000180002DE7                 mov     [rbx+2C0h], rdi
.text:0000000180002DEE                 mov     [rbx+2C8h], rdi
.text:0000000180002DF5                 mov     [rbx+2D0h], rdi
.text:0000000180002DFC                 mov     [rbx+2D8h], rdi
.text:0000000180002E03                 mov     [rbx+2E0h], rdi
.text:0000000180002E0A                 mov     rbx, [rsp+28h+arg_0]
.text:0000000180002E0F                 add     rsp, 20h
.text:0000000180002E13                 pop     rdi
.text:0000000180002E14                 retn
.text:0000000180002E14 sub_180002AE0   endp
.text:0000000180002E14
.text:0000000180002E14 ; ---------------------------------------------------------------------------
.text:0000000180002E15 algn_180002E15:                         ; DATA XREF: .pdata:000000018001C330↓o
.text:0000000180002E15                 align 20h
.text:0000000180002E20
.text:0000000180002E20 ; =============== S U B R O U T I N E =======================================
.text:0000000180002E20
.text:0000000180002E20
.text:0000000180002E20 ; __int64 __fastcall sub_180002E20(PVOID Parameter)
.text:0000000180002E20 sub_180002E20   proc near               ; CODE XREF: StartAddress↓j
.text:0000000180002E20                                         ; DATA XREF: .pdata:000000018001C33C↓o
.text:0000000180002E20
.text:0000000180002E20 DueTime         = dword ptr -48h
.text:0000000180002E20 Period          = dword ptr -40h
.text:0000000180002E20 Flags           = dword ptr -38h
.text:0000000180002E20 var_28          = xmmword ptr -28h
.text:0000000180002E20 var_18          = byte ptr -18h
.text:0000000180002E20 arg_0           = qword ptr  8
.text:0000000180002E20 arg_8           = qword ptr  10h
.text:0000000180002E20 arg_10          = qword ptr  18h
.text:0000000180002E20 arg_18          = qword ptr  20h
.text:0000000180002E20
.text:0000000180002E20 ; FUNCTION CHUNK AT .text:0000000180011320 SIZE 0000002D BYTES
.text:0000000180002E20
.text:0000000180002E20 ; __unwind { // __CxxFrameHandler4
.text:0000000180002E20                 mov     [rsp+arg_10], rbx
.text:0000000180002E25                 mov     [rsp+arg_18], rbp
.text:0000000180002E2A                 push    rsi
.text:0000000180002E2B                 push    rdi
.text:0000000180002E2C                 push    r14
.text:0000000180002E2E                 sub     rsp, 50h
.text:0000000180002E32                 movaps  [rsp+68h+var_28], xmm6
.text:0000000180002E37                 mov     r14, rcx
.text:0000000180002E3A                 mov     cs:dword_180019044, 1
.text:0000000180002E44                 lea     r8, aFsuipcSetlvar ; "FSUIPC.SetLvar"
.text:0000000180002E4B                 mov     edx, 1
.text:0000000180002E50                 mov     rcx, [rcx]
.text:0000000180002E53                 call    sub_18000BEB0
.text:0000000180002E58                 lea     r8, aFsuipcSethvar ; "FSUIPC.SetHvar"
.text:0000000180002E5F                 mov     edx, 2
.text:0000000180002E64                 mov     rcx, [r14]
.text:0000000180002E67                 call    sub_18000BEB0
.text:0000000180002E6C                 lea     r8, aFsuipcUpdatecd ; "FSUIPC.UpdateCDAs"
.text:0000000180002E73                 mov     edx, 3
.text:0000000180002E78                 mov     rcx, [r14]
.text:0000000180002E7B                 call    sub_18000BEB0
.text:0000000180002E80                 lea     r8, aFsuipcListlvar ; "FSUIPC.ListLvars"
.text:0000000180002E87                 mov     edx, 4
.text:0000000180002E8C                 mov     rcx, [r14]
.text:0000000180002E8F                 call    sub_18000BEB0
.text:0000000180002E94                 lea     r8, aFsuipcReload ; "FSUIPC.Reload"
.text:0000000180002E9B                 mov     edx, 5
.text:0000000180002EA0                 mov     rcx, [r14]
.text:0000000180002EA3                 call    sub_18000BEB0
.text:0000000180002EA8                 lea     r8, aFsuipcSetlvars ; "FSUIPC.SetLvarS"
.text:0000000180002EAF                 mov     edx, 6
.text:0000000180002EB4                 mov     rcx, [r14]
.text:0000000180002EB7                 call    sub_18000BEB0
.text:0000000180002EBC                 mov     edx, 1
.text:0000000180002EC1                 mov     r8d, edx
.text:0000000180002EC4                 mov     rcx, [r14]
.text:0000000180002EC7                 call    sub_18000C3E0
.text:0000000180002ECC                 mov     r8d, 1
.text:0000000180002ED2                 lea     rdx, aFsuipcConfig ; "FSUIPC_config"
.text:0000000180002ED9                 mov     rcx, [r14]
.text:0000000180002EDC                 call    sub_18000BD90
.text:0000000180002EE1                 test    eax, eax
.text:0000000180002EE3                 jns     short loc_180002EF9
.text:0000000180002EE5                 call    sub_180007430
.text:0000000180002EEA                 mov     rcx, rax
.text:0000000180002EED                 lea     rdx, aSimconnectMapc ; "SimConnect_MapClientDataNameToID failed"...
.text:0000000180002EF4                 call    sub_180007930
.text:0000000180002EF9
.text:0000000180002EF9 loc_180002EF9:                          ; CODE XREF: sub_180002E20+C3↑j
.text:0000000180002EF9                 mov     edx, cs:dword_180019044
.text:0000000180002EFF                 lea     eax, [rdx+1]
.text:0000000180002F02                 mov     cs:dword_180019044, eax
.text:0000000180002F08                 xor     ebp, ebp
.text:0000000180002F0A                 mov     [rsp+68h+Period], ebp
.text:0000000180002F0E                 xorps   xmm6, xmm6
.text:0000000180002F11                 movss   [rsp+68h+DueTime], xmm6
.text:0000000180002F17                 mov     r9d, 17A8h
.text:0000000180002F1D                 mov     r8d, 0FFFFFFFFh
.text:0000000180002F23                 mov     rcx, [r14]
.text:0000000180002F26                 call    sub_18000B9C0
.text:0000000180002F2B                 test    eax, eax
.text:0000000180002F2D                 jns     short loc_180002F43
.text:0000000180002F2F                 call    sub_180007430
.text:0000000180002F34                 mov     rcx, rax
.text:0000000180002F37                 lea     rdx, aSimconnectAddt ; "SimConnect_AddToClientDataDefinition fa"...
.text:0000000180002F3E                 call    sub_180007930
.text:0000000180002F43
.text:0000000180002F43 loc_180002F43:                          ; CODE XREF: sub_180002E20+10D↑j
.text:0000000180002F43                 mov     r8d, 2
.text:0000000180002F49                 lea     rdx, aFsuipcSetlvar_0 ; "FSUIPC_SetLvar"
.text:0000000180002F50                 mov     rcx, [r14]
.text:0000000180002F53                 call    sub_18000BD90
.text:0000000180002F58                 test    eax, eax
.text:0000000180002F5A                 jns     short loc_180002F70
.text:0000000180002F5C                 call    sub_180007430
.text:0000000180002F61                 mov     rcx, rax
.text:0000000180002F64                 lea     rdx, aSimconnectMapc ; "SimConnect_MapClientDataNameToID failed"...
.text:0000000180002F6B                 call    sub_180007930
.text:0000000180002F70
.text:0000000180002F70 loc_180002F70:                          ; CODE XREF: sub_180002E20+13A↑j
.text:0000000180002F70                 mov     edx, cs:dword_180019044
.text:0000000180002F76                 lea     eax, [rdx+1]
.text:0000000180002F79                 mov     cs:dword_180019044, eax
.text:0000000180002F7F                 mov     [rsp+68h+Period], ebp
.text:0000000180002F83                 movss   [rsp+68h+DueTime], xmm6
.text:0000000180002F89                 mov     r9d, 0Ch
.text:0000000180002F8F                 mov     r8d, 0FFFFFFFFh
.text:0000000180002F95                 mov     rcx, [r14]
.text:0000000180002F98                 call    sub_18000B9C0
.text:0000000180002F9D                 test    eax, eax
.text:0000000180002F9F                 jns     short loc_180002FB5
.text:0000000180002FA1                 call    sub_180007430
.text:0000000180002FA6                 mov     rcx, rax
.text:0000000180002FA9                 lea     rdx, aSimconnectAddt ; "SimConnect_AddToClientDataDefinition fa"...
.text:0000000180002FB0                 call    sub_180007930
.text:0000000180002FB5
.text:0000000180002FB5 loc_180002FB5:                          ; CODE XREF: sub_180002E20+17F↑j
.text:0000000180002FB5                 mov     r8d, 3
.text:0000000180002FBB                 lea     rdx, aFsuipcCalccode ; "FSUIPC_CalcCode"
.text:0000000180002FC2                 mov     rcx, [r14]
.text:0000000180002FC5                 call    sub_18000BD90
.text:0000000180002FCA                 test    eax, eax
.text:0000000180002FCC                 jns     short loc_180002FE2
.text:0000000180002FCE                 call    sub_180007430
.text:0000000180002FD3                 mov     rcx, rax
.text:0000000180002FD6                 lea     rdx, aSimconnectMapc ; "SimConnect_MapClientDataNameToID failed"...
.text:0000000180002FDD                 call    sub_180007930
.text:0000000180002FE2
.text:0000000180002FE2 loc_180002FE2:                          ; CODE XREF: sub_180002E20+1AC↑j
.text:0000000180002FE2                 mov     edx, cs:dword_180019044
.text:0000000180002FE8                 lea     eax, [rdx+1]
.text:0000000180002FEB                 mov     cs:dword_180019044, eax
.text:0000000180002FF1                 mov     [rsp+68h+Period], ebp
.text:0000000180002FF5                 movss   [rsp+68h+DueTime], xmm6
.text:0000000180002FFB                 mov     r9d, 400h
.text:0000000180003001                 mov     r8d, 0FFFFFFFFh
.text:0000000180003007                 mov     rcx, [r14]
.text:000000018000300A                 call    sub_18000B9C0
.text:000000018000300F                 test    eax, eax
.text:0000000180003011                 jns     short loc_180003027
.text:0000000180003013                 call    sub_180007430
.text:0000000180003018                 mov     rcx, rax
.text:000000018000301B                 lea     rdx, aSimconnectAddt ; "SimConnect_AddToClientDataDefinition fa"...
.text:0000000180003022                 call    sub_180007930
.text:0000000180003027
.text:0000000180003027 loc_180003027:                          ; CODE XREF: sub_180002E20+1F1↑j
.text:0000000180003027                 mov     ecx, 30h ; '0'  ; Size
.text:000000018000302C                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180003031                 mov     rsi, rax
.text:0000000180003034                 mov     [rsp+68h+arg_0], rax
.text:0000000180003039                 xorps   xmm0, xmm0
.text:000000018000303C                 movups  xmmword ptr [rax], xmm0
.text:000000018000303F                 movups  xmmword ptr [rax+10h], xmm0
.text:0000000180003043                 movups  xmmword ptr [rax+20h], xmm0
.text:0000000180003047                 mov     rdi, [r14]
.text:000000018000304A                 lea     rbx, [rax+8]
.text:000000018000304E                 mov     [rsp+68h+arg_8], rbx
.text:0000000180003053                 mov     [rbx], rbp
.text:0000000180003056                 mov     [rbx+8], rbp
.text:000000018000305A                 mov     ecx, 48h ; 'H'  ; Size
.text:000000018000305F                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180003064                 mov     [rax], rax
.text:0000000180003067                 mov     [rax+8], rax
.text:000000018000306B                 mov     [rax+10h], rax
.text:000000018000306F                 mov     word ptr [rax+18h], 101h
.text:0000000180003075                 mov     [rbx], rax
.text:0000000180003078                 lea     rbx, [rsi+18h]
.text:000000018000307C                 mov     [rsp+68h+arg_8], rbx
.text:0000000180003081                 mov     [rbx], rbp
.text:0000000180003084                 mov     [rbx+8], rbp
.text:0000000180003088                 mov     ecx, 48h ; 'H'  ; Size
.text:000000018000308D                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180003092                 mov     [rax], rax
.text:0000000180003095                 mov     [rax+8], rax
.text:0000000180003099                 mov     [rax+10h], rax
.text:000000018000309D                 mov     word ptr [rax+18h], 101h
.text:00000001800030A3                 mov     [rbx], rax
.text:00000001800030A6                 mov     dword ptr [rsi], 4
.text:00000001800030AC                 mov     [rsi+28h], rdi
.text:00000001800030B0                 mov     [r14+350h], rsi
.text:00000001800030B7                 call    sub_180007430
.text:00000001800030BC                 mov     rcx, rax
.text:00000001800030BF                 lea     rdx, aStartingConfig ; "Starting config request timer..."
.text:00000001800030C6                 call    sub_180007F50
.text:00000001800030CB                 lea     rcx, [r14+30h]  ; phNewTimer
.text:00000001800030CF                 mov     [rsp+68h+Flags], ebp ; Flags
.text:00000001800030D3                 mov     [rsp+68h+Period], 3E8h ; Period
.text:00000001800030DB                 mov     [rsp+68h+DueTime], ebp ; DueTime
.text:00000001800030DF                 mov     r9, r14         ; Parameter
.text:00000001800030E2                 lea     r8, Callback    ; Callback
.text:00000001800030E9                 xor     edx, edx        ; TimerQueue
.text:00000001800030EB                 call    cs:CreateTimerQueueTimer
.text:00000001800030F1                 call    sub_180007430
.text:00000001800030F6                 mov     rcx, rax
.text:00000001800030F9                 lea     rdx, aStartingMessag ; "Starting message loop..."
.text:0000000180003100                 call    sub_180007D40
.text:0000000180003105
.text:0000000180003105 loc_180003105:                          ; CODE XREF: sub_180002E20+304↓j
.text:0000000180003105                                         ; sub_180002E20+368↓j
.text:0000000180003105                 cmp     dword ptr [r14+18h], 0
.text:000000018000310A                 jnz     short loc_18000313A
.text:000000018000310C                 mov     edx, 1F4h       ; dwMilliseconds
.text:0000000180003111                 mov     rcx, [r14+10h]  ; hHandle
.text:0000000180003115                 call    cs:WaitForSingleObject
.text:000000018000311B                 test    eax, eax
.text:000000018000311D                 jz      short loc_180003176
.text:000000018000311F                 cmp     eax, 102h
.text:0000000180003124                 jz      short loc_180003105
.text:0000000180003126                 call    sub_180007430
.text:000000018000312B                 mov     rcx, rax
.text:000000018000312E                 lea     rdx, aWaitforsingleo ; "WaitForSingleObject returned with error"...
.text:0000000180003135                 call    sub_180007930
.text:000000018000313A
.text:000000018000313A loc_18000313A:                          ; CODE XREF: sub_180002E20+2EA↑j
.text:000000018000313A                 call    sub_180007430
.text:000000018000313F                 mov     rcx, rax
.text:0000000180003142                 lea     rdx, aMessageLoopFin ; "Message loop finished - calling SimConn"...
.text:0000000180003149                 call    sub_180007D40
.text:000000018000314E                 mov     rcx, r14
.text:0000000180003151                 call    sub_180003260
.text:0000000180003156                 mov     [r14+8], rbp
.text:000000018000315A                 xor     eax, eax
.text:000000018000315C                 lea     r11, [rsp+68h+var_18]
.text:0000000180003161                 mov     rbx, [r11+30h]
.text:0000000180003165                 mov     rbp, [r11+38h]
.text:0000000180003169                 movaps  xmm6, [rsp+68h+var_28]
.text:000000018000316E                 mov     rsp, r11
.text:0000000180003171                 pop     r14
.text:0000000180003173                 pop     rdi
.text:0000000180003174                 pop     rsi
.text:0000000180003175                 retn
.text:0000000180003176 ; ---------------------------------------------------------------------------
.text:0000000180003176
.text:0000000180003176 loc_180003176:                          ; CODE XREF: sub_180002E20+2FD↑j
.text:0000000180003176                 mov     r8, r14
.text:0000000180003179                 lea     rdx, fsuipcw_MyDispatchProc
.text:0000000180003180                 mov     rcx, [r14]
.text:0000000180003183                 call    sub_18000BAD0
.text:0000000180003188                 jmp     loc_180003105
.text:0000000180003188 ; } // starts at 180002E20
.text:0000000180003188 sub_180002E20   endp
.text:0000000180003188
.text:0000000180003188 ; ---------------------------------------------------------------------------
.text:000000018000318D algn_18000318D:                         ; DATA XREF: .pdata:000000018001C33C↓o
.text:000000018000318D                 align 10h
.text:0000000180003190
.text:0000000180003190 ; =============== S U B R O U T I N E =======================================
.text:0000000180003190
.text:0000000180003190
.text:0000000180003190 ; void __stdcall Callback(PVOID, BOOLEAN)
.text:0000000180003190 Callback        proc near               ; DATA XREF: sub_180002E20+2C2↑o
.text:0000000180003190                                         ; sub_1800034B0+3B4↓o ...
.text:0000000180003190
.text:0000000180003190 var_38          = dword ptr -38h
.text:0000000180003190 var_30          = dword ptr -30h
.text:0000000180003190 var_28          = dword ptr -28h
.text:0000000180003190 var_20          = dword ptr -20h
.text:0000000180003190 var_18          = dword ptr -18h
.text:0000000180003190
.text:0000000180003190                 sub     rsp, 58h
.text:0000000180003194                 mov     rcx, [rcx]
.text:0000000180003197                 xor     eax, eax
.text:0000000180003199                 mov     [rsp+58h+var_18], eax
.text:000000018000319D                 mov     edx, 1
.text:00000001800031A2                 mov     [rsp+58h+var_20], eax
.text:00000001800031A6                 mov     r9d, edx
.text:00000001800031A9                 mov     [rsp+58h+var_28], eax
.text:00000001800031AD                 mov     [rsp+58h+var_30], eax
.text:00000001800031B1                 lea     r8d, [rax+9]
.text:00000001800031B5                 mov     [rsp+58h+var_38], 1
.text:00000001800031BD                 call    sub_18000C180
.text:00000001800031C2                 test    eax, eax
.text:00000001800031C4                 jns     short loc_1800031DE
.text:00000001800031C6                 call    sub_180007430
.text:00000001800031CB                 mov     rcx, rax
.text:00000001800031CE                 lea     rdx, aSimconnectRequ ; "SimConnect_RequestClientData for config"...
.text:00000001800031D5                 add     rsp, 58h
.text:00000001800031D9                 jmp     sub_180007930
.text:00000001800031DE ; ---------------------------------------------------------------------------
.text:00000001800031DE
.text:00000001800031DE loc_1800031DE:                          ; CODE XREF: Callback+34↑j
.text:00000001800031DE                 call    sub_180007430
.text:00000001800031E3                 mov     rcx, rax
.text:00000001800031E6                 lea     rdx, aConfigDataRequ ; "Config data requested..."
.text:00000001800031ED                 add     rsp, 58h
.text:00000001800031F1                 jmp     sub_180007D40
.text:00000001800031F1 Callback        endp
.text:00000001800031F1
.text:00000001800031F1 ; ---------------------------------------------------------------------------
.text:00000001800031F6 algn_1800031F6:                         ; DATA XREF: .pdata:000000018001C348↓o
.text:00000001800031F6                 align 20h
.text:0000000180003200
.text:0000000180003200 ; =============== S U B R O U T I N E =======================================
.text:0000000180003200
.text:0000000180003200
.text:0000000180003200 ; void __stdcall sub_180003200(PVOID, BOOLEAN)
.text:0000000180003200 sub_180003200   proc near               ; DATA XREF: sub_1800034B0+8F7↓o
.text:0000000180003200                                         ; .pdata:000000018001C354↓o
.text:0000000180003200
.text:0000000180003200 var_18          = dword ptr -18h
.text:0000000180003200 var_10          = dword ptr -10h
.text:0000000180003200
.text:0000000180003200                 sub     rsp, 38h
.text:0000000180003204                 mov     rcx, [rcx]
.text:0000000180003207                 xor     r9d, r9d
.text:000000018000320A                 mov     [rsp+38h+var_10], 10h
.text:0000000180003212                 xor     edx, edx
.text:0000000180003214                 mov     [rsp+38h+var_18], 1
.text:000000018000321C                 lea     r8d, [r9+3]
.text:0000000180003220                 call    sub_18000C4B0
.text:0000000180003225                 test    eax, eax
.text:0000000180003227                 jns     short loc_180003241
.text:0000000180003229                 call    sub_180007430
.text:000000018000322E                 mov     rcx, rax
.text:0000000180003231                 lea     rdx, aSimconnectRequ_0 ; "SimConnect_RequestClientData for lvars "...
.text:0000000180003238                 add     rsp, 38h
.text:000000018000323C                 jmp     sub_180007930
.text:0000000180003241 ; ---------------------------------------------------------------------------
.text:0000000180003241
.text:0000000180003241 loc_180003241:                          ; CODE XREF: sub_180003200+27↑j
.text:0000000180003241                 add     rsp, 38h
.text:0000000180003245                 retn
.text:0000000180003245 sub_180003200   endp
.text:0000000180003245
.text:0000000180003245 ; ---------------------------------------------------------------------------
.text:0000000180003246 algn_180003246:                         ; DATA XREF: .pdata:000000018001C354↓o
.text:0000000180003246                 align 10h
.text:0000000180003250
.text:0000000180003250 ; =============== S U B R O U T I N E =======================================
.text:0000000180003250
.text:0000000180003250 ; Attributes: thunk
.text:0000000180003250
.text:0000000180003250 ; DWORD __stdcall StartAddress(LPVOID lpThreadParameter)
.text:0000000180003250 StartAddress    proc near               ; DATA XREF: fsuipcw_start+10C↑o
.text:0000000180003250                 jmp     sub_180002E20
.text:0000000180003250 StartAddress    endp
.text:0000000180003250
.text:0000000180003250 ; ---------------------------------------------------------------------------
.text:0000000180003255                 align 20h
.text:0000000180003260
.text:0000000180003260 ; =============== S U B R O U T I N E =======================================
.text:0000000180003260
.text:0000000180003260
.text:0000000180003260 sub_180003260   proc near               ; CODE XREF: fsuipcw_start+145↑p
.text:0000000180003260                                         ; sub_180002E20+331↑p
.text:0000000180003260                                         ; DATA XREF: ...
.text:0000000180003260
.text:0000000180003260 Src             = byte ptr -17D8h
.text:0000000180003260 var_28          = qword ptr -28h
.text:0000000180003260 arg_8           = qword ptr  10h
.text:0000000180003260 arg_10          = qword ptr  18h
.text:0000000180003260
.text:0000000180003260 ; __unwind { // __GSHandlerCheck
.text:0000000180003260                 mov     [rsp+arg_10], rbp
.text:0000000180003265                 push    rsi
.text:0000000180003266                 push    rdi
.text:0000000180003267                 push    r14
.text:0000000180003269                 mov     eax, 17E0h
.text:000000018000326E                 call    __alloca_probe
.text:0000000180003273                 sub     rsp, rax
.text:0000000180003276                 mov     rax, cs:__security_cookie
.text:000000018000327D                 xor     rax, rsp
.text:0000000180003280                 mov     [rsp+17F8h+var_28], rax
.text:0000000180003288                 mov     rdx, [rcx+40h]  ; Timer
.text:000000018000328C                 xor     r14d, r14d
.text:000000018000328F                 mov     rsi, rcx
.text:0000000180003292                 test    rdx, rdx
.text:0000000180003295                 jz      short loc_1800032A6
.text:0000000180003297                 xor     r8d, r8d        ; CompletionEvent
.text:000000018000329A                 xor     ecx, ecx        ; TimerQueue
.text:000000018000329C                 call    cs:DeleteTimerQueueTimer
.text:00000001800032A2                 mov     [rsi+40h], r14
.text:00000001800032A6
.text:00000001800032A6 loc_1800032A6:                          ; CODE XREF: sub_180003260+35↑j
.text:00000001800032A6                 mov     rdx, [rsi+30h]  ; Timer
.text:00000001800032AA                 test    rdx, rdx
.text:00000001800032AD                 jz      short loc_1800032BE
.text:00000001800032AF                 xor     r8d, r8d        ; CompletionEvent
.text:00000001800032B2                 xor     ecx, ecx        ; TimerQueue
.text:00000001800032B4                 call    cs:DeleteTimerQueueTimer
.text:00000001800032BA                 mov     [rsi+30h], r14
.text:00000001800032BE
.text:00000001800032BE loc_1800032BE:                          ; CODE XREF: sub_180003260+4D↑j
.text:00000001800032BE                 mov     ebp, r14d
.text:00000001800032C1                 mov     [rsp+17F8h+arg_8], rbx
.text:00000001800032C9                 lea     rdi, [rsi+298h]
.text:00000001800032D0
.text:00000001800032D0 loc_1800032D0:                          ; CODE XREF: sub_180003260+123↓j
.text:00000001800032D0                 mov     rax, [rdi]
.text:00000001800032D3                 test    rax, rax
.text:00000001800032D6                 jz      loc_18000337A
.text:00000001800032DC                 mov     edx, [rax+2Ch]
.text:00000001800032DF                 mov     rcx, [rsi]
.text:00000001800032E2                 call    sub_18000BB20
.text:00000001800032E7                 mov     rbx, [rdi]
.text:00000001800032EA                 test    eax, eax
.text:00000001800032EC                 jns     short loc_18000331C
.text:00000001800032EE                 mov     r9d, [rbx+20h]
.text:00000001800032F2                 lea     r8, aErrorClearingL ; "Error clearing lvar value data definiti"...
.text:00000001800032F9                 mov     edx, 100h       ; BufferCount
.text:00000001800032FE                 lea     rcx, [rsp+17F8h+Src] ; Buffer
.text:0000000180003303                 call    sub_1800029E0
.text:0000000180003308                 call    sub_180007430
.text:000000018000330D                 mov     rcx, rax
.text:0000000180003310                 lea     rdx, [rsp+17F8h+Src]
.text:0000000180003315                 call    sub_180007930
.text:000000018000331A                 jmp     short loc_18000337A
.text:000000018000331C ; ---------------------------------------------------------------------------
.text:000000018000331C
.text:000000018000331C loc_18000331C:                          ; CODE XREF: sub_180003260+8C↑j
.text:000000018000331C                 test    rbx, rbx
.text:000000018000331F                 jz      short loc_180003377
.text:0000000180003321                 mov     rdx, [rbx+18h]
.text:0000000180003325                 cmp     rdx, 10h
.text:0000000180003329                 jb      short loc_18000335B
.text:000000018000332B                 mov     rcx, [rbx]
.text:000000018000332E                 inc     rdx
.text:0000000180003331                 cmp     rdx, 1000h
.text:0000000180003338                 jb      short loc_180003356
.text:000000018000333A                 mov     r8, [rcx-8]
.text:000000018000333E                 add     rdx, 27h ; '''
.text:0000000180003342                 sub     rcx, r8
.text:0000000180003345                 lea     rax, [rcx-8]
.text:0000000180003349                 cmp     rax, 1Fh
.text:000000018000334D                 ja      loc_1800034A8
.text:0000000180003353                 mov     rcx, r8         ; Block
.text:0000000180003356
.text:0000000180003356 loc_180003356:                          ; CODE XREF: sub_180003260+D8↑j
.text:0000000180003356                 call    j_j_free
.text:000000018000335B
.text:000000018000335B loc_18000335B:                          ; CODE XREF: sub_180003260+C9↑j
.text:000000018000335B                 mov     edx, 38h ; '8'
.text:0000000180003360                 mov     [rbx+10h], r14
.text:0000000180003364                 mov     rcx, rbx        ; Block
.text:0000000180003367                 mov     qword ptr [rbx+18h], 0Fh
.text:000000018000336F                 mov     [rbx], r14b
.text:0000000180003372                 call    j_j_free
.text:0000000180003377
.text:0000000180003377 loc_180003377:                          ; CODE XREF: sub_180003260+BF↑j
.text:0000000180003377                 mov     [rdi], r14
.text:000000018000337A
.text:000000018000337A loc_18000337A:                          ; CODE XREF: sub_180003260+76↑j
.text:000000018000337A                                         ; sub_180003260+BA↑j
.text:000000018000337A                 inc     ebp
.text:000000018000337C                 add     rdi, 8
.text:0000000180003380                 cmp     ebp, 0Ah
.text:0000000180003383                 jl      loc_1800032D0
.text:0000000180003389                 mov     rdi, [rsi+350h]
.text:0000000180003390                 test    rdi, rdi
.text:0000000180003393                 jz      short loc_1800033E8
.text:0000000180003395                 mov     r8, [rdi+18h]
.text:0000000180003399                 lea     rdx, [rdi+18h]
.text:000000018000339D                 lea     rcx, [rdi+18h]
.text:00000001800033A1                 mov     r8, [r8+8]
.text:00000001800033A5                 call    sub_1800028A0
.text:00000001800033AA                 mov     rcx, [rdi+18h]  ; Block
.text:00000001800033AE                 mov     edx, 48h ; 'H'
.text:00000001800033B3                 call    j_j_free
.text:00000001800033B8                 mov     r8, [rdi+8]
.text:00000001800033BC                 lea     rdx, [rdi+8]
.text:00000001800033C0                 lea     rcx, [rdi+8]
.text:00000001800033C4                 mov     r8, [r8+8]
.text:00000001800033C8                 call    sub_1800028A0
.text:00000001800033CD                 mov     rcx, [rdi+8]    ; Block
.text:00000001800033D1                 mov     edx, 48h ; 'H'
.text:00000001800033D6                 call    j_j_free
.text:00000001800033DB                 mov     edx, 30h ; '0'
.text:00000001800033E0                 mov     rcx, rdi        ; Block
.text:00000001800033E3                 call    j_j_free
.text:00000001800033E8
.text:00000001800033E8 loc_1800033E8:                          ; CODE XREF: sub_180003260+133↑j
.text:00000001800033E8                 mov     rcx, [rsi]
.text:00000001800033EB                 test    rcx, rcx
.text:00000001800033EE                 jz      short loc_180003442
.text:00000001800033F0                 mov     edx, 1
.text:00000001800033F5                 call    sub_18000BB20
.text:00000001800033FA                 test    eax, eax
.text:00000001800033FC                 jns     short loc_180003426
.text:00000001800033FE                 lea     r8, aErrorClearingC ; "Error clearing config data definition"
.text:0000000180003405                 mov     edx, 100h       ; BufferCount
.text:000000018000340A                 lea     rcx, [rsp+17F8h+Src] ; Buffer
.text:000000018000340F                 call    sub_1800029E0
.text:0000000180003414                 call    sub_180007430
.text:0000000180003419                 mov     rcx, rax
.text:000000018000341C                 lea     rdx, [rsp+17F8h+Src]
.text:0000000180003421                 call    sub_180007930
.text:0000000180003426
.text:0000000180003426 loc_180003426:                          ; CODE XREF: sub_180003260+19C↑j
.text:0000000180003426                 mov     rcx, [rsi]
.text:0000000180003429                 call    sub_18000BC10
.text:000000018000342E                 call    sub_180007430
.text:0000000180003433                 mov     rcx, rax
.text:0000000180003436                 lea     rdx, aSimconnectClos ; "SimConnect_Close done"
.text:000000018000343D                 call    sub_180007B30
.text:0000000180003442
.text:0000000180003442 loc_180003442:                          ; CODE XREF: sub_180003260+18E↑j
.text:0000000180003442                 mov     rcx, [rsi+10h]  ; hObject
.text:0000000180003446                 mov     [rsi], r14
.text:0000000180003449                 call    cs:CloseHandle
.text:000000018000344F                 xor     edx, edx        ; Val
.text:0000000180003451                 mov     [rsi+10h], r14
.text:0000000180003455                 mov     r8d, 17A8h      ; Size
.text:000000018000345B                 lea     rcx, [rsp+17F8h+Src] ; void *
.text:0000000180003460                 call    memset
.text:0000000180003465                 mov     r8d, 17A8h      ; Size
.text:000000018000346B                 lea     rdx, [rsp+17F8h+Src] ; Src
.text:0000000180003470                 lea     rcx, unk_180019AF0 ; void *
.text:0000000180003477                 call    memcpy
.text:000000018000347C                 mov     rbx, [rsp+17F8h+arg_8]
.text:0000000180003484                 mov     rcx, [rsp+17F8h+var_28]
.text:000000018000348C                 xor     rcx, rsp        ; StackCookie
.text:000000018000348F                 call    __security_check_cookie
.text:0000000180003494                 mov     rbp, [rsp+17F8h+arg_10]
.text:000000018000349C                 add     rsp, 17E0h
.text:00000001800034A3                 pop     r14
.text:00000001800034A5                 pop     rdi
.text:00000001800034A6                 pop     rsi
.text:00000001800034A7                 retn
.text:00000001800034A8 ; ---------------------------------------------------------------------------
.text:00000001800034A8
.text:00000001800034A8 loc_1800034A8:                          ; CODE XREF: sub_180003260+ED↑j
.text:00000001800034A8                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800034A8 ; ---------------------------------------------------------------------------
.text:00000001800034AE                 db 0CCh
.text:00000001800034AE ; } // starts at 180003260
.text:00000001800034AE sub_180003260   endp
.text:00000001800034AE
.text:00000001800034AF algn_1800034AF:                         ; DATA XREF: .pdata:000000018001C360↓o
.text:00000001800034AF                 align 10h
.text:00000001800034B0
.text:00000001800034B0 ; =============== S U B R O U T I N E =======================================
.text:00000001800034B0
.text:00000001800034B0 ; Attributes: bp-based frame fpd=290h
.text:00000001800034B0
.text:00000001800034B0 ; __int64 __fastcall sub_1800034B0(PVOID Parameter)
.text:00000001800034B0 sub_1800034B0   proc near               ; CODE XREF: fsuipcw_MyDispatchProc+C↑j
.text:00000001800034B0                                         ; DATA XREF: .pdata:000000018001C36C↓o
.text:00000001800034B0
.text:00000001800034B0 DueTime         = dword ptr -370h
.text:00000001800034B0 Period          = dword ptr -368h
.text:00000001800034B0 Flags           = dword ptr -360h
.text:00000001800034B0 var_358         = dword ptr -358h
.text:00000001800034B0 var_350         = dword ptr -350h
.text:00000001800034B0 var_348         = dword ptr -348h
.text:00000001800034B0 var_340         = dword ptr -340h
.text:00000001800034B0 var_33C         = byte ptr -33Ch
.text:00000001800034B0 var_338         = qword ptr -338h
.text:00000001800034B0 var_330         = qword ptr -330h
.text:00000001800034B0 var_328         = qword ptr -328h
.text:00000001800034B0 var_320         = xmmword ptr -320h
.text:00000001800034B0 var_310         = dword ptr -310h
.text:00000001800034B0 var_308         = dword ptr -308h
.text:00000001800034B0 var_304         = dword ptr -304h
.text:00000001800034B0 var_300         = qword ptr -300h
.text:00000001800034B0 var_2F8         = qword ptr -2F8h
.text:00000001800034B0 var_2E0         = qword ptr -2E0h
.text:00000001800034B0 var_2D0         = qword ptr -2D0h
.text:00000001800034B0 var_2C0         = qword ptr -2C0h
.text:00000001800034B0 var_2B0         = qword ptr -2B0h
.text:00000001800034B0 var_2A0         = qword ptr -2A0h
.text:00000001800034B0 var_298         = qword ptr -298h
.text:00000001800034B0 var_288         = qword ptr -288h
.text:00000001800034B0 var_280         = qword ptr -280h
.text:00000001800034B0 Block           = qword ptr -278h
.text:00000001800034B0 var_260         = qword ptr -260h
.text:00000001800034B0 var_258         = dword ptr -258h
.text:00000001800034B0 Buffer          = byte ptr -250h
.text:00000001800034B0 var_210         = dword ptr -210h
.text:00000001800034B0 var_1D0         = qword ptr -1D0h
.text:00000001800034B0 var_198         = byte ptr -198h
.text:00000001800034B0 var_50          = qword ptr -50h
.text:00000001800034B0 var_40          = xmmword ptr -40h
.text:00000001800034B0 arg_10          = qword ptr  20h
.text:00000001800034B0
.text:00000001800034B0 ; FUNCTION CHUNK AT .text:000000018001135C SIZE 0000004F BYTES
.text:00000001800034B0
.text:00000001800034B0 ; __unwind { // __GSHandlerCheck_EH4
.text:00000001800034B0                 mov     [rsp-8+arg_10], rbx
.text:00000001800034B5                 push    rbp
.text:00000001800034B6                 push    rsi
.text:00000001800034B7                 push    rdi
.text:00000001800034B8                 push    r12
.text:00000001800034BA                 push    r13
.text:00000001800034BC                 push    r14
.text:00000001800034BE                 push    r15
.text:00000001800034C0                 lea     rbp, [rsp-260h]
.text:00000001800034C8                 sub     rsp, 360h
.text:00000001800034CF                 movaps  [rsp+390h+var_40], xmm6
.text:00000001800034D7                 mov     rax, cs:__security_cookie
.text:00000001800034DE                 xor     rax, rsp
.text:00000001800034E1                 mov     [rbp+290h+var_50], rax
.text:00000001800034E8                 mov     rsi, rdx
.text:00000001800034EB                 mov     rdi, rcx
.text:00000001800034EE                 xor     ebx, ebx
.text:00000001800034F0                 mov     r13d, ebx
.text:00000001800034F3                 mov     [rbp+290h+var_310], ebx
.text:00000001800034F6                 mov     eax, [rdx+8]
.text:00000001800034F9                 cmp     eax, 3
.text:00000001800034FC                 jz      loc_180004C40
.text:0000000180003502                 cmp     eax, 10h
.text:0000000180003505                 jnz     loc_180004C47
.text:000000018000350B                 mov     edx, [rdx+0Ch]
.text:000000018000350E                 lea     eax, [rdx-1]    ; switch 103 cases
.text:0000000180003511                 cmp     eax, 66h
.text:0000000180003514                 ja      def_180003535   ; jumptable 0000000180003535 default case, cases 2-8,20-29
.text:000000018000351A                 lea     r8, cs:180000000h
.text:0000000180003521                 movzx   eax, ds:(byte_180004CA4 - 180000000h)[r8+rax]
.text:000000018000352A                 mov     ecx, ds:(jpt_180003535 - 180000000h)[r8+rax*4]
.text:0000000180003532                 add     rcx, r8
.text:0000000180003535                 jmp     rcx             ; switch jump
.text:0000000180003537 ; ---------------------------------------------------------------------------
.text:0000000180003537
.text:0000000180003537 loc_180003537:                          ; CODE XREF: sub_1800034B0+85↑j
.text:0000000180003537                                         ; DATA XREF: sub_1800034B0:jpt_180003535↓o
.text:0000000180003537                 lea     rcx, [rdi+3D8h] ; jumptable 0000000180003535 case 9
.text:000000018000353E                 call    cs:EnterCriticalSection
.text:0000000180003544                 lea     r12, [rsi+28h]
.text:0000000180003548                 mov     qword ptr [rsp+390h+var_320], r12
.text:000000018000354D                 mov     rdx, [rdi+30h]  ; Timer
.text:0000000180003551                 test    rdx, rdx
.text:0000000180003554                 jz      loc_1800037CF
.text:000000018000355A                 xor     r8d, r8d        ; CompletionEvent
.text:000000018000355D                 xor     ecx, ecx        ; TimerQueue
.text:000000018000355F                 call    cs:DeleteTimerQueueTimer
.text:0000000180003565                 mov     [rdi+30h], rbx
.text:0000000180003569
.text:0000000180003569 loc_180003569:                          ; CODE XREF: sub_1800034B0+336↓j
.text:0000000180003569                 mov     rdx, [rdi+40h]  ; Timer
.text:000000018000356D                 test    rdx, rdx
.text:0000000180003570                 jz      short loc_180003581
.text:0000000180003572                 xor     r8d, r8d        ; CompletionEvent
.text:0000000180003575                 xor     ecx, ecx        ; TimerQueue
.text:0000000180003577                 call    cs:DeleteTimerQueueTimer
.text:000000018000357D                 mov     [rdi+40h], rbx
.text:0000000180003581
.text:0000000180003581 loc_180003581:                          ; CODE XREF: sub_1800034B0+C0↑j
.text:0000000180003581                 lea     rcx, [rdi+360h] ; lpCriticalSection
.text:0000000180003588                 call    cs:EnterCriticalSection
.text:000000018000358E                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:0000000180003595                 call    cs:EnterCriticalSection
.text:000000018000359B                 lea     rcx, [rdi+3B0h] ; lpCriticalSection
.text:00000001800035A2                 call    cs:EnterCriticalSection
.text:00000001800035A8                 mov     rcx, [rdi+2E8h]
.text:00000001800035AF                 mov     rdx, [rdi+2F0h]
.text:00000001800035B6                 cmp     rcx, rdx
.text:00000001800035B9                 jz      short loc_1800035CE
.text:00000001800035BB                 call    sub_180005C80
.text:00000001800035C0                 mov     rax, [rdi+2E8h]
.text:00000001800035C7                 mov     [rdi+2F0h], rax
.text:00000001800035CE
.text:00000001800035CE loc_1800035CE:                          ; CODE XREF: sub_1800034B0+109↑j
.text:00000001800035CE                 mov     rcx, [rdi+338h]
.text:00000001800035D5                 mov     rdx, [rdi+340h]
.text:00000001800035DC                 cmp     rcx, rdx
.text:00000001800035DF                 jz      short loc_1800035F4
.text:00000001800035E1                 call    sub_180005C80
.text:00000001800035E6                 mov     rax, [rdi+338h]
.text:00000001800035ED                 mov     [rdi+340h], rax
.text:00000001800035F4
.text:00000001800035F4 loc_1800035F4:                          ; CODE XREF: sub_1800034B0+12F↑j
.text:00000001800035F4                 mov     rax, [rdi+318h]
.text:00000001800035FB                 cmp     rax, [rdi+320h]
.text:0000000180003602                 jz      short loc_18000360B
.text:0000000180003604                 mov     [rdi+320h], rax
.text:000000018000360B
.text:000000018000360B loc_18000360B:                          ; CODE XREF: sub_1800034B0+152↑j
.text:000000018000360B                 mov     [rdi+330h], rbx
.text:0000000180003612                 mov     rax, [rdi+300h]
.text:0000000180003619                 cmp     rax, [rdi+308h]
.text:0000000180003620                 jz      short loc_180003629
.text:0000000180003622                 mov     [rdi+308h], rax
.text:0000000180003629
.text:0000000180003629 loc_180003629:                          ; CODE XREF: sub_1800034B0+170↑j
.text:0000000180003629                 lea     rcx, [rdi+3B0h] ; lpCriticalSection
.text:0000000180003630                 call    cs:LeaveCriticalSection
.text:0000000180003636                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:000000018000363D                 call    cs:LeaveCriticalSection
.text:0000000180003643                 lea     rcx, [rdi+360h] ; lpCriticalSection
.text:000000018000364A                 call    cs:LeaveCriticalSection
.text:0000000180003650                 mov     r14d, ebx
.text:0000000180003653                 lea     rax, [rdi+298h]
.text:000000018000365A                 mov     [rsp+390h+var_328], rax
.text:000000018000365F                 mov     rsi, rax
.text:0000000180003662
.text:0000000180003662 loc_180003662:                          ; CODE XREF: sub_1800034B0+28C↓j
.text:0000000180003662                 mov     rax, [rsi]
.text:0000000180003665                 test    rax, rax
.text:0000000180003668                 jz      loc_180003731
.text:000000018000366E                 mov     edx, [rax+2Ch]
.text:0000000180003671                 mov     rcx, [rdi]
.text:0000000180003674                 call    sub_18000BB20
.text:0000000180003679                 test    eax, eax
.text:000000018000367B                 jns     short loc_1800036AA
.text:000000018000367D                 mov     rax, [rsi]
.text:0000000180003680                 mov     r9d, [rax+20h]
.text:0000000180003684                 lea     r8, aErrorClearingL ; "Error clearing lvar value data definiti"...
.text:000000018000368B                 mov     edx, 200h       ; BufferCount
.text:0000000180003690                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180003694                 call    sub_1800029E0
.text:0000000180003699                 call    sub_180007430
.text:000000018000369E                 mov     rcx, rax
.text:00000001800036A1                 lea     rdx, [rbp+290h+Buffer]
.text:00000001800036A5                 call    sub_180007930
.text:00000001800036AA
.text:00000001800036AA loc_1800036AA:                          ; CODE XREF: sub_1800034B0+1CB↑j
.text:00000001800036AA                 mov     rdx, [rsi]
.text:00000001800036AD                 lea     rcx, [rbp+290h+var_298]
.text:00000001800036B1                 call    sub_180005770
.text:00000001800036B6                 or      r13d, 8
.text:00000001800036BA                 lea     rdx, [rbp+290h+var_298]
.text:00000001800036BE                 mov     rcx, [rdi+350h]
.text:00000001800036C5                 call    sub_18000ADD0
.text:00000001800036CA                 mov     rbx, [rsi]
.text:00000001800036CD                 test    rbx, rbx
.text:00000001800036D0                 jz      short loc_18000372C
.text:00000001800036D2                 mov     rdx, [rbx+18h]
.text:00000001800036D6                 cmp     rdx, 10h
.text:00000001800036DA                 jb      short loc_18000370C
.text:00000001800036DC                 mov     rcx, [rbx]
.text:00000001800036DF                 inc     rdx
.text:00000001800036E2                 cmp     rdx, 1000h
.text:00000001800036E9                 jb      short loc_180003707
.text:00000001800036EB                 add     rdx, 27h ; '''
.text:00000001800036EF                 mov     r8, [rcx-8]
.text:00000001800036F3                 sub     rcx, r8
.text:00000001800036F6                 lea     rax, [rcx-8]
.text:00000001800036FA                 cmp     rax, 1Fh
.text:00000001800036FE                 ja      loc_180004BE4
.text:0000000180003704                 mov     rcx, r8         ; Block
.text:0000000180003707
.text:0000000180003707 loc_180003707:                          ; CODE XREF: sub_1800034B0+239↑j
.text:0000000180003707                 call    j_j_free
.text:000000018000370C
.text:000000018000370C loc_18000370C:                          ; CODE XREF: sub_1800034B0+22A↑j
.text:000000018000370C                 mov     qword ptr [rbx+10h], 0
.text:0000000180003714                 mov     qword ptr [rbx+18h], 0Fh
.text:000000018000371C                 mov     byte ptr [rbx], 0
.text:000000018000371F                 mov     edx, 38h ; '8'
.text:0000000180003724                 mov     rcx, rbx        ; Block
.text:0000000180003727                 call    j_j_free
.text:000000018000372C
.text:000000018000372C loc_18000372C:                          ; CODE XREF: sub_1800034B0+220↑j
.text:000000018000372C                 xor     ebx, ebx
.text:000000018000372E                 mov     [rsi], rbx
.text:0000000180003731
.text:0000000180003731 loc_180003731:                          ; CODE XREF: sub_1800034B0+1B8↑j
.text:0000000180003731                 inc     r14d
.text:0000000180003734                 add     rsi, 8
.text:0000000180003738                 cmp     r14d, 0Ah
.text:000000018000373C                 jl      loc_180003662
.text:0000000180003742                 mov     qword ptr [rdi+1Ch], 0
.text:000000018000374A                 mov     [rdi+24h], ebx
.text:000000018000374D                 mov     r8d, 17A8h      ; Size
.text:0000000180003753                 mov     rdx, r12        ; Src
.text:0000000180003756                 lea     rcx, unk_180019AF0 ; void *
.text:000000018000375D                 call    memcpy
.text:0000000180003762                 mov     esi, ebx
.text:0000000180003764                 lea     r14, [r12+1658h]
.text:000000018000376C                 mov     rbx, r14
.text:000000018000376F                 nop
.text:0000000180003770
.text:0000000180003770 loc_180003770:                          ; CODE XREF: sub_1800034B0+37D↓j
.text:0000000180003770                 mov     edx, [rbx-150h]
.text:0000000180003776                 test    edx, edx
.text:0000000180003778                 jz      loc_180003833
.text:000000018000377E                 movsxd  rcx, esi
.text:0000000180003781                 shl     rcx, 6
.text:0000000180003785                 add     rcx, 8
.text:0000000180003789                 add     rcx, r12
.text:000000018000378C                 mov     eax, [rbx]
.text:000000018000378E                 mov     [rsp+390h+Flags], eax
.text:0000000180003792                 mov     [rsp+390h+Period], edx
.text:0000000180003796                 mov     qword ptr [rsp+390h+DueTime], rcx
.text:000000018000379B                 mov     r9d, esi
.text:000000018000379E                 lea     r8, aConfigDataDNam ; "Config Data %d: name=%s, size=%d, type="...
.text:00000001800037A5                 mov     edx, 200h       ; BufferCount
.text:00000001800037AA                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:00000001800037AE                 call    sub_1800029E0
.text:00000001800037B3                 call    sub_180007430
.text:00000001800037B8                 mov     rcx, rax
.text:00000001800037BB                 lea     rdx, [rbp+290h+Buffer]
.text:00000001800037BF                 call    sub_180007F50
.text:00000001800037C4                 mov     eax, [rbx]
.text:00000001800037C6                 test    eax, eax
.text:00000001800037C8                 jnz     short loc_180003812
.text:00000001800037CA                 inc     dword ptr [rdi+1Ch]
.text:00000001800037CD                 jmp     short loc_180003824
.text:00000001800037CF ; ---------------------------------------------------------------------------
.text:00000001800037CF
.text:00000001800037CF loc_1800037CF:                          ; CODE XREF: sub_1800034B0+A4↑j
.text:00000001800037CF                 mov     r8d, 17A8h      ; Size
.text:00000001800037D5                 mov     rdx, r12        ; Buf2
.text:00000001800037D8                 lea     rcx, unk_180019AF0 ; Buf1
.text:00000001800037DF                 call    memcmp
.text:00000001800037E4                 test    eax, eax
.text:00000001800037E6                 jnz     loc_180003569
.text:00000001800037EC                 call    sub_180007430
.text:00000001800037F1                 mov     rcx, rax
.text:00000001800037F4                 lea     rdx, aIgnoringEventC ; "Ignoring EVENT_CONFIG_RECEIVED event as"...
.text:00000001800037FB                 call    sub_180007D40
.text:0000000180003800                 lea     rcx, [rdi+3D8h] ; lpCriticalSection
.text:0000000180003807                 call    cs:LeaveCriticalSection
.text:000000018000380D                 jmp     loc_180004C47
.text:0000000180003812 ; ---------------------------------------------------------------------------
.text:0000000180003812
.text:0000000180003812 loc_180003812:                          ; CODE XREF: sub_1800034B0+318↑j
.text:0000000180003812                 cmp     eax, 1
.text:0000000180003815                 jnz     short loc_18000381C
.text:0000000180003817                 inc     dword ptr [rdi+20h]
.text:000000018000381A                 jmp     short loc_180003824
.text:000000018000381C ; ---------------------------------------------------------------------------
.text:000000018000381C
.text:000000018000381C loc_18000381C:                          ; CODE XREF: sub_1800034B0+365↑j
.text:000000018000381C                 cmp     eax, 2
.text:000000018000381F                 jnz     short loc_180003824
.text:0000000180003821                 inc     dword ptr [rdi+24h]
.text:0000000180003824
.text:0000000180003824 loc_180003824:                          ; CODE XREF: sub_1800034B0+31D↑j
.text:0000000180003824                                         ; sub_1800034B0+36A↑j ...
.text:0000000180003824                 inc     esi
.text:0000000180003826                 add     rbx, 4
.text:000000018000382A                 cmp     esi, 54h ; 'T'
.text:000000018000382D                 jl      loc_180003770
.text:0000000180003833
.text:0000000180003833 loc_180003833:                          ; CODE XREF: sub_1800034B0+2C8↑j
.text:0000000180003833                 mov     eax, [rdi+20h]
.text:0000000180003836                 add     eax, [rdi+1Ch]
.text:0000000180003839                 jnz     short loc_180003889
.text:000000018000383B                 call    sub_180007430
.text:0000000180003840                 mov     rcx, rax
.text:0000000180003843                 lea     rdx, aSimconnectRecv ; "SIMCONNECT_RECV_ID_CLIENT_DATA received"...
.text:000000018000384A                 call    sub_180007D40
.text:000000018000384F                 xor     eax, eax
.text:0000000180003851                 mov     [rsp+390h+Flags], eax ; Flags
.text:0000000180003855                 mov     [rsp+390h+Period], 3E8h ; Period
.text:000000018000385D                 mov     [rsp+390h+DueTime], eax ; DueTime
.text:0000000180003861                 mov     r9, rdi         ; Parameter
.text:0000000180003864                 lea     r8, Callback    ; Callback
.text:000000018000386B                 xor     edx, edx        ; TimerQueue
.text:000000018000386D                 lea     rcx, [rdi+30h]  ; phNewTimer
.text:0000000180003871                 call    cs:CreateTimerQueueTimer
.text:0000000180003877                 lea     rcx, [rdi+3D8h] ; lpCriticalSection
.text:000000018000387E                 call    cs:LeaveCriticalSection
.text:0000000180003884                 jmp     loc_180004C47
.text:0000000180003889 ; ---------------------------------------------------------------------------
.text:0000000180003889
.text:0000000180003889 loc_180003889:                          ; CODE XREF: sub_1800034B0+389↑j
.text:0000000180003889                 call    sub_180007430
.text:000000018000388E                 mov     rcx, rax
.text:0000000180003891                 lea     rdx, aSimconnectRecv_0 ; "SIMCONNECT_RECV_ID_CLIENT_DATA received"...
.text:0000000180003898                 call    sub_180007F50
.text:000000018000389D                 xor     esi, esi
.text:000000018000389F                 mov     ecx, esi
.text:00000001800038A1                 lea     rdx, a102       ; "1.0.2"
.text:00000001800038A8                 nop     dword ptr [rax+rax+00000000h]
.text:00000001800038B0
.text:00000001800038B0 loc_1800038B0:                          ; CODE XREF: sub_1800034B0+412↓j
.text:00000001800038B0                 movzx   eax, byte ptr [r12+rcx]
.text:00000001800038B5                 inc     rcx
.text:00000001800038B8                 cmp     al, [rdx+rcx-1]
.text:00000001800038BC                 jnz     short loc_1800038C6
.text:00000001800038BE                 cmp     rcx, 6
.text:00000001800038C2                 jnz     short loc_1800038B0
.text:00000001800038C4                 jmp     short loc_1800038F4
.text:00000001800038C6 ; ---------------------------------------------------------------------------
.text:00000001800038C6
.text:00000001800038C6 loc_1800038C6:                          ; CODE XREF: sub_1800034B0+40C↑j
.text:00000001800038C6                 mov     qword ptr [rsp+390h+DueTime], rdx
.text:00000001800038CB                 mov     r9, r12
.text:00000001800038CE                 lea     r8, aTheInstalledWa ; "**** The installed WASM version is %s w"...
.text:00000001800038D5                 mov     edx, 200h       ; BufferCount
.text:00000001800038DA                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:00000001800038DE                 call    sub_1800029E0
.text:00000001800038E3                 call    sub_180007430
.text:00000001800038E8                 mov     rcx, rax
.text:00000001800038EB                 lea     rdx, [rbp+290h+Buffer]
.text:00000001800038EF                 call    sub_180007930
.text:00000001800038F4
.text:00000001800038F4 loc_1800038F4:                          ; CODE XREF: sub_1800034B0+414↑j
.text:00000001800038F4                 mov     r12d, esi
.text:00000001800038F7                 mov     eax, [rdi+24h]
.text:00000001800038FA                 add     eax, [rdi+20h]
.text:00000001800038FD                 add     eax, [rdi+1Ch]
.text:0000000180003900                 test    eax, eax
.text:0000000180003902                 jle     loc_180003D80
.text:0000000180003908                 mov     dword ptr [rsp+390h+var_330], 1Eh
.text:0000000180003910                 mov     [rbp+290h+var_304], 64h ; 'd'
.text:0000000180003917                 mov     [rbp+290h+var_308], 0Ah
.text:000000018000391E                 lea     rax, [rdi+48h]
.text:0000000180003922                 mov     [rsp+390h+var_338], rax
.text:0000000180003927                 lea     rcx, [rdi+278h]
.text:000000018000392E                 mov     [rbp+290h+var_300], rcx
.text:0000000180003932                 xorps   xmm6, xmm6
.text:0000000180003935                 db      66h, 66h
.text:0000000180003935                 nop     word ptr [rax+rax+00000000h]
.text:0000000180003940
.text:0000000180003940 loc_180003940:                          ; CODE XREF: sub_1800034B0+854↓j
.text:0000000180003940                 movsxd  rax, r12d
.text:0000000180003943                 shl     rax, 6
.text:0000000180003947                 mov     rcx, qword ptr [rsp+390h+var_320]
.text:000000018000394C                 add     rcx, 8
.text:0000000180003950                 add     rax, rcx
.text:0000000180003953                 mov     [rbp+290h+var_2B0], rax
.text:0000000180003957                 mov     rdx, rax
.text:000000018000395A                 lea     rcx, [rbp+290h+var_2F8]
.text:000000018000395E                 call    sub_180005650
.text:0000000180003963                 mov     r9, rax
.text:0000000180003966                 mov     r8d, [r14-150h]
.text:000000018000396D                 lea     rdx, [rbp+290h+Block]
.text:0000000180003971                 mov     rcx, [rdi+350h]
.text:0000000180003978                 call    sub_18000A6F0
.text:000000018000397D                 nop
.text:000000018000397E                 mov     ecx, 38h ; '8'  ; Size
.text:0000000180003983                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180003988                 mov     rbx, rax
.text:000000018000398B                 mov     [rbp+290h+var_2D0], rax
.text:000000018000398F                 lea     rdx, [rbp+290h+Block]
.text:0000000180003993                 cmp     [rbp+290h+var_260], 10h
.text:0000000180003998                 cmovnb  rdx, [rbp+290h+Block]
.text:000000018000399D                 lea     rcx, [rbp+290h+var_298]
.text:00000001800039A1                 call    sub_180005650
.text:00000001800039A6                 nop
.text:00000001800039A7 ;   try {
.text:00000001800039A7                 or      r13d, 1
.text:00000001800039AB                 mov     [rbp+290h+var_310], r13d
.text:00000001800039AF                 mov     r15d, [r14]
.text:00000001800039B2                 movsxd  rsi, dword ptr [r14-150h]
.text:00000001800039B9                 xorps   xmm0, xmm0
.text:00000001800039BC                 movups  xmmword ptr [rbx], xmm0
.text:00000001800039BF                 xor     r8d, r8d
.text:00000001800039C2                 mov     [rbx+10h], r8
.text:00000001800039C6                 mov     qword ptr [rbx+18h], 0Fh
.text:00000001800039CE                 mov     [rbx], r8b
.text:00000001800039D1                 mov     ecx, r15d
.text:00000001800039D4                 test    r15d, r15d
.text:00000001800039D7                 jz      short loc_1800039EF
.text:00000001800039D9                 sub     ecx, 1
.text:00000001800039DC                 jz      short loc_1800039EF
.text:00000001800039DE                 cmp     ecx, 1
.text:00000001800039E1                 jnz     short loc_180003A0F
.text:00000001800039E3                 mov     rax, rsi
.text:00000001800039E6                 shr     rax, 3
.text:00000001800039EA                 mov     [rbx+28h], eax
.text:00000001800039ED                 jmp     short loc_180003A0F
.text:00000001800039EF ; ---------------------------------------------------------------------------
.text:00000001800039EF
.text:00000001800039EF loc_1800039EF:                          ; CODE XREF: sub_1800034B0+527↑j
.text:00000001800039EF                                         ; sub_1800034B0+52C↑j
.text:00000001800039EF                 mov     rcx, rsi
.text:00000001800039F2                 mov     rax, 2492492492492493h
.text:00000001800039FC                 mul     rsi
.text:00000001800039FF                 sub     rcx, rdx
.text:0000000180003A02                 shr     rcx, 1
.text:0000000180003A05                 add     rcx, rdx
.text:0000000180003A08                 shr     rcx, 5
.text:0000000180003A0C                 mov     [rbx+28h], ecx
.text:0000000180003A0F
.text:0000000180003A0F loc_180003A0F:                          ; CODE XREF: sub_1800034B0+531↑j
.text:0000000180003A0F                                         ; sub_1800034B0+53D↑j
.text:0000000180003A0F                 mov     [rbx+20h], r8d
.text:0000000180003A13                 lea     rdx, [rbp+290h+var_298]
.text:0000000180003A17                 lea     rcx, [rbp+290h+var_2F8]
.text:0000000180003A17 ;   } // starts at 1800039A7
.text:0000000180003A1B ;   try {
.text:0000000180003A1B                 call    sub_180005770
.text:0000000180003A20                 mov     rdx, rax
.text:0000000180003A23                 mov     rcx, rbx
.text:0000000180003A26                 call    sub_180006E20
.text:0000000180003A2B                 mov     rdx, [rbp+290h+var_2E0]
.text:0000000180003A2F                 cmp     rdx, 10h
.text:0000000180003A33                 jb      short loc_180003A66
.text:0000000180003A35                 inc     rdx
.text:0000000180003A38                 mov     rcx, [rbp+290h+var_2F8]
.text:0000000180003A3C                 mov     rax, rcx
.text:0000000180003A3F                 cmp     rdx, 1000h
.text:0000000180003A46                 jb      short loc_180003A61
.text:0000000180003A48                 add     rdx, 27h ; '''
.text:0000000180003A4C                 mov     rcx, [rcx-8]    ; Block
.text:0000000180003A50                 sub     rax, rcx
.text:0000000180003A53                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180003A57                 cmp     rax, 1Fh
.text:0000000180003A5B                 ja      loc_180003D09
.text:0000000180003A61
.text:0000000180003A61 loc_180003A61:                          ; CODE XREF: sub_1800034B0+596↑j
.text:0000000180003A61                 call    j_j_free
.text:0000000180003A66
.text:0000000180003A66 loc_180003A66:                          ; CODE XREF: sub_1800034B0+583↑j
.text:0000000180003A66                 mov     [rbx+24h], esi
.text:0000000180003A69                 mov     [rbx+30h], r15d
.text:0000000180003A6D                 test    r13b, 1
.text:0000000180003A71                 jz      short loc_180003AB2
.text:0000000180003A73                 and     r13d, 0FFFFFFFEh
.text:0000000180003A77                 mov     rdx, [rbp+290h+var_280]
.text:0000000180003A7B                 cmp     rdx, 10h
.text:0000000180003A7F                 jb      short loc_180003AB2
.text:0000000180003A81                 inc     rdx
.text:0000000180003A84                 mov     rcx, [rbp+290h+var_298]
.text:0000000180003A88                 mov     rax, rcx
.text:0000000180003A8B                 cmp     rdx, 1000h
.text:0000000180003A92                 jb      short loc_180003AAD
.text:0000000180003A94                 add     rdx, 27h ; '''
.text:0000000180003A98                 mov     rcx, [rcx-8]    ; Block
.text:0000000180003A9C                 sub     rax, rcx
.text:0000000180003A9F                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180003AA3                 cmp     rax, 1Fh
.text:0000000180003AA7                 ja      loc_180003D10
.text:0000000180003AAD
.text:0000000180003AAD loc_180003AAD:                          ; CODE XREF: sub_1800034B0+5E2↑j
.text:0000000180003AAD                 call    j_j_free
.text:0000000180003AB2
.text:0000000180003AB2 loc_180003AB2:                          ; CODE XREF: sub_1800034B0+5C1↑j
.text:0000000180003AB2                                         ; sub_1800034B0+5CF↑j
.text:0000000180003AB2                 mov     eax, [rbp+290h+var_258]
.text:0000000180003AB5                 mov     [rbx+20h], eax
.text:0000000180003AB8                 mov     ecx, [r14]
.text:0000000180003ABB                 mov     rsi, [rsp+390h+var_338]
.text:0000000180003AC0                 mov     r15, [rbp+290h+var_300]
.text:0000000180003AC4                 test    ecx, ecx
.text:0000000180003AC6                 jz      short loc_180003AE1
.text:0000000180003AC8                 sub     ecx, 1
.text:0000000180003ACB                 jz      short loc_180003ADC
.text:0000000180003ACD                 cmp     ecx, 1
.text:0000000180003AD0                 jnz     short loc_180003AE4
.text:0000000180003AD2                 mov     rax, [rsp+390h+var_328]
.text:0000000180003AD7                 mov     [rax], rbx
.text:0000000180003ADA                 jmp     short loc_180003AE4
.text:0000000180003ADC ; ---------------------------------------------------------------------------
.text:0000000180003ADC
.text:0000000180003ADC loc_180003ADC:                          ; CODE XREF: sub_1800034B0+61B↑j
.text:0000000180003ADC                 mov     [r15], rbx
.text:0000000180003ADF                 jmp     short loc_180003AE4
.text:0000000180003AE1 ; ---------------------------------------------------------------------------
.text:0000000180003AE1
.text:0000000180003AE1 loc_180003AE1:                          ; CODE XREF: sub_1800034B0+616↑j
.text:0000000180003AE1                 mov     [rsi], rbx
.text:0000000180003AE4
.text:0000000180003AE4 loc_180003AE4:                          ; CODE XREF: sub_1800034B0+620↑j
.text:0000000180003AE4                                         ; sub_1800034B0+62A↑j ...
.text:0000000180003AE4                 mov     [rsp+390h+Period], 0
.text:0000000180003AEC                 movss   [rsp+390h+DueTime], xmm6
.text:0000000180003AF2                 mov     r9d, [r14-150h]
.text:0000000180003AF9                 mov     r8d, 0FFFFFFFFh
.text:0000000180003AFF                 mov     edx, cs:dword_180019044
.text:0000000180003B05                 mov     rcx, [rdi]
.text:0000000180003B08                 call    sub_18000B9C0
.text:0000000180003B0D                 mov     r9d, cs:dword_180019044
.text:0000000180003B14                 test    eax, eax
.text:0000000180003B16                 jns     short loc_180003B45
.text:0000000180003B18                 mov     [rsp+390h+DueTime], r12d
.text:0000000180003B1D                 lea     r8, aErrorAddingCli ; "Error adding client data definition id "...
.text:0000000180003B24                 mov     edx, 200h       ; BufferCount
.text:0000000180003B29                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180003B2D                 call    sub_1800029E0
.text:0000000180003B32                 call    sub_180007430
.text:0000000180003B37                 mov     rcx, rax
.text:0000000180003B3A                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180003B3E                 call    sub_180007930
.text:0000000180003B43                 jmp     short loc_180003B9D
.text:0000000180003B45 ; ---------------------------------------------------------------------------
.text:0000000180003B45
.text:0000000180003B45 loc_180003B45:                          ; CODE XREF: sub_1800034B0+666↑j
.text:0000000180003B45                 mov     ecx, [r14]
.text:0000000180003B48                 test    ecx, ecx
.text:0000000180003B4A                 jz      short loc_180003B65
.text:0000000180003B4C                 sub     ecx, 1
.text:0000000180003B4F                 jz      short loc_180003B60
.text:0000000180003B51                 cmp     ecx, 1
.text:0000000180003B54                 jnz     short loc_180003B6C
.text:0000000180003B56                 mov     rax, [rsp+390h+var_328]
.text:0000000180003B5B                 mov     rax, [rax]
.text:0000000180003B5E                 jmp     short loc_180003B68
.text:0000000180003B60 ; ---------------------------------------------------------------------------
.text:0000000180003B60
.text:0000000180003B60 loc_180003B60:                          ; CODE XREF: sub_1800034B0+69F↑j
.text:0000000180003B60                 mov     rax, [r15]
.text:0000000180003B63                 jmp     short loc_180003B68
.text:0000000180003B65 ; ---------------------------------------------------------------------------
.text:0000000180003B65
.text:0000000180003B65 loc_180003B65:                          ; CODE XREF: sub_1800034B0+69A↑j
.text:0000000180003B65                 mov     rax, [rsi]
.text:0000000180003B68
.text:0000000180003B68 loc_180003B68:                          ; CODE XREF: sub_1800034B0+6AE↑j
.text:0000000180003B68                                         ; sub_1800034B0+6B3↑j
.text:0000000180003B68                 mov     [rax+2Ch], r9d
.text:0000000180003B6C
.text:0000000180003B6C loc_180003B6C:                          ; CODE XREF: sub_1800034B0+6A4↑j
.text:0000000180003B6C                 mov     eax, [r14-150h]
.text:0000000180003B73                 mov     [rsp+390h+DueTime], eax
.text:0000000180003B77                 lea     r8, aClientDataDefi ; "Client data definition added with id=%d"...
.text:0000000180003B7E                 mov     edx, 200h       ; BufferCount
.text:0000000180003B83                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180003B87                 call    sub_1800029E0
.text:0000000180003B8C                 call    sub_180007430
.text:0000000180003B91                 mov     rcx, rax
.text:0000000180003B94                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180003B98                 call    sub_180007F50
.text:0000000180003B9D
.text:0000000180003B9D loc_180003B9D:                          ; CODE XREF: sub_1800034B0+693↑j
.text:0000000180003B9D                 mov     ecx, [r14]
.text:0000000180003BA0                 test    ecx, ecx
.text:0000000180003BA2                 jz      loc_180003C52
.text:0000000180003BA8                 sub     ecx, 1
.text:0000000180003BAB                 jz      short loc_180003C03
.text:0000000180003BAD                 xor     esi, esi
.text:0000000180003BAF                 cmp     ecx, 1
.text:0000000180003BB2                 jnz     loc_180003C6A
.text:0000000180003BB8                 mov     r9d, cs:dword_180019044
.text:0000000180003BBF                 mov     eax, [rbp+290h+var_308]
.text:0000000180003BC2                 mov     r8d, eax
.text:0000000180003BC5                 inc     eax
.text:0000000180003BC7                 mov     [rbp+290h+var_308], eax
.text:0000000180003BCA                 add     [rsp+390h+var_328], 8
.text:0000000180003BD0                 lea     eax, [r9+1]
.text:0000000180003BD4                 mov     cs:dword_180019044, eax
.text:0000000180003BDA                 mov     [rsp+390h+var_350], esi
.text:0000000180003BDE                 mov     [rsp+390h+var_358], esi
.text:0000000180003BE2                 mov     [rsp+390h+Flags], esi
.text:0000000180003BE6                 mov     [rsp+390h+Period], ecx
.text:0000000180003BEA                 mov     [rsp+390h+DueTime], 3
.text:0000000180003BF2                 mov     edx, [rbx+20h]
.text:0000000180003BF5                 mov     rcx, [rdi]
.text:0000000180003BF8                 call    sub_18000C180
.text:0000000180003BFD                 mov     [rsp+390h+var_340], eax
.text:0000000180003C01                 jmp     short loc_180003C6E
.text:0000000180003C03 ; ---------------------------------------------------------------------------
.text:0000000180003C03
.text:0000000180003C03 loc_180003C03:                          ; CODE XREF: sub_1800034B0+6FB↑j
.text:0000000180003C03                 mov     eax, [rbp+290h+var_304]
.text:0000000180003C06                 mov     r8d, eax
.text:0000000180003C09                 inc     eax
.text:0000000180003C0B                 mov     [rbp+290h+var_304], eax
.text:0000000180003C0E                 add     r15, 8
.text:0000000180003C12                 mov     [rbp+290h+var_300], r15
.text:0000000180003C16
.text:0000000180003C16 loc_180003C16:                          ; CODE XREF: sub_1800034B0+7B8↓j
.text:0000000180003C16                 mov     r9d, cs:dword_180019044
.text:0000000180003C1D                 lea     eax, [r9+1]
.text:0000000180003C21                 mov     cs:dword_180019044, eax
.text:0000000180003C27                 xor     esi, esi
.text:0000000180003C29                 mov     [rsp+390h+var_350], esi
.text:0000000180003C2D                 mov     [rsp+390h+var_358], esi
.text:0000000180003C31                 mov     [rsp+390h+Flags], esi
.text:0000000180003C35                 mov     [rsp+390h+Period], esi
.text:0000000180003C39                 mov     [rsp+390h+DueTime], 1
.text:0000000180003C41                 mov     edx, [rbx+20h]
.text:0000000180003C44                 mov     rcx, [rdi]
.text:0000000180003C47                 call    sub_18000C180
.text:0000000180003C4C                 mov     [rsp+390h+var_340], eax
.text:0000000180003C50                 jmp     short loc_180003C6E
.text:0000000180003C52 ; ---------------------------------------------------------------------------
.text:0000000180003C52
.text:0000000180003C52 loc_180003C52:                          ; CODE XREF: sub_1800034B0+6F2↑j
.text:0000000180003C52                 mov     eax, dword ptr [rsp+390h+var_330]
.text:0000000180003C56                 mov     r8d, eax
.text:0000000180003C59                 inc     eax
.text:0000000180003C5B                 mov     dword ptr [rsp+390h+var_330], eax
.text:0000000180003C5F                 add     rsi, 8
.text:0000000180003C63                 mov     [rsp+390h+var_338], rsi
.text:0000000180003C68                 jmp     short loc_180003C16
.text:0000000180003C6A ; ---------------------------------------------------------------------------
.text:0000000180003C6A
.text:0000000180003C6A loc_180003C6A:                          ; CODE XREF: sub_1800034B0+702↑j
.text:0000000180003C6A                 mov     eax, [rsp+390h+var_340]
.text:0000000180003C6E
.text:0000000180003C6E loc_180003C6E:                          ; CODE XREF: sub_1800034B0+751↑j
.text:0000000180003C6E                                         ; sub_1800034B0+7A0↑j
.text:0000000180003C6E                 mov     r9, [rbp+290h+var_2B0]
.text:0000000180003C72                 mov     edx, 200h       ; BufferCount
.text:0000000180003C77                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180003C7B                 test    eax, eax
.text:0000000180003C7D                 mov     eax, cs:dword_180019044
.text:0000000180003C83                 jnz     loc_180003D17
.text:0000000180003C89                 dec     eax
.text:0000000180003C8B                 mov     [rsp+390h+Period], eax
.text:0000000180003C8F                 mov     eax, [rbx+20h]
.text:0000000180003C92                 mov     [rsp+390h+DueTime], eax
.text:0000000180003C96                 lea     r8, aCdaSWithIdDAnd ; "CDA '%s' with id=%d and definitionId=%d"...
.text:0000000180003C9D                 call    sub_1800029E0
.text:0000000180003CA2                 call    sub_180007430
.text:0000000180003CA7                 mov     rcx, rax
.text:0000000180003CAA                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180003CAE                 call    sub_180007F50
.text:0000000180003CB3                 nop
.text:0000000180003CB4                 mov     rdx, [rbp+290h+var_260]
.text:0000000180003CB8                 cmp     rdx, 10h
.text:0000000180003CBC                 jb      short loc_180003CEF
.text:0000000180003CBE                 inc     rdx
.text:0000000180003CC1                 mov     rcx, [rbp+290h+Block]
.text:0000000180003CC5                 mov     rax, rcx
.text:0000000180003CC8                 cmp     rdx, 1000h
.text:0000000180003CCF                 jb      short loc_180003CEA
.text:0000000180003CD1                 add     rdx, 27h ; '''
.text:0000000180003CD5                 mov     rcx, [rcx-8]    ; Block
.text:0000000180003CD9                 sub     rax, rcx
.text:0000000180003CDC                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180003CE0                 cmp     rax, 1Fh
.text:0000000180003CE4                 ja      loc_180003D74
.text:0000000180003CEA
.text:0000000180003CEA loc_180003CEA:                          ; CODE XREF: sub_1800034B0+81F↑j
.text:0000000180003CEA                 call    j_j_free
.text:0000000180003CEF
.text:0000000180003CEF loc_180003CEF:                          ; CODE XREF: sub_1800034B0+80C↑j
.text:0000000180003CEF                 inc     r12d
.text:0000000180003CF2                 add     r14, 4
.text:0000000180003CF6                 mov     eax, [rdi+24h]
.text:0000000180003CF9                 add     eax, [rdi+20h]
.text:0000000180003CFC                 add     eax, [rdi+1Ch]
.text:0000000180003CFF                 cmp     r12d, eax
.text:0000000180003D02                 jge     short loc_180003D80
.text:0000000180003D04                 jmp     loc_180003940
.text:0000000180003D09 ; ---------------------------------------------------------------------------
.text:0000000180003D09
.text:0000000180003D09 loc_180003D09:                          ; CODE XREF: sub_1800034B0+5AB↑j
.text:0000000180003D09                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180003D0F                 nop
.text:0000000180003D10
.text:0000000180003D10 loc_180003D10:                          ; CODE XREF: sub_1800034B0+5F7↑j
.text:0000000180003D10                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180003D16                 int     3               ; Trap to Debugger
.text:0000000180003D17 ; ---------------------------------------------------------------------------
.text:0000000180003D17
.text:0000000180003D17 loc_180003D17:                          ; CODE XREF: sub_1800034B0+7D3↑j
.text:0000000180003D17                 dec     eax
.text:0000000180003D19                 mov     [rsp+390h+Period], eax
.text:0000000180003D1D                 mov     eax, [rbx+20h]
.text:0000000180003D20                 mov     [rsp+390h+DueTime], eax
.text:0000000180003D24                 lea     r8, aErrorRequestin ; "Error requesting CDA '%s' with id=%d an"...
.text:0000000180003D2B                 call    sub_1800029E0
.text:0000000180003D30                 call    sub_180007430
.text:0000000180003D35                 mov     rcx, rax
.text:0000000180003D38                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180003D3C                 call    sub_180007930
.text:0000000180003D41                 nop
.text:0000000180003D42                 mov     rdx, [rbp+290h+var_260]
.text:0000000180003D46                 cmp     rdx, 10h
.text:0000000180003D4A                 jb      short loc_180003D80
.text:0000000180003D4C                 inc     rdx
.text:0000000180003D4F                 mov     rcx, [rbp+290h+Block] ; Block
.text:0000000180003D53                 mov     rax, rcx
.text:0000000180003D56                 cmp     rdx, 1000h
.text:0000000180003D5D                 jb      short loc_180003D7B
.text:0000000180003D5F                 add     rdx, 27h ; '''
.text:0000000180003D63                 mov     rcx, [rcx-8]
.text:0000000180003D67                 sub     rax, rcx
.text:0000000180003D6A                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180003D6E                 cmp     rax, 1Fh
.text:0000000180003D72                 jbe     short loc_180003D7B
.text:0000000180003D74
.text:0000000180003D74 loc_180003D74:                          ; CODE XREF: sub_1800034B0+834↑j
.text:0000000180003D74                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180003D7A                 int     3               ; Trap to Debugger
.text:0000000180003D7B ; ---------------------------------------------------------------------------
.text:0000000180003D7B
.text:0000000180003D7B loc_180003D7B:                          ; CODE XREF: sub_1800034B0+8AD↑j
.text:0000000180003D7B                                         ; sub_1800034B0+8C2↑j
.text:0000000180003D7B                 call    j_j_free
.text:0000000180003D80
.text:0000000180003D80 loc_180003D80:                          ; CODE XREF: sub_1800034B0+452↑j
.text:0000000180003D80                                         ; sub_1800034B0+852↑j ...
.text:0000000180003D80                 cmp     dword ptr [rdi+1Ch], 0
.text:0000000180003D84                 jz      short loc_180003DBA
.text:0000000180003D86                 mov     r8d, [rdi+28h]
.text:0000000180003D8A                 test    r8d, r8d
.text:0000000180003D8D                 jz      short loc_180003DBA
.text:0000000180003D8F                 mov     eax, 3E8h
.text:0000000180003D94                 cdq
.text:0000000180003D95                 idiv    r8d
.text:0000000180003D98                 mov     [rsp+390h+Flags], esi ; Flags
.text:0000000180003D9C                 mov     [rsp+390h+Period], eax ; Period
.text:0000000180003DA0                 mov     [rsp+390h+DueTime], esi ; DueTime
.text:0000000180003DA4                 mov     r9, rdi         ; Parameter
.text:0000000180003DA7                 lea     r8, sub_180003200 ; Callback
.text:0000000180003DAE                 xor     edx, edx        ; TimerQueue
.text:0000000180003DB0                 lea     rcx, [rdi+40h]  ; phNewTimer
.text:0000000180003DB4                 call    cs:CreateTimerQueueTimer
.text:0000000180003DBA
.text:0000000180003DBA loc_180003DBA:                          ; CODE XREF: sub_1800034B0+8D4↑j
.text:0000000180003DBA                                         ; sub_1800034B0+8DD↑j
.text:0000000180003DBA                 mov     [rsp+390h+var_350], esi
.text:0000000180003DBE                 mov     [rsp+390h+var_358], esi
.text:0000000180003DC2                 mov     [rsp+390h+Flags], esi
.text:0000000180003DC6                 mov     [rsp+390h+Period], 1
.text:0000000180003DCE                 mov     [rsp+390h+DueTime], 3
.text:0000000180003DD6                 mov     edx, 1
.text:0000000180003DDB                 mov     r9d, edx
.text:0000000180003DDE                 lea     r8d, [rdx+8]
.text:0000000180003DE2                 mov     rcx, [rdi]
.text:0000000180003DE5                 call    sub_18000C180
.text:0000000180003DEA                 test    eax, eax
.text:0000000180003DEC                 jns     short loc_180003E04
.text:0000000180003DEE                 call    sub_180007430
.text:0000000180003DF3                 mov     rcx, rax
.text:0000000180003DF6                 lea     rdx, aSimconnectRequ_1 ; "SimConnect_RequestClientData for config"...
.text:0000000180003DFD                 call    sub_180007930
.text:0000000180003E02                 jmp     short loc_180003E18
.text:0000000180003E04 ; ---------------------------------------------------------------------------
.text:0000000180003E04
.text:0000000180003E04 loc_180003E04:                          ; CODE XREF: sub_1800034B0+93C↑j
.text:0000000180003E04                 call    sub_180007430
.text:0000000180003E09                 mov     rcx, rax
.text:0000000180003E0C                 lea     rdx, aConfigDataUpda ; "Config data updates requested."
.text:0000000180003E13                 call    sub_180007D40
.text:0000000180003E18
.text:0000000180003E18 loc_180003E18:                          ; CODE XREF: sub_1800034B0+952↑j
.text:0000000180003E18                 mov     cs:dword_18001B298, esi
.text:0000000180003E1E                 lea     rcx, [rdi+3D8h] ; lpCriticalSection
.text:0000000180003E25                 call    cs:LeaveCriticalSection
.text:0000000180003E2B                 mov     cs:byte_180019AD8, 0
.text:0000000180003E32                 jmp     loc_180004C47
.text:0000000180003E37 ; ---------------------------------------------------------------------------
.text:0000000180003E37
.text:0000000180003E37 loc_180003E37:                          ; CODE XREF: sub_1800034B0+85↑j
.text:0000000180003E37                                         ; DATA XREF: sub_1800034B0:jpt_180003535↓o
.text:0000000180003E37                 lea     r14, [rdi+3D8h] ; jumptable 0000000180003535 cases 30-99
.text:0000000180003E3E                 mov     rcx, r14        ; lpCriticalSection
.text:0000000180003E41                 call    cs:EnterCriticalSection
.text:0000000180003E47                 lea     rcx, [rdi+48h]
.text:0000000180003E4B                 nop     dword ptr [rax+rax+00h]
.text:0000000180003E50
.text:0000000180003E50 loc_180003E50:                          ; CODE XREF: sub_1800034B0+9B9↓j
.text:0000000180003E50                 mov     rdx, [rcx]
.text:0000000180003E53                 test    rdx, rdx
.text:0000000180003E56                 jz      short loc_180003E60
.text:0000000180003E58                 mov     eax, [rsi+14h]
.text:0000000180003E5B                 cmp     [rdx+2Ch], eax
.text:0000000180003E5E                 jz      short loc_180003E6B
.text:0000000180003E60
.text:0000000180003E60 loc_180003E60:                          ; CODE XREF: sub_1800034B0+9A6↑j
.text:0000000180003E60                 inc     ebx
.text:0000000180003E62                 add     rcx, 8
.text:0000000180003E66                 cmp     ebx, 46h ; 'F'
.text:0000000180003E69                 jl      short loc_180003E50
.text:0000000180003E6B
.text:0000000180003E6B loc_180003E6B:                          ; CODE XREF: sub_1800034B0+9AE↑j
.text:0000000180003E6B                 mov     eax, [rdi+1Ch]
.text:0000000180003E6E                 mov     [rsp+390h+DueTime], eax
.text:0000000180003E72                 mov     r9d, ebx
.text:0000000180003E75                 lea     r8, aCdaDNolvarcdas ; "cda=%d (noLvarCDAs=%d)"
.text:0000000180003E7C                 mov     edx, 200h       ; BufferCount
.text:0000000180003E81                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180003E85                 call    sub_1800029E0
.text:0000000180003E8A                 call    sub_180007430
.text:0000000180003E8F                 mov     rcx, rax
.text:0000000180003E92                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180003E96                 call    sub_180007D40
.text:0000000180003E9B                 mov     eax, [rdi+1Ch]
.text:0000000180003E9E                 mov     ecx, [rsi+20h]
.text:0000000180003EA1                 mov     edx, [rsi+1Ch]
.text:0000000180003EA4                 mov     r8d, [rsi+24h]
.text:0000000180003EA8                 mov     r10d, [rsi+14h]
.text:0000000180003EAC                 mov     r11d, [rsi+10h]
.text:0000000180003EB0                 mov     r9d, cs:dword_18001B298
.text:0000000180003EB7                 mov     [rsp+390h+var_348], ecx
.text:0000000180003EBB                 mov     [rsp+390h+var_350], edx
.text:0000000180003EBF                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180003EC3                 mov     [rsp+390h+var_358], r8d
.text:0000000180003EC8                 mov     edx, 200h       ; BufferCount
.text:0000000180003ECD                 mov     [rsp+390h+Flags], r10d
.text:0000000180003ED2                 mov     [rsp+390h+Period], r11d
.text:0000000180003ED7                 mov     [rsp+390h+DueTime], eax
.text:0000000180003EDB                 cmp     ebx, eax
.text:0000000180003EDD                 jge     loc_1800041FB
.text:0000000180003EE3                 inc     r9d
.text:0000000180003EE6                 mov     cs:dword_18001B298, r9d
.text:0000000180003EED                 lea     r8, aEventLvarsRece ; "EVENT_LVARS_RECEIVED:%d of %d: dwObject"...
.text:0000000180003EF4                 call    sub_1800029E0
.text:0000000180003EF9                 call    sub_180007430
.text:0000000180003EFE                 mov     rcx, rax
.text:0000000180003F01                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180003F05                 call    sub_180007F50
.text:0000000180003F0A                 xor     r15d, r15d
.text:0000000180003F0D                 movsxd  r13, ebx
.text:0000000180003F10                 mov     rax, [rdi+r13*8+48h]
.text:0000000180003F15                 lea     r12, [rdi+360h]
.text:0000000180003F1C                 cmp     [rax+28h], r15d
.text:0000000180003F20                 jle     loc_1800040F8
.text:0000000180003F26                 xorps   xmm6, xmm6
.text:0000000180003F29                 nop     dword ptr [rax+00000000h]
.text:0000000180003F30
.text:0000000180003F30 loc_180003F30:                          ; CODE XREF: sub_1800034B0+C3B↓j
.text:0000000180003F30                 movsxd  rax, r15d
.text:0000000180003F33                 imul    rbx, rax, 38h ; '8'
.text:0000000180003F37                 lea     r9, [rsi+28h]
.text:0000000180003F3B                 add     r9, rbx
.text:0000000180003F3E                 lea     r8, aLvarDataNameS ; "LVAR Data: name='%s'"
.text:0000000180003F45                 mov     edx, 200h       ; BufferCount
.text:0000000180003F4A                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180003F4E                 call    sub_1800029E0
.text:0000000180003F53                 call    sub_180007430
.text:0000000180003F58                 mov     rcx, rax
.text:0000000180003F5B                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180003F5F                 call    sub_180007D40
.text:0000000180003F64                 mov     rcx, r12        ; lpCriticalSection
.text:0000000180003F67                 call    cs:EnterCriticalSection
.text:0000000180003F6D                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:0000000180003F74                 call    cs:EnterCriticalSection
.text:0000000180003F7A                 lea     rdx, [rsi+28h]
.text:0000000180003F7E                 add     rdx, rbx
.text:0000000180003F81                 lea     rcx, [rbp+290h+var_2F8]
.text:0000000180003F81 ;   } // starts at 180003A1B
.text:0000000180003F85                 call    sub_180005650
.text:0000000180003F8A                 nop
.text:0000000180003F8B                 mov     rdx, [rdi+2F0h]
.text:0000000180003F92                 cmp     rdx, [rdi+2F8h]
.text:0000000180003F99                 jz      short loc_180003FD1
.text:0000000180003F9B                 xorps   xmm0, xmm0
.text:0000000180003F9E                 movups  xmmword ptr [rdx], xmm0
.text:0000000180003FA1                 xor     ebx, ebx
.text:0000000180003FA3                 mov     [rdx+10h], rbx
.text:0000000180003FA7                 mov     [rdx+18h], rbx
.text:0000000180003FAB                 movups  xmm0, xmmword ptr [rax]
.text:0000000180003FAE                 movups  xmmword ptr [rdx], xmm0
.text:0000000180003FB1                 movups  xmm1, xmmword ptr [rax+10h]
.text:0000000180003FB5                 movups  xmmword ptr [rdx+10h], xmm1
.text:0000000180003FB9                 mov     [rax+10h], rbx
.text:0000000180003FBD                 mov     qword ptr [rax+18h], 0Fh
.text:0000000180003FC5                 mov     [rax], bl
.text:0000000180003FC7                 add     qword ptr [rdi+2F0h], 20h ; ' '
.text:0000000180003FCF                 jmp     short loc_180003FE2
.text:0000000180003FD1 ; ---------------------------------------------------------------------------
.text:0000000180003FD1
.text:0000000180003FD1 loc_180003FD1:                          ; CODE XREF: sub_1800034B0+AE9↑j
.text:0000000180003FD1                 mov     r8, rax
.text:0000000180003FD4                 lea     rcx, [rdi+2E8h]
.text:0000000180003FDB ;   try {
.text:0000000180003FDB                 call    sub_180006310
.text:0000000180003FE0                 xor     ebx, ebx
.text:0000000180003FE2
.text:0000000180003FE2 loc_180003FE2:                          ; CODE XREF: sub_1800034B0+B1F↑j
.text:0000000180003FE2                 mov     rdx, [rbp+290h+var_2E0]
.text:0000000180003FE6                 cmp     rdx, 10h
.text:0000000180003FEA                 jb      short loc_18000401D
.text:0000000180003FEC                 inc     rdx
.text:0000000180003FEF                 mov     rcx, [rbp+290h+var_2F8]
.text:0000000180003FF3                 mov     rax, rcx
.text:0000000180003FF6                 cmp     rdx, 1000h
.text:0000000180003FFD                 jb      short loc_180004018
.text:0000000180003FFF                 add     rdx, 27h ; '''
.text:0000000180004003                 mov     rcx, [rcx-8]    ; Block
.text:0000000180004007                 sub     rax, rcx
.text:000000018000400A                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000400E                 cmp     rax, 1Fh
.text:0000000180004012                 ja      loc_1800041F4
.text:0000000180004018
.text:0000000180004018 loc_180004018:                          ; CODE XREF: sub_1800034B0+B4D↑j
.text:0000000180004018                 call    j_j_free
.text:000000018000401D
.text:000000018000401D loc_18000401D:                          ; CODE XREF: sub_1800034B0+B3A↑j
.text:000000018000401D                 movsd   qword ptr [rsp+390h+var_320], xmm6
.text:0000000180004023                 lea     rcx, [rdi+300h]
.text:000000018000402A                 mov     rdx, [rcx+8]
.text:000000018000402E                 cmp     rdx, [rcx+10h]
.text:0000000180004032                 jz      short loc_180004041
.text:0000000180004034                 mov     [rdx], rbx
.text:0000000180004037                 lea     rax, [rdx+8]
.text:000000018000403B                 mov     [rcx+8], rax
.text:000000018000403F                 jmp     short loc_18000404B
.text:0000000180004041 ; ---------------------------------------------------------------------------
.text:0000000180004041
.text:0000000180004041 loc_180004041:                          ; CODE XREF: sub_1800034B0+B82↑j
.text:0000000180004041                 lea     r8, [rsp+390h+var_320]
.text:0000000180004041 ;   } // starts at 180003FDB
.text:0000000180004046                 call    sub_180005FF0
.text:000000018000404B
.text:000000018000404B loc_18000404B:                          ; CODE XREF: sub_1800034B0+B8F↑j
.text:000000018000404B                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:0000000180004052                 call    cs:LeaveCriticalSection
.text:0000000180004058                 mov     rcx, r12        ; lpCriticalSection
.text:000000018000405B                 call    cs:LeaveCriticalSection
.text:0000000180004061                 mov     [rsp+390h+var_33C], 0
.text:0000000180004066                 mov     rdx, [rdi+318h]
.text:000000018000406D                 mov     rcx, [rdi+330h]
.text:0000000180004074                 test    rcx, rcx
.text:0000000180004077                 jns     short loc_1800040A0
.text:0000000180004079                 mov     rax, rcx
.text:000000018000407C                 neg     rax
.text:000000018000407F                 jz      short loc_1800040A0
.text:0000000180004081                 mov     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000180004088                 sub     rax, rcx
.text:000000018000408B                 shr     rax, 5
.text:000000018000408F                 lea     rax, ds:4[rax*4]
.text:0000000180004097                 sub     rdx, rax
.text:000000018000409A                 mov     [rbp+290h+var_2D0], rdx
.text:000000018000409E                 jmp     short loc_1800040AF
.text:00000001800040A0 ; ---------------------------------------------------------------------------
.text:00000001800040A0
.text:00000001800040A0 loc_1800040A0:                          ; CODE XREF: sub_1800034B0+BC7↑j
.text:00000001800040A0                                         ; sub_1800034B0+BCF↑j
.text:00000001800040A0                 mov     rax, rcx
.text:00000001800040A3                 shr     rax, 5
.text:00000001800040A7                 lea     rax, [rdx+rax*4]
.text:00000001800040AB                 mov     [rbp+290h+var_2D0], rax
.text:00000001800040AF
.text:00000001800040AF loc_1800040AF:                          ; CODE XREF: sub_1800034B0+BEE↑j
.text:00000001800040AF                 and     ecx, 1Fh
.text:00000001800040B2                 mov     [rbp+290h+var_2D0+8], rcx
.text:00000001800040B6                 movaps  xmm0, xmmword ptr [rbp+290h+var_2D0]
.text:00000001800040BA                 movdqa  [rsp+390h+var_320], xmm0
.text:00000001800040C0                 lea     rax, [rsp+390h+var_33C]
.text:00000001800040C5                 mov     qword ptr [rsp+390h+DueTime], rax
.text:00000001800040CA                 lea     r8, [rsp+390h+var_320]
.text:00000001800040CF                 lea     rdx, [rbp+290h+var_2B0]
.text:00000001800040D3                 lea     rcx, [rdi+318h]
.text:00000001800040DA                 call    sub_1800058D0
.text:00000001800040DF                 inc     r15d
.text:00000001800040E2                 mov     rax, [rdi+r13*8+48h]
.text:00000001800040E7                 cmp     r15d, [rax+28h]
.text:00000001800040EB                 jl      loc_180003F30
.text:00000001800040F1                 lea     r14, [rdi+3D8h]
.text:00000001800040F8
.text:00000001800040F8 loc_1800040F8:                          ; CODE XREF: sub_1800034B0+A70↑j
.text:00000001800040F8                 mov     edx, [rax+2Ch]
.text:00000001800040FB                 mov     rcx, [rdi]
.text:00000001800040FE                 call    sub_18000BB20
.text:0000000180004103                 test    eax, eax
.text:0000000180004105                 jns     short loc_180004136
.text:0000000180004107                 mov     rax, [rdi+r13*8+48h]
.text:000000018000410C                 mov     r9d, [rax+20h]
.text:0000000180004110                 lea     r8, aErrorClearingL_0 ; "Error clearing lvar data definition wit"...
.text:0000000180004117                 mov     edx, 200h       ; BufferCount
.text:000000018000411C                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180004120                 call    sub_1800029E0
.text:0000000180004125                 call    sub_180007430
.text:000000018000412A                 mov     rcx, rax
.text:000000018000412D                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180004131                 call    sub_180007930
.text:0000000180004136
.text:0000000180004136 loc_180004136:                          ; CODE XREF: sub_1800034B0+C55↑j
.text:0000000180004136                 mov     rdx, [rdi+r13*8+48h]
.text:000000018000413B                 lea     rcx, [rbp+290h+var_2F8]
.text:000000018000413F                 call    sub_180005770
.text:0000000180004144                 lea     rdx, [rbp+290h+var_2F8]
.text:0000000180004148                 mov     rcx, [rdi+350h]
.text:000000018000414F                 call    sub_18000ADD0
.text:0000000180004154                 mov     rbx, [rdi+r13*8+48h]
.text:0000000180004159                 test    rbx, rbx
.text:000000018000415C                 jz      short loc_1800041B8
.text:000000018000415E                 mov     rdx, [rbx+18h]
.text:0000000180004162                 cmp     rdx, 10h
.text:0000000180004166                 jb      short loc_180004198
.text:0000000180004168                 inc     rdx
.text:000000018000416B                 mov     rcx, [rbx]
.text:000000018000416E                 cmp     rdx, 1000h
.text:0000000180004175                 jb      short loc_180004193
.text:0000000180004177                 add     rdx, 27h ; '''
.text:000000018000417B                 mov     r8, [rcx-8]
.text:000000018000417F                 sub     rcx, r8
.text:0000000180004182                 lea     rax, [rcx-8]
.text:0000000180004186                 cmp     rax, 1Fh
.text:000000018000418A                 ja      loc_180004BE4
.text:0000000180004190                 mov     rcx, r8         ; Block
.text:0000000180004193
.text:0000000180004193 loc_180004193:                          ; CODE XREF: sub_1800034B0+CC5↑j
.text:0000000180004193                 call    j_j_free
.text:0000000180004198
.text:0000000180004198 loc_180004198:                          ; CODE XREF: sub_1800034B0+CB6↑j
.text:0000000180004198                 mov     qword ptr [rbx+10h], 0
.text:00000001800041A0                 mov     qword ptr [rbx+18h], 0Fh
.text:00000001800041A8                 mov     byte ptr [rbx], 0
.text:00000001800041AB                 mov     edx, 38h ; '8'
.text:00000001800041B0                 mov     rcx, rbx        ; Block
.text:00000001800041B3                 call    j_j_free
.text:00000001800041B8
.text:00000001800041B8 loc_1800041B8:                          ; CODE XREF: sub_1800034B0+CAC↑j
.text:00000001800041B8                 mov     qword ptr [rdi+r13*8+48h], 0
.text:00000001800041C1                 mov     eax, [rdi+1Ch]
.text:00000001800041C4                 cmp     cs:dword_18001B298, eax
.text:00000001800041CA                 jnz     short loc_180004242
.text:00000001800041CC                 cmp     qword ptr [rdi+400h], 0
.text:00000001800041D4                 jz      short loc_180004242
.text:00000001800041D6                 mov     cs:byte_180019AD8, 1
.text:00000001800041DD                 mov     rcx, r12        ; lpCriticalSection
.text:00000001800041E0                 call    cs:EnterCriticalSection
.text:00000001800041E6                 mov     rcx, r14        ; lpCriticalSection
.text:00000001800041E9                 call    cs:LeaveCriticalSection
.text:00000001800041EF                 jmp     loc_180004C47
.text:00000001800041F4 ; ---------------------------------------------------------------------------
.text:00000001800041F4
.text:00000001800041F4 loc_1800041F4:                          ; CODE XREF: sub_1800034B0+B62↑j
.text:00000001800041F4                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800041FA                 int     3               ; Trap to Debugger
.text:00000001800041FB ; ---------------------------------------------------------------------------
.text:00000001800041FB
.text:00000001800041FB loc_1800041FB:                          ; CODE XREF: sub_1800034B0+A2D↑j
.text:00000001800041FB                 lea     r8, aEventLvarsRece_0 ; "EVENT_LVARS_RECEIVED but id not found:%"...
.text:0000000180004202                 call    sub_1800029E0
.text:0000000180004207                 call    sub_180007430
.text:000000018000420C                 mov     rcx, rax
.text:000000018000420F                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180004213                 call    sub_180007F50
.text:0000000180004218                 mov     r9d, [rsi+10h]
.text:000000018000421C                 lea     r8, aErrorCdaWithId ; "Error: CDA with id=%d not found"
.text:0000000180004223                 mov     edx, 200h       ; BufferCount
.text:0000000180004228                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:000000018000422C                 call    sub_1800029E0
.text:0000000180004231                 call    sub_180007430
.text:0000000180004236                 mov     rcx, rax
.text:0000000180004239                 lea     rdx, [rbp+290h+Buffer]
.text:000000018000423D                 call    sub_180007930
.text:0000000180004242
.text:0000000180004242 loc_180004242:                          ; CODE XREF: sub_1800034B0+D1A↑j
.text:0000000180004242                                         ; sub_1800034B0+D24↑j
.text:0000000180004242                 mov     rcx, r14        ; lpCriticalSection
.text:0000000180004245                 call    cs:LeaveCriticalSection
.text:000000018000424B                 jmp     loc_180004C47
.text:0000000180004250 ; ---------------------------------------------------------------------------
.text:0000000180004250
.text:0000000180004250 loc_180004250:                          ; CODE XREF: sub_1800034B0+85↑j
.text:0000000180004250                                         ; DATA XREF: sub_1800034B0:jpt_180003535↓o
.text:0000000180004250                 lea     rcx, [rdi+3D8h] ; jumptable 0000000180003535 cases 100-103
.text:0000000180004257                 call    cs:EnterCriticalSection
.text:000000018000425D                 mov     eax, [rsi+20h]
.text:0000000180004260                 mov     [rsp+390h+var_358], eax
.text:0000000180004264                 mov     eax, [rsi+1Ch]
.text:0000000180004267                 mov     [rsp+390h+Flags], eax
.text:000000018000426B                 mov     eax, [rsi+24h]
.text:000000018000426E                 mov     [rsp+390h+Period], eax
.text:0000000180004272                 mov     eax, [rsi+14h]
.text:0000000180004275                 mov     [rsp+390h+DueTime], eax
.text:0000000180004279                 mov     r9d, [rsi+10h]
.text:000000018000427D                 lea     r8, aEventHvarsRece ; "EVENT_HVARS_RECEIVED: dwObjectID=%d, dw"...
.text:0000000180004284                 mov     edx, 200h       ; BufferCount
.text:0000000180004289                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:000000018000428D                 call    sub_1800029E0
.text:0000000180004292                 call    sub_180007430
.text:0000000180004297                 mov     rcx, rax
.text:000000018000429A                 lea     rdx, [rbp+290h+Buffer]
.text:000000018000429E                 call    sub_180007F50
.text:00000001800042A3                 lea     r15, [rdi+3B0h]
.text:00000001800042AA                 mov     rcx, r15        ; lpCriticalSection
.text:00000001800042AD                 call    cs:EnterCriticalSection
.text:00000001800042B3                 mov     ecx, ebx
.text:00000001800042B5                 lea     rdx, [rdi+278h]
.text:00000001800042BC                 nop     dword ptr [rax+00h]
.text:00000001800042C0
.text:00000001800042C0 loc_1800042C0:                          ; CODE XREF: sub_1800034B0+E2A↓j
.text:00000001800042C0                 mov     r8, [rdx]
.text:00000001800042C3                 test    r8, r8
.text:00000001800042C6                 jz      short loc_1800042D1
.text:00000001800042C8                 mov     eax, [rsi+14h]
.text:00000001800042CB                 cmp     [r8+2Ch], eax
.text:00000001800042CF                 jz      short loc_1800042DC
.text:00000001800042D1
.text:00000001800042D1 loc_1800042D1:                          ; CODE XREF: sub_1800034B0+E16↑j
.text:00000001800042D1                 inc     ecx
.text:00000001800042D3                 add     rdx, 8
.text:00000001800042D7                 cmp     ecx, 4
.text:00000001800042DA                 jl      short loc_1800042C0
.text:00000001800042DC
.text:00000001800042DC loc_1800042DC:                          ; CODE XREF: sub_1800034B0+E1F↑j
.text:00000001800042DC                 cmp     ecx, [rdi+20h]
.text:00000001800042DF                 jge     loc_1800044D4
.text:00000001800042E5                 mov     r14d, ebx
.text:00000001800042E8                 movsxd  r12, ecx
.text:00000001800042EB                 mov     rax, [rdi+r12*8+278h]
.text:00000001800042F3                 cmp     [rax+28h], ebx
.text:00000001800042F6                 jle     loc_1800043F6
.text:00000001800042FC                 nop     dword ptr [rax+00h]
.text:0000000180004300
.text:0000000180004300 loc_180004300:                          ; CODE XREF: sub_1800034B0+F39↓j
.text:0000000180004300                 movsxd  rax, r14d
.text:0000000180004303                 imul    rbx, rax, 38h ; '8'
.text:0000000180004307                 add     rbx, 28h ; '('
.text:000000018000430B                 add     rbx, rsi
.text:000000018000430E                 mov     qword ptr [rsp+390h+DueTime], rbx
.text:0000000180004313                 mov     r9d, r14d
.text:0000000180004316                 lea     r8, aHvarDataId03dN ; "HVAR Data: ID=%03d, name='%s'"
.text:000000018000431D                 mov     edx, 200h       ; BufferCount
.text:0000000180004322                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180004326                 call    sub_1800029E0
.text:000000018000432B                 call    sub_180007430
.text:0000000180004330                 mov     rcx, rax
.text:0000000180004333                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180004337                 call    sub_180007D40
.text:000000018000433C                 mov     rdx, rbx
.text:000000018000433F                 lea     rcx, [rbp+290h+var_2F8]
.text:0000000180004343                 call    sub_180005650
.text:0000000180004348                 nop
.text:0000000180004349 ;   try {
.text:0000000180004349                 mov     rdx, [rdi+340h]
.text:0000000180004350                 cmp     rdx, [rdi+348h]
.text:0000000180004357                 jz      short loc_18000438F
.text:0000000180004359                 xorps   xmm0, xmm0
.text:000000018000435C                 movups  xmmword ptr [rdx], xmm0
.text:000000018000435F                 xor     ebx, ebx
.text:0000000180004361                 mov     [rdx+10h], rbx
.text:0000000180004365                 mov     [rdx+18h], rbx
.text:0000000180004369                 movups  xmm0, xmmword ptr [rax]
.text:000000018000436C                 movups  xmmword ptr [rdx], xmm0
.text:000000018000436F                 movups  xmm1, xmmword ptr [rax+10h]
.text:0000000180004373                 movups  xmmword ptr [rdx+10h], xmm1
.text:0000000180004377                 mov     [rax+10h], rbx
.text:000000018000437B                 mov     qword ptr [rax+18h], 0Fh
.text:0000000180004383                 mov     [rax], bl
.text:0000000180004385                 add     qword ptr [rdi+340h], 20h ; ' '
.text:000000018000438D                 jmp     short loc_18000439F
.text:000000018000438F ; ---------------------------------------------------------------------------
.text:000000018000438F
.text:000000018000438F loc_18000438F:                          ; CODE XREF: sub_1800034B0+EA7↑j
.text:000000018000438F                 mov     r8, rax
.text:0000000180004392                 lea     rcx, [rdi+338h]
.text:0000000180004399                 call    sub_180006310
.text:000000018000439E                 nop
.text:000000018000439E ;   } // starts at 180004349
.text:000000018000439F
.text:000000018000439F loc_18000439F:                          ; CODE XREF: sub_1800034B0+EDD↑j
.text:000000018000439F                 mov     rdx, [rbp+290h+var_2E0]
.text:00000001800043A3                 cmp     rdx, 10h
.text:00000001800043A7                 jb      short loc_1800043DA
.text:00000001800043A9                 inc     rdx
.text:00000001800043AC                 mov     rcx, [rbp+290h+var_2F8]
.text:00000001800043B0                 mov     rax, rcx
.text:00000001800043B3                 cmp     rdx, 1000h
.text:00000001800043BA                 jb      short loc_1800043D5
.text:00000001800043BC                 add     rdx, 27h ; '''
.text:00000001800043C0                 mov     rcx, [rcx-8]    ; Block
.text:00000001800043C4                 sub     rax, rcx
.text:00000001800043C7                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:00000001800043CB                 cmp     rax, 1Fh
.text:00000001800043CF                 ja      loc_1800044CD
.text:00000001800043D5
.text:00000001800043D5 loc_1800043D5:                          ; CODE XREF: sub_1800034B0+F0A↑j
.text:00000001800043D5                 call    j_j_free
.text:00000001800043DA
.text:00000001800043DA loc_1800043DA:                          ; CODE XREF: sub_1800034B0+EF7↑j
.text:00000001800043DA                 inc     r14d
.text:00000001800043DD                 mov     rax, [rdi+r12*8+278h]
.text:00000001800043E5                 cmp     r14d, [rax+28h]
.text:00000001800043E9                 jl      loc_180004300
.text:00000001800043EF                 lea     r15, [rdi+3B0h]
.text:00000001800043F6
.text:00000001800043F6 loc_1800043F6:                          ; CODE XREF: sub_1800034B0+E46↑j
.text:00000001800043F6                 mov     edx, [rax+2Ch]
.text:00000001800043F9                 mov     rcx, [rdi]
.text:00000001800043FC                 call    sub_18000BB20
.text:0000000180004401                 test    eax, eax
.text:0000000180004403                 jns     short loc_180004437
.text:0000000180004405                 mov     rax, [rdi+r12*8+278h]
.text:000000018000440D                 mov     r9d, [rax+20h]
.text:0000000180004411                 lea     r8, aErrorClearingH ; "Error clearing hvar data definition wit"...
.text:0000000180004418                 mov     edx, 200h       ; BufferCount
.text:000000018000441D                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180004421                 call    sub_1800029E0
.text:0000000180004426                 call    sub_180007430
.text:000000018000442B                 mov     rcx, rax
.text:000000018000442E                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180004432                 call    sub_180007930
.text:0000000180004437
.text:0000000180004437 loc_180004437:                          ; CODE XREF: sub_1800034B0+F53↑j
.text:0000000180004437                 mov     rdx, [rdi+r12*8+278h]
.text:000000018000443F                 lea     rcx, [rbp+290h+var_2F8]
.text:0000000180004443                 call    sub_180005770
.text:0000000180004448                 lea     rdx, [rbp+290h+var_2F8]
.text:000000018000444C                 mov     rcx, [rdi+350h]
.text:0000000180004453                 call    sub_18000ADD0
.text:0000000180004458                 mov     rbx, [rdi+r12*8+278h]
.text:0000000180004460                 test    rbx, rbx
.text:0000000180004463                 jz      short loc_1800044BF
.text:0000000180004465                 mov     rdx, [rbx+18h]
.text:0000000180004469                 cmp     rdx, 10h
.text:000000018000446D                 jb      short loc_18000449F
.text:000000018000446F                 inc     rdx
.text:0000000180004472                 mov     rcx, [rbx]
.text:0000000180004475                 cmp     rdx, 1000h
.text:000000018000447C                 jb      short loc_18000449A
.text:000000018000447E                 add     rdx, 27h ; '''
.text:0000000180004482                 mov     r8, [rcx-8]
.text:0000000180004486                 sub     rcx, r8
.text:0000000180004489                 lea     rax, [rcx-8]
.text:000000018000448D                 cmp     rax, 1Fh
.text:0000000180004491                 ja      loc_180004BE4
.text:0000000180004497                 mov     rcx, r8         ; Block
.text:000000018000449A
.text:000000018000449A loc_18000449A:                          ; CODE XREF: sub_1800034B0+FCC↑j
.text:000000018000449A                 call    j_j_free
.text:000000018000449F
.text:000000018000449F loc_18000449F:                          ; CODE XREF: sub_1800034B0+FBD↑j
.text:000000018000449F                 mov     qword ptr [rbx+10h], 0
.text:00000001800044A7                 mov     qword ptr [rbx+18h], 0Fh
.text:00000001800044AF                 mov     byte ptr [rbx], 0
.text:00000001800044B2                 mov     edx, 38h ; '8'
.text:00000001800044B7                 mov     rcx, rbx        ; Block
.text:00000001800044BA                 call    j_j_free
.text:00000001800044BF
.text:00000001800044BF loc_1800044BF:                          ; CODE XREF: sub_1800034B0+FB3↑j
.text:00000001800044BF                 mov     qword ptr [rdi+r12*8+278h], 0
.text:00000001800044CB                 jmp     short loc_1800044FE
.text:00000001800044CD ; ---------------------------------------------------------------------------
.text:00000001800044CD
.text:00000001800044CD loc_1800044CD:                          ; CODE XREF: sub_1800034B0+F1F↑j
.text:00000001800044CD                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800044D3                 int     3               ; Trap to Debugger
.text:00000001800044D4 ; ---------------------------------------------------------------------------
.text:00000001800044D4
.text:00000001800044D4 loc_1800044D4:                          ; CODE XREF: sub_1800034B0+E2F↑j
.text:00000001800044D4                 mov     r9d, [rsi+14h]
.text:00000001800044D8                 lea     r8, aErrorCdaWithId ; "Error: CDA with id=%d not found"
.text:00000001800044DF                 mov     edx, 200h       ; BufferCount
.text:00000001800044E4                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:00000001800044E8                 call    sub_1800029E0
.text:00000001800044ED                 call    sub_180007430
.text:00000001800044F2                 mov     rcx, rax
.text:00000001800044F5                 lea     rdx, [rbp+290h+Buffer]
.text:00000001800044F9                 call    sub_180007930
.text:00000001800044FE
.text:00000001800044FE loc_1800044FE:                          ; CODE XREF: sub_1800034B0+101B↑j
.text:00000001800044FE                 mov     rcx, r15        ; lpCriticalSection
.text:0000000180004501                 call    cs:LeaveCriticalSection
.text:0000000180004507                 lea     rcx, [rdi+3D8h] ; lpCriticalSection
.text:000000018000450E                 call    cs:LeaveCriticalSection
.text:0000000180004514                 jmp     loc_180004C47
.text:0000000180004519 ; ---------------------------------------------------------------------------
.text:0000000180004519
.text:0000000180004519 loc_180004519:                          ; CODE XREF: sub_1800034B0+85↑j
.text:0000000180004519                                         ; DATA XREF: sub_1800034B0:jpt_180003535↓o
.text:0000000180004519                 lea     eax, [rdx-0Ah]  ; jumptable 0000000180003535 cases 10-19
.text:000000018000451C                 mov     rdx, [rdi+rax*8+298h]
.text:0000000180004524                 mov     eax, [rsi+14h]
.text:0000000180004527                 cmp     [rdx+2Ch], eax
.text:000000018000452A                 jnz     loc_180004C47
.text:0000000180004530                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:0000000180004537                 call    cs:EnterCriticalSection
.text:000000018000453D                 mov     rdx, [rdi+2F0h]
.text:0000000180004544                 sub     rdx, [rdi+2E8h]
.text:000000018000454B                 sar     rdx, 5
.text:000000018000454F                 mov     ecx, [rsi+0Ch]
.text:0000000180004552                 mov     eax, ecx
.text:0000000180004554                 shl     rax, 0Ah
.text:0000000180004558                 sub     rax, 2800h
.text:000000018000455E                 cmp     rdx, rax
.text:0000000180004561                 ja      short loc_1800045C7
.text:0000000180004563                 lea     r9d, [rcx-0Ah]
.text:0000000180004567                 mov     eax, [rsi+20h]
.text:000000018000456A                 mov     [rsp+390h+var_348], eax
.text:000000018000456E                 mov     eax, [rsi+1Ch]
.text:0000000180004571                 mov     [rsp+390h+var_350], eax
.text:0000000180004575                 mov     eax, [rsi+24h]
.text:0000000180004578                 mov     [rsp+390h+var_358], eax
.text:000000018000457C                 mov     eax, [rsi+14h]
.text:000000018000457F                 mov     [rsp+390h+Flags], eax
.text:0000000180004583                 mov     eax, [rsi+10h]
.text:0000000180004586                 mov     [rsp+390h+Period], eax
.text:000000018000458A                 mov     qword ptr [rsp+390h+DueTime], rdx
.text:000000018000458F                 lea     r8, aEventValuesRec ; "EVENT_VALUES_RECEIVED+%d: Ignoring as w"...
.text:0000000180004596                 mov     edx, 200h       ; BufferCount
.text:000000018000459B                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:000000018000459F                 call    sub_1800029E0
.text:00000001800045A4                 call    sub_180007430
.text:00000001800045A9                 mov     rcx, rax
.text:00000001800045AC                 lea     rdx, [rbp+290h+Buffer]
.text:00000001800045B0                 call    sub_180007F50
.text:00000001800045B5                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:00000001800045BC                 call    cs:LeaveCriticalSection
.text:00000001800045C2                 jmp     loc_180004C47
.text:00000001800045C7 ; ---------------------------------------------------------------------------
.text:00000001800045C7
.text:00000001800045C7 loc_1800045C7:                          ; CODE XREF: sub_1800034B0+10B1↑j
.text:00000001800045C7                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:00000001800045CE                 call    cs:LeaveCriticalSection
.text:00000001800045D4                 mov     r9d, [rsi+0Ch]
.text:00000001800045D8                 sub     r9d, 0Ah
.text:00000001800045DC                 mov     eax, [rsi+20h]
.text:00000001800045DF                 mov     [rsp+390h+var_350], eax
.text:00000001800045E3                 mov     eax, [rsi+1Ch]
.text:00000001800045E6                 mov     [rsp+390h+var_358], eax
.text:00000001800045EA                 mov     eax, [rsi+24h]
.text:00000001800045ED                 mov     [rsp+390h+Flags], eax
.text:00000001800045F1                 mov     eax, [rsi+14h]
.text:00000001800045F4                 mov     [rsp+390h+Period], eax
.text:00000001800045F8                 mov     eax, [rsi+10h]
.text:00000001800045FB                 mov     [rsp+390h+DueTime], eax
.text:00000001800045FF                 lea     r8, aEventValuesRec_0 ; "EVENT_VALUES_RECEIVED+%d: dwObjectID=%d"...
.text:0000000180004606                 mov     edx, 200h       ; BufferCount
.text:000000018000460B                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:000000018000460F                 call    sub_1800029E0
.text:0000000180004614                 call    sub_180007430
.text:0000000180004619                 mov     rcx, rax
.text:000000018000461C                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180004620                 call    sub_180007D40
.text:0000000180004625                 xorps   xmm1, xmm1
.text:0000000180004628                 movdqu  xmmword ptr [rbp+290h+var_298], xmm1
.text:000000018000462D                 mov     [rbp+290h+var_288], rbx
.text:0000000180004631 ;   try {
.text:0000000180004631                 movdqu  xmmword ptr [rbp+290h+var_2B0], xmm1
.text:0000000180004636                 mov     [rsp+390h+var_338], rbx
.text:000000018000463B                 mov     [rbp+290h+var_2A0], rbx
.text:000000018000463F                 movdqu  xmmword ptr [rbp+290h+var_2D0], xmm1
.text:0000000180004644                 mov     [rsp+390h+var_330], rbx
.text:0000000180004649                 mov     [rbp+290h+var_2C0], rbx
.text:000000018000464D                 lea     r12, [rsi+28h]
.text:0000000180004651                 cmp     cs:byte_180019AD8, 0
.text:0000000180004658                 jnz     short loc_180004669
.text:000000018000465A                 lea     rcx, [rdi+360h] ; lpCriticalSection
.text:0000000180004661                 call    cs:EnterCriticalSection
.text:0000000180004667                 xor     ebx, ebx
.text:0000000180004669
.text:0000000180004669 loc_180004669:                          ; CODE XREF: sub_1800034B0+11A8↑j
.text:0000000180004669                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:0000000180004670                 call    cs:EnterCriticalSection
.text:0000000180004676                 mov     edx, ebx
.text:0000000180004678                 mov     [rsp+390h+var_340], ebx
.text:000000018000467C                 mov     r8d, [rsi+0Ch]
.text:0000000180004680                 lea     eax, [r8-0Ah]
.text:0000000180004684                 mov     rax, [rdi+rax*8+298h]
.text:000000018000468C                 mov     r14, [rbp+290h+var_298+8]
.text:0000000180004690                 mov     r15, [rbp+290h+var_2B0+8]
.text:0000000180004694                 cmp     dword ptr [rax+28h], 0
.text:0000000180004698                 jle     loc_180004941
.text:000000018000469E                 mov     [rsp+390h+var_328], rbx
.text:00000001800046A3                 mov     rbx, [rbp+290h+var_2D0+8]
.text:00000001800046A7                 nop     word ptr [rax+rax+00000000h]
.text:00000001800046B0
.text:00000001800046B0 loc_1800046B0:                          ; CODE XREF: sub_1800034B0+148C↓j
.text:00000001800046B0                 mov     rcx, [rdi+2F0h]
.text:00000001800046B7                 sub     rcx, [rdi+2E8h]
.text:00000001800046BE                 sar     rcx, 5
.text:00000001800046C2                 movsxd  r9, edx
.text:00000001800046C5                 mov     qword ptr [rsp+390h+var_320], r9
.text:00000001800046CA                 mov     rax, r8
.text:00000001800046CD                 shl     rax, 0Ah
.text:00000001800046D1                 add     rax, 0FFFFFFFFFFFFD800h
.text:00000001800046D7                 add     rax, r9
.text:00000001800046DA                 cmp     rax, rcx
.text:00000001800046DD                 jnb     loc_180004945
.text:00000001800046E3                 shl     r8d, 0Ah
.text:00000001800046E7                 lea     r9d, [r8-2800h]
.text:00000001800046EE                 add     r9d, edx
.text:00000001800046F1                 movsd   xmm0, qword ptr [r12]
.text:00000001800046F7                 movsd   qword ptr [rsp+390h+DueTime], xmm0
.text:00000001800046FD                 lea     r8, aLvarValueId03d ; "Lvar value: ID=%03d, value=%lf"
.text:0000000180004704                 mov     edx, 200h       ; BufferCount
.text:0000000180004709                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:000000018000470D                 call    sub_1800029E0
.text:0000000180004712                 call    sub_180007430
.text:0000000180004717                 mov     rcx, rax
.text:000000018000471A                 lea     rdx, [rbp+290h+Buffer]
.text:000000018000471E                 call    sub_180007D40
.text:0000000180004723                 mov     r10d, [rsi+0Ch]
.text:0000000180004727                 mov     ecx, r10d
.text:000000018000472A                 shl     rcx, 0Ah
.text:000000018000472E                 sub     rcx, 2800h
.text:0000000180004735                 mov     r9, [rsp+390h+var_328]
.text:000000018000473A                 lea     rdx, [rcx+r9]
.text:000000018000473E                 mov     r8, [rdi+300h]
.text:0000000180004745                 mov     rax, [rdi+308h]
.text:000000018000474C                 sub     rax, r8
.text:000000018000474F                 sar     rax, 3
.text:0000000180004753                 cmp     rax, rdx
.text:0000000180004756                 jbe     loc_180004C79
.text:000000018000475C                 movsd   xmm0, qword ptr [r8+rdx*8]
.text:0000000180004762                 ucomisd xmm0, qword ptr [r12]
.text:0000000180004768                 jp      short loc_180004770
.text:000000018000476A                 jz      loc_1800048DC
.text:0000000180004770
.text:0000000180004770 loc_180004770:                          ; CODE XREF: sub_1800034B0+12B8↑j
.text:0000000180004770                 add     rcx, qword ptr [rsp+390h+var_320]
.text:0000000180004775                 cmp     [rdi+330h], rcx
.text:000000018000477C                 jbe     loc_180004C85
.text:0000000180004782                 mov     r8, [rdi+318h]
.text:0000000180004789                 mov     rdx, rcx
.text:000000018000478C                 shr     rdx, 5
.text:0000000180004790                 and     ecx, 1Fh
.text:0000000180004793                 mov     eax, 1
.text:0000000180004798                 shl     eax, cl
.text:000000018000479A                 test    [r8+rdx*4], eax
.text:000000018000479E                 jz      loc_1800048DC
.text:00000001800047A4                 cmp     qword ptr [rdi+408h], 0
.text:00000001800047AC                 jnz     short loc_1800047BC
.text:00000001800047AE                 cmp     qword ptr [rdi+410h], 0
.text:00000001800047B6                 jz      loc_1800048DC
.text:00000001800047BC
.text:00000001800047BC loc_1800047BC:                          ; CODE XREF: sub_1800034B0+12FC↑j
.text:00000001800047BC                 shl     r10d, 0Ah
.text:00000001800047C0                 mov     r8d, [rsp+390h+var_340]
.text:00000001800047C5                 add     r8d, 0FFFFD800h
.text:00000001800047CC                 add     r8d, r10d
.text:00000001800047CF                 lea     rdx, aFlaggingLvarFo ; "Flagging lvar for callback: id=%d"
.text:00000001800047D6                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:00000001800047DA                 call    sub_180002980
.text:00000001800047DF                 call    sub_180007430
.text:00000001800047E4                 mov     rcx, rax
.text:00000001800047E7                 lea     rdx, [rbp+290h+Buffer]
.text:00000001800047EB                 call    sub_180007F50
.text:00000001800047F0                 mov     eax, [rsi+0Ch]
.text:00000001800047F3                 sub     eax, 0Ah
.text:00000001800047F6                 shl     eax, 0Ah
.text:00000001800047F9                 add     eax, [rsp+390h+var_340]
.text:00000001800047FD                 mov     [rbp+290h+var_310], eax
.text:0000000180004800                 cmp     r14, r13
.text:0000000180004803                 jz      short loc_180004812
.text:0000000180004805                 mov     [r14], eax
.text:0000000180004808                 add     r14, 4
.text:000000018000480C                 mov     [rbp+290h+var_298+8], r14
.text:0000000180004810                 jmp     short loc_18000482A
.text:0000000180004812 ; ---------------------------------------------------------------------------
.text:0000000180004812
.text:0000000180004812 loc_180004812:                          ; CODE XREF: sub_1800034B0+1353↑j
.text:0000000180004812                 lea     r8, [rbp+290h+var_310]
.text:0000000180004816                 mov     rdx, r14
.text:0000000180004819                 lea     rcx, [rbp+290h+var_298]
.text:0000000180004819 ;   } // starts at 180004631
.text:000000018000481D ;   try {
.text:000000018000481D                 call    sub_180006180
.text:0000000180004822                 mov     r13, [rbp+290h+var_288]
.text:0000000180004826                 mov     r14, [rbp+290h+var_298+8]
.text:000000018000482A
.text:000000018000482A loc_18000482A:                          ; CODE XREF: sub_1800034B0+1360↑j
.text:000000018000482A                 cmp     rbx, [rsp+390h+var_330]
.text:000000018000482F                 jz      short loc_180004842
.text:0000000180004831                 mov     rax, [r12]
.text:0000000180004835                 mov     [rbx], rax
.text:0000000180004838                 add     rbx, 8
.text:000000018000483C                 mov     [rbp+290h+var_2D0+8], rbx
.text:0000000180004840                 jmp     short loc_18000485E
.text:0000000180004842 ; ---------------------------------------------------------------------------
.text:0000000180004842
.text:0000000180004842 loc_180004842:                          ; CODE XREF: sub_1800034B0+137F↑j
.text:0000000180004842                 mov     r8, r12
.text:0000000180004845                 mov     rdx, rbx
.text:0000000180004848                 lea     rcx, [rbp+290h+var_2D0]
.text:000000018000484C                 call    sub_180005FF0
.text:0000000180004851                 mov     rax, [rbp+290h+var_2C0]
.text:0000000180004855                 mov     [rsp+390h+var_330], rax
.text:000000018000485A                 mov     rbx, [rbp+290h+var_2D0+8]
.text:000000018000485E
.text:000000018000485E loc_18000485E:                          ; CODE XREF: sub_1800034B0+1390↑j
.text:000000018000485E                 mov     ecx, [rsi+0Ch]
.text:0000000180004861                 sub     rcx, 0Ah
.text:0000000180004865                 shl     rcx, 0Ah
.text:0000000180004869                 mov     r9, [rsp+390h+var_328]
.text:000000018000486E                 add     rcx, r9
.text:0000000180004871                 mov     rdx, [rdi+2E8h]
.text:0000000180004878                 mov     rax, [rdi+2F0h]
.text:000000018000487F                 sub     rax, rdx
.text:0000000180004882                 sar     rax, 5
.text:0000000180004886                 cmp     rax, rcx
.text:0000000180004889                 jbe     loc_180004C7F
.text:000000018000488F                 shl     rcx, 5
.text:0000000180004893                 add     rcx, rdx
.text:0000000180004896                 cmp     qword ptr [rcx+18h], 10h
.text:000000018000489B                 jb      short loc_1800048A0
.text:000000018000489D                 mov     rcx, [rcx]
.text:00000001800048A0
.text:00000001800048A0 loc_1800048A0:                          ; CODE XREF: sub_1800034B0+13EB↑j
.text:00000001800048A0                 mov     qword ptr [rsp+390h+var_320], rcx
.text:00000001800048A5                 cmp     r15, [rsp+390h+var_338]
.text:00000001800048AA                 jz      short loc_1800048B9
.text:00000001800048AC                 mov     [r15], rcx
.text:00000001800048AF                 add     r15, 8
.text:00000001800048B3                 mov     [rbp+290h+var_2B0+8], r15
.text:00000001800048B7                 jmp     short loc_1800048DC
.text:00000001800048B9 ; ---------------------------------------------------------------------------
.text:00000001800048B9
.text:00000001800048B9 loc_1800048B9:                          ; CODE XREF: sub_1800034B0+13FA↑j
.text:00000001800048B9                 lea     r8, [rsp+390h+var_320]
.text:00000001800048BE                 mov     rdx, r15
.text:00000001800048C1                 lea     rcx, [rbp+290h+var_2B0]
.text:00000001800048C5                 call    sub_180005FF0
.text:00000001800048CA                 mov     rax, [rbp+290h+var_2A0]
.text:00000001800048CE                 mov     [rsp+390h+var_338], rax
.text:00000001800048D3                 mov     r15, [rbp+290h+var_2B0+8]
.text:00000001800048D7                 mov     r9, [rsp+390h+var_328]
.text:00000001800048DC
.text:00000001800048DC loc_1800048DC:                          ; CODE XREF: sub_1800034B0+12BA↑j
.text:00000001800048DC                                         ; sub_1800034B0+12EE↑j ...
.text:00000001800048DC                 mov     ecx, [rsi+0Ch]
.text:00000001800048DF                 sub     rcx, 0Ah
.text:00000001800048E3                 shl     rcx, 0Ah
.text:00000001800048E7                 add     rcx, r9
.text:00000001800048EA                 mov     rdx, [rdi+300h]
.text:00000001800048F1                 mov     rax, [rdi+308h]
.text:00000001800048F8                 sub     rax, rdx
.text:00000001800048FB                 sar     rax, 3
.text:00000001800048FF                 cmp     rax, rcx
.text:0000000180004902                 jbe     loc_180004C79
.text:0000000180004908                 mov     rax, [r12]
.text:000000018000490C                 mov     [rdx+rcx*8], rax
.text:0000000180004910                 mov     edx, [rsp+390h+var_340]
.text:0000000180004914                 inc     edx
.text:0000000180004916                 mov     [rsp+390h+var_340], edx
.text:000000018000491A                 inc     r9
.text:000000018000491D                 mov     [rsp+390h+var_328], r9
.text:0000000180004922                 add     r12, 8
.text:0000000180004926                 mov     eax, [rsi+0Ch]
.text:0000000180004929                 mov     r8d, eax
.text:000000018000492C                 add     eax, 0FFFFFFF6h
.text:000000018000492F                 mov     rax, [rdi+rax*8+298h]
.text:0000000180004937                 cmp     edx, [rax+28h]
.text:000000018000493A                 jge     short loc_180004945
.text:000000018000493C                 jmp     loc_1800046B0
.text:0000000180004941 ; ---------------------------------------------------------------------------
.text:0000000180004941
.text:0000000180004941 loc_180004941:                          ; CODE XREF: sub_1800034B0+11E8↑j
.text:0000000180004941                 mov     rbx, [rbp+290h+var_2D0+8]
.text:0000000180004945
.text:0000000180004945 loc_180004945:                          ; CODE XREF: sub_1800034B0+122D↑j
.text:0000000180004945                                         ; sub_1800034B0+148A↑j
.text:0000000180004945                 lea     rcx, [rdi+388h] ; lpCriticalSection
.text:000000018000494C                 call    cs:LeaveCriticalSection
.text:0000000180004952                 lea     r12, [rdi+360h]
.text:0000000180004959                 cmp     cs:byte_180019AD8, 0
.text:0000000180004960                 jnz     short loc_180004974
.text:0000000180004962                 mov     rcx, r12        ; lpCriticalSection
.text:0000000180004965                 call    cs:LeaveCriticalSection
.text:000000018000496B                 cmp     cs:byte_180019AD8, 0
.text:0000000180004972                 jz      short loc_1800049A9
.text:0000000180004974
.text:0000000180004974 loc_180004974:                          ; CODE XREF: sub_1800034B0+14B0↑j
.text:0000000180004974                 mov     eax, [rsi+0Ch]
.text:0000000180004977                 sub     eax, 9
.text:000000018000497A                 cmp     eax, [rdi+24h]
.text:000000018000497D                 jnz     short loc_1800049A9
.text:000000018000497F                 call    sub_180007430
.text:0000000180004984                 mov     rcx, rax
.text:0000000180004987                 lea     rdx, aCallingLvarCda ; "Calling Lvar CDAs loaded callback funct"...
.text:000000018000498E                 call    sub_180007F50
.text:0000000180004993                 mov     rcx, r12        ; lpCriticalSection
.text:0000000180004996                 call    cs:LeaveCriticalSection
.text:000000018000499C                 call    qword ptr [rdi+400h]
.text:00000001800049A2                 mov     cs:byte_180019AD8, 0
.text:00000001800049A9
.text:00000001800049A9 loc_1800049A9:                          ; CODE XREF: sub_1800034B0+14C2↑j
.text:00000001800049A9                                         ; sub_1800034B0+14CD↑j
.text:00000001800049A9                 mov     rsi, [rbp+290h+var_298]
.text:00000001800049AD                 cmp     qword ptr [rdi+408h], 0
.text:00000001800049B5                 jz      loc_180004A5E
.text:00000001800049BB                 mov     rax, r14
.text:00000001800049BE                 sub     rax, rsi
.text:00000001800049C1                 sar     rax, 2
.text:00000001800049C5                 test    rax, rax
.text:00000001800049C8                 jz      loc_180004A5E
.text:00000001800049CE                 mov     [rbp+290h+var_310], 0FFFFFFFFh
.text:00000001800049D5                 cmp     r14, r13
.text:00000001800049D8                 jz      short loc_1800049EB
.text:00000001800049DA                 mov     dword ptr [r14], 0FFFFFFFFh
.text:00000001800049E1                 add     r14, 4
.text:00000001800049E5                 mov     [rbp+290h+var_298+8], r14
.text:00000001800049E9                 jmp     short loc_180004A03
.text:00000001800049EB ; ---------------------------------------------------------------------------
.text:00000001800049EB
.text:00000001800049EB loc_1800049EB:                          ; CODE XREF: sub_1800034B0+1528↑j
.text:00000001800049EB                 lea     r8, [rbp+290h+var_310]
.text:00000001800049EF                 mov     rdx, r14
.text:00000001800049F2                 lea     rcx, [rbp+290h+var_298]
.text:00000001800049F6                 call    sub_180006180
.text:00000001800049FB                 mov     r13, [rbp+290h+var_288]
.text:00000001800049FF                 mov     rsi, [rbp+290h+var_298]
.text:0000000180004A03
.text:0000000180004A03 loc_180004A03:                          ; CODE XREF: sub_1800034B0+1539↑j
.text:0000000180004A03                 movsd   xmm0, cs:qword_180013C60
.text:0000000180004A0B                 movsd   qword ptr [rsp+390h+var_320], xmm0
.text:0000000180004A11                 cmp     rbx, [rsp+390h+var_330]
.text:0000000180004A16                 jz      short loc_180004A2F
.text:0000000180004A18                 mov     rax, 0BFF0000000000000h
.text:0000000180004A22                 mov     [rbx], rax
.text:0000000180004A25                 add     rbx, 8
.text:0000000180004A29                 mov     [rbp+290h+var_2D0+8], rbx
.text:0000000180004A2D                 jmp     short loc_180004A49
.text:0000000180004A2F ; ---------------------------------------------------------------------------
.text:0000000180004A2F
.text:0000000180004A2F loc_180004A2F:                          ; CODE XREF: sub_1800034B0+1566↑j
.text:0000000180004A2F                 lea     r8, [rsp+390h+var_320]
.text:0000000180004A34                 mov     rdx, rbx
.text:0000000180004A37                 lea     rcx, [rbp+290h+var_2D0]
.text:0000000180004A3B                 call    sub_180005FF0
.text:0000000180004A40                 mov     rax, [rbp+290h+var_2C0]
.text:0000000180004A44                 mov     [rsp+390h+var_330], rax
.text:0000000180004A49
.text:0000000180004A49 loc_180004A49:                          ; CODE XREF: sub_1800034B0+157D↑j
.text:0000000180004A49                 mov     rbx, [rbp+290h+var_2D0]
.text:0000000180004A4D                 mov     rdx, rbx
.text:0000000180004A50                 mov     rcx, rsi
.text:0000000180004A53                 call    qword ptr [rdi+408h]
.text:0000000180004A59                 jmp     loc_180004B1B
.text:0000000180004A5E ; ---------------------------------------------------------------------------
.text:0000000180004A5E
.text:0000000180004A5E loc_180004A5E:                          ; CODE XREF: sub_1800034B0+1505↑j
.text:0000000180004A5E                                         ; sub_1800034B0+1518↑j
.text:0000000180004A5E                 cmp     qword ptr [rdi+410h], 0
.text:0000000180004A66                 jz      loc_180004B17
.text:0000000180004A6C                 sub     r14, rsi
.text:0000000180004A6F                 sar     r14, 2
.text:0000000180004A73                 test    r14, r14
.text:0000000180004A76                 jz      loc_180004B17
.text:0000000180004A7C                 xor     eax, eax
.text:0000000180004A7E                 mov     qword ptr [rsp+390h+var_320], rax
.text:0000000180004A83                 cmp     r15, [rsp+390h+var_338]
.text:0000000180004A88                 jz      short loc_180004A97
.text:0000000180004A8A                 mov     [r15], rax
.text:0000000180004A8D                 add     r15, 8
.text:0000000180004A91                 mov     [rbp+290h+var_2B0+8], r15
.text:0000000180004A95                 jmp     short loc_180004AB1
.text:0000000180004A97 ; ---------------------------------------------------------------------------
.text:0000000180004A97
.text:0000000180004A97 loc_180004A97:                          ; CODE XREF: sub_1800034B0+15D8↑j
.text:0000000180004A97                 lea     r8, [rsp+390h+var_320]
.text:0000000180004A9C                 mov     rdx, r15
.text:0000000180004A9F                 lea     rcx, [rbp+290h+var_2B0]
.text:0000000180004AA3                 call    sub_180005FF0
.text:0000000180004AA8                 mov     rax, [rbp+290h+var_2A0]
.text:0000000180004AAC                 mov     [rsp+390h+var_338], rax
.text:0000000180004AB1
.text:0000000180004AB1 loc_180004AB1:                          ; CODE XREF: sub_1800034B0+15E5↑j
.text:0000000180004AB1                 cmp     qword ptr [rdi+408h], 0
.text:0000000180004AB9                 jnz     short loc_180004B01
.text:0000000180004ABB                 movsd   xmm0, cs:qword_180013C60
.text:0000000180004AC3                 movsd   qword ptr [rsp+390h+var_320], xmm0
.text:0000000180004AC9                 cmp     rbx, [rsp+390h+var_330]
.text:0000000180004ACE                 jz      short loc_180004AE7
.text:0000000180004AD0                 mov     rax, 0BFF0000000000000h
.text:0000000180004ADA                 mov     [rbx], rax
.text:0000000180004ADD                 add     rbx, 8
.text:0000000180004AE1                 mov     [rbp+290h+var_2D0+8], rbx
.text:0000000180004AE5                 jmp     short loc_180004B01
.text:0000000180004AE7 ; ---------------------------------------------------------------------------
.text:0000000180004AE7
.text:0000000180004AE7 loc_180004AE7:                          ; CODE XREF: sub_1800034B0+161E↑j
.text:0000000180004AE7                 lea     r8, [rsp+390h+var_320]
.text:0000000180004AEC                 mov     rdx, rbx
.text:0000000180004AEF                 lea     rcx, [rbp+290h+var_2D0]
.text:0000000180004AF3                 call    sub_180005FF0
.text:0000000180004AF8                 mov     rax, [rbp+290h+var_2C0]
.text:0000000180004AFC                 mov     [rsp+390h+var_330], rax
.text:0000000180004B01
.text:0000000180004B01 loc_180004B01:                          ; CODE XREF: sub_1800034B0+1609↑j
.text:0000000180004B01                                         ; sub_1800034B0+1635↑j
.text:0000000180004B01                 mov     rbx, [rbp+290h+var_2D0]
.text:0000000180004B05                 mov     rdx, rbx
.text:0000000180004B08                 mov     r14, [rbp+290h+var_2B0]
.text:0000000180004B0C                 mov     rcx, r14
.text:0000000180004B0F                 call    qword ptr [rdi+410h]
.text:0000000180004B15                 jmp     short loc_180004B1F
.text:0000000180004B17 ; ---------------------------------------------------------------------------
.text:0000000180004B17
.text:0000000180004B17 loc_180004B17:                          ; CODE XREF: sub_1800034B0+15B6↑j
.text:0000000180004B17                                         ; sub_1800034B0+15C6↑j
.text:0000000180004B17                 mov     rbx, [rbp+290h+var_2D0]
.text:0000000180004B1B
.text:0000000180004B1B loc_180004B1B:                          ; CODE XREF: sub_1800034B0+15A9↑j
.text:0000000180004B1B                 mov     r14, [rbp+290h+var_2B0]
.text:0000000180004B1B ;   } // starts at 18000481D
.text:0000000180004B1F
.text:0000000180004B1F loc_180004B1F:                          ; CODE XREF: sub_1800034B0+1665↑j
.text:0000000180004B1F ;   try {
.text:0000000180004B1F                 test    rbx, rbx
.text:0000000180004B22                 jz      short loc_180004B69
.text:0000000180004B24                 mov     rax, [rsp+390h+var_330]
.text:0000000180004B29                 sub     rax, rbx
.text:0000000180004B2C                 sar     rax, 3
.text:0000000180004B30                 lea     rdx, ds:0[rax*8]
.text:0000000180004B38                 mov     rax, rbx
.text:0000000180004B3B                 cmp     rdx, 1000h
.text:0000000180004B42                 jb      short loc_180004B60
.text:0000000180004B44                 add     rdx, 27h ; '''
.text:0000000180004B48                 mov     rbx, [rbx-8]
.text:0000000180004B4C                 sub     rax, rbx
.text:0000000180004B4F                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180004B53                 cmp     rax, 1Fh
.text:0000000180004B57                 jbe     short loc_180004B60
.text:0000000180004B59                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180004B5F                 int     3               ; Trap to Debugger
.text:0000000180004B60 ; ---------------------------------------------------------------------------
.text:0000000180004B60
.text:0000000180004B60 loc_180004B60:                          ; CODE XREF: sub_1800034B0+1692↑j
.text:0000000180004B60                                         ; sub_1800034B0+16A7↑j
.text:0000000180004B60                 mov     rcx, rbx        ; Block
.text:0000000180004B63                 call    j_j_free
.text:0000000180004B68                 nop
.text:0000000180004B69
.text:0000000180004B69 loc_180004B69:                          ; CODE XREF: sub_1800034B0+1672↑j
.text:0000000180004B69                 test    r14, r14
.text:0000000180004B6C                 jz      short loc_180004BB3
.text:0000000180004B6E                 mov     rax, [rsp+390h+var_338]
.text:0000000180004B73                 sub     rax, r14
.text:0000000180004B76                 sar     rax, 3
.text:0000000180004B7A                 lea     rdx, ds:0[rax*8]
.text:0000000180004B82                 mov     rax, r14
.text:0000000180004B85                 cmp     rdx, 1000h
.text:0000000180004B8C                 jb      short loc_180004BAA
.text:0000000180004B8E                 add     rdx, 27h ; '''
.text:0000000180004B92                 mov     r14, [r14-8]
.text:0000000180004B96                 sub     rax, r14
.text:0000000180004B99                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180004B9D                 cmp     rax, 1Fh
.text:0000000180004BA1                 jbe     short loc_180004BAA
.text:0000000180004BA3                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180004BA9                 int     3               ; Trap to Debugger
.text:0000000180004BAA ; ---------------------------------------------------------------------------
.text:0000000180004BAA
.text:0000000180004BAA loc_180004BAA:                          ; CODE XREF: sub_1800034B0+16DC↑j
.text:0000000180004BAA                                         ; sub_1800034B0+16F1↑j
.text:0000000180004BAA                 mov     rcx, r14        ; Block
.text:0000000180004BAD                 call    j_j_free
.text:0000000180004BB2                 nop
.text:0000000180004BB3
.text:0000000180004BB3 loc_180004BB3:                          ; CODE XREF: sub_1800034B0+16BC↑j
.text:0000000180004BB3                 test    rsi, rsi
.text:0000000180004BB6                 jz      loc_180004C47
.text:0000000180004BBC                 sub     r13, rsi
.text:0000000180004BBF                 and     r13, 0FFFFFFFFFFFFFFFCh
.text:0000000180004BC3                 mov     rax, rsi
.text:0000000180004BC6                 cmp     r13, 1000h
.text:0000000180004BCD                 jb      short loc_180004BEB
.text:0000000180004BCF                 add     r13, 27h ; '''
.text:0000000180004BD3                 mov     rsi, [rsi-8]
.text:0000000180004BD7                 sub     rax, rsi
.text:0000000180004BDA                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180004BDE                 cmp     rax, 1Fh
.text:0000000180004BE2                 jbe     short loc_180004BEB
.text:0000000180004BE4
.text:0000000180004BE4 loc_180004BE4:                          ; CODE XREF: sub_1800034B0+24E↑j
.text:0000000180004BE4                                         ; sub_1800034B0+CDA↑j ...
.text:0000000180004BE4                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180004BEA                 int     3               ; Trap to Debugger
.text:0000000180004BEB ; ---------------------------------------------------------------------------
.text:0000000180004BEB
.text:0000000180004BEB loc_180004BEB:                          ; CODE XREF: sub_1800034B0+171D↑j
.text:0000000180004BEB                                         ; sub_1800034B0+1732↑j
.text:0000000180004BEB                 mov     rdx, r13
.text:0000000180004BEE                 mov     rcx, rsi        ; Block
.text:0000000180004BF1                 call    j_j_free
.text:0000000180004BF6                 jmp     short loc_180004C47
.text:0000000180004BF8 ; ---------------------------------------------------------------------------
.text:0000000180004BF8
.text:0000000180004BF8 loc_180004BF8:                          ; CODE XREF: sub_1800034B0+85↑j
.text:0000000180004BF8                                         ; DATA XREF: sub_1800034B0:jpt_180003535↓o
.text:0000000180004BF8                 mov     eax, [rsi+10h]  ; jumptable 0000000180003535 case 1
.text:0000000180004BFB                 mov     [rsp+390h+DueTime], eax
.text:0000000180004BFF                 mov     r9d, edx
.text:0000000180004C02                 lea     r8, aSimconnectExce ; "Simconnect Exception received: %d (dwSe"...
.text:0000000180004C09                 mov     edx, 200h       ; BufferCount
.text:0000000180004C0E                 lea     rcx, [rbp+290h+Buffer] ; Buffer
.text:0000000180004C12                 call    sub_1800029E0
.text:0000000180004C17                 call    sub_180007430
.text:0000000180004C1C                 mov     rcx, rax
.text:0000000180004C1F                 lea     rdx, [rbp+290h+Buffer]
.text:0000000180004C23                 call    sub_180007930
.text:0000000180004C28                 jmp     short loc_180004C47
.text:0000000180004C2A ; ---------------------------------------------------------------------------
.text:0000000180004C2A
.text:0000000180004C2A def_180003535:                          ; CODE XREF: sub_1800034B0+64↑j
.text:0000000180004C2A                                         ; sub_1800034B0+85↑j
.text:0000000180004C2A                                         ; DATA XREF: ...
.text:0000000180004C2A                 call    sub_180007430   ; jumptable 0000000180003535 default case, cases 2-8,20-29
.text:0000000180004C2F                 mov     rcx, rax
.text:0000000180004C32                 lea     rdx, aSimconnectRecv_1 ; "SIMCONNECT_RECV_ID_CLIENT_DATA received"...
.text:0000000180004C39                 call    sub_180007D40
.text:0000000180004C3E                 jmp     short loc_180004C47
.text:0000000180004C40 ; ---------------------------------------------------------------------------
.text:0000000180004C40
.text:0000000180004C40 loc_180004C40:                          ; CODE XREF: sub_1800034B0+4C↑j
.text:0000000180004C40                 mov     dword ptr [rcx+18h], 1
.text:0000000180004C47
.text:0000000180004C47 loc_180004C47:                          ; CODE XREF: sub_1800034B0+55↑j
.text:0000000180004C47                                         ; sub_1800034B0+35D↑j ...
.text:0000000180004C47                 mov     rcx, [rbp+290h+var_50]
.text:0000000180004C4E                 xor     rcx, rsp        ; StackCookie
.text:0000000180004C4E ;   } // starts at 180004B1F
.text:0000000180004C51                 call    __security_check_cookie
.text:0000000180004C56                 mov     rbx, [rsp+390h+arg_10]
.text:0000000180004C5E                 movaps  xmm6, [rsp+390h+var_40]
.text:0000000180004C66                 add     rsp, 360h
.text:0000000180004C6D                 pop     r15
.text:0000000180004C6F                 pop     r14
.text:0000000180004C71                 pop     r13
.text:0000000180004C73                 pop     r12
.text:0000000180004C75                 pop     rdi
.text:0000000180004C76                 pop     rsi
.text:0000000180004C77                 pop     rbp
.text:0000000180004C78                 retn
.text:0000000180004C79 ; ---------------------------------------------------------------------------
.text:0000000180004C79
.text:0000000180004C79 loc_180004C79:                          ; CODE XREF: sub_1800034B0+12A6↑j
.text:0000000180004C79                                         ; sub_1800034B0+1452↑j
.text:0000000180004C79 ;   try {
.text:0000000180004C79                 call    sub_1800058B0
.text:0000000180004C79 ; ---------------------------------------------------------------------------
.text:0000000180004C7E                 db 90h
.text:0000000180004C7F ; ---------------------------------------------------------------------------
.text:0000000180004C7F
.text:0000000180004C7F loc_180004C7F:                          ; CODE XREF: sub_1800034B0+13D9↑j
.text:0000000180004C7F                 call    sub_1800058B0
.text:0000000180004C7F ; ---------------------------------------------------------------------------
.text:0000000180004C84                 db 0CCh
.text:0000000180004C85 ; ---------------------------------------------------------------------------
.text:0000000180004C85
.text:0000000180004C85 loc_180004C85:                          ; CODE XREF: sub_1800034B0+12CC↑j
.text:0000000180004C85                 call    sub_180005890
.text:0000000180004C85 ; ---------------------------------------------------------------------------
.text:0000000180004C8A                 align 4
.text:0000000180004C8A ;   } // starts at 180004C79
.text:0000000180004C8C jpt_180003535   dd offset loc_180004BF8 - 180000000h
.text:0000000180004C8C                                         ; DATA XREF: sub_1800034B0+7A↑r
.text:0000000180004C8C                 dd offset loc_180003537 - 180000000h ; jump table for switch statement
.text:0000000180004C8C                 dd offset loc_180004519 - 180000000h
.text:0000000180004C8C                 dd offset loc_180003E37 - 180000000h
.text:0000000180004C8C                 dd offset loc_180004250 - 180000000h
.text:0000000180004C8C                 dd offset def_180003535 - 180000000h
.text:0000000180004CA4 byte_180004CA4  db      0,     5,     5,     5
.text:0000000180004CA4                                         ; DATA XREF: sub_1800034B0+71↑r
.text:0000000180004CA4                 db      5,     5,     5,     5 ; indirect table for switch statement
.text:0000000180004CA4                 db      1,     2,     2,     2
.text:0000000180004CA4                 db      2,     2,     2,     2
.text:0000000180004CA4                 db      2,     2,     2,     5
.text:0000000180004CA4                 db      5,     5,     5,     5
.text:0000000180004CA4                 db      5,     5,     5,     5
.text:0000000180004CA4                 db      5,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     3
.text:0000000180004CA4                 db      3,     3,     3,     4
.text:0000000180004CA4                 db      4,     4,     4
.text:0000000180004CA4 ; } // starts at 1800034B0
.text:0000000180004CA4 sub_1800034B0   endp
.text:0000000180004CA4
.text:0000000180004D0B algn_180004D0B:                         ; DATA XREF: .pdata:000000018001C36C↓o
.text:0000000180004D0B                 align 10h
.text:0000000180004D10
.text:0000000180004D10 ; =============== S U B R O U T I N E =======================================
.text:0000000180004D10
.text:0000000180004D10
.text:0000000180004D10 sub_180004D10   proc near               ; CODE XREF: fsuipcw_setLvarAsString+10↑j
.text:0000000180004D10                                         ; DATA XREF: .pdata:000000018001C378↓o
.text:0000000180004D10
.text:0000000180004D10 var_248         = qword ptr -248h
.text:0000000180004D10 EndPtr          = qword ptr -238h
.text:0000000180004D10 var_230         = qword ptr -230h
.text:0000000180004D10 var_228         = dword ptr -228h
.text:0000000180004D10 var_224         = byte ptr -224h
.text:0000000180004D10 Buffer          = byte ptr -218h
.text:0000000180004D10 var_18          = qword ptr -18h
.text:0000000180004D10 var_8           = byte ptr -8
.text:0000000180004D10 arg_0           = qword ptr  8
.text:0000000180004D10 arg_18          = qword ptr  20h
.text:0000000180004D10
.text:0000000180004D10 ; __unwind { // __GSHandlerCheck
.text:0000000180004D10                 mov     [rsp+arg_0], rbx
.text:0000000180004D15                 mov     [rsp+arg_18], rsi
.text:0000000180004D1A                 push    rdi
.text:0000000180004D1B                 sub     rsp, 260h
.text:0000000180004D22                 mov     rax, cs:__security_cookie
.text:0000000180004D29                 xor     rax, rsp
.text:0000000180004D2C                 mov     [rsp+268h+var_18], rax
.text:0000000180004D34                 mov     rsi, cs:lpParameter
.text:0000000180004D3B                 movzx   edi, dx
.text:0000000180004D3E                 lea     rdx, [rsp+268h+EndPtr] ; EndPtr
.text:0000000180004D43                 mov     rcx, r8         ; String
.text:0000000180004D46                 mov     rbx, r8
.text:0000000180004D49                 call    cs:strtod
.text:0000000180004D4F                 mov     rax, [rsp+268h+EndPtr]
.text:0000000180004D54                 movsd   [rsp+268h+var_230], xmm0
.text:0000000180004D5A                 cmp     byte ptr [rax], 0
.text:0000000180004D5D                 jz      short loc_180004DA3
.text:0000000180004D5F                 mov     rax, [rbx]
.text:0000000180004D62                 movzx   edx, di
.text:0000000180004D65                 mov     [rsp+268h+var_230], rax
.text:0000000180004D6A                 mov     rcx, rsi
.text:0000000180004D6D                 movsd   xmm2, [rsp+268h+var_230]
.text:0000000180004D73                 call    sub_180004ED0
.text:0000000180004D78                 lea     rax, [rsp+268h+var_230]
.text:0000000180004D7D                 mov     r9d, 8
.text:0000000180004D83                 lea     r8, aSettingLvarVal ; "Setting lvar value as string: %.*s"
.text:0000000180004D8A                 mov     [rsp+268h+var_248], rax
.text:0000000180004D8F                 mov     edx, 200h       ; BufferCount
.text:0000000180004D94                 lea     rcx, [rsp+268h+Buffer] ; Buffer
.text:0000000180004D99                 call    sub_1800029E0
.text:0000000180004D9E                 jmp     loc_180004E93
.text:0000000180004DA3 ; ---------------------------------------------------------------------------
.text:0000000180004DA3
.text:0000000180004DA3 loc_180004DA3:                          ; CODE XREF: sub_180004D10+4D↑j
.text:0000000180004DA3                 lea     r9, [rsp+268h+var_228]
.text:0000000180004DA8                 mov     rcx, rbx        ; Buffer
.text:0000000180004DAB                 lea     r8, [rsp+268h+var_224]
.text:0000000180004DB0                 lea     rdx, aDN        ; "%d%n"
.text:0000000180004DB7                 call    sub_180002A40
.text:0000000180004DBC                 movsd   xmm2, [rsp+268h+var_230]
.text:0000000180004DC2                 cmp     eax, 1
.text:0000000180004DC5                 jnz     loc_180004E67
.text:0000000180004DCB                 mov     rcx, 0FFFFFFFFFFFFFFFFh
.text:0000000180004DD2
.text:0000000180004DD2 loc_180004DD2:                          ; CODE XREF: sub_180004D10+C9↓j
.text:0000000180004DD2                 inc     rcx
.text:0000000180004DD5                 cmp     byte ptr [rbx+rcx], 0
.text:0000000180004DD9                 jnz     short loc_180004DD2
.text:0000000180004DDB                 movsxd  rax, [rsp+268h+var_228]
.text:0000000180004DE0                 cmp     rax, rcx
.text:0000000180004DE3                 jnz     loc_180004E67
.text:0000000180004DE9                 movsd   xmm0, cs:qword_180013C50
.text:0000000180004DF1                 comisd  xmm0, xmm2
.text:0000000180004DF5                 jbe     short loc_180004E67
.text:0000000180004DF7                 comisd  xmm2, cs:qword_180013C68
.text:0000000180004DFF                 jbe     short loc_180004E67
.text:0000000180004E01                 xorps   xmm0, xmm0
.text:0000000180004E04                 comisd  xmm2, xmm0
.text:0000000180004E08                 jbe     short loc_180004E39
.text:0000000180004E0A                 cvttsd2si ebx, xmm2
.text:0000000180004E0E                 movzx   edx, di
.text:0000000180004E11                 mov     rcx, rsi
.text:0000000180004E14                 movzx   r8d, bx
.text:0000000180004E18                 call    sub_1800050E0
.text:0000000180004E1D                 movzx   r9d, bx
.text:0000000180004E21                 lea     r8, aSettingLvarVal_0 ; "Setting lvar value as unsigned short: %"...
.text:0000000180004E28
.text:0000000180004E28 loc_180004E28:                          ; CODE XREF: sub_180004D10+155↓j
.text:0000000180004E28                 mov     edx, 200h       ; BufferCount
.text:0000000180004E2D                 lea     rcx, [rsp+268h+Buffer] ; Buffer
.text:0000000180004E32                 call    sub_1800029E0
.text:0000000180004E37                 jmp     short loc_180004E93
.text:0000000180004E39 ; ---------------------------------------------------------------------------
.text:0000000180004E39
.text:0000000180004E39 loc_180004E39:                          ; CODE XREF: sub_180004D10+F8↑j
.text:0000000180004E39                 movsd   xmm0, cs:qword_180013C48
.text:0000000180004E41                 comisd  xmm0, xmm2
.text:0000000180004E45                 jbe     short loc_180004EA5
.text:0000000180004E47                 cvttsd2si ebx, xmm2
.text:0000000180004E4B                 movzx   edx, di
.text:0000000180004E4E                 mov     rcx, rsi
.text:0000000180004E51                 movzx   r8d, bx
.text:0000000180004E55                 call    sub_180005000
.text:0000000180004E5A                 movsx   r9d, bx
.text:0000000180004E5E                 lea     r8, aSettingLvarVal_1 ; "Setting lvar value as short: %d"
.text:0000000180004E65                 jmp     short loc_180004E28
.text:0000000180004E67 ; ---------------------------------------------------------------------------
.text:0000000180004E67
.text:0000000180004E67 loc_180004E67:                          ; CODE XREF: sub_180004D10+B5↑j
.text:0000000180004E67                                         ; sub_180004D10+D3↑j ...
.text:0000000180004E67                 movzx   edx, di
.text:0000000180004E6A                 mov     rcx, rsi
.text:0000000180004E6D                 call    sub_180004ED0
.text:0000000180004E72                 movsd   xmm3, [rsp+268h+var_230]
.text:0000000180004E78                 lea     r8, aSettingLvarVal_2 ; "Setting lvar value as double: %f"
.text:0000000180004E7F                 movq    r9, xmm3
.text:0000000180004E84                 lea     rcx, [rsp+268h+Buffer] ; Buffer
.text:0000000180004E89                 mov     edx, 200h       ; BufferCount
.text:0000000180004E8E                 call    sub_1800029E0
.text:0000000180004E93
.text:0000000180004E93 loc_180004E93:                          ; CODE XREF: sub_180004D10+8E↑j
.text:0000000180004E93                                         ; sub_180004D10+127↑j
.text:0000000180004E93                 call    sub_180007430
.text:0000000180004E98                 lea     rdx, [rsp+268h+Buffer]
.text:0000000180004E9D                 mov     rcx, rax
.text:0000000180004EA0                 call    sub_180007F50
.text:0000000180004EA5
.text:0000000180004EA5 loc_180004EA5:                          ; CODE XREF: sub_180004D10+135↑j
.text:0000000180004EA5                 mov     rcx, [rsp+268h+var_18]
.text:0000000180004EAD                 xor     rcx, rsp        ; StackCookie
.text:0000000180004EB0                 call    __security_check_cookie
.text:0000000180004EB5                 lea     r11, [rsp+268h+var_8]
.text:0000000180004EBD                 mov     rbx, [r11+10h]
.text:0000000180004EC1                 mov     rsi, [r11+28h]
.text:0000000180004EC5                 mov     rsp, r11
.text:0000000180004EC8                 pop     rdi
.text:0000000180004EC9                 retn
.text:0000000180004EC9 ; } // starts at 180004D10
.text:0000000180004EC9 sub_180004D10   endp
.text:0000000180004EC9
.text:0000000180004EC9 ; ---------------------------------------------------------------------------
.text:0000000180004ECA algn_180004ECA:                         ; DATA XREF: .pdata:000000018001C378↓o
.text:0000000180004ECA                 align 10h
.text:0000000180004ED0
.text:0000000180004ED0 ; =============== S U B R O U T I N E =======================================
.text:0000000180004ED0
.text:0000000180004ED0
.text:0000000180004ED0 sub_180004ED0   proc near               ; CODE XREF: fsuipcw_setLvarAsDouble+12↑j
.text:0000000180004ED0                                         ; sub_180004D10+63↑p ...
.text:0000000180004ED0
.text:0000000180004ED0 var_158         = dword ptr -158h
.text:0000000180004ED0 Size            = qword ptr -150h
.text:0000000180004ED0 Src             = qword ptr -148h
.text:0000000180004ED0 var_138         = dword ptr -138h
.text:0000000180004ED0 var_134         = qword ptr -134h
.text:0000000180004ED0 var_128         = dword ptr -128h
.text:0000000180004ED0 Buffer          = byte ptr -118h
.text:0000000180004ED0 var_18          = qword ptr -18h
.text:0000000180004ED0
.text:0000000180004ED0 ; __unwind { // __GSHandlerCheck
.text:0000000180004ED0                 push    rbx
.text:0000000180004ED2                 sub     rsp, 170h
.text:0000000180004ED9                 mov     rax, cs:__security_cookie
.text:0000000180004EE0                 xor     rax, rsp
.text:0000000180004EE3                 mov     [rsp+178h+var_18], rax
.text:0000000180004EEB                 movzx   eax, dx
.text:0000000180004EEE                 mov     rbx, rcx
.text:0000000180004EF1                 mov     rcx, [rcx]      ; int
.text:0000000180004EF4                 mov     edx, 2          ; int
.text:0000000180004EF9                 mov     [rsp+178h+var_138], eax
.text:0000000180004EFD                 xor     r9d, r9d        ; int
.text:0000000180004F00                 lea     rax, [rsp+178h+var_138]
.text:0000000180004F05                 movsd   [rsp+178h+var_134], xmm2
.text:0000000180004F0B                 mov     [rsp+178h+Src], rax ; Src
.text:0000000180004F10                 mov     r8d, edx        ; int
.text:0000000180004F13                 mov     dword ptr [rsp+178h+Size], 0Ch ; Size
.text:0000000180004F1B                 mov     [rsp+178h+var_158], 0 ; int
.text:0000000180004F23                 call    sub_18000C2B0
.text:0000000180004F28                 test    eax, eax
.text:0000000180004F2A                 jns     short loc_180004F67
.text:0000000180004F2C                 movsd   xmm0, [rsp+178h+var_134]
.text:0000000180004F32                 lea     r8, aErrorSettingCl ; "Error setting Client Data lvar value: %"...
.text:0000000180004F39                 mov     r9d, [rsp+178h+var_138]
.text:0000000180004F3E                 lea     rcx, [rsp+178h+Buffer] ; Buffer
.text:0000000180004F43                 mov     edx, 100h       ; BufferCount
.text:0000000180004F48                 movsd   qword ptr [rsp+178h+var_158], xmm0
.text:0000000180004F4E                 call    sub_1800029E0
.text:0000000180004F53                 call    sub_180007430
.text:0000000180004F58                 mov     rcx, rax
.text:0000000180004F5B                 lea     rdx, [rsp+178h+Buffer]
.text:0000000180004F60                 call    sub_180007930
.text:0000000180004F65                 jmp     short loc_180004FDF
.text:0000000180004F67 ; ---------------------------------------------------------------------------
.text:0000000180004F67
.text:0000000180004F67 loc_180004F67:                          ; CODE XREF: sub_180004ED0+5A↑j
.text:0000000180004F67                 mov     rcx, [rbx]
.text:0000000180004F6A                 lea     rdx, [rsp+178h+var_128]
.text:0000000180004F6F                 call    sub_18000BD50
.text:0000000180004F74                 mov     r9d, [rsp+178h+var_128]
.text:0000000180004F79                 lea     r8, aLvarSetClientD ; "Lvar set Client Data Area updated [requ"...
.text:0000000180004F80                 mov     edx, 100h       ; BufferCount
.text:0000000180004F85                 lea     rcx, [rsp+178h+Buffer] ; Buffer
.text:0000000180004F8A                 call    sub_1800029E0
.text:0000000180004F8F                 call    sub_180007430
.text:0000000180004F94                 mov     rcx, rax
.text:0000000180004F97                 lea     rdx, [rsp+178h+Buffer]
.text:0000000180004F9C                 call    sub_180007D40
.text:0000000180004FA1                 mov     rcx, [rbx]      ; int
.text:0000000180004FA4                 lea     rax, [rsp+178h+var_138]
.text:0000000180004FA9                 mov     [rsp+178h+Src], rax ; Src
.text:0000000180004FAE                 mov     edx, 2          ; int
.text:0000000180004FB3                 xorps   xmm0, xmm0
.text:0000000180004FB6                 mov     dword ptr [rsp+178h+Size], 0Ch ; Size
.text:0000000180004FBE                 xor     r9d, r9d        ; int
.text:0000000180004FC1                 mov     [rsp+178h+var_158], 0 ; int
.text:0000000180004FC9                 mov     r8d, edx        ; int
.text:0000000180004FCC                 movsd   [rsp+178h+var_134], xmm0
.text:0000000180004FD2                 mov     [rsp+178h+var_138], 0FFFFFFFFh
.text:0000000180004FDA                 call    sub_18000C2B0
.text:0000000180004FDF
.text:0000000180004FDF loc_180004FDF:                          ; CODE XREF: sub_180004ED0+95↑j
.text:0000000180004FDF                 mov     rcx, [rsp+178h+var_18]
.text:0000000180004FE7                 xor     rcx, rsp        ; StackCookie
.text:0000000180004FEA                 call    __security_check_cookie
.text:0000000180004FEF                 add     rsp, 170h
.text:0000000180004FF6                 pop     rbx
.text:0000000180004FF7                 retn
.text:0000000180004FF7 ; } // starts at 180004ED0
.text:0000000180004FF7 sub_180004ED0   endp
.text:0000000180004FF7
.text:0000000180004FF7 ; ---------------------------------------------------------------------------
.text:0000000180004FF8 algn_180004FF8:                         ; DATA XREF: .pdata:000000018001C384↓o
.text:0000000180004FF8                 align 20h
.text:0000000180005000
.text:0000000180005000 ; =============== S U B R O U T I N E =======================================
.text:0000000180005000
.text:0000000180005000
.text:0000000180005000 sub_180005000   proc near               ; CODE XREF: fsuipcw_setLvarAsShort+16↑j
.text:0000000180005000                                         ; sub_180004D10+145↑p
.text:0000000180005000                                         ; DATA XREF: ...
.text:0000000180005000
.text:0000000180005000 var_158         = dword ptr -158h
.text:0000000180005000 var_150         = dword ptr -150h
.text:0000000180005000 var_148         = dword ptr -148h
.text:0000000180005000 var_140         = dword ptr -140h
.text:0000000180005000 var_138         = dword ptr -138h
.text:0000000180005000 var_128         = dword ptr -128h
.text:0000000180005000 Buffer          = byte ptr -118h
.text:0000000180005000 var_18          = qword ptr -18h
.text:0000000180005000 arg_8           = qword ptr  10h
.text:0000000180005000
.text:0000000180005000 ; __unwind { // __GSHandlerCheck
.text:0000000180005000                 mov     [rsp+arg_8], rbx
.text:0000000180005005                 push    rdi
.text:0000000180005006                 sub     rsp, 170h
.text:000000018000500D                 mov     rax, cs:__security_cookie
.text:0000000180005014                 xor     rax, rsp
.text:0000000180005017                 mov     [rsp+178h+var_18], rax
.text:000000018000501F                 mov     rcx, [rcx]
.text:0000000180005022                 movzx   edi, dx
.text:0000000180005025                 xor     edx, edx
.text:0000000180005027                 mov     [rsp+178h+var_128], 0
.text:000000018000502F                 mov     word ptr [rsp+178h+var_128+2], r8w
.text:0000000180005035                 mov     word ptr [rsp+178h+var_128], di
.text:000000018000503A                 mov     ebx, [rsp+178h+var_128]
.text:000000018000503E                 lea     r8d, [rdx+6]
.text:0000000180005042                 mov     [rsp+178h+var_150], 10h
.text:000000018000504A                 mov     r9d, ebx
.text:000000018000504D                 mov     [rsp+178h+var_158], 1
.text:0000000180005055                 call    sub_18000C4B0
.text:000000018000505A                 test    eax, eax
.text:000000018000505C                 jns     short loc_180005074
.text:000000018000505E                 call    sub_180007430
.text:0000000180005063                 mov     rcx, rax
.text:0000000180005066                 lea     rdx, aSimconnectTran_2 ; "SimConnect_TransmitClientEvent for EVEN"...
.text:000000018000506D                 call    sub_180007930
.text:0000000180005072                 jmp     short loc_1800050BD
.text:0000000180005074 ; ---------------------------------------------------------------------------
.text:0000000180005074
.text:0000000180005074 loc_180005074:                          ; CODE XREF: sub_180005000+5C↑j
.text:0000000180005074                 mov     eax, ebx
.text:0000000180005076                 lea     r8, aControlSentToS_0 ; "Control sent to set lvars with paramete"...
.text:000000018000507D                 shr     eax, 10h
.text:0000000180005080                 mov     r9d, ebx
.text:0000000180005083                 movsx   ecx, ax
.text:0000000180005086                 mov     edx, 100h       ; BufferCount
.text:000000018000508B                 mov     [rsp+178h+var_138], ecx
.text:000000018000508F                 mov     eax, edi
.text:0000000180005091                 mov     [rsp+178h+var_140], ecx
.text:0000000180005095                 lea     rcx, [rsp+178h+Buffer] ; Buffer
.text:000000018000509A                 mov     [rsp+178h+var_148], eax
.text:000000018000509E                 mov     [rsp+178h+var_150], eax
.text:00000001800050A2                 mov     [rsp+178h+var_158], ebx
.text:00000001800050A6                 call    sub_1800029E0
.text:00000001800050AB                 call    sub_180007430
.text:00000001800050B0                 mov     rcx, rax
.text:00000001800050B3                 lea     rdx, [rsp+178h+Buffer]
.text:00000001800050B8                 call    sub_180007F50
.text:00000001800050BD
.text:00000001800050BD loc_1800050BD:                          ; CODE XREF: sub_180005000+72↑j
.text:00000001800050BD                 mov     rcx, [rsp+178h+var_18]
.text:00000001800050C5                 xor     rcx, rsp        ; StackCookie
.text:00000001800050C8                 call    __security_check_cookie
.text:00000001800050CD                 mov     rbx, [rsp+178h+arg_8]
.text:00000001800050D5                 add     rsp, 170h
.text:00000001800050DC                 pop     rdi
.text:00000001800050DD                 retn
.text:00000001800050DD ; } // starts at 180005000
.text:00000001800050DD sub_180005000   endp
.text:00000001800050DD
.text:00000001800050DD ; ---------------------------------------------------------------------------
.text:00000001800050DE algn_1800050DE:                         ; DATA XREF: .pdata:000000018001C390↓o
.text:00000001800050DE                 align 20h
.text:00000001800050E0
.text:00000001800050E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800050E0
.text:00000001800050E0
.text:00000001800050E0 sub_1800050E0   proc near               ; CODE XREF: fsuipcw_setLvarAsUShort+16↑j
.text:00000001800050E0                                         ; sub_180004D10+108↑p
.text:00000001800050E0                                         ; DATA XREF: ...
.text:00000001800050E0
.text:00000001800050E0 var_158         = dword ptr -158h
.text:00000001800050E0 var_150         = dword ptr -150h
.text:00000001800050E0 var_148         = dword ptr -148h
.text:00000001800050E0 var_140         = dword ptr -140h
.text:00000001800050E0 var_138         = dword ptr -138h
.text:00000001800050E0 var_128         = dword ptr -128h
.text:00000001800050E0 Buffer          = byte ptr -118h
.text:00000001800050E0 var_18          = qword ptr -18h
.text:00000001800050E0 arg_8           = qword ptr  10h
.text:00000001800050E0
.text:00000001800050E0 ; __unwind { // __GSHandlerCheck
.text:00000001800050E0                 mov     [rsp+arg_8], rbx
.text:00000001800050E5                 push    rdi
.text:00000001800050E6                 sub     rsp, 170h
.text:00000001800050ED                 mov     rax, cs:__security_cookie
.text:00000001800050F4                 xor     rax, rsp
.text:00000001800050F7                 mov     [rsp+178h+var_18], rax
.text:00000001800050FF                 mov     rcx, [rcx]
.text:0000000180005102                 movzx   edi, dx
.text:0000000180005105                 xor     edx, edx
.text:0000000180005107                 mov     [rsp+178h+var_128], 0
.text:000000018000510F                 mov     word ptr [rsp+178h+var_128+2], r8w
.text:0000000180005115                 mov     word ptr [rsp+178h+var_128], di
.text:000000018000511A                 mov     ebx, [rsp+178h+var_128]
.text:000000018000511E                 lea     r8d, [rdx+1]
.text:0000000180005122                 mov     [rsp+178h+var_150], 10h
.text:000000018000512A                 mov     r9d, ebx
.text:000000018000512D                 mov     [rsp+178h+var_158], 1
.text:0000000180005135                 call    sub_18000C4B0
.text:000000018000513A                 test    eax, eax
.text:000000018000513C                 jns     short loc_180005154
.text:000000018000513E                 call    sub_180007430
.text:0000000180005143                 mov     rcx, rax
.text:0000000180005146                 lea     rdx, aSimconnectTran_3 ; "SimConnect_TransmitClientEvent for EVEN"...
.text:000000018000514D                 call    sub_180007930
.text:0000000180005152                 jmp     short loc_18000519A
.text:0000000180005154 ; ---------------------------------------------------------------------------
.text:0000000180005154
.text:0000000180005154 loc_180005154:                          ; CODE XREF: sub_1800050E0+5C↑j
.text:0000000180005154                 mov     eax, edi
.text:0000000180005156                 lea     r8, aControlSentToS_1 ; "Control sent to set lvars with paramete"...
.text:000000018000515D                 mov     ecx, ebx
.text:000000018000515F                 mov     r9d, ebx
.text:0000000180005162                 shr     ecx, 10h
.text:0000000180005165                 mov     edx, 100h       ; BufferCount
.text:000000018000516A                 mov     [rsp+178h+var_138], ecx
.text:000000018000516E                 mov     [rsp+178h+var_140], ecx
.text:0000000180005172                 lea     rcx, [rsp+178h+Buffer] ; Buffer
.text:0000000180005177                 mov     [rsp+178h+var_148], eax
.text:000000018000517B                 mov     [rsp+178h+var_150], eax
.text:000000018000517F                 mov     [rsp+178h+var_158], ebx
.text:0000000180005183                 call    sub_1800029E0
.text:0000000180005188                 call    sub_180007430
.text:000000018000518D                 mov     rcx, rax
.text:0000000180005190                 lea     rdx, [rsp+178h+Buffer]
.text:0000000180005195                 call    sub_180007F50
.text:000000018000519A
.text:000000018000519A loc_18000519A:                          ; CODE XREF: sub_1800050E0+72↑j
.text:000000018000519A                 mov     rcx, [rsp+178h+var_18]
.text:00000001800051A2                 xor     rcx, rsp        ; StackCookie
.text:00000001800051A5                 call    __security_check_cookie
.text:00000001800051AA                 mov     rbx, [rsp+178h+arg_8]
.text:00000001800051B2                 add     rsp, 170h
.text:00000001800051B9                 pop     rdi
.text:00000001800051BA                 retn
.text:00000001800051BA ; } // starts at 1800050E0
.text:00000001800051BA sub_1800050E0   endp
.text:00000001800051BA
.text:00000001800051BA ; ---------------------------------------------------------------------------
.text:00000001800051BB algn_1800051BB:                         ; DATA XREF: .pdata:000000018001C39C↓o
.text:00000001800051BB                 align 20h
.text:00000001800051C0
.text:00000001800051C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800051C0
.text:00000001800051C0
.text:00000001800051C0 sub_1800051C0   proc near               ; CODE XREF: fsuipcw_executeCalclatorCode+D↑j
.text:00000001800051C0                                         ; fsuipcw_createLvar+66↑p
.text:00000001800051C0                                         ; DATA XREF: ...
.text:00000001800051C0
.text:00000001800051C0 var_888         = dword ptr -888h
.text:00000001800051C0 Size            = qword ptr -880h
.text:00000001800051C0 Src             = qword ptr -878h
.text:00000001800051C0 var_868         = dword ptr -868h
.text:00000001800051C0 Destination     = byte ptr -858h
.text:00000001800051C0 var_459         = byte ptr -459h
.text:00000001800051C0 Buffer          = byte ptr -458h
.text:00000001800051C0 var_18          = qword ptr -18h
.text:00000001800051C0 var_8           = byte ptr -8
.text:00000001800051C0 arg_10          = qword ptr  18h
.text:00000001800051C0 arg_18          = qword ptr  20h
.text:00000001800051C0
.text:00000001800051C0 ; __unwind { // __GSHandlerCheck
.text:00000001800051C0                 mov     [rsp+arg_10], rbx
.text:00000001800051C5                 mov     [rsp+arg_18], rsi
.text:00000001800051CA                 push    rdi
.text:00000001800051CB                 sub     rsp, 8A0h
.text:00000001800051D2                 mov     rax, cs:__security_cookie
.text:00000001800051D9                 xor     rax, rsp
.text:00000001800051DC                 mov     [rsp+8A8h+var_18], rax
.text:00000001800051E4                 mov     rdi, rdx
.text:00000001800051E7                 mov     rsi, rcx
.text:00000001800051EA                 xor     edx, edx        ; Val
.text:00000001800051EC                 lea     rcx, [rsp+8A8h+Destination] ; void *
.text:00000001800051F1                 mov     r8d, 400h       ; Size
.text:00000001800051F7                 call    memset
.text:00000001800051FC                 test    rdi, rdi
.text:00000001800051FF                 jz      loc_18000532B
.text:0000000180005205                 mov     rbx, 0FFFFFFFFFFFFFFFFh
.text:000000018000520C                 mov     rax, rbx
.text:000000018000520F                 nop
.text:0000000180005210
.text:0000000180005210 loc_180005210:                          ; CODE XREF: sub_1800051C0+57↓j
.text:0000000180005210                 inc     rax
.text:0000000180005213                 cmp     byte ptr [rdi+rax], 0
.text:0000000180005217                 jnz     short loc_180005210
.text:0000000180005219                 cmp     rax, 3FFh
.text:000000018000521F                 ja      loc_180005320
.text:0000000180005225                 mov     r9d, 400h       ; MaxCount
.text:000000018000522B                 lea     rcx, [rsp+8A8h+Destination] ; Destination
.text:0000000180005230                 mov     edx, r9d        ; SizeInBytes
.text:0000000180005233                 mov     r8, rdi         ; Source
.text:0000000180005236                 call    cs:strncpy_s
.text:000000018000523C                 mov     rcx, [rsi]      ; int
.text:000000018000523F                 lea     rax, [rsp+8A8h+Destination]
.text:0000000180005244                 mov     [rsp+8A8h+Src], rax ; Src
.text:0000000180005249                 mov     edx, 3          ; int
.text:000000018000524E                 xor     ebx, ebx
.text:0000000180005250                 mov     dword ptr [rsp+8A8h+Size], 400h ; Size
.text:0000000180005258                 xor     r9d, r9d        ; int
.text:000000018000525B                 mov     [rsp+8A8h+var_888], ebx ; int
.text:000000018000525F                 mov     r8d, edx        ; int
.text:0000000180005262                 mov     [rsp+8A8h+var_459], 0
.text:000000018000526A                 call    sub_18000C2B0
.text:000000018000526F                 test    eax, eax
.text:0000000180005271                 jns     short loc_180005296
.text:0000000180005273                 lea     r9, [rsp+8A8h+Destination]
.text:0000000180005278                 mov     edx, 440h       ; BufferCount
.text:000000018000527D                 lea     r8, aErrorSettingCl_0 ; "Error setting Client Data Calculator Co"...
.text:0000000180005284                 lea     rcx, [rsp+8A8h+Buffer] ; Buffer
.text:000000018000528C                 call    sub_1800029E0
.text:0000000180005291                 jmp     loc_180005351
.text:0000000180005296 ; ---------------------------------------------------------------------------
.text:0000000180005296
.text:0000000180005296 loc_180005296:                          ; CODE XREF: sub_1800051C0+B1↑j
.text:0000000180005296                 mov     rcx, [rsi]
.text:0000000180005299                 lea     rdx, [rsp+8A8h+var_868]
.text:000000018000529E                 call    sub_18000BD50
.text:00000001800052A3                 mov     r9d, [rsp+8A8h+var_868]
.text:00000001800052A8                 lea     r8, aCalcultorCodeC ; "Calcultor Code Client Data Area updated"...
.text:00000001800052AF                 mov     edx, 440h       ; BufferCount
.text:00000001800052B4                 lea     rcx, [rsp+8A8h+Buffer] ; Buffer
.text:00000001800052BC                 call    sub_1800029E0
.text:00000001800052C1                 call    sub_180007430
.text:00000001800052C6                 mov     rcx, rax
.text:00000001800052C9                 lea     rdx, [rsp+8A8h+Buffer]
.text:00000001800052D1                 call    sub_180007D40
.text:00000001800052D6                 lea     r8, Source      ; "1"
.text:00000001800052DD                 mov     edx, 2          ; SizeInBytes
.text:00000001800052E2                 lea     rcx, [rsp+8A8h+Destination] ; Destination
.text:00000001800052E7                 call    cs:strcpy_s
.text:00000001800052ED                 mov     rcx, [rsi]      ; int
.text:00000001800052F0                 lea     rax, [rsp+8A8h+Destination]
.text:00000001800052F5                 mov     [rsp+8A8h+Src], rax ; Src
.text:00000001800052FA                 mov     edx, 3          ; int
.text:00000001800052FF                 mov     dword ptr [rsp+8A8h+Size], 400h ; Size
.text:0000000180005307                 xor     r9d, r9d        ; int
.text:000000018000530A                 mov     r8d, edx        ; int
.text:000000018000530D                 mov     [rsp+8A8h+var_888], ebx ; int
.text:0000000180005311                 call    sub_18000C2B0
.text:0000000180005316                 jmp     short loc_180005366
.text:0000000180005316 ; ---------------------------------------------------------------------------
.text:0000000180005318                 align 20h
.text:0000000180005320
.text:0000000180005320 loc_180005320:                          ; CODE XREF: sub_1800051C0+5F↑j
.text:0000000180005320                                         ; sub_1800051C0+167↓j
.text:0000000180005320                 inc     rbx
.text:0000000180005323                 cmp     byte ptr [rdi+rbx], 0
.text:0000000180005327                 jnz     short loc_180005320
.text:0000000180005329                 jmp     short loc_18000532D
.text:000000018000532B ; ---------------------------------------------------------------------------
.text:000000018000532B
.text:000000018000532B loc_18000532B:                          ; CODE XREF: sub_1800051C0+3F↑j
.text:000000018000532B                 xor     ebx, ebx
.text:000000018000532D
.text:000000018000532D loc_18000532D:                          ; CODE XREF: sub_1800051C0+169↑j
.text:000000018000532D                 mov     r9, rbx
.text:0000000180005330                 mov     [rsp+8A8h+var_888], 3FFh
.text:0000000180005338                 lea     r8, aErrorSettingCl_1 ; "Error setting Client Data Calculator Co"...
.text:000000018000533F                 mov     edx, 440h       ; BufferCount
.text:0000000180005344                 lea     rcx, [rsp+8A8h+Buffer] ; Buffer
.text:000000018000534C                 call    sub_1800029E0
.text:0000000180005351
.text:0000000180005351 loc_180005351:                          ; CODE XREF: sub_1800051C0+D1↑j
.text:0000000180005351                 call    sub_180007430
.text:0000000180005356                 lea     rdx, [rsp+8A8h+Buffer]
.text:000000018000535E                 mov     rcx, rax
.text:0000000180005361                 call    sub_180007930
.text:0000000180005366
.text:0000000180005366 loc_180005366:                          ; CODE XREF: sub_1800051C0+156↑j
.text:0000000180005366                 mov     rcx, [rsp+8A8h+var_18]
.text:000000018000536E                 xor     rcx, rsp        ; StackCookie
.text:0000000180005371                 call    __security_check_cookie
.text:0000000180005376                 lea     r11, [rsp+8A8h+var_8]
.text:000000018000537E                 mov     rbx, [r11+20h]
.text:0000000180005382                 mov     rsi, [r11+28h]
.text:0000000180005386                 mov     rsp, r11
.text:0000000180005389                 pop     rdi
.text:000000018000538A                 retn
.text:000000018000538A ; } // starts at 1800051C0
.text:000000018000538A sub_1800051C0   endp
.text:000000018000538A
.text:000000018000538A ; ---------------------------------------------------------------------------
.text:000000018000538B algn_18000538B:                         ; DATA XREF: .pdata:000000018001C3A8↓o
.text:000000018000538B                 align 10h
.text:0000000180005390
.text:0000000180005390 ; =============== S U B R O U T I N E =======================================
.text:0000000180005390
.text:0000000180005390
.text:0000000180005390 sub_180005390   proc near               ; CODE XREF: fsuipcw_getLvarIdFromName+D↑j
.text:0000000180005390                                         ; fsuipcw_flagLvarForUpdateCallbackByName+34↑p
.text:0000000180005390                                         ; DATA XREF: ...
.text:0000000180005390
.text:0000000180005390 var_48          = qword ptr -48h
.text:0000000180005390 var_30          = qword ptr -30h
.text:0000000180005390 var_28          = byte ptr -28h
.text:0000000180005390 arg_10          = qword ptr  18h
.text:0000000180005390 arg_18          = qword ptr  20h
.text:0000000180005390
.text:0000000180005390 ; __unwind { // __CxxFrameHandler4
.text:0000000180005390                 mov     [rsp+arg_10], rbx
.text:0000000180005395                 mov     [rsp+arg_18], rbp
.text:000000018000539A                 push    rsi
.text:000000018000539B                 push    rdi
.text:000000018000539C                 push    r12
.text:000000018000539E                 push    r14
.text:00000001800053A0                 push    r15
.text:00000001800053A2                 sub     rsp, 40h
.text:00000001800053A6                 mov     r12, rdx
.text:00000001800053A9                 mov     rsi, rcx
.text:00000001800053AC                 add     rcx, 388h       ; lpCriticalSection
.text:00000001800053B3                 call    cs:EnterCriticalSection
.text:00000001800053B9                 xor     edi, edi
.text:00000001800053BB                 mov     rax, [rsi+2F0h]
.text:00000001800053C2                 sub     rax, [rsi+2E8h]
.text:00000001800053C9                 sar     rax, 5
.text:00000001800053CD                 test    rax, rax
.text:00000001800053D0                 jz      loc_1800054A9
.text:00000001800053D6                 mov     ebp, edi
.text:00000001800053D8                 mov     r14d, edi
.text:00000001800053DB                 nop     dword ptr [rax+rax+00h]
.text:00000001800053E0
.text:00000001800053E0 loc_1800053E0:                          ; CODE XREF: sub_180005390+113↓j
.text:00000001800053E0                 mov     rdx, r12
.text:00000001800053E3                 lea     rcx, [rsp+68h+var_48]
.text:00000001800053E8                 call    sub_180005650
.text:00000001800053ED                 mov     r9, rax
.text:00000001800053F0                 mov     rcx, [rsi+2E8h]
.text:00000001800053F7                 mov     rax, [rsi+2F0h]
.text:00000001800053FE                 sub     rax, rcx
.text:0000000180005401                 sar     rax, 5
.text:0000000180005405                 cmp     rax, rbp
.text:0000000180005408                 jbe     loc_1800054EC
.text:000000018000540E                 lea     rax, [r14+rcx]
.text:0000000180005412                 mov     rdx, r9
.text:0000000180005415                 cmp     qword ptr [r9+18h], 10h
.text:000000018000541A                 jb      short loc_18000541F
.text:000000018000541C                 mov     rdx, [r9]       ; Buf2
.text:000000018000541F
.text:000000018000541F loc_18000541F:                          ; CODE XREF: sub_180005390+8A↑j
.text:000000018000541F                 mov     rcx, rax
.text:0000000180005422                 cmp     qword ptr [rax+18h], 10h
.text:0000000180005427                 jb      short loc_18000542C
.text:0000000180005429                 mov     rcx, [rax]      ; Buf1
.text:000000018000542C
.text:000000018000542C loc_18000542C:                          ; CODE XREF: sub_180005390+97↑j
.text:000000018000542C                 mov     r8, [rax+10h]   ; Size
.text:0000000180005430                 cmp     r8, [r9+10h]
.text:0000000180005434                 jnz     short loc_180005443
.text:0000000180005436                 call    memcmp
.text:000000018000543B                 test    eax, eax
.text:000000018000543D                 jnz     short loc_180005443
.text:000000018000543F                 mov     bl, 1
.text:0000000180005441                 jmp     short loc_180005445
.text:0000000180005443 ; ---------------------------------------------------------------------------
.text:0000000180005443
.text:0000000180005443 loc_180005443:                          ; CODE XREF: sub_180005390+A4↑j
.text:0000000180005443                                         ; sub_180005390+AD↑j
.text:0000000180005443                 xor     bl, bl
.text:0000000180005445
.text:0000000180005445 loc_180005445:                          ; CODE XREF: sub_180005390+B1↑j
.text:0000000180005445                 mov     rdx, [rsp+68h+var_30]
.text:000000018000544A                 cmp     rdx, 10h
.text:000000018000544E                 jb      short loc_18000547E
.text:0000000180005450                 inc     rdx
.text:0000000180005453                 mov     rcx, [rsp+68h+var_48]
.text:0000000180005458                 mov     rax, rcx
.text:000000018000545B                 cmp     rdx, 1000h
.text:0000000180005462                 jb      short loc_180005479
.text:0000000180005464                 add     rdx, 27h ; '''
.text:0000000180005468                 mov     rcx, [rcx-8]    ; Block
.text:000000018000546C                 sub     rax, rcx
.text:000000018000546F                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180005473                 cmp     rax, 1Fh
.text:0000000180005477                 ja      short loc_1800054D4
.text:0000000180005479
.text:0000000180005479 loc_180005479:                          ; CODE XREF: sub_180005390+D2↑j
.text:0000000180005479                 call    j_j_free
.text:000000018000547E
.text:000000018000547E loc_18000547E:                          ; CODE XREF: sub_180005390+BE↑j
.text:000000018000547E                 test    bl, bl
.text:0000000180005480                 jnz     short loc_1800054DB
.text:0000000180005482                 inc     edi
.text:0000000180005484                 inc     rbp
.text:0000000180005487                 add     r14, 20h ; ' '
.text:000000018000548B                 mov     rcx, [rsi+2F0h]
.text:0000000180005492                 sub     rcx, [rsi+2E8h]
.text:0000000180005499                 sar     rcx, 5
.text:000000018000549D                 movsxd  rax, edi
.text:00000001800054A0                 cmp     rax, rcx
.text:00000001800054A3                 jb      loc_1800053E0
.text:00000001800054A9
.text:00000001800054A9 loc_1800054A9:                          ; CODE XREF: sub_180005390+40↑j
.text:00000001800054A9                 lea     rcx, [rsi+388h] ; lpCriticalSection
.text:00000001800054B0                 call    cs:LeaveCriticalSection
.text:00000001800054B6                 mov     eax, 0FFFFFFFFh
.text:00000001800054BB
.text:00000001800054BB loc_1800054BB:                          ; CODE XREF: sub_180005390+15A↓j
.text:00000001800054BB                 lea     r11, [rsp+68h+var_28]
.text:00000001800054C0                 mov     rbx, [r11+40h]
.text:00000001800054C4                 mov     rbp, [r11+48h]
.text:00000001800054C8                 mov     rsp, r11
.text:00000001800054CB                 pop     r15
.text:00000001800054CD                 pop     r14
.text:00000001800054CF                 pop     r12
.text:00000001800054D1                 pop     rdi
.text:00000001800054D2                 pop     rsi
.text:00000001800054D3                 retn
.text:00000001800054D4 ; ---------------------------------------------------------------------------
.text:00000001800054D4
.text:00000001800054D4 loc_1800054D4:                          ; CODE XREF: sub_180005390+E7↑j
.text:00000001800054D4                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800054DA                 int     3               ; Trap to Debugger
.text:00000001800054DB ; ---------------------------------------------------------------------------
.text:00000001800054DB
.text:00000001800054DB loc_1800054DB:                          ; CODE XREF: sub_180005390+F0↑j
.text:00000001800054DB                 lea     rcx, [rsi+388h] ; lpCriticalSection
.text:00000001800054E2                 call    cs:LeaveCriticalSection
.text:00000001800054E8                 mov     eax, edi
.text:00000001800054EA                 jmp     short loc_1800054BB
.text:00000001800054EC ; ---------------------------------------------------------------------------
.text:00000001800054EC
.text:00000001800054EC loc_1800054EC:                          ; CODE XREF: sub_180005390+78↑j
.text:00000001800054EC                 call    sub_1800058B0
.text:00000001800054EC sub_180005390   endp
.text:00000001800054EC
.text:00000001800054EC ; ---------------------------------------------------------------------------
.text:00000001800054F1                 align 2
.text:00000001800054F1 ; } // starts at 180005390
.text:00000001800054F2 algn_1800054F2:                         ; DATA XREF: .pdata:000000018001C3B4↓o
.text:00000001800054F2                 align 20h
.text:0000000180005500
.text:0000000180005500 ; =============== S U B R O U T I N E =======================================
.text:0000000180005500
.text:0000000180005500
.text:0000000180005500 sub_180005500   proc near               ; CODE XREF: fsuipcw_flagLvarForUpdateCallbackById+C↑j
.text:0000000180005500                                         ; fsuipcw_flagLvarForUpdateCallbackByName+6F↑p
.text:0000000180005500                                         ; DATA XREF: ...
.text:0000000180005500                 sub     rsp, 28h
.text:0000000180005504                 mov     rax, [rcx+330h]
.text:000000018000550B                 mov     r9, rcx
.text:000000018000550E                 test    edx, edx
.text:0000000180005510                 jns     short loc_180005559
.text:0000000180005512                 xor     r10d, r10d
.text:0000000180005515                 test    rax, rax
.text:0000000180005518                 jz      short loc_180005580
.text:000000018000551A                 mov     r8d, r10d
.text:000000018000551D                 cmp     [rcx+330h], r10
.text:0000000180005524                 jbe     short loc_180005585
.text:0000000180005526
.text:0000000180005526 loc_180005526:                          ; CODE XREF: sub_180005500+52↓j
.text:0000000180005526                 mov     rax, [r9+318h]
.text:000000018000552D                 mov     rcx, r8
.text:0000000180005530                 and     r8d, 1Fh
.text:0000000180005534                 shr     rcx, 5
.text:0000000180005538                 inc     r10d
.text:000000018000553B                 lea     rdx, [rax+rcx*4]
.text:000000018000553F                 mov     eax, [rax+rcx*4]
.text:0000000180005542                 bts     eax, r8d
.text:0000000180005546                 movsxd  r8, r10d
.text:0000000180005549                 mov     [rdx], eax
.text:000000018000554B                 cmp     [r9+330h], r8
.text:0000000180005552                 ja      short loc_180005526
.text:0000000180005554                 add     rsp, 28h
.text:0000000180005558                 retn
.text:0000000180005559 ; ---------------------------------------------------------------------------
.text:0000000180005559
.text:0000000180005559 loc_180005559:                          ; CODE XREF: sub_180005500+10↑j
.text:0000000180005559                 movsxd  r8, edx
.text:000000018000555C                 cmp     r8, rax
.text:000000018000555F                 jnb     short loc_180005580
.text:0000000180005561                 mov     rax, [r9+318h]
.text:0000000180005568                 mov     rcx, r8
.text:000000018000556B                 shr     rcx, 5
.text:000000018000556F                 and     r8d, 1Fh
.text:0000000180005573                 lea     rdx, [rax+rcx*4]
.text:0000000180005577                 mov     eax, [rax+rcx*4]
.text:000000018000557A                 bts     eax, r8d
.text:000000018000557E                 mov     [rdx], eax
.text:0000000180005580
.text:0000000180005580 loc_180005580:                          ; CODE XREF: sub_180005500+18↑j
.text:0000000180005580                                         ; sub_180005500+5F↑j
.text:0000000180005580                 add     rsp, 28h
.text:0000000180005584                 retn
.text:0000000180005585 ; ---------------------------------------------------------------------------
.text:0000000180005585
.text:0000000180005585 loc_180005585:                          ; CODE XREF: sub_180005500+24↑j
.text:0000000180005585                 call    sub_180005890
.text:0000000180005585 ; ---------------------------------------------------------------------------
.text:000000018000558A                 db 0CCh
.text:000000018000558A sub_180005500   endp
.text:000000018000558A
.text:000000018000558B algn_18000558B:                         ; DATA XREF: .pdata:000000018001C3C0↓o
.text:000000018000558B                 align 10h
.text:0000000180005590
.text:0000000180005590 ; =============== S U B R O U T I N E =======================================
.text:0000000180005590
.text:0000000180005590
.text:0000000180005590 sub_180005590   proc near               ; CODE XREF: sub_1800113DB+7↓j
.text:0000000180005590                                         ; unknown_libname_1+7↓j
.text:0000000180005590                                         ; DATA XREF: ...
.text:0000000180005590                 push    rbx
.text:0000000180005592                 sub     rsp, 20h
.text:0000000180005596                 mov     rbx, rcx
.text:0000000180005599                 mov     rcx, [rcx]
.text:000000018000559C                 test    rcx, rcx
.text:000000018000559F                 jz      short loc_1800055DF
.text:00000001800055A1                 mov     rdx, [rbx+10h]
.text:00000001800055A5                 sub     rdx, rcx
.text:00000001800055A8                 and     rdx, 0FFFFFFFFFFFFFFF8h
.text:00000001800055AC                 cmp     rdx, 1000h
.text:00000001800055B3                 jb      short loc_1800055CD
.text:00000001800055B5                 mov     r8, [rcx-8]
.text:00000001800055B9                 add     rdx, 27h ; '''
.text:00000001800055BD                 sub     rcx, r8
.text:00000001800055C0                 lea     rax, [rcx-8]
.text:00000001800055C4                 cmp     rax, 1Fh
.text:00000001800055C8                 ja      short loc_1800055E5
.text:00000001800055CA                 mov     rcx, r8         ; Block
.text:00000001800055CD
.text:00000001800055CD loc_1800055CD:                          ; CODE XREF: sub_180005590+23↑j
.text:00000001800055CD                 call    j_j_free
.text:00000001800055D2                 xor     eax, eax
.text:00000001800055D4                 mov     [rbx], rax
.text:00000001800055D7                 mov     [rbx+8], rax
.text:00000001800055DB                 mov     [rbx+10h], rax
.text:00000001800055DF
.text:00000001800055DF loc_1800055DF:                          ; CODE XREF: sub_180005590+F↑j
.text:00000001800055DF                 add     rsp, 20h
.text:00000001800055E3                 pop     rbx
.text:00000001800055E4                 retn
.text:00000001800055E5 ; ---------------------------------------------------------------------------
.text:00000001800055E5
.text:00000001800055E5 loc_1800055E5:                          ; CODE XREF: sub_180005590+38↑j
.text:00000001800055E5                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800055E5 ; ---------------------------------------------------------------------------
.text:00000001800055EB                 db 0CCh
.text:00000001800055EB sub_180005590   endp
.text:00000001800055EB
.text:00000001800055EC algn_1800055EC:                         ; DATA XREF: .pdata:000000018001C3CC↓o
.text:00000001800055EC                 align 10h
.text:00000001800055F0
.text:00000001800055F0 ; =============== S U B R O U T I N E =======================================
.text:00000001800055F0
.text:00000001800055F0
.text:00000001800055F0 sub_1800055F0   proc near               ; CODE XREF: int `std::money_put<ushort,std::ostreambuf_iterator<ushort,std::char_traits<ushort>>>::_Putmfld(money_put<ushort,std::ostreambuf_iterator<ushort,std::char_traits<ushort>>>::std,bool,money_put<ushort,std::ostreambuf_iterator<ushort,std::char_traits<ushort>>>::ios_base &,ushort,bool,money_put<ushort,std::ostreambuf_iterator<ushort,std::char_traits<ushort>>>::basic_string<ushort,std::char_traits<ushort>,std::allocator<ushort>>,ushort)'::`1'::dtor$4+7↓j
.text:00000001800055F0                                         ; DATA XREF: .rdata:00000001800150E8↓o ...
.text:00000001800055F0                 push    rbx
.text:00000001800055F2                 sub     rsp, 20h
.text:00000001800055F6                 mov     rbx, rcx
.text:00000001800055F9                 mov     rcx, [rcx]
.text:00000001800055FC                 test    rcx, rcx
.text:00000001800055FF                 jz      short loc_18000563F
.text:0000000180005601                 mov     rdx, [rbx+10h]
.text:0000000180005605                 sub     rdx, rcx
.text:0000000180005608                 and     rdx, 0FFFFFFFFFFFFFFFCh
.text:000000018000560C                 cmp     rdx, 1000h
.text:0000000180005613                 jb      short loc_18000562D
.text:0000000180005615                 mov     r8, [rcx-8]
.text:0000000180005619                 add     rdx, 27h ; '''
.text:000000018000561D                 sub     rcx, r8
.text:0000000180005620                 lea     rax, [rcx-8]
.text:0000000180005624                 cmp     rax, 1Fh
.text:0000000180005628                 ja      short loc_180005645
.text:000000018000562A                 mov     rcx, r8         ; Block
.text:000000018000562D
.text:000000018000562D loc_18000562D:                          ; CODE XREF: sub_1800055F0+23↑j
.text:000000018000562D                 call    j_j_free
.text:0000000180005632                 xor     eax, eax
.text:0000000180005634                 mov     [rbx], rax
.text:0000000180005637                 mov     [rbx+8], rax
.text:000000018000563B                 mov     [rbx+10h], rax
.text:000000018000563F
.text:000000018000563F loc_18000563F:                          ; CODE XREF: sub_1800055F0+F↑j
.text:000000018000563F                 add     rsp, 20h
.text:0000000180005643                 pop     rbx
.text:0000000180005644                 retn
.text:0000000180005645 ; ---------------------------------------------------------------------------
.text:0000000180005645
.text:0000000180005645 loc_180005645:                          ; CODE XREF: sub_1800055F0+38↑j
.text:0000000180005645                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180005645 ; ---------------------------------------------------------------------------
.text:000000018000564B                 db 0CCh
.text:000000018000564B sub_1800055F0   endp
.text:000000018000564B
.text:000000018000564C algn_18000564C:                         ; DATA XREF: .pdata:000000018001C3D8↓o
.text:000000018000564C                 align 10h
.text:0000000180005650
.text:0000000180005650 ; =============== S U B R O U T I N E =======================================
.text:0000000180005650
.text:0000000180005650
.text:0000000180005650 sub_180005650   proc near               ; CODE XREF: sub_1800034B0+4AE↑p
.text:0000000180005650                                         ; sub_1800034B0+4F1↑p ...
.text:0000000180005650
.text:0000000180005650 arg_10          = qword ptr  18h
.text:0000000180005650 arg_18          = qword ptr  20h
.text:0000000180005650
.text:0000000180005650                 mov     [rsp+arg_10], rbx
.text:0000000180005655                 mov     [rsp+arg_18], rbp
.text:000000018000565A                 push    rsi
.text:000000018000565B                 push    rdi
.text:000000018000565C                 push    r14
.text:000000018000565E                 sub     rsp, 20h
.text:0000000180005662                 xor     r14d, r14d
.text:0000000180005665                 xorps   xmm0, xmm0
.text:0000000180005668                 movups  xmmword ptr [rcx], xmm0
.text:000000018000566B                 mov     [rcx+10h], r14
.text:000000018000566F                 mov     rbp, rdx
.text:0000000180005672                 mov     [rcx+18h], r14
.text:0000000180005676                 mov     rdi, rcx
.text:0000000180005679                 mov     rbx, 0FFFFFFFFFFFFFFFFh
.text:0000000180005680
.text:0000000180005680 loc_180005680:                          ; CODE XREF: sub_180005650+37↓j
.text:0000000180005680                 inc     rbx
.text:0000000180005683                 cmp     [rbx+rdx], r14b
.text:0000000180005687                 jnz     short loc_180005680
.text:0000000180005689                 mov     rsi, 7FFFFFFFFFFFFFFFh
.text:0000000180005693                 cmp     rbx, rsi
.text:0000000180005696                 ja      loc_180005763
.text:000000018000569C                 mov     qword ptr [rcx+18h], 0Fh
.text:00000001800056A4                 cmp     rbx, 10h
.text:00000001800056A8                 jnb     short loc_1800056BF
.text:00000001800056AA                 mov     r8, rbx         ; Size
.text:00000001800056AD                 mov     [rcx+10h], rbx
.text:00000001800056B1                 call    memmove
.text:00000001800056B6                 mov     [rdi+rbx], r14b
.text:00000001800056BA                 jmp     loc_18000574D
.text:00000001800056BF ; ---------------------------------------------------------------------------
.text:00000001800056BF
.text:00000001800056BF loc_1800056BF:                          ; CODE XREF: sub_180005650+58↑j
.text:00000001800056BF                 mov     rax, rbx
.text:00000001800056C2                 or      rax, 0Fh
.text:00000001800056C6                 cmp     rax, rsi
.text:00000001800056C9                 jbe     short loc_1800056F4
.text:00000001800056CB                 mov     rax, 8000000000000000h
.text:00000001800056D5                 add     rax, 27h ; '''
.text:00000001800056D9
.text:00000001800056D9 loc_1800056D9:                          ; CODE XREF: sub_180005650+C9↓j
.text:00000001800056D9                 mov     rcx, rax        ; Size
.text:00000001800056DC                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:00000001800056E1                 test    rax, rax
.text:00000001800056E4                 jz      short loc_18000571B
.text:00000001800056E6                 lea     r14, [rax+27h]
.text:00000001800056EA                 and     r14, 0FFFFFFFFFFFFFFE0h
.text:00000001800056EE                 mov     [r14-8], rax
.text:00000001800056F2                 jmp     short loc_18000572F
.text:00000001800056F4 ; ---------------------------------------------------------------------------
.text:00000001800056F4
.text:00000001800056F4 loc_1800056F4:                          ; CODE XREF: sub_180005650+79↑j
.text:00000001800056F4                 mov     ecx, 16h
.text:00000001800056F9                 mov     rsi, rax
.text:00000001800056FC                 cmp     rax, rcx
.text:00000001800056FF                 cmovb   rsi, rcx
.text:0000000180005703                 lea     rcx, [rsi+1]    ; Size
.text:0000000180005707                 cmp     rcx, 1000h
.text:000000018000570E                 jb      short loc_180005722
.text:0000000180005710                 lea     rax, [rcx+27h]
.text:0000000180005714                 cmp     rax, rcx
.text:0000000180005717                 jbe     short loc_180005769
.text:0000000180005719                 jmp     short loc_1800056D9
.text:000000018000571B ; ---------------------------------------------------------------------------
.text:000000018000571B
.text:000000018000571B loc_18000571B:                          ; CODE XREF: sub_180005650+94↑j
.text:000000018000571B                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180005721                 int     3               ; Trap to Debugger
.text:0000000180005722 ; ---------------------------------------------------------------------------
.text:0000000180005722
.text:0000000180005722 loc_180005722:                          ; CODE XREF: sub_180005650+BE↑j
.text:0000000180005722                 test    rcx, rcx
.text:0000000180005725                 jz      short loc_18000572F
.text:0000000180005727                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000572C                 mov     r14, rax
.text:000000018000572F
.text:000000018000572F loc_18000572F:                          ; CODE XREF: sub_180005650+A2↑j
.text:000000018000572F                                         ; sub_180005650+D5↑j
.text:000000018000572F                 mov     r8, rbx         ; Size
.text:0000000180005732                 mov     [rdi], r14
.text:0000000180005735                 mov     rdx, rbp        ; Src
.text:0000000180005738                 mov     [rdi+10h], rbx
.text:000000018000573C                 mov     rcx, r14        ; void *
.text:000000018000573F                 mov     [rdi+18h], rsi
.text:0000000180005743                 call    memcpy
.text:0000000180005748                 mov     byte ptr [r14+rbx], 0
.text:000000018000574D
.text:000000018000574D loc_18000574D:                          ; CODE XREF: sub_180005650+6A↑j
.text:000000018000574D                 mov     rbx, [rsp+38h+arg_10]
.text:0000000180005752                 mov     rax, rdi
.text:0000000180005755                 mov     rbp, [rsp+38h+arg_18]
.text:000000018000575A                 add     rsp, 20h
.text:000000018000575E                 pop     r14
.text:0000000180005760                 pop     rdi
.text:0000000180005761                 pop     rsi
.text:0000000180005762                 retn
.text:0000000180005763 ; ---------------------------------------------------------------------------
.text:0000000180005763
.text:0000000180005763 loc_180005763:                          ; CODE XREF: sub_180005650+46↑j
.text:0000000180005763                 call    sub_180002AC0
.text:0000000180005763 ; ---------------------------------------------------------------------------
.text:0000000180005768                 db 0CCh
.text:0000000180005769 ; ---------------------------------------------------------------------------
.text:0000000180005769
.text:0000000180005769 loc_180005769:                          ; CODE XREF: sub_180005650+C7↑j
.text:0000000180005769                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:0000000180005769 ; ---------------------------------------------------------------------------
.text:000000018000576E                 db 0CCh
.text:000000018000576E sub_180005650   endp
.text:000000018000576E
.text:000000018000576F algn_18000576F:                         ; DATA XREF: .pdata:000000018001C3E4↓o
.text:000000018000576F                 align 10h
.text:0000000180005770
.text:0000000180005770 ; =============== S U B R O U T I N E =======================================
.text:0000000180005770
.text:0000000180005770
.text:0000000180005770 sub_180005770   proc near               ; CODE XREF: fsuipcw_getLvarValues+EE↑p
.text:0000000180005770                                         ; fsuipcw_getLvarList+100↑p ...
.text:0000000180005770
.text:0000000180005770 arg_10          = qword ptr  18h
.text:0000000180005770
.text:0000000180005770                 mov     [rsp+arg_10], rbx
.text:0000000180005775                 push    rbp
.text:0000000180005776                 push    rsi
.text:0000000180005777                 push    rdi
.text:0000000180005778                 sub     rsp, 20h
.text:000000018000577C                 xor     eax, eax
.text:000000018000577E                 xorps   xmm0, xmm0
.text:0000000180005781                 movups  xmmword ptr [rcx], xmm0
.text:0000000180005784                 mov     [rcx+10h], rax
.text:0000000180005788                 mov     rbx, rcx
.text:000000018000578B                 mov     [rcx+18h], rax
.text:000000018000578F                 mov     rbp, rdx
.text:0000000180005792                 cmp     qword ptr [rdx+18h], 10h
.text:0000000180005797                 jb      short loc_18000579C
.text:0000000180005799                 mov     rbp, [rdx]
.text:000000018000579C
.text:000000018000579C loc_18000579C:                          ; CODE XREF: sub_180005770+27↑j
.text:000000018000579C                 mov     rsi, [rdx+10h]
.text:00000001800057A0                 mov     rdi, 7FFFFFFFFFFFFFFFh
.text:00000001800057AA                 cmp     rsi, rdi
.text:00000001800057AD                 ja      loc_18000587D
.text:00000001800057B3                 mov     qword ptr [rcx+18h], 0Fh
.text:00000001800057BB                 cmp     rsi, 10h
.text:00000001800057BF                 jnb     short loc_1800057E3
.text:00000001800057C1                 mov     r8d, 10h        ; Size
.text:00000001800057C7                 mov     [rcx+10h], rsi
.text:00000001800057CB                 mov     rdx, rbp        ; Src
.text:00000001800057CE                 call    memmove
.text:00000001800057D3                 mov     rax, rbx
.text:00000001800057D6                 mov     rbx, [rsp+38h+arg_10]
.text:00000001800057DB                 add     rsp, 20h
.text:00000001800057DF                 pop     rdi
.text:00000001800057E0                 pop     rsi
.text:00000001800057E1                 pop     rbp
.text:00000001800057E2                 retn
.text:00000001800057E3 ; ---------------------------------------------------------------------------
.text:00000001800057E3
.text:00000001800057E3 loc_1800057E3:                          ; CODE XREF: sub_180005770+4F↑j
.text:00000001800057E3                 mov     rcx, rsi
.text:00000001800057E6                 or      rcx, 0Fh
.text:00000001800057EA                 cmp     rcx, rdi
.text:00000001800057ED                 jbe     short loc_18000581B
.text:00000001800057EF                 mov     rax, 8000000000000000h
.text:00000001800057F9                 add     rax, 27h ; '''
.text:00000001800057FD
.text:00000001800057FD loc_1800057FD:                          ; CODE XREF: sub_180005770+D0↓j
.text:00000001800057FD                 mov     rcx, rax        ; Size
.text:0000000180005800                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180005805                 mov     rcx, rax
.text:0000000180005808                 test    rax, rax
.text:000000018000580B                 jz      short loc_180005842
.text:000000018000580D                 add     rax, 27h ; '''
.text:0000000180005811                 and     rax, 0FFFFFFFFFFFFFFE0h
.text:0000000180005815                 mov     [rax-8], rcx
.text:0000000180005819                 jmp     short loc_180005853
.text:000000018000581B ; ---------------------------------------------------------------------------
.text:000000018000581B
.text:000000018000581B loc_18000581B:                          ; CODE XREF: sub_180005770+7D↑j
.text:000000018000581B                 mov     edx, 16h
.text:0000000180005820                 mov     rdi, rcx
.text:0000000180005823                 cmp     rcx, rdx
.text:0000000180005826                 cmovb   rdi, rdx
.text:000000018000582A                 lea     rcx, [rdi+1]    ; Size
.text:000000018000582E                 cmp     rcx, 1000h
.text:0000000180005835                 jb      short loc_180005849
.text:0000000180005837                 lea     rax, [rcx+27h]
.text:000000018000583B                 cmp     rax, rcx
.text:000000018000583E                 jbe     short loc_180005883
.text:0000000180005840                 jmp     short loc_1800057FD
.text:0000000180005842 ; ---------------------------------------------------------------------------
.text:0000000180005842
.text:0000000180005842 loc_180005842:                          ; CODE XREF: sub_180005770+9B↑j
.text:0000000180005842                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180005848                 int     3               ; Trap to Debugger
.text:0000000180005849 ; ---------------------------------------------------------------------------
.text:0000000180005849
.text:0000000180005849 loc_180005849:                          ; CODE XREF: sub_180005770+C5↑j
.text:0000000180005849                 test    rcx, rcx
.text:000000018000584C                 jz      short loc_180005853
.text:000000018000584E                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180005853
.text:0000000180005853 loc_180005853:                          ; CODE XREF: sub_180005770+A9↑j
.text:0000000180005853                                         ; sub_180005770+DC↑j
.text:0000000180005853                 lea     r8, [rsi+1]     ; Size
.text:0000000180005857                 mov     [rbx], rax
.text:000000018000585A                 mov     rdx, rbp        ; Src
.text:000000018000585D                 mov     [rbx+10h], rsi
.text:0000000180005861                 mov     rcx, rax        ; void *
.text:0000000180005864                 mov     [rbx+18h], rdi
.text:0000000180005868                 call    memcpy
.text:000000018000586D                 mov     rax, rbx
.text:0000000180005870                 mov     rbx, [rsp+38h+arg_10]
.text:0000000180005875                 add     rsp, 20h
.text:0000000180005879                 pop     rdi
.text:000000018000587A                 pop     rsi
.text:000000018000587B                 pop     rbp
.text:000000018000587C                 retn
.text:000000018000587D ; ---------------------------------------------------------------------------
.text:000000018000587D
.text:000000018000587D loc_18000587D:                          ; CODE XREF: sub_180005770+3D↑j
.text:000000018000587D                 call    sub_180002AC0
.text:000000018000587D ; ---------------------------------------------------------------------------
.text:0000000180005882                 db 0CCh
.text:0000000180005883 ; ---------------------------------------------------------------------------
.text:0000000180005883
.text:0000000180005883 loc_180005883:                          ; CODE XREF: sub_180005770+CE↑j
.text:0000000180005883                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:0000000180005883 ; ---------------------------------------------------------------------------
.text:0000000180005888                 db 0CCh
.text:0000000180005888 sub_180005770   endp
.text:0000000180005888
.text:0000000180005889 algn_180005889:                         ; DATA XREF: .pdata:000000018001C3F0↓o
.text:0000000180005889                 align 10h
.text:0000000180005890
.text:0000000180005890 ; =============== S U B R O U T I N E =======================================
.text:0000000180005890
.text:0000000180005890 ; Attributes: noreturn
.text:0000000180005890
.text:0000000180005890 sub_180005890   proc near               ; CODE XREF: sub_1800034B0:loc_180004C85↑p
.text:0000000180005890                                         ; sub_180005500:loc_180005585↑p
.text:0000000180005890                                         ; DATA XREF: ...
.text:0000000180005890                 sub     rsp, 28h
.text:0000000180005894                 lea     rcx, aInvalidVectorB ; "invalid vector<bool> subscript"
.text:000000018000589B                 call    cs:?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range(char const *)
.text:000000018000589B ; ---------------------------------------------------------------------------
.text:00000001800058A1                 db 0CCh
.text:00000001800058A1 sub_180005890   endp
.text:00000001800058A1
.text:00000001800058A2 algn_1800058A2:                         ; DATA XREF: .pdata:000000018001C3FC↓o
.text:00000001800058A2                 align 10h
.text:00000001800058B0
.text:00000001800058B0 ; =============== S U B R O U T I N E =======================================
.text:00000001800058B0
.text:00000001800058B0 ; Attributes: noreturn
.text:00000001800058B0
.text:00000001800058B0 sub_1800058B0   proc near               ; CODE XREF: fsuipcw_getLvarFromName:loc_180001801↑p
.text:00000001800058B0                                         ; fsuipcw_logLvars:loc_180001B00↑p ...
.text:00000001800058B0                 sub     rsp, 28h
.text:00000001800058B4                 lea     rcx, aInvalidVectorS ; "invalid vector subscript"
.text:00000001800058BB                 call    cs:?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range(char const *)
.text:00000001800058BB ; ---------------------------------------------------------------------------
.text:00000001800058C1                 db 0CCh
.text:00000001800058C1 sub_1800058B0   endp
.text:00000001800058C1
.text:00000001800058C2 algn_1800058C2:                         ; DATA XREF: .pdata:000000018001C408↓o
.text:00000001800058C2                 align 10h
.text:00000001800058D0
.text:00000001800058D0 ; =============== S U B R O U T I N E =======================================
.text:00000001800058D0
.text:00000001800058D0
.text:00000001800058D0 sub_1800058D0   proc near               ; CODE XREF: sub_1800034B0+C2A↑p
.text:00000001800058D0                                         ; DATA XREF: .pdata:000000018001C414↓o
.text:00000001800058D0
.text:00000001800058D0 var_38          = xmmword ptr -38h
.text:00000001800058D0 arg_18          = qword ptr  20h
.text:00000001800058D0 arg_20          = qword ptr  28h
.text:00000001800058D0
.text:00000001800058D0                 mov     [rsp+arg_18], rbx
.text:00000001800058D5                 push    rbp
.text:00000001800058D6                 push    rsi
.text:00000001800058D7                 push    rdi
.text:00000001800058D8                 push    r14
.text:00000001800058DA                 push    r15
.text:00000001800058DC                 sub     rsp, 30h
.text:00000001800058E0                 movups  xmm0, xmmword ptr [r8]
.text:00000001800058E4                 mov     r15, [rsp+58h+arg_20]
.text:00000001800058EC                 mov     rdi, rdx
.text:00000001800058EF                 lea     rdx, [rsp+58h+var_38]
.text:00000001800058F4                 mov     rbx, rcx
.text:00000001800058F7                 movaps  [rsp+58h+var_38], xmm0
.text:00000001800058FC                 call    sub_180005A40
.text:0000000180005901                 xorps   xmm0, xmm0
.text:0000000180005904                 lea     rdx, [rdi+8]
.text:0000000180005908                 movups  xmmword ptr [rdi], xmm0
.text:000000018000590B                 mov     rcx, rax
.text:000000018000590E                 xor     esi, esi
.text:0000000180005910                 mov     rax, [rbx]
.text:0000000180005913                 mov     qword ptr [rsp+58h+var_38], rax
.text:0000000180005918                 mov     qword ptr [rsp+58h+var_38+8], rsi
.text:000000018000591D                 movups  xmm0, [rsp+58h+var_38]
.text:0000000180005922                 movups  xmmword ptr [rdi], xmm0
.text:0000000180005925                 test    rcx, rcx
.text:0000000180005928                 jns     short loc_180005955
.text:000000018000592A                 mov     r8, [rdx]
.text:000000018000592D                 mov     rax, rcx
.text:0000000180005930                 neg     rax
.text:0000000180005933                 cmp     r8, rax
.text:0000000180005936                 jnb     short loc_180005955
.text:0000000180005938                 add     r8, rcx
.text:000000018000593B                 mov     rax, 0FFFFFFFFFFFFFFFCh
.text:0000000180005942                 mov     rcx, r8
.text:0000000180005945                 not     rcx
.text:0000000180005948                 shr     rcx, 5
.text:000000018000594C                 shl     rcx, 2
.text:0000000180005950                 sub     rax, rcx
.text:0000000180005953                 jmp     short loc_180005966
.text:0000000180005955 ; ---------------------------------------------------------------------------
.text:0000000180005955
.text:0000000180005955 loc_180005955:                          ; CODE XREF: sub_1800058D0+58↑j
.text:0000000180005955                                         ; sub_1800058D0+66↑j
.text:0000000180005955                 mov     r8, [rdx]
.text:0000000180005958                 add     r8, rcx
.text:000000018000595B                 mov     rax, r8
.text:000000018000595E                 shr     rax, 5
.text:0000000180005962                 shl     rax, 2
.text:0000000180005966
.text:0000000180005966 loc_180005966:                          ; CODE XREF: sub_1800058D0+83↑j
.text:0000000180005966                 add     [rdi], rax
.text:0000000180005969                 mov     [rdx], r8
.text:000000018000596C                 and     r8d, 1Fh
.text:0000000180005970                 mov     [rdx], r8
.text:0000000180005973                 mov     rcx, [rdi]
.text:0000000180005976                 mov     rbp, [rdi+8]
.text:000000018000597A                 mov     r8, [rdi]
.text:000000018000597D                 inc     rbp
.text:0000000180005980                 movzx   r15d, byte ptr [r15]
.text:0000000180005984                 mov     rax, rbp
.text:0000000180005987                 shr     rax, 5
.text:000000018000598B                 and     ebp, 1Fh
.text:000000018000598E                 lea     r14, [rcx+rax*4]
.text:0000000180005992                 mov     rcx, [rdi+8]
.text:0000000180005996                 cmp     r8, r14
.text:0000000180005999                 jnz     short loc_1800059A4
.text:000000018000599B                 cmp     rcx, rbp
.text:000000018000599E                 jz      loc_180005A26
.text:00000001800059A4
.text:00000001800059A4 loc_1800059A4:                          ; CODE XREF: sub_1800058D0+C9↑j
.text:00000001800059A4                 mov     r10d, [r8]
.text:00000001800059A7                 mov     ebx, 0FFFFFFFFh
.text:00000001800059AC                 mov     edx, ebx
.text:00000001800059AE                 shl     edx, cl
.text:00000001800059B0                 mov     r9d, edx
.text:00000001800059B3                 not     r9d
.text:00000001800059B6                 cmp     r8, r14
.text:00000001800059B9                 jnz     short loc_1800059DC
.text:00000001800059BB                 mov     ecx, 20h ; ' '
.text:00000001800059C0                 sub     cl, bpl
.text:00000001800059C3                 shr     ebx, cl
.text:00000001800059C5                 test    r15b, r15b
.text:00000001800059C8                 cmovnz  esi, ebx
.text:00000001800059CB                 not     ebx
.text:00000001800059CD                 or      ebx, r9d
.text:00000001800059D0                 and     esi, edx
.text:00000001800059D2                 and     ebx, r10d
.text:00000001800059D5                 or      esi, ebx
.text:00000001800059D7                 mov     [r8], esi
.text:00000001800059DA                 jmp     short loc_180005A26
.text:00000001800059DC ; ---------------------------------------------------------------------------
.text:00000001800059DC
.text:00000001800059DC loc_1800059DC:                          ; CODE XREF: sub_1800058D0+E9↑j
.text:00000001800059DC                 lea     rcx, [r8+4]     ; void *
.text:00000001800059E0                 test    r15b, r15b
.text:00000001800059E3                 mov     eax, esi
.text:00000001800059E5                 cmovnz  eax, edx
.text:00000001800059E8                 and     r10d, r9d
.text:00000001800059EB                 or      eax, r10d
.text:00000001800059EE                 mov     [r8], eax
.text:00000001800059F1                 movzx   eax, r15b
.text:00000001800059F5                 mov     r8, r14
.text:00000001800059F8                 sub     r8, rcx         ; Size
.text:00000001800059FB                 neg     al
.text:00000001800059FD                 sbb     edx, edx
.text:00000001800059FF                 movzx   edx, dl         ; Val
.text:0000000180005A02                 call    memset
.text:0000000180005A07                 test    rbp, rbp
.text:0000000180005A0A                 jz      short loc_180005A26
.text:0000000180005A0C                 mov     ecx, 20h ; ' '
.text:0000000180005A11                 sub     cl, bpl
.text:0000000180005A14                 shr     ebx, cl
.text:0000000180005A16                 test    r15b, r15b
.text:0000000180005A19                 cmovnz  esi, ebx
.text:0000000180005A1C                 not     ebx
.text:0000000180005A1E                 and     ebx, [r14]
.text:0000000180005A21                 or      esi, ebx
.text:0000000180005A23                 mov     [r14], esi
.text:0000000180005A26
.text:0000000180005A26 loc_180005A26:                          ; CODE XREF: sub_1800058D0+CE↑j
.text:0000000180005A26                                         ; sub_1800058D0+10A↑j ...
.text:0000000180005A26                 mov     rbx, [rsp+58h+arg_18]
.text:0000000180005A2B                 mov     rax, rdi
.text:0000000180005A2E                 add     rsp, 30h
.text:0000000180005A32                 pop     r15
.text:0000000180005A34                 pop     r14
.text:0000000180005A36                 pop     rdi
.text:0000000180005A37                 pop     rsi
.text:0000000180005A38                 pop     rbp
.text:0000000180005A39                 retn
.text:0000000180005A39 sub_1800058D0   endp
.text:0000000180005A39
.text:0000000180005A39 ; ---------------------------------------------------------------------------
.text:0000000180005A3A algn_180005A3A:                         ; DATA XREF: .pdata:000000018001C414↓o
.text:0000000180005A3A                 align 20h
.text:0000000180005A40
.text:0000000180005A40 ; =============== S U B R O U T I N E =======================================
.text:0000000180005A40
.text:0000000180005A40
.text:0000000180005A40 sub_180005A40   proc near               ; CODE XREF: sub_1800058D0+2C↑p
.text:0000000180005A40                                         ; DATA XREF: .rdata:0000000180015214↓o ...
.text:0000000180005A40
.text:0000000180005A40 var_28          = dword ptr -28h
.text:0000000180005A40 var_18          = xmmword ptr -18h
.text:0000000180005A40 arg_8           = qword ptr  10h
.text:0000000180005A40 arg_10          = qword ptr  18h
.text:0000000180005A40 arg_18          = qword ptr  20h
.text:0000000180005A40
.text:0000000180005A40                 mov     [rsp+arg_10], rbx
.text:0000000180005A45                 mov     [rsp+arg_18], rbp
.text:0000000180005A4A                 push    rdi
.text:0000000180005A4B                 sub     rsp, 40h
.text:0000000180005A4F                 mov     r9, [rcx]
.text:0000000180005A52                 mov     rax, 7FFFFFFFFFFFFFFFh
.text:0000000180005A5C                 mov     rbp, [rdx]
.text:0000000180005A5F                 mov     rdi, rcx
.text:0000000180005A62                 mov     rbx, [rcx+18h]
.text:0000000180005A66                 sub     rbp, r9
.text:0000000180005A69                 sar     rbp, 2
.text:0000000180005A6D                 sub     rax, rbx
.text:0000000180005A70                 shl     rbp, 5
.text:0000000180005A74                 add     rbp, [rdx+8]
.text:0000000180005A78                 cmp     rax, 1
.text:0000000180005A7C                 jb      loc_180005C53
.text:0000000180005A82                 add     rbx, 20h ; ' '
.text:0000000180005A86
.text:0000000180005A86 loc_180005A86:                          ; DATA XREF: .rdata:0000000180015214↓o
.text:0000000180005A86                                         ; .rdata:0000000180015224↓o ...
.text:0000000180005A86                 mov     [rsp+48h+arg_8], rsi
.text:0000000180005A8B                 mov     rsi, [rcx+8]
.text:0000000180005A8F                 xor     edx, edx        ; Val
.text:0000000180005A91                 mov     rcx, rsi
.text:0000000180005A94                 shr     rbx, 5
.text:0000000180005A98                 sub     rcx, r9
.text:0000000180005A9B                 mov     [rsp+48h+var_28], edx
.text:0000000180005A9F                 sar     rcx, 2
.text:0000000180005AA3                 cmp     rbx, rcx
.text:0000000180005AA6                 jnb     short loc_180005AB2
.text:0000000180005AA8                 lea     rax, [r9+rbx*4]
.text:0000000180005AAC                 mov     [rdi+8], rax
.text:0000000180005AB0                 jmp     short loc_180005AF3
.text:0000000180005AB2 ; ---------------------------------------------------------------------------
.text:0000000180005AB2
.text:0000000180005AB2 loc_180005AB2:                          ; CODE XREF: sub_180005A40+66↑j
.text:0000000180005AB2                 jbe     short loc_180005AF3
.text:0000000180005AB4                 mov     rax, [rdi+10h]
.text:0000000180005AB8                 sub     rax, r9
.text:0000000180005ABB                 sar     rax, 2
.text:0000000180005ABF                 cmp     rbx, rax
.text:0000000180005AC2                 jbe     short loc_180005AD6
.text:0000000180005AC4                 lea     r8, [rsp+48h+var_28]
.text:0000000180005AC9                 mov     rdx, rbx
.text:0000000180005ACC                 mov     rcx, rdi
.text:0000000180005ACF                 call    sub_1800065A0
.text:0000000180005AD4                 jmp     short loc_180005AF3
.text:0000000180005AD6 ; ---------------------------------------------------------------------------
.text:0000000180005AD6
.text:0000000180005AD6 loc_180005AD6:                          ; CODE XREF: sub_180005A40+82↑j
.text:0000000180005AD6                 sub     rbx, rcx
.text:0000000180005AD9                 mov     rcx, rsi        ; void *
.text:0000000180005ADC                 lea     rbx, ds:0[rbx*4]
.text:0000000180005AE4                 mov     r8, rbx         ; Size
.text:0000000180005AE7                 call    memset
.text:0000000180005AEC                 add     rsi, rbx
.text:0000000180005AEF                 mov     [rdi+8], rsi
.text:0000000180005AF3
.text:0000000180005AF3 loc_180005AF3:                          ; CODE XREF: sub_180005A40+70↑j
.text:0000000180005AF3                                         ; sub_180005A40:loc_180005AB2↑j ...
.text:0000000180005AF3                 mov     r8, [rdi+18h]
.text:0000000180005AF7                 mov     rsi, [rsp+48h+arg_8]
.text:0000000180005AFC                 test    r8, r8
.text:0000000180005AFF                 jnz     short loc_180005B1C
.text:0000000180005B01
.text:0000000180005B01 loc_180005B01:                          ; DATA XREF: .pdata:000000018001C42C↓o
.text:0000000180005B01                                         ; .pdata:000000018001C438↓o
.text:0000000180005B01                 lea     rax, [r8+1]
.text:0000000180005B05                 mov     [rdi+18h], rax
.text:0000000180005B09
.text:0000000180005B09 loc_180005B09:                          ; CODE XREF: sub_180005A40+1BB↓j
.text:0000000180005B09                 mov     rbx, [rsp+48h+arg_10]
.text:0000000180005B0E                 mov     rax, rbp
.text:0000000180005B11                 mov     rbp, [rsp+48h+arg_18]
.text:0000000180005B16                 add     rsp, 40h
.text:0000000180005B1A                 pop     rdi
.text:0000000180005B1B                 retn
.text:0000000180005B1C ; ---------------------------------------------------------------------------
.text:0000000180005B1C
.text:0000000180005B1C loc_180005B1C:                          ; CODE XREF: sub_180005A40+BF↑j
.text:0000000180005B1C                 mov     r11, [rdi]
.text:0000000180005B1F                 test    r8, r8
.text:0000000180005B22                 jns     short loc_180005B46
.text:0000000180005B24                 mov     rax, r8
.text:0000000180005B27                 neg     rax
.text:0000000180005B2A                 jz      short loc_180005B46
.text:0000000180005B2C                 mov     rax, r8
.text:0000000180005B2F                 mov     r10, r11
.text:0000000180005B32                 not     rax
.text:0000000180005B35                 shr     rax, 5
.text:0000000180005B39                 lea     rax, ds:4[rax*4]
.text:0000000180005B41                 sub     r10, rax
.text:0000000180005B44                 jmp     short loc_180005B51
.text:0000000180005B46 ; ---------------------------------------------------------------------------
.text:0000000180005B46
.text:0000000180005B46 loc_180005B46:                          ; CODE XREF: sub_180005A40+E2↑j
.text:0000000180005B46                                         ; sub_180005A40+EA↑j
.text:0000000180005B46                 mov     rax, r8
.text:0000000180005B49                 shr     rax, 5
.text:0000000180005B4D                 lea     r10, [r11+rax*4]
.text:0000000180005B51
.text:0000000180005B51 loc_180005B51:                          ; CODE XREF: sub_180005A40+104↑j
.text:0000000180005B51                 mov     rdx, r8
.text:0000000180005B54                 and     edx, 1Fh
.text:0000000180005B57                 add     r8, 1
.text:0000000180005B5B                 mov     [rdi+18h], r8
.text:0000000180005B5F                 jns     short loc_180005B88
.text:0000000180005B61                 mov     rax, r8
.text:0000000180005B64                 neg     rax
.text:0000000180005B67                 jz      short loc_180005B88
.text:0000000180005B69                 mov     rax, r8
.text:0000000180005B6C                 mov     rcx, r11
.text:0000000180005B6F                 not     rax
.text:0000000180005B72                 shr     rax, 5
.text:0000000180005B76                 lea     rax, ds:4[rax*4]
.text:0000000180005B7E                 sub     rcx, rax
.text:0000000180005B81                 mov     qword ptr [rsp+48h+var_18], rcx
.text:0000000180005B86                 jmp     short loc_180005B98
.text:0000000180005B88 ; ---------------------------------------------------------------------------
.text:0000000180005B88
.text:0000000180005B88 loc_180005B88:                          ; CODE XREF: sub_180005A40+11F↑j
.text:0000000180005B88                                         ; sub_180005A40+127↑j
.text:0000000180005B88                 mov     rax, r8
.text:0000000180005B8B                 shr     rax, 5
.text:0000000180005B8F                 lea     rax, [r11+rax*4]
.text:0000000180005B93                 mov     qword ptr [rsp+48h+var_18], rax
.text:0000000180005B98
.text:0000000180005B98 loc_180005B98:                          ; CODE XREF: sub_180005A40+146↑j
.text:0000000180005B98                 and     r8d, 1Fh
.text:0000000180005B9C                 mov     qword ptr [rsp+48h+var_18+8], r8
.text:0000000180005BA1                 test    rbp, rbp
.text:0000000180005BA4                 jns     short loc_180005BC5
.text:0000000180005BA6                 mov     rax, rbp
.text:0000000180005BA9                 neg     rax
.text:0000000180005BAC                 jz      short loc_180005BC5
.text:0000000180005BAE                 mov     rax, rbp
.text:0000000180005BB1                 not     rax
.text:0000000180005BB4                 shr     rax, 5
.text:0000000180005BB8                 lea     rax, ds:4[rax*4]
.text:0000000180005BC0                 sub     r11, rax
.text:0000000180005BC3                 jmp     short loc_180005BD0
.text:0000000180005BC5 ; ---------------------------------------------------------------------------
.text:0000000180005BC5
.text:0000000180005BC5 loc_180005BC5:                          ; CODE XREF: sub_180005A40+164↑j
.text:0000000180005BC5                                         ; sub_180005A40+16C↑j
.text:0000000180005BC5                 mov     rax, rbp
.text:0000000180005BC8                 shr     rax, 5
.text:0000000180005BCC                 lea     r11, [r11+rax*4]
.text:0000000180005BD0
.text:0000000180005BD0 loc_180005BD0:                          ; CODE XREF: sub_180005A40+183↑j
.text:0000000180005BD0                 movaps  xmm0, [rsp+48h+var_18]
.text:0000000180005BD5                 mov     rbx, rbp
.text:0000000180005BD8                 movdqa  [rsp+48h+var_18], xmm0
.text:0000000180005BDE                 and     ebx, 1Fh
.text:0000000180005BE1                 mov     r8, qword ptr [rsp+48h+var_18+8]
.text:0000000180005BE6                 mov     r9, qword ptr [rsp+48h+var_18]
.text:0000000180005BEB                 nop     dword ptr [rax+rax+00h]
.text:0000000180005BF0
.text:0000000180005BF0 loc_180005BF0:                          ; CODE XREF: sub_180005A40+208↓j
.text:0000000180005BF0                                         ; sub_180005A40+211↓j
.text:0000000180005BF0                 mov     rcx, rdx
.text:0000000180005BF3                 cmp     r11, r10
.text:0000000180005BF6                 jnz     short loc_180005C01
.text:0000000180005BF8                 cmp     rbx, rdx
.text:0000000180005BFB                 jz      loc_180005B09
.text:0000000180005C01
.text:0000000180005C01 loc_180005C01:                          ; CODE XREF: sub_180005A40+1B6↑j
.text:0000000180005C01                 test    rdx, rdx
.text:0000000180005C04                 jz      short loc_180005C0B
.text:0000000180005C06                 dec     rdx
.text:0000000180005C09                 jmp     short loc_180005C10
.text:0000000180005C0B ; ---------------------------------------------------------------------------
.text:0000000180005C0B
.text:0000000180005C0B loc_180005C0B:                          ; CODE XREF: sub_180005A40+1C4↑j
.text:0000000180005C0B                 mov     edx, 1Fh
.text:0000000180005C10
.text:0000000180005C10 loc_180005C10:                          ; CODE XREF: sub_180005A40+1C9↑j
.text:0000000180005C10                 test    rcx, rcx
.text:0000000180005C13                 lea     rax, [r10-4]
.text:0000000180005C17                 cmovz   r10, rax
.text:0000000180005C1B                 test    r8, r8
.text:0000000180005C1E                 jz      short loc_180005C25
.text:0000000180005C20                 dec     r8
.text:0000000180005C23                 jmp     short loc_180005C2F
.text:0000000180005C25 ; ---------------------------------------------------------------------------
.text:0000000180005C25
.text:0000000180005C25 loc_180005C25:                          ; CODE XREF: sub_180005A40+1DE↑j
.text:0000000180005C25                 mov     r8d, 1Fh
.text:0000000180005C2B                 sub     r9, 4
.text:0000000180005C2F
.text:0000000180005C2F loc_180005C2F:                          ; CODE XREF: sub_180005A40+1E3↑j
.text:0000000180005C2F                 mov     rcx, rdx
.text:0000000180005C32                 mov     eax, 1
.text:0000000180005C37                 shl     eax, cl
.text:0000000180005C39                 test    [r10], eax
.text:0000000180005C3C                 mov     eax, [r9]
.text:0000000180005C3F                 jz      short loc_180005C4A
.text:0000000180005C41                 bts     eax, r8d
.text:0000000180005C45                 mov     [r9], eax
.text:0000000180005C48                 jmp     short loc_180005BF0
.text:0000000180005C4A ; ---------------------------------------------------------------------------
.text:0000000180005C4A
.text:0000000180005C4A loc_180005C4A:                          ; CODE XREF: sub_180005A40+1FF↑j
.text:0000000180005C4A                 btr     eax, r8d
.text:0000000180005C4E                 mov     [r9], eax
.text:0000000180005C51                 jmp     short loc_180005BF0
.text:0000000180005C53 ; ---------------------------------------------------------------------------
.text:0000000180005C53
.text:0000000180005C53 loc_180005C53:                          ; CODE XREF: sub_180005A40+3C↑j
.text:0000000180005C53                 call    sub_180005C60
.text:0000000180005C53 ; ---------------------------------------------------------------------------
.text:0000000180005C58                 db 0CCh
.text:0000000180005C58 sub_180005A40   endp
.text:0000000180005C58
.text:0000000180005C59 algn_180005C59:                         ; DATA XREF: .pdata:000000018001C438↓o
.text:0000000180005C59                 align 20h
.text:0000000180005C60
.text:0000000180005C60 ; =============== S U B R O U T I N E =======================================
.text:0000000180005C60
.text:0000000180005C60 ; Attributes: noreturn
.text:0000000180005C60
.text:0000000180005C60 sub_180005C60   proc near               ; CODE XREF: sub_180005A40:loc_180005C53↑p
.text:0000000180005C60                                         ; DATA XREF: .pdata:000000018001C444↓o
.text:0000000180005C60                 sub     rsp, 28h
.text:0000000180005C64                 lea     rcx, aVectorBoolTooL ; "vector<bool> too long"
.text:0000000180005C6B                 call    cs:__imp_?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
.text:0000000180005C6B ; ---------------------------------------------------------------------------
.text:0000000180005C71                 db 0CCh
.text:0000000180005C71 sub_180005C60   endp
.text:0000000180005C71
.text:0000000180005C72 algn_180005C72:                         ; DATA XREF: .pdata:000000018001C444↓o
.text:0000000180005C72                 align 20h
.text:0000000180005C80
.text:0000000180005C80 ; =============== S U B R O U T I N E =======================================
.text:0000000180005C80
.text:0000000180005C80
.text:0000000180005C80 sub_180005C80   proc near               ; CODE XREF: sub_1800034B0+10B↑p
.text:0000000180005C80                                         ; sub_1800034B0+131↑p ...
.text:0000000180005C80
.text:0000000180005C80 arg_8           = qword ptr  10h
.text:0000000180005C80 arg_10          = qword ptr  18h
.text:0000000180005C80
.text:0000000180005C80                 cmp     rcx, rdx
.text:0000000180005C83                 jz      short locret_180005CFD
.text:0000000180005C85                 mov     [rsp+arg_10], rbx
.text:0000000180005C8A                 push    rdi
.text:0000000180005C8B                 sub     rsp, 20h
.text:0000000180005C8F
.text:0000000180005C8F loc_180005C8F:                          ; DATA XREF: .rdata:0000000180015244↓o
.text:0000000180005C8F                                         ; .rdata:0000000180015254↓o ...
.text:0000000180005C8F                 mov     [rsp+28h+arg_8], rsi
.text:0000000180005C94                 mov     rdi, rdx
.text:0000000180005C97                 xor     esi, esi
.text:0000000180005C99                 mov     rbx, rcx
.text:0000000180005C9C                 nop     dword ptr [rax+00h]
.text:0000000180005CA0
.text:0000000180005CA0 loc_180005CA0:                          ; CODE XREF: sub_180005C80+6C↓j
.text:0000000180005CA0                 mov     rdx, [rbx+18h]
.text:0000000180005CA4                 cmp     rdx, 10h
.text:0000000180005CA8                 jb      short loc_180005CD6
.text:0000000180005CAA                 mov     rcx, [rbx]
.text:0000000180005CAD                 inc     rdx
.text:0000000180005CB0                 cmp     rdx, 1000h
.text:0000000180005CB7                 jb      short loc_180005CD1
.text:0000000180005CB9                 mov     r8, [rcx-8]
.text:0000000180005CBD                 add     rdx, 27h ; '''
.text:0000000180005CC1                 sub     rcx, r8
.text:0000000180005CC4                 lea     rax, [rcx-8]
.text:0000000180005CC8                 cmp     rax, 1Fh
.text:0000000180005CCC                 ja      short loc_180005CFE
.text:0000000180005CCE                 mov     rcx, r8         ; Block
.text:0000000180005CD1
.text:0000000180005CD1 loc_180005CD1:                          ; CODE XREF: sub_180005C80+37↑j
.text:0000000180005CD1                 call    j_j_free
.text:0000000180005CD6
.text:0000000180005CD6 loc_180005CD6:                          ; CODE XREF: sub_180005C80+28↑j
.text:0000000180005CD6                 mov     [rbx+10h], rsi
.text:0000000180005CDA                 mov     qword ptr [rbx+18h], 0Fh
.text:0000000180005CE2                 mov     [rbx], sil
.text:0000000180005CE5                 add     rbx, 20h ; ' '
.text:0000000180005CE9                 cmp     rbx, rdi
.text:0000000180005CEC                 jnz     short loc_180005CA0
.text:0000000180005CEE                 mov     rsi, [rsp+28h+arg_8]
.text:0000000180005CF3                 mov     rbx, [rsp+28h+arg_10]
.text:0000000180005CF8                 add     rsp, 20h
.text:0000000180005CFC                 pop     rdi
.text:0000000180005CFD
.text:0000000180005CFD locret_180005CFD:                       ; CODE XREF: sub_180005C80+3↑j
.text:0000000180005CFD                                         ; DATA XREF: .pdata:000000018001C45C↓o ...
.text:0000000180005CFD                 retn
.text:0000000180005CFE ; ---------------------------------------------------------------------------
.text:0000000180005CFE
.text:0000000180005CFE loc_180005CFE:                          ; CODE XREF: sub_180005C80+4C↑j
.text:0000000180005CFE                                         ; DATA XREF: .pdata:000000018001C468↓o ...
.text:0000000180005CFE                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180005CFE ; ---------------------------------------------------------------------------
.text:0000000180005D04                 db 0CCh
.text:0000000180005D04 sub_180005C80   endp
.text:0000000180005D04
.text:0000000180005D05 algn_180005D05:                         ; DATA XREF: .pdata:000000018001C474↓o
.text:0000000180005D05                 align 10h
.text:0000000180005D10
.text:0000000180005D10 ; =============== S U B R O U T I N E =======================================
.text:0000000180005D10
.text:0000000180005D10
.text:0000000180005D10 sub_180005D10   proc near               ; CODE XREF: fsuipcw_getLvarList+114↑p
.text:0000000180005D10                                         ; fsuipcw_getHvarList+114↑p
.text:0000000180005D10                                         ; DATA XREF: ...
.text:0000000180005D10
.text:0000000180005D10 var_48          = qword ptr -48h
.text:0000000180005D10 var_40          = qword ptr -40h
.text:0000000180005D10 arg_18          = qword ptr  20h
.text:0000000180005D10
.text:0000000180005D10 ; __unwind { // __CxxFrameHandler4
.text:0000000180005D10                 mov     [rsp+arg_18], rbx
.text:0000000180005D15                 push    rbp
.text:0000000180005D16                 push    rsi
.text:0000000180005D17                 push    rdi
.text:0000000180005D18                 push    r12
.text:0000000180005D1A                 push    r13
.text:0000000180005D1C                 push    r14
.text:0000000180005D1E                 push    r15
.text:0000000180005D20                 sub     rsp, 30h
.text:0000000180005D24                 mov     rsi, r8
.text:0000000180005D27                 mov     r14, rdx
.text:0000000180005D2A                 mov     rbp, rcx
.text:0000000180005D2D                 movzx   r13d, byte ptr [r8]
.text:0000000180005D31                 mov     rax, 0CBF29CE484222325h
.text:0000000180005D3B                 xor     r13, rax
.text:0000000180005D3E                 mov     rcx, 100000001B3h
.text:0000000180005D48                 imul    r13, rcx
.text:0000000180005D4C                 movzx   eax, byte ptr [r8+1]
.text:0000000180005D51                 xor     r13, rax
.text:0000000180005D54                 imul    r13, rcx
.text:0000000180005D58                 movzx   eax, byte ptr [r8+2]
.text:0000000180005D5D                 xor     r13, rax
.text:0000000180005D60                 imul    r13, rcx
.text:0000000180005D64                 movzx   eax, byte ptr [r8+3]
.text:0000000180005D69                 xor     r13, rax
.text:0000000180005D6C                 imul    r13, rcx
.text:0000000180005D70                 mov     rcx, [rbp+30h]
.text:0000000180005D74                 and     rcx, r13
.text:0000000180005D77                 add     rcx, rcx
.text:0000000180005D7A                 mov     rax, [rbp+18h]
.text:0000000180005D7E                 mov     rbx, [rax+rcx*8+8]
.text:0000000180005D83                 lea     rdx, [rbp+8]
.text:0000000180005D87                 mov     r12, [rdx]
.text:0000000180005D8A                 cmp     rbx, r12
.text:0000000180005D8D                 jnz     short loc_180005D97
.text:0000000180005D8F                 mov     rbx, r12
.text:0000000180005D92                 mov     r15, r12
.text:0000000180005D95                 jmp     short loc_180005DDA
.text:0000000180005D97 ; ---------------------------------------------------------------------------
.text:0000000180005D97
.text:0000000180005D97 loc_180005D97:                          ; CODE XREF: sub_180005D10+7D↑j
.text:0000000180005D97                 mov     rcx, [rax+rcx*8]
.text:0000000180005D9B                 mov     eax, [r8]
.text:0000000180005D9E                 cmp     eax, [rbx+10h]
.text:0000000180005DA1                 jz      short loc_180005DB1
.text:0000000180005DA3
.text:0000000180005DA3 loc_180005DA3:                          ; CODE XREF: sub_180005D10+9F↓j
.text:0000000180005DA3                 cmp     rbx, rcx
.text:0000000180005DA6                 jz      short loc_180005DD4
.text:0000000180005DA8                 mov     rbx, [rbx+8]
.text:0000000180005DAC                 cmp     eax, [rbx+10h]
.text:0000000180005DAF                 jnz     short loc_180005DA3
.text:0000000180005DB1
.text:0000000180005DB1 loc_180005DB1:                          ; CODE XREF: sub_180005D10+91↑j
.text:0000000180005DB1                 mov     [r14], rbx
.text:0000000180005DB4                 mov     byte ptr [r14+8], 0
.text:0000000180005DB9
.text:0000000180005DB9 loc_180005DB9:                          ; CODE XREF: sub_180005D10+2D4↓j
.text:0000000180005DB9                 mov     rax, r14
.text:0000000180005DBC                 mov     rbx, [rsp+68h+arg_18]
.text:0000000180005DC4                 add     rsp, 30h
.text:0000000180005DC8                 pop     r15
.text:0000000180005DCA                 pop     r14
.text:0000000180005DCC                 pop     r13
.text:0000000180005DCE                 pop     r12
.text:0000000180005DD0                 pop     rdi
.text:0000000180005DD1                 pop     rsi
.text:0000000180005DD2                 pop     rbp
.text:0000000180005DD3                 retn
.text:0000000180005DD4 ; ---------------------------------------------------------------------------
.text:0000000180005DD4
.text:0000000180005DD4 loc_180005DD4:                          ; CODE XREF: sub_180005D10+96↑j
.text:0000000180005DD4                 mov     r12, rbx
.text:0000000180005DD7                 mov     r15, rbx
.text:0000000180005DDA
.text:0000000180005DDA loc_180005DDA:                          ; CODE XREF: sub_180005D10+85↑j
.text:0000000180005DDA                 mov     rax, 492492492492492h
.text:0000000180005DE4                 cmp     [rbp+10h], rax
.text:0000000180005DE8                 jnz     short loc_180005DF8
.text:0000000180005DEA                 lea     rcx, aUnorderedMapSe ; "unordered_map/set too long"
.text:0000000180005DF1                 call    cs:__imp_?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
.text:0000000180005DF7                 int     3               ; Trap to Debugger
.text:0000000180005DF8 ; ---------------------------------------------------------------------------
.text:0000000180005DF8
.text:0000000180005DF8 loc_180005DF8:                          ; CODE XREF: sub_180005D10+D8↑j
.text:0000000180005DF8                 mov     [rsp+68h+var_48], rdx
.text:0000000180005DFD                 mov     [rsp+68h+var_40], 0
.text:0000000180005E06                 mov     ecx, 38h ; '8'  ; Size
.text:0000000180005E0B                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180005E10                 mov     rdi, rax
.text:0000000180005E13                 mov     [rsp+68h+var_40], rax
.text:0000000180005E18                 mov     eax, [rsi]
.text:0000000180005E1A                 mov     [rdi+10h], eax
.text:0000000180005E1D                 xorps   xmm0, xmm0
.text:0000000180005E20                 movups  xmmword ptr [rdi+18h], xmm0
.text:0000000180005E24                 xor     eax, eax
.text:0000000180005E26                 mov     [rdi+28h], rax
.text:0000000180005E2A                 mov     [rdi+30h], rax
.text:0000000180005E2E                 movups  xmm0, xmmword ptr [rsi+8]
.text:0000000180005E32                 movups  xmmword ptr [rdi+18h], xmm0
.text:0000000180005E36                 movups  xmm1, xmmword ptr [rsi+18h]
.text:0000000180005E3A                 movups  xmmword ptr [rdi+28h], xmm1
.text:0000000180005E3E                 mov     [rsi+18h], rax
.text:0000000180005E42                 mov     qword ptr [rsi+20h], 0Fh
.text:0000000180005E4A                 mov     [rsi+8], al
.text:0000000180005E4D                 mov     rcx, [rbp+10h]
.text:0000000180005E51                 movss   xmm3, dword ptr [rbp+0]
.text:0000000180005E56                 add     rcx, 1
.text:0000000180005E5A                 xorps   xmm0, xmm0
.text:0000000180005E5D                 js      short loc_180005E66
.text:0000000180005E5F                 cvtsi2ss xmm0, rcx
.text:0000000180005E64                 jmp     short loc_180005E7B
.text:0000000180005E66 ; ---------------------------------------------------------------------------
.text:0000000180005E66
.text:0000000180005E66 loc_180005E66:                          ; CODE XREF: sub_180005D10+14D↑j
.text:0000000180005E66                 mov     rax, rcx
.text:0000000180005E69                 shr     rax, 1
.text:0000000180005E6C                 and     ecx, 1
.text:0000000180005E6F                 or      rax, rcx
.text:0000000180005E72                 cvtsi2ss xmm0, rax
.text:0000000180005E77                 addss   xmm0, xmm0
.text:0000000180005E7B
.text:0000000180005E7B loc_180005E7B:                          ; CODE XREF: sub_180005D10+154↑j
.text:0000000180005E7B                 mov     rsi, [rbp+38h]
.text:0000000180005E7F                 xorps   xmm2, xmm2
.text:0000000180005E82                 test    rsi, rsi
.text:0000000180005E85                 js      short loc_180005E8E
.text:0000000180005E87                 cvtsi2ss xmm2, rsi
.text:0000000180005E8C                 jmp     short loc_180005EA6
.text:0000000180005E8E ; ---------------------------------------------------------------------------
.text:0000000180005E8E
.text:0000000180005E8E loc_180005E8E:                          ; CODE XREF: sub_180005D10+175↑j
.text:0000000180005E8E                 mov     rcx, rsi
.text:0000000180005E91                 shr     rcx, 1
.text:0000000180005E94                 mov     rax, rsi
.text:0000000180005E97                 and     eax, 1
.text:0000000180005E9A                 or      rcx, rax
.text:0000000180005E9D                 cvtsi2ss xmm2, rcx
.text:0000000180005EA2                 addss   xmm2, xmm2
.text:0000000180005EA6
.text:0000000180005EA6 loc_180005EA6:                          ; CODE XREF: sub_180005D10+17C↑j
.text:0000000180005EA6                 movaps  xmm1, xmm0
.text:0000000180005EA9                 divss   xmm1, xmm2
.text:0000000180005EAD                 comiss  xmm1, xmm3
.text:0000000180005EB0                 setnbe  al
.text:0000000180005EB3                 test    al, al
.text:0000000180005EB5                 jz      loc_180005F81
.text:0000000180005EBB                 divss   xmm0, xmm3      ; X
.text:0000000180005EBF                 call    ceilf
.text:0000000180005EC4                 xor     ecx, ecx
.text:0000000180005EC6                 movss   xmm1, cs:dword_180013C58
.text:0000000180005ECE                 comiss  xmm0, xmm1
.text:0000000180005ED1                 jb      short loc_180005EE9
.text:0000000180005ED3                 subss   xmm0, xmm1
.text:0000000180005ED7                 comiss  xmm0, xmm1
.text:0000000180005EDA                 jnb     short loc_180005EE9
.text:0000000180005EDC                 mov     rax, 8000000000000000h
.text:0000000180005EE6                 mov     rcx, rax
.text:0000000180005EE9
.text:0000000180005EE9 loc_180005EE9:                          ; CODE XREF: sub_180005D10+1C1↑j
.text:0000000180005EE9                                         ; sub_180005D10+1CA↑j
.text:0000000180005EE9                 cvttss2si rax, xmm0
.text:0000000180005EEE                 add     rax, rcx
.text:0000000180005EF1                 mov     ecx, 8
.text:0000000180005EF6                 cmp     rax, rcx
.text:0000000180005EF9                 cmova   rcx, rax
.text:0000000180005EFD                 cmp     rsi, rcx
.text:0000000180005F00                 jnb     short loc_180005F1B
.text:0000000180005F02                 cmp     rsi, 200h
.text:0000000180005F09                 jnb     short loc_180005F18
.text:0000000180005F0B                 lea     rsi, ds:0[rsi*8]
.text:0000000180005F13                 cmp     rsi, rcx
.text:0000000180005F16                 jnb     short loc_180005F1B
.text:0000000180005F18
.text:0000000180005F18 loc_180005F18:                          ; CODE XREF: sub_180005D10+1F9↑j
.text:0000000180005F18                 mov     rsi, rcx
.text:0000000180005F1B
.text:0000000180005F1B loc_180005F1B:                          ; CODE XREF: sub_180005D10+1F0↑j
.text:0000000180005F1B                                         ; sub_180005D10+206↑j
.text:0000000180005F1B                 mov     rdx, rsi
.text:0000000180005F1E                 mov     rcx, rbp
.text:0000000180005F21                 call    sub_180006800
.text:0000000180005F26                 mov     rcx, [rbp+30h]
.text:0000000180005F2A                 and     rcx, r13
.text:0000000180005F2D                 add     rcx, rcx
.text:0000000180005F30                 mov     rdx, [rbp+18h]
.text:0000000180005F34                 mov     rax, [rdx+rcx*8+8]
.text:0000000180005F39                 mov     rbx, [rbp+8]
.text:0000000180005F3D                 cmp     rax, rbx
.text:0000000180005F40                 jnz     short loc_180005F4D
.text:0000000180005F42                 mov     [rsp+68h+var_40], 0
.text:0000000180005F4B                 jmp     short loc_180005F74
.text:0000000180005F4D ; ---------------------------------------------------------------------------
.text:0000000180005F4D
.text:0000000180005F4D loc_180005F4D:                          ; CODE XREF: sub_180005D10+230↑j
.text:0000000180005F4D                 mov     rdx, [rdx+rcx*8]
.text:0000000180005F51                 mov     ecx, [rdi+10h]
.text:0000000180005F54                 cmp     ecx, [rax+10h]
.text:0000000180005F57                 jz      short loc_180005F71
.text:0000000180005F59                 nop     dword ptr [rax+00000000h]
.text:0000000180005F60
.text:0000000180005F60 loc_180005F60:                          ; CODE XREF: sub_180005D10+25F↓j
.text:0000000180005F60                 mov     rbx, rax
.text:0000000180005F63                 cmp     rax, rdx
.text:0000000180005F66                 jz      short loc_180005FB5
.text:0000000180005F68                 mov     rax, [rax+8]
.text:0000000180005F6C                 cmp     ecx, [rax+10h]
.text:0000000180005F6F                 jnz     short loc_180005F60
.text:0000000180005F71
.text:0000000180005F71 loc_180005F71:                          ; CODE XREF: sub_180005D10+247↑j
.text:0000000180005F71                 mov     rbx, [rax]
.text:0000000180005F74
.text:0000000180005F74 loc_180005F74:                          ; CODE XREF: sub_180005D10+23B↑j
.text:0000000180005F74                 mov     [rsp+68h+var_48], rbx
.text:0000000180005F79
.text:0000000180005F79 loc_180005F79:                          ; CODE XREF: sub_180005D10+2B3↓j
.text:0000000180005F79                 mov     r15, rbx
.text:0000000180005F7C                 mov     r12, [rsp+68h+var_48]
.text:0000000180005F81
.text:0000000180005F81 loc_180005F81:                          ; CODE XREF: sub_180005D10+1A5↑j
.text:0000000180005F81                 mov     rdx, [rbx+8]
.text:0000000180005F85                 inc     qword ptr [rbp+10h]
.text:0000000180005F89                 mov     [rdi], r12
.text:0000000180005F8C                 mov     [rdi+8], rdx
.text:0000000180005F90                 mov     [rdx], rdi
.text:0000000180005F93                 mov     [rbx+8], rdi
.text:0000000180005F97                 mov     rcx, [rbp+18h]
.text:0000000180005F9B                 mov     rax, [rbp+30h]
.text:0000000180005F9F                 and     rax, r13
.text:0000000180005FA2                 add     rax, rax
.text:0000000180005FA5                 mov     r8, [rcx+rax*8]
.text:0000000180005FA9                 cmp     r8, [rbp+8]
.text:0000000180005FAD                 jnz     short loc_180005FC5
.text:0000000180005FAF                 mov     [rcx+rax*8], rdi
.text:0000000180005FB3                 jmp     short loc_180005FD7
.text:0000000180005FB5 ; ---------------------------------------------------------------------------
.text:0000000180005FB5
.text:0000000180005FB5 loc_180005FB5:                          ; CODE XREF: sub_180005D10+256↑j
.text:0000000180005FB5                 mov     [rsp+68h+var_48], rax
.text:0000000180005FBA                 mov     [rsp+68h+var_40], 0
.text:0000000180005FC3                 jmp     short loc_180005F79
.text:0000000180005FC5 ; ---------------------------------------------------------------------------
.text:0000000180005FC5
.text:0000000180005FC5 loc_180005FC5:                          ; CODE XREF: sub_180005D10+29D↑j
.text:0000000180005FC5                 cmp     r8, r15
.text:0000000180005FC8                 jnz     short loc_180005FD0
.text:0000000180005FCA                 mov     [rcx+rax*8], rdi
.text:0000000180005FCE                 jmp     short loc_180005FDC
.text:0000000180005FD0 ; ---------------------------------------------------------------------------
.text:0000000180005FD0
.text:0000000180005FD0 loc_180005FD0:                          ; CODE XREF: sub_180005D10+2B8↑j
.text:0000000180005FD0                 cmp     [rcx+rax*8+8], rdx
.text:0000000180005FD5                 jnz     short loc_180005FDC
.text:0000000180005FD7
.text:0000000180005FD7 loc_180005FD7:                          ; CODE XREF: sub_180005D10+2A3↑j
.text:0000000180005FD7                 mov     [rcx+rax*8+8], rdi
.text:0000000180005FDC
.text:0000000180005FDC loc_180005FDC:                          ; CODE XREF: sub_180005D10+2BE↑j
.text:0000000180005FDC                                         ; sub_180005D10+2C5↑j
.text:0000000180005FDC                 mov     [r14], rdi
.text:0000000180005FDF                 mov     byte ptr [r14+8], 1
.text:0000000180005FE4                 jmp     loc_180005DB9
.text:0000000180005FE4 ; } // starts at 180005D10
.text:0000000180005FE4 sub_180005D10   endp
.text:0000000180005FE4
.text:0000000180005FE4 ; ---------------------------------------------------------------------------
.text:0000000180005FE9 algn_180005FE9:                         ; DATA XREF: .pdata:000000018001C480↓o
.text:0000000180005FE9                 align 10h
.text:0000000180005FF0
.text:0000000180005FF0 ; =============== S U B R O U T I N E =======================================
.text:0000000180005FF0
.text:0000000180005FF0
.text:0000000180005FF0 sub_180005FF0   proc near               ; CODE XREF: sub_1800034B0+B96↑p
.text:0000000180005FF0                                         ; sub_1800034B0+139C↑p ...
.text:0000000180005FF0
.text:0000000180005FF0 var_28          = qword ptr -28h
.text:0000000180005FF0 arg_10          = qword ptr  18h
.text:0000000180005FF0 arg_18          = qword ptr  20h
.text:0000000180005FF0
.text:0000000180005FF0                 push    rbp
.text:0000000180005FF2                 push    rdi
.text:0000000180005FF3                 push    r12
.text:0000000180005FF5                 push    r14
.text:0000000180005FF7                 sub     rsp, 28h
.text:0000000180005FFB                 mov     rax, [rcx+8]
.text:0000000180005FFF                 mov     rbp, rdx
.text:0000000180006002                 mov     rdx, [rcx]
.text:0000000180006005                 mov     r14, rbp
.text:0000000180006008                 sub     r14, rdx
.text:000000018000600B                 sub     rax, rdx
.text:000000018000600E                 mov     r12, r8
.text:0000000180006011                 sar     r14, 3
.text:0000000180006015                 sar     rax, 3
.text:0000000180006019                 mov     r8, 1FFFFFFFFFFFFFFFh
.text:0000000180006023                 mov     rdi, rcx
.text:0000000180006026                 cmp     rax, r8
.text:0000000180006029                 jz      loc_180006174
.text:000000018000602F                 mov     rcx, [rcx+10h]
.text:0000000180006033                 sub     rcx, rdx
.text:0000000180006036
.text:0000000180006036 loc_180006036:                          ; DATA XREF: .rdata:00000001800152D4↓o
.text:0000000180006036                                         ; .rdata:00000001800152F0↓o ...
.text:0000000180006036                 mov     [rsp+48h+arg_10], rbx
.text:000000018000603B                 sar     rcx, 3
.text:000000018000603F                 mov     [rsp+48h+arg_18], rsi
.text:0000000180006044                 mov     rdx, rcx
.text:0000000180006047                 shr     rdx, 1
.text:000000018000604A                 mov     [rsp+48h+var_28], r15
.text:000000018000604F                 lea     r15, [rax+1]
.text:0000000180006053                 mov     rax, r8
.text:0000000180006056                 sub     rax, rdx
.text:0000000180006059                 cmp     rcx, rax
.text:000000018000605C                 ja      loc_18000617A
.text:0000000180006062                 lea     rax, [rdx+rcx]
.text:0000000180006066                 mov     rsi, r15
.text:0000000180006069                 cmp     rax, r15
.text:000000018000606C                 cmovnb  rsi, rax
.text:0000000180006070                 cmp     rsi, r8
.text:0000000180006073                 ja      loc_18000617A
.text:0000000180006079                 lea     rsi, ds:0[rsi*8]
.text:0000000180006081                 cmp     rsi, 1000h
.text:0000000180006088                 jb      short loc_1800060B3
.text:000000018000608A                 lea     rcx, [rsi+27h]  ; Size
.text:000000018000608E                 cmp     rcx, rsi
.text:0000000180006091                 jbe     loc_18000617A
.text:0000000180006097                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000609C                 test    rax, rax
.text:000000018000609F                 jz      loc_18000616D
.text:00000001800060A5                 lea     rbx, [rax+27h]
.text:00000001800060A9                 and     rbx, 0FFFFFFFFFFFFFFE0h
.text:00000001800060AD                 mov     [rbx-8], rax
.text:00000001800060B1                 jmp     short loc_1800060C7
.text:00000001800060B3 ; ---------------------------------------------------------------------------
.text:00000001800060B3
.text:00000001800060B3 loc_1800060B3:                          ; CODE XREF: sub_180005FF0+98↑j
.text:00000001800060B3                 test    rsi, rsi
.text:00000001800060B6                 jz      short loc_1800060C5
.text:00000001800060B8                 mov     rcx, rsi        ; Size
.text:00000001800060BB                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:00000001800060C0                 mov     rbx, rax
.text:00000001800060C3                 jmp     short loc_1800060C7
.text:00000001800060C5 ; ---------------------------------------------------------------------------
.text:00000001800060C5
.text:00000001800060C5 loc_1800060C5:                          ; CODE XREF: sub_180005FF0+C6↑j
.text:00000001800060C5                 xor     ebx, ebx
.text:00000001800060C7
.text:00000001800060C7 loc_1800060C7:                          ; CODE XREF: sub_180005FF0+C1↑j
.text:00000001800060C7                                         ; sub_180005FF0+D3↑j
.text:00000001800060C7                 mov     rax, [r12]
.text:00000001800060CB                 lea     r14, [rbx+r14*8]
.text:00000001800060CF                 mov     [r14], rax
.text:00000001800060D2                 mov     rcx, rbx        ; void *
.text:00000001800060D5                 mov     r8, [rdi+8]
.text:00000001800060D9                 mov     rdx, [rdi]      ; Src
.text:00000001800060DC                 cmp     rbp, r8
.text:00000001800060DF                 jnz     short loc_1800060E6
.text:00000001800060E1                 sub     r8, rdx
.text:00000001800060E4                 jmp     short loc_1800060FF
.text:00000001800060E6 ; ---------------------------------------------------------------------------
.text:00000001800060E6
.text:00000001800060E6 loc_1800060E6:                          ; CODE XREF: sub_180005FF0+EF↑j
.text:00000001800060E6                 mov     r8, rbp
.text:00000001800060E9                 sub     r8, rdx         ; Size
.text:00000001800060EC                 call    memmove
.text:00000001800060F1                 mov     r8, [rdi+8]
.text:00000001800060F5                 lea     rcx, [r14+8]    ; void *
.text:00000001800060F9                 sub     r8, rbp         ; Size
.text:00000001800060FC                 mov     rdx, rbp        ; Src
.text:00000001800060FF
.text:00000001800060FF loc_1800060FF:                          ; CODE XREF: sub_180005FF0+F4↑j
.text:00000001800060FF                 call    memmove
.text:0000000180006104                 mov     rcx, [rdi]
.text:0000000180006107                 test    rcx, rcx
.text:000000018000610A                 jz      short loc_18000613D
.text:000000018000610C                 mov     rdx, [rdi+10h]
.text:0000000180006110                 sub     rdx, rcx
.text:0000000180006113                 and     rdx, 0FFFFFFFFFFFFFFF8h
.text:0000000180006117                 cmp     rdx, 1000h
.text:000000018000611E                 jb      short loc_180006138
.text:0000000180006120                 mov     r8, [rcx-8]
.text:0000000180006124                 add     rdx, 27h ; '''
.text:0000000180006128                 sub     rcx, r8
.text:000000018000612B                 lea     rax, [rcx-8]
.text:000000018000612F                 cmp     rax, 1Fh
.text:0000000180006133                 ja      short loc_18000616D
.text:0000000180006135                 mov     rcx, r8         ; Block
.text:0000000180006138
.text:0000000180006138 loc_180006138:                          ; CODE XREF: sub_180005FF0+12E↑j
.text:0000000180006138                 call    j_j_free
.text:000000018000613D
.text:000000018000613D loc_18000613D:                          ; CODE XREF: sub_180005FF0+11A↑j
.text:000000018000613D                 lea     rcx, [rbx+r15*8]
.text:0000000180006141                 mov     [rdi], rbx
.text:0000000180006144                 mov     r15, [rsp+48h+var_28]
.text:0000000180006149                 mov     rax, r14
.text:000000018000614C                 mov     [rdi+8], rcx
.text:0000000180006150                 lea     rcx, [rsi+rbx]
.text:0000000180006154                 mov     rsi, [rsp+48h+arg_18]
.text:0000000180006159                 mov     rbx, [rsp+48h+arg_10]
.text:000000018000615E                 mov     [rdi+10h], rcx
.text:0000000180006162                 add     rsp, 28h
.text:0000000180006166                 pop     r14
.text:0000000180006168                 pop     r12
.text:000000018000616A                 pop     rdi
.text:000000018000616B                 pop     rbp
.text:000000018000616C                 retn
.text:000000018000616D ; ---------------------------------------------------------------------------
.text:000000018000616D
.text:000000018000616D loc_18000616D:                          ; CODE XREF: sub_180005FF0+AF↑j
.text:000000018000616D                                         ; sub_180005FF0+143↑j
.text:000000018000616D                                         ; DATA XREF: ...
.text:000000018000616D                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180006173                 int     3               ; Trap to Debugger
.text:0000000180006174 ; ---------------------------------------------------------------------------
.text:0000000180006174
.text:0000000180006174 loc_180006174:                          ; CODE XREF: sub_180005FF0+39↑j
.text:0000000180006174                                         ; DATA XREF: .pdata:000000018001C4A4↓o ...
.text:0000000180006174                 call    sub_1800067C0
.text:0000000180006174 ; ---------------------------------------------------------------------------
.text:0000000180006179                 align 2
.text:000000018000617A
.text:000000018000617A loc_18000617A:                          ; CODE XREF: sub_180005FF0+6C↑j
.text:000000018000617A                                         ; sub_180005FF0+83↑j ...
.text:000000018000617A                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:000000018000617A ; ---------------------------------------------------------------------------
.text:000000018000617F                 align 20h
.text:000000018000617F sub_180005FF0   endp
.text:000000018000617F
.text:0000000180006180
.text:0000000180006180 ; =============== S U B R O U T I N E =======================================
.text:0000000180006180
.text:0000000180006180
.text:0000000180006180 sub_180006180   proc near               ; CODE XREF: sub_1800034B0+136D↑p
.text:0000000180006180                                         ; sub_1800034B0+1546↑p
.text:0000000180006180                                         ; DATA XREF: ...
.text:0000000180006180
.text:0000000180006180 var_28          = qword ptr -28h
.text:0000000180006180 arg_10          = qword ptr  18h
.text:0000000180006180 arg_18          = qword ptr  20h
.text:0000000180006180
.text:0000000180006180                 push    rbp
.text:0000000180006182                 push    rdi
.text:0000000180006183                 push    r12
.text:0000000180006185                 push    r14
.text:0000000180006187                 sub     rsp, 28h
.text:000000018000618B                 mov     rax, [rcx+8]
.text:000000018000618F                 mov     rbp, rdx
.text:0000000180006192                 mov     rdx, [rcx]
.text:0000000180006195                 mov     r14, rbp
.text:0000000180006198                 sub     r14, rdx
.text:000000018000619B                 sub     rax, rdx
.text:000000018000619E                 mov     r12, r8
.text:00000001800061A1                 sar     r14, 2
.text:00000001800061A5                 sar     rax, 2
.text:00000001800061A9                 mov     r8, 3FFFFFFFFFFFFFFFh
.text:00000001800061B3                 mov     rdi, rcx
.text:00000001800061B6                 cmp     rax, r8
.text:00000001800061B9                 jz      loc_180006304
.text:00000001800061BF                 mov     rcx, [rcx+10h]
.text:00000001800061C3                 sub     rcx, rdx
.text:00000001800061C6
.text:00000001800061C6 loc_1800061C6:                          ; DATA XREF: .rdata:000000018001531C↓o
.text:00000001800061C6                                         ; .rdata:0000000180015338↓o ...
.text:00000001800061C6                 mov     [rsp+48h+arg_10], rbx
.text:00000001800061CB                 sar     rcx, 2
.text:00000001800061CF                 mov     [rsp+48h+arg_18], rsi
.text:00000001800061D4                 mov     rdx, rcx
.text:00000001800061D7                 shr     rdx, 1
.text:00000001800061DA                 mov     [rsp+48h+var_28], r15
.text:00000001800061DF                 lea     r15, [rax+1]
.text:00000001800061E3                 mov     rax, r8
.text:00000001800061E6                 sub     rax, rdx
.text:00000001800061E9                 cmp     rcx, rax
.text:00000001800061EC                 ja      loc_18000630A
.text:00000001800061F2                 lea     rax, [rdx+rcx]
.text:00000001800061F6                 mov     rsi, r15
.text:00000001800061F9                 cmp     rax, r15
.text:00000001800061FC                 cmovnb  rsi, rax
.text:0000000180006200                 cmp     rsi, r8
.text:0000000180006203                 ja      loc_18000630A
.text:0000000180006209                 lea     rsi, ds:0[rsi*4]
.text:0000000180006211                 cmp     rsi, 1000h
.text:0000000180006218                 jb      short loc_180006243
.text:000000018000621A                 lea     rcx, [rsi+27h]  ; Size
.text:000000018000621E                 cmp     rcx, rsi
.text:0000000180006221                 jbe     loc_18000630A
.text:0000000180006227                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000622C                 test    rax, rax
.text:000000018000622F                 jz      loc_1800062FD
.text:0000000180006235                 lea     rbx, [rax+27h]
.text:0000000180006239                 and     rbx, 0FFFFFFFFFFFFFFE0h
.text:000000018000623D                 mov     [rbx-8], rax
.text:0000000180006241                 jmp     short loc_180006257
.text:0000000180006243 ; ---------------------------------------------------------------------------
.text:0000000180006243
.text:0000000180006243 loc_180006243:                          ; CODE XREF: sub_180006180+98↑j
.text:0000000180006243                 test    rsi, rsi
.text:0000000180006246                 jz      short loc_180006255
.text:0000000180006248                 mov     rcx, rsi        ; Size
.text:000000018000624B                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180006250                 mov     rbx, rax
.text:0000000180006253                 jmp     short loc_180006257
.text:0000000180006255 ; ---------------------------------------------------------------------------
.text:0000000180006255
.text:0000000180006255 loc_180006255:                          ; CODE XREF: sub_180006180+C6↑j
.text:0000000180006255                 xor     ebx, ebx
.text:0000000180006257
.text:0000000180006257 loc_180006257:                          ; CODE XREF: sub_180006180+C1↑j
.text:0000000180006257                                         ; sub_180006180+D3↑j
.text:0000000180006257                 mov     eax, [r12]
.text:000000018000625B                 lea     r14, [rbx+r14*4]
.text:000000018000625F                 mov     [r14], eax
.text:0000000180006262                 mov     rcx, rbx        ; void *
.text:0000000180006265                 mov     r8, [rdi+8]
.text:0000000180006269                 mov     rdx, [rdi]      ; Src
.text:000000018000626C                 cmp     rbp, r8
.text:000000018000626F                 jnz     short loc_180006276
.text:0000000180006271                 sub     r8, rdx
.text:0000000180006274                 jmp     short loc_18000628F
.text:0000000180006276 ; ---------------------------------------------------------------------------
.text:0000000180006276
.text:0000000180006276 loc_180006276:                          ; CODE XREF: sub_180006180+EF↑j
.text:0000000180006276                 mov     r8, rbp
.text:0000000180006279                 sub     r8, rdx         ; Size
.text:000000018000627C                 call    memmove
.text:0000000180006281                 mov     r8, [rdi+8]
.text:0000000180006285                 lea     rcx, [r14+4]    ; void *
.text:0000000180006289                 sub     r8, rbp         ; Size
.text:000000018000628C                 mov     rdx, rbp        ; Src
.text:000000018000628F
.text:000000018000628F loc_18000628F:                          ; CODE XREF: sub_180006180+F4↑j
.text:000000018000628F                 call    memmove
.text:0000000180006294                 mov     rcx, [rdi]
.text:0000000180006297                 test    rcx, rcx
.text:000000018000629A                 jz      short loc_1800062CD
.text:000000018000629C                 mov     rdx, [rdi+10h]
.text:00000001800062A0                 sub     rdx, rcx
.text:00000001800062A3                 and     rdx, 0FFFFFFFFFFFFFFFCh
.text:00000001800062A7                 cmp     rdx, 1000h
.text:00000001800062AE                 jb      short loc_1800062C8
.text:00000001800062B0                 mov     r8, [rcx-8]
.text:00000001800062B4                 add     rdx, 27h ; '''
.text:00000001800062B8                 sub     rcx, r8
.text:00000001800062BB                 lea     rax, [rcx-8]
.text:00000001800062BF                 cmp     rax, 1Fh
.text:00000001800062C3                 ja      short loc_1800062FD
.text:00000001800062C5                 mov     rcx, r8         ; Block
.text:00000001800062C8
.text:00000001800062C8 loc_1800062C8:                          ; CODE XREF: sub_180006180+12E↑j
.text:00000001800062C8                 call    j_j_free
.text:00000001800062CD
.text:00000001800062CD loc_1800062CD:                          ; CODE XREF: sub_180006180+11A↑j
.text:00000001800062CD                 lea     rcx, [rbx+r15*4]
.text:00000001800062D1                 mov     [rdi], rbx
.text:00000001800062D4                 mov     r15, [rsp+48h+var_28]
.text:00000001800062D9                 mov     rax, r14
.text:00000001800062DC                 mov     [rdi+8], rcx
.text:00000001800062E0                 lea     rcx, [rsi+rbx]
.text:00000001800062E4                 mov     rsi, [rsp+48h+arg_18]
.text:00000001800062E9                 mov     rbx, [rsp+48h+arg_10]
.text:00000001800062EE                 mov     [rdi+10h], rcx
.text:00000001800062F2                 add     rsp, 28h
.text:00000001800062F6                 pop     r14
.text:00000001800062F8                 pop     r12
.text:00000001800062FA                 pop     rdi
.text:00000001800062FB                 pop     rbp
.text:00000001800062FC                 retn
.text:00000001800062FD ; ---------------------------------------------------------------------------
.text:00000001800062FD
.text:00000001800062FD loc_1800062FD:                          ; CODE XREF: sub_180006180+AF↑j
.text:00000001800062FD                                         ; sub_180006180+143↑j
.text:00000001800062FD                                         ; DATA XREF: ...
.text:00000001800062FD                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180006303                 int     3               ; Trap to Debugger
.text:0000000180006304 ; ---------------------------------------------------------------------------
.text:0000000180006304
.text:0000000180006304 loc_180006304:                          ; CODE XREF: sub_180006180+39↑j
.text:0000000180006304                                         ; DATA XREF: .pdata:000000018001C4E0↓o ...
.text:0000000180006304                 call    sub_1800067C0
.text:0000000180006304 ; ---------------------------------------------------------------------------
.text:0000000180006309                 align 2
.text:000000018000630A
.text:000000018000630A loc_18000630A:                          ; CODE XREF: sub_180006180+6C↑j
.text:000000018000630A                                         ; sub_180006180+83↑j ...
.text:000000018000630A                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:000000018000630A ; ---------------------------------------------------------------------------
.text:000000018000630F                 align 10h
.text:000000018000630F sub_180006180   endp
.text:000000018000630F
.text:0000000180006310
.text:0000000180006310 ; =============== S U B R O U T I N E =======================================
.text:0000000180006310
.text:0000000180006310
.text:0000000180006310 sub_180006310   proc near               ; CODE XREF: sub_1800034B0+B2B↑p
.text:0000000180006310                                         ; sub_1800034B0+EE9↑p
.text:0000000180006310                                         ; DATA XREF: ...
.text:0000000180006310
.text:0000000180006310 var_38          = qword ptr -38h
.text:0000000180006310 var_30          = qword ptr -30h
.text:0000000180006310 var_28          = qword ptr -28h
.text:0000000180006310 arg_18          = qword ptr  20h
.text:0000000180006310
.text:0000000180006310                 push    rbx
.text:0000000180006312                 push    rsi
.text:0000000180006313                 push    r12
.text:0000000180006315                 push    r15
.text:0000000180006317                 sub     rsp, 38h
.text:000000018000631B                 mov     rax, [rcx+8]
.text:000000018000631F                 mov     rbx, rdx
.text:0000000180006322                 mov     rdx, [rcx]
.text:0000000180006325                 mov     r15, rbx
.text:0000000180006328                 sub     rax, rdx
.text:000000018000632B                 mov     r12, r8
.text:000000018000632E                 sar     rax, 5
.text:0000000180006332                 sub     r15, rdx
.text:0000000180006335                 mov     r8, 7FFFFFFFFFFFFFFh
.text:000000018000633F                 mov     rsi, rcx
.text:0000000180006342                 cmp     rax, r8
.text:0000000180006345                 jz      loc_180006594
.text:000000018000634B                 mov     rcx, [rcx+10h]
.text:000000018000634F                 sub     rcx, rdx
.text:0000000180006352
.text:0000000180006352 loc_180006352:                          ; DATA XREF: .rdata:0000000180015378↓o
.text:0000000180006352                                         ; .rdata:0000000180015398↓o ...
.text:0000000180006352                 mov     [rsp+58h+arg_18], rbp
.text:0000000180006357                 sar     rcx, 5
.text:000000018000635B                 lea     rbp, [rax+1]
.text:000000018000635F                 mov     [rsp+58h+var_28], rdi
.text:0000000180006364                 mov     rdx, rcx
.text:0000000180006367                 shr     rdx, 1
.text:000000018000636A                 mov     rax, r8
.text:000000018000636D                 sub     rax, rdx
.text:0000000180006370                 mov     [rsp+58h+var_30], r13
.text:0000000180006375                 mov     [rsp+58h+var_38], r14
.text:000000018000637A                 cmp     rcx, rax
.text:000000018000637D                 ja      loc_18000659A
.text:0000000180006383                 lea     rax, [rdx+rcx]
.text:0000000180006387                 mov     r14, rbp
.text:000000018000638A                 cmp     rax, rbp
.text:000000018000638D                 cmovnb  r14, rax
.text:0000000180006391                 cmp     r14, r8
.text:0000000180006394                 ja      loc_18000659A
.text:000000018000639A                 shl     r14, 5
.text:000000018000639E                 xor     r13d, r13d
.text:00000001800063A1                 cmp     r14, 1000h
.text:00000001800063A8                 jb      short loc_1800063D3
.text:00000001800063AA                 lea     rcx, [r14+27h]  ; Size
.text:00000001800063AE                 cmp     rcx, r14
.text:00000001800063B1                 jbe     loc_18000659A
.text:00000001800063B7                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:00000001800063BC                 test    rax, rax
.text:00000001800063BF                 jz      loc_18000658D
.text:00000001800063C5                 lea     rdi, [rax+27h]
.text:00000001800063C9                 and     rdi, 0FFFFFFFFFFFFFFE0h
.text:00000001800063CD                 mov     [rdi-8], rax
.text:00000001800063D1                 jmp     short loc_1800063E8
.text:00000001800063D3 ; ---------------------------------------------------------------------------
.text:00000001800063D3
.text:00000001800063D3 loc_1800063D3:                          ; CODE XREF: sub_180006310+98↑j
.text:00000001800063D3                 test    r14, r14
.text:00000001800063D6                 jz      short loc_1800063E5
.text:00000001800063D8                 mov     rcx, r14        ; Size
.text:00000001800063DB                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:00000001800063E0                 mov     rdi, rax
.text:00000001800063E3                 jmp     short loc_1800063E8
.text:00000001800063E5 ; ---------------------------------------------------------------------------
.text:00000001800063E5
.text:00000001800063E5 loc_1800063E5:                          ; CODE XREF: sub_180006310+C6↑j
.text:00000001800063E5                 mov     rdi, r13
.text:00000001800063E8
.text:00000001800063E8 loc_1800063E8:                          ; CODE XREF: sub_180006310+C1↑j
.text:00000001800063E8                                         ; sub_180006310+D3↑j
.text:00000001800063E8                 and     r15, 0FFFFFFFFFFFFFFE0h
.text:00000001800063EC                 xorps   xmm0, xmm0
.text:00000001800063EF                 add     r15, rdi
.text:00000001800063F2                 mov     rcx, rdi
.text:00000001800063F5                 movups  xmmword ptr [r15], xmm0
.text:00000001800063F9                 mov     [r15+10h], r13
.text:00000001800063FD                 mov     [r15+18h], r13
.text:0000000180006401                 movups  xmm0, xmmword ptr [r12]
.text:0000000180006406                 movups  xmmword ptr [r15], xmm0
.text:000000018000640A                 movups  xmm1, xmmword ptr [r12+10h]
.text:0000000180006410                 movups  xmmword ptr [r15+10h], xmm1
.text:0000000180006415                 mov     [r12+10h], r13
.text:000000018000641A                 mov     qword ptr [r12+18h], 0Fh
.text:0000000180006423                 mov     [r12], r13b
.text:0000000180006427                 mov     rdx, [rsi+8]
.text:000000018000642B                 mov     rax, [rsi]
.text:000000018000642E                 cmp     rbx, rdx
.text:0000000180006431                 jnz     short loc_18000647D
.text:0000000180006433                 cmp     rax, rdx
.text:0000000180006436                 jz      loc_180006508
.text:000000018000643C                 nop     dword ptr [rax+00h]
.text:0000000180006440
.text:0000000180006440 loc_180006440:                          ; CODE XREF: sub_180006310+166↓j
.text:0000000180006440                 xorps   xmm0, xmm0
.text:0000000180006443                 movups  xmmword ptr [rcx], xmm0
.text:0000000180006446                 mov     [rcx+10h], r13
.text:000000018000644A                 mov     [rcx+18h], r13
.text:000000018000644E                 movups  xmm0, xmmword ptr [rax]
.text:0000000180006451                 movups  xmmword ptr [rcx], xmm0
.text:0000000180006454                 movups  xmm1, xmmword ptr [rax+10h]
.text:0000000180006458                 movups  xmmword ptr [rcx+10h], xmm1
.text:000000018000645C                 mov     [rax+10h], r13
.text:0000000180006460                 add     rcx, 20h ; ' '
.text:0000000180006464                 mov     qword ptr [rax+18h], 0Fh
.text:000000018000646C                 mov     [rax], r13b
.text:000000018000646F                 add     rax, 20h ; ' '
.text:0000000180006473                 cmp     rax, rdx
.text:0000000180006476                 jnz     short loc_180006440
.text:0000000180006478                 jmp     loc_180006508
.text:000000018000647D ; ---------------------------------------------------------------------------
.text:000000018000647D
.text:000000018000647D loc_18000647D:                          ; CODE XREF: sub_180006310+121↑j
.text:000000018000647D                 cmp     rax, rbx
.text:0000000180006480                 jz      short loc_1800064BA
.text:0000000180006482
.text:0000000180006482 loc_180006482:                          ; CODE XREF: sub_180006310+1A8↓j
.text:0000000180006482                 xorps   xmm0, xmm0
.text:0000000180006485                 movups  xmmword ptr [rcx], xmm0
.text:0000000180006488                 mov     [rcx+10h], r13
.text:000000018000648C                 mov     [rcx+18h], r13
.text:0000000180006490                 movups  xmm0, xmmword ptr [rax]
.text:0000000180006493                 movups  xmmword ptr [rcx], xmm0
.text:0000000180006496                 movups  xmm1, xmmword ptr [rax+10h]
.text:000000018000649A                 movups  xmmword ptr [rcx+10h], xmm1
.text:000000018000649E                 mov     [rax+10h], r13
.text:00000001800064A2                 add     rcx, 20h ; ' '
.text:00000001800064A6                 mov     qword ptr [rax+18h], 0Fh
.text:00000001800064AE                 mov     [rax], r13b
.text:00000001800064B1                 add     rax, 20h ; ' '
.text:00000001800064B5                 cmp     rax, rbx
.text:00000001800064B8                 jnz     short loc_180006482
.text:00000001800064BA
.text:00000001800064BA loc_1800064BA:                          ; CODE XREF: sub_180006310+170↑j
.text:00000001800064BA                 mov     rdx, rcx
.text:00000001800064BD                 call    sub_180005C80
.text:00000001800064C2                 mov     rax, [rsi+8]
.text:00000001800064C6                 lea     rcx, [r15+20h]
.text:00000001800064CA                 cmp     rbx, rax
.text:00000001800064CD                 jz      short loc_180006508
.text:00000001800064CF                 nop
.text:00000001800064D0
.text:00000001800064D0 loc_1800064D0:                          ; CODE XREF: sub_180006310+1F6↓j
.text:00000001800064D0                 xorps   xmm0, xmm0
.text:00000001800064D3                 movups  xmmword ptr [rcx], xmm0
.text:00000001800064D6                 mov     [rcx+10h], r13
.text:00000001800064DA                 mov     [rcx+18h], r13
.text:00000001800064DE                 movups  xmm0, xmmword ptr [rbx]
.text:00000001800064E1                 movups  xmmword ptr [rcx], xmm0
.text:00000001800064E4                 movups  xmm1, xmmword ptr [rbx+10h]
.text:00000001800064E8                 movups  xmmword ptr [rcx+10h], xmm1
.text:00000001800064EC                 mov     [rbx+10h], r13
.text:00000001800064F0                 add     rcx, 20h ; ' '
.text:00000001800064F4                 mov     qword ptr [rbx+18h], 0Fh
.text:00000001800064FC                 mov     [rbx], r13b
.text:00000001800064FF                 add     rbx, 20h ; ' '
.text:0000000180006503                 cmp     rbx, rax
.text:0000000180006506                 jnz     short loc_1800064D0
.text:0000000180006508
.text:0000000180006508 loc_180006508:                          ; CODE XREF: sub_180006310+126↑j
.text:0000000180006508                                         ; sub_180006310+168↑j ...
.text:0000000180006508                 mov     rdx, rcx
.text:000000018000650B                 call    sub_180005C80
.text:0000000180006510                 mov     rcx, [rsi]
.text:0000000180006513                 test    rcx, rcx
.text:0000000180006516                 jz      short loc_180006555
.text:0000000180006518                 mov     rdx, [rsi+8]
.text:000000018000651C                 call    sub_180005C80
.text:0000000180006521                 mov     rcx, [rsi]
.text:0000000180006524                 mov     rdx, [rsi+10h]
.text:0000000180006528                 sub     rdx, rcx
.text:000000018000652B                 and     rdx, 0FFFFFFFFFFFFFFE0h
.text:000000018000652F                 cmp     rdx, 1000h
.text:0000000180006536                 jb      short loc_180006550
.text:0000000180006538                 mov     r8, [rcx-8]
.text:000000018000653C                 add     rdx, 27h ; '''
.text:0000000180006540                 sub     rcx, r8
.text:0000000180006543                 lea     rax, [rcx-8]
.text:0000000180006547                 cmp     rax, 1Fh
.text:000000018000654B                 ja      short loc_18000658D
.text:000000018000654D                 mov     rcx, r8         ; Block
.text:0000000180006550
.text:0000000180006550 loc_180006550:                          ; CODE XREF: sub_180006310+226↑j
.text:0000000180006550                 call    j_j_free
.text:0000000180006555
.text:0000000180006555 loc_180006555:                          ; CODE XREF: sub_180006310+206↑j
.text:0000000180006555                 mov     r13, [rsp+58h+var_30]
.text:000000018000655A                 lea     rcx, [r14+rdi]
.text:000000018000655E                 mov     r14, [rsp+58h+var_38]
.text:0000000180006563                 mov     rax, r15
.text:0000000180006566                 mov     [rsi], rdi
.text:0000000180006569                 shl     rbp, 5
.text:000000018000656D                 add     rbp, rdi
.text:0000000180006570                 mov     rdi, [rsp+58h+var_28]
.text:0000000180006575                 mov     [rsi+8], rbp
.text:0000000180006579                 mov     rbp, [rsp+58h+arg_18]
.text:000000018000657E                 mov     [rsi+10h], rcx
.text:0000000180006582                 add     rsp, 38h
.text:0000000180006586                 pop     r15
.text:0000000180006588                 pop     r12
.text:000000018000658A                 pop     rsi
.text:000000018000658B                 pop     rbx
.text:000000018000658C                 retn
.text:000000018000658D ; ---------------------------------------------------------------------------
.text:000000018000658D
.text:000000018000658D loc_18000658D:                          ; CODE XREF: sub_180006310+AF↑j
.text:000000018000658D                                         ; sub_180006310+23B↑j
.text:000000018000658D                                         ; DATA XREF: ...
.text:000000018000658D                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180006593                 int     3               ; Trap to Debugger
.text:0000000180006594 ; ---------------------------------------------------------------------------
.text:0000000180006594
.text:0000000180006594 loc_180006594:                          ; CODE XREF: sub_180006310+35↑j
.text:0000000180006594                                         ; DATA XREF: .pdata:000000018001C51C↓o ...
.text:0000000180006594                 call    sub_1800067C0
.text:0000000180006594 ; ---------------------------------------------------------------------------
.text:0000000180006599                 align 2
.text:000000018000659A
.text:000000018000659A loc_18000659A:                          ; CODE XREF: sub_180006310+6D↑j
.text:000000018000659A                                         ; sub_180006310+84↑j ...
.text:000000018000659A                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:000000018000659A ; ---------------------------------------------------------------------------
.text:000000018000659F                 align 20h
.text:000000018000659F sub_180006310   endp
.text:000000018000659F
.text:00000001800065A0
.text:00000001800065A0 ; =============== S U B R O U T I N E =======================================
.text:00000001800065A0
.text:00000001800065A0
.text:00000001800065A0 sub_1800065A0   proc near               ; CODE XREF: sub_180005A40+8F↑p
.text:00000001800065A0                                         ; DATA XREF: .rdata:00000001800153D0↓o ...
.text:00000001800065A0
.text:00000001800065A0 var_28          = qword ptr -28h
.text:00000001800065A0 var_20          = qword ptr -20h
.text:00000001800065A0 arg_10          = qword ptr  18h
.text:00000001800065A0
.text:00000001800065A0                 push    rbp
.text:00000001800065A2                 push    rdi
.text:00000001800065A3                 push    r14
.text:00000001800065A5                 sub     rsp, 30h
.text:00000001800065A9                 mov     r14, r8
.text:00000001800065AC                 mov     rbp, rdx
.text:00000001800065AF                 mov     r8, 3FFFFFFFFFFFFFFFh
.text:00000001800065B9                 mov     rdi, rcx
.text:00000001800065BC                 cmp     rdx, r8
.text:00000001800065BF                 ja      loc_18000671C
.text:00000001800065C5
.text:00000001800065C5 loc_1800065C5:                          ; DATA XREF: .rdata:00000001800153D0↓o
.text:00000001800065C5                                         ; .rdata:00000001800153EC↓o ...
.text:00000001800065C5                 mov     [rsp+48h+arg_10], rbx
.text:00000001800065CA                 mov     rax, r8
.text:00000001800065CD                 mov     [rsp+48h+var_20], rsi
.text:00000001800065D2                 mov     [rsp+48h+var_28], r15
.text:00000001800065D7                 mov     r15, [rcx+8]
.text:00000001800065DB                 sub     r15, [rcx]
.text:00000001800065DE                 mov     rcx, [rcx+10h]
.text:00000001800065E2                 sub     rcx, [rdi]
.text:00000001800065E5                 sar     rcx, 2
.text:00000001800065E9                 mov     rdx, rcx
.text:00000001800065EC                 sar     r15, 2
.text:00000001800065F0                 shr     rdx, 1
.text:00000001800065F3                 sub     rax, rdx
.text:00000001800065F6                 cmp     rcx, rax
.text:00000001800065F9                 ja      loc_180006722
.text:00000001800065FF                 lea     rax, [rdx+rcx]
.text:0000000180006603                 cmp     rax, rbp
.text:0000000180006606                 jnb     short loc_18000660D
.text:0000000180006608                 mov     rax, rbp
.text:000000018000660B                 jmp     short loc_180006616
.text:000000018000660D ; ---------------------------------------------------------------------------
.text:000000018000660D
.text:000000018000660D loc_18000660D:                          ; CODE XREF: sub_1800065A0+66↑j
.text:000000018000660D                 cmp     rax, r8
.text:0000000180006610                 ja      loc_180006722
.text:0000000180006616
.text:0000000180006616 loc_180006616:                          ; CODE XREF: sub_1800065A0+6B↑j
.text:0000000180006616                 lea     rsi, ds:0[rax*4]
.text:000000018000661E                 cmp     rsi, 1000h
.text:0000000180006625                 jb      short loc_180006650
.text:0000000180006627                 lea     rcx, [rsi+27h]  ; Size
.text:000000018000662B                 cmp     rcx, rsi
.text:000000018000662E                 jbe     loc_180006722
.text:0000000180006634                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180006639                 test    rax, rax
.text:000000018000663C                 jz      loc_180006715
.text:0000000180006642                 lea     rbx, [rax+27h]
.text:0000000180006646                 and     rbx, 0FFFFFFFFFFFFFFE0h
.text:000000018000664A                 mov     [rbx-8], rax
.text:000000018000664E                 jmp     short loc_180006664
.text:0000000180006650 ; ---------------------------------------------------------------------------
.text:0000000180006650
.text:0000000180006650 loc_180006650:                          ; CODE XREF: sub_1800065A0+85↑j
.text:0000000180006650                 test    rsi, rsi
.text:0000000180006653                 jz      short loc_180006662
.text:0000000180006655                 mov     rcx, rsi        ; Size
.text:0000000180006658                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000665D                 mov     rbx, rax
.text:0000000180006660                 jmp     short loc_180006664
.text:0000000180006662 ; ---------------------------------------------------------------------------
.text:0000000180006662
.text:0000000180006662 loc_180006662:                          ; CODE XREF: sub_1800065A0+B3↑j
.text:0000000180006662                 xor     ebx, ebx
.text:0000000180006664
.text:0000000180006664 loc_180006664:                          ; CODE XREF: sub_1800065A0+AE↑j
.text:0000000180006664                                         ; sub_1800065A0+C0↑j
.text:0000000180006664                 mov     rdx, rbp
.text:0000000180006667                 lea     rcx, [rbx+r15*4] ; void *
.text:000000018000666B                 sub     rdx, r15
.text:000000018000666E                 cmp     dword ptr [r14], 0
.text:0000000180006672                 jnz     short loc_180006685
.text:0000000180006674                 lea     r8, ds:0[rdx*4] ; Size
.text:000000018000667C                 xor     edx, edx        ; Val
.text:000000018000667E                 call    memset
.text:0000000180006683                 jmp     short loc_18000669F
.text:0000000180006685 ; ---------------------------------------------------------------------------
.text:0000000180006685
.text:0000000180006685 loc_180006685:                          ; CODE XREF: sub_1800065A0+D2↑j
.text:0000000180006685                 test    rdx, rdx
.text:0000000180006688                 jz      short loc_18000669F
.text:000000018000668A                 nop     word ptr [rax+rax+00h]
.text:0000000180006690
.text:0000000180006690 loc_180006690:                          ; CODE XREF: sub_1800065A0+FD↓j
.text:0000000180006690                 mov     eax, [r14]
.text:0000000180006693                 mov     [rcx], eax
.text:0000000180006695                 lea     rcx, [rcx+4]
.text:0000000180006699                 sub     rdx, 1
.text:000000018000669D                 jnz     short loc_180006690
.text:000000018000669F
.text:000000018000669F loc_18000669F:                          ; CODE XREF: sub_1800065A0+E3↑j
.text:000000018000669F                                         ; sub_1800065A0+E8↑j
.text:000000018000669F                 mov     rdx, [rdi]      ; Src
.text:00000001800066A2                 mov     rcx, rbx        ; void *
.text:00000001800066A5                 mov     r8, [rdi+8]
.text:00000001800066A9                 sub     r8, rdx         ; Size
.text:00000001800066AC                 call    memmove
.text:00000001800066B1                 mov     rcx, [rdi]
.text:00000001800066B4                 test    rcx, rcx
.text:00000001800066B7                 jz      short loc_1800066EA
.text:00000001800066B9                 mov     rdx, [rdi+10h]
.text:00000001800066BD                 sub     rdx, rcx
.text:00000001800066C0                 and     rdx, 0FFFFFFFFFFFFFFFCh
.text:00000001800066C4                 cmp     rdx, 1000h
.text:00000001800066CB                 jb      short loc_1800066E5
.text:00000001800066CD                 mov     r8, [rcx-8]
.text:00000001800066D1                 add     rdx, 27h ; '''
.text:00000001800066D5                 sub     rcx, r8
.text:00000001800066D8                 lea     rax, [rcx-8]
.text:00000001800066DC                 cmp     rax, 1Fh
.text:00000001800066E0                 ja      short loc_180006715
.text:00000001800066E2                 mov     rcx, r8         ; Block
.text:00000001800066E5
.text:00000001800066E5 loc_1800066E5:                          ; CODE XREF: sub_1800065A0+12B↑j
.text:00000001800066E5                 call    j_j_free
.text:00000001800066EA
.text:00000001800066EA loc_1800066EA:                          ; CODE XREF: sub_1800065A0+117↑j
.text:00000001800066EA                 mov     r15, [rsp+48h+var_28]
.text:00000001800066EF                 lea     rax, [rbx+rbp*4]
.text:00000001800066F3                 mov     [rdi], rbx
.text:00000001800066F6                 mov     [rdi+8], rax
.text:00000001800066FA                 lea     rax, [rsi+rbx]
.text:00000001800066FE                 mov     rsi, [rsp+48h+var_20]
.text:0000000180006703                 mov     rbx, [rsp+48h+arg_10]
.text:0000000180006708                 mov     [rdi+10h], rax
.text:000000018000670C                 add     rsp, 30h
.text:0000000180006710                 pop     r14
.text:0000000180006712                 pop     rdi
.text:0000000180006713                 pop     rbp
.text:0000000180006714                 retn
.text:0000000180006715 ; ---------------------------------------------------------------------------
.text:0000000180006715
.text:0000000180006715 loc_180006715:                          ; CODE XREF: sub_1800065A0+9C↑j
.text:0000000180006715                                         ; sub_1800065A0+140↑j
.text:0000000180006715                                         ; DATA XREF: ...
.text:0000000180006715                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000671B                 int     3               ; Trap to Debugger
.text:000000018000671C ; ---------------------------------------------------------------------------
.text:000000018000671C
.text:000000018000671C loc_18000671C:                          ; CODE XREF: sub_1800065A0+1F↑j
.text:000000018000671C                                         ; DATA XREF: .pdata:000000018001C558↓o ...
.text:000000018000671C                 call    sub_1800067C0
.text:000000018000671C ; ---------------------------------------------------------------------------
.text:0000000180006721                 align 2
.text:0000000180006722
.text:0000000180006722 loc_180006722:                          ; CODE XREF: sub_1800065A0+59↑j
.text:0000000180006722                                         ; sub_1800065A0+70↑j ...
.text:0000000180006722                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:0000000180006722 ; ---------------------------------------------------------------------------
.text:0000000180006727                 db 0CCh
.text:0000000180006727 sub_1800065A0   endp
.text:0000000180006727
.text:0000000180006728 algn_180006728:                         ; DATA XREF: .pdata:000000018001C570↓o
.text:0000000180006728                 align 10h
.text:0000000180006730
.text:0000000180006730 ; =============== S U B R O U T I N E =======================================
.text:0000000180006730
.text:0000000180006730
.text:0000000180006730 sub_180006730   proc near               ; CODE XREF: int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0+7↓j
.text:0000000180006730                                         ; DATA XREF: .rdata:00000001800152A5↓o ...
.text:0000000180006730
.text:0000000180006730 arg_8           = qword ptr  10h
.text:0000000180006730
.text:0000000180006730                 mov     [rsp+arg_8], rbx
.text:0000000180006735                 push    rdi
.text:0000000180006736                 sub     rsp, 20h
.text:000000018000673A                 mov     rbx, [rcx+8]
.text:000000018000673E                 mov     rdi, rcx
.text:0000000180006741                 test    rbx, rbx
.text:0000000180006744                 jz      short loc_180006791
.text:0000000180006746                 mov     rdx, [rbx+30h]
.text:000000018000674A                 cmp     rdx, 10h
.text:000000018000674E                 jb      short loc_18000677D
.text:0000000180006750                 mov     rcx, [rbx+18h]
.text:0000000180006754                 inc     rdx
.text:0000000180006757                 cmp     rdx, 1000h
.text:000000018000675E                 jb      short loc_180006778
.text:0000000180006760                 mov     r8, [rcx-8]
.text:0000000180006764                 add     rdx, 27h ; '''
.text:0000000180006768                 sub     rcx, r8
.text:000000018000676B                 lea     rax, [rcx-8]
.text:000000018000676F                 cmp     rax, 1Fh
.text:0000000180006773                 ja      short loc_1800067AF
.text:0000000180006775                 mov     rcx, r8         ; Block
.text:0000000180006778
.text:0000000180006778 loc_180006778:                          ; CODE XREF: sub_180006730+2E↑j
.text:0000000180006778                 call    j_j_free
.text:000000018000677D
.text:000000018000677D loc_18000677D:                          ; CODE XREF: sub_180006730+1E↑j
.text:000000018000677D                 mov     qword ptr [rbx+28h], 0
.text:0000000180006785                 mov     qword ptr [rbx+30h], 0Fh
.text:000000018000678D                 mov     byte ptr [rbx+18h], 0
.text:0000000180006791
.text:0000000180006791 loc_180006791:                          ; CODE XREF: sub_180006730+14↑j
.text:0000000180006791                 mov     rcx, [rdi+8]    ; Block
.text:0000000180006795                 test    rcx, rcx
.text:0000000180006798                 jz      short loc_1800067A4
.text:000000018000679A                 mov     edx, 38h ; '8'
.text:000000018000679F                 call    j_j_free
.text:00000001800067A4
.text:00000001800067A4 loc_1800067A4:                          ; CODE XREF: sub_180006730+68↑j
.text:00000001800067A4                 mov     rbx, [rsp+28h+arg_8]
.text:00000001800067A9                 add     rsp, 20h
.text:00000001800067AD                 pop     rdi
.text:00000001800067AE                 retn
.text:00000001800067AF ; ---------------------------------------------------------------------------
.text:00000001800067AF
.text:00000001800067AF loc_1800067AF:                          ; CODE XREF: sub_180006730+43↑j
.text:00000001800067AF                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800067AF ; ---------------------------------------------------------------------------
.text:00000001800067B5                 db 0CCh
.text:00000001800067B5 sub_180006730   endp
.text:00000001800067B5
.text:00000001800067B6 algn_1800067B6:                         ; DATA XREF: .pdata:000000018001C57C↓o
.text:00000001800067B6                 align 20h
.text:00000001800067C0
.text:00000001800067C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800067C0
.text:00000001800067C0 ; Attributes: noreturn
.text:00000001800067C0
.text:00000001800067C0 sub_1800067C0   proc near               ; CODE XREF: sub_180005FF0:loc_180006174↑p
.text:00000001800067C0                                         ; sub_180006180:loc_180006304↑p ...
.text:00000001800067C0                 sub     rsp, 28h
.text:00000001800067C4                 lea     rcx, aVectorTooLong ; "vector too long"
.text:00000001800067CB                 call    cs:__imp_?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
.text:00000001800067CB ; ---------------------------------------------------------------------------
.text:00000001800067D1                 db 0CCh
.text:00000001800067D1 sub_1800067C0   endp
.text:00000001800067D1
.text:00000001800067D2 algn_1800067D2:                         ; DATA XREF: .pdata:000000018001C588↓o
.text:00000001800067D2                 align 20h
.text:00000001800067E0 ; [00000014 BYTES: COLLAPSED CHUNK OF FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800067F4                 align 20h
.text:0000000180006800
.text:0000000180006800 ; =============== S U B R O U T I N E =======================================
.text:0000000180006800
.text:0000000180006800
.text:0000000180006800 sub_180006800   proc near               ; CODE XREF: sub_180005D10+211↑p
.text:0000000180006800                                         ; DATA XREF: .rdata:000000018001542C↓o ...
.text:0000000180006800
.text:0000000180006800 var_18          = qword ptr -18h
.text:0000000180006800 arg_10          = qword ptr  18h
.text:0000000180006800 arg_18          = qword ptr  20h
.text:0000000180006800
.text:0000000180006800                 push    rsi
.text:0000000180006802                 push    rdi
.text:0000000180006803                 sub     rsp, 28h
.text:0000000180006807                 mov     rax, 0FFFFFFFFFFFFFFFh
.text:0000000180006811                 mov     rsi, rcx
.text:0000000180006814                 bsr     rcx, rax
.text:0000000180006818                 mov     edi, 1
.text:000000018000681D                 mov     eax, edi
.text:000000018000681F                 shl     rax, cl
.text:0000000180006822                 cmp     rdx, rax
.text:0000000180006825                 jbe     short loc_180006835
.text:0000000180006827                 lea     rcx, aInvalidHashBuc ; "invalid hash bucket count"
.text:000000018000682E                 call    cs:__imp_?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error(char const *)
.text:0000000180006834                 int     3               ; Trap to Debugger
.text:0000000180006835 ; ---------------------------------------------------------------------------
.text:0000000180006835
.text:0000000180006835 loc_180006835:                          ; CODE XREF: sub_180006800+25↑j
.text:0000000180006835                 lea     rax, [rdx-1]
.text:0000000180006839
.text:0000000180006839 loc_180006839:                          ; DATA XREF: .rdata:000000018001542C↓o
.text:0000000180006839                                         ; .rdata:0000000180015440↓o ...
.text:0000000180006839                 mov     [rsp+38h+arg_10], rbx
.text:000000018000683E                 mov     rbx, [rsi+8]
.text:0000000180006842                 or      rax, rdi
.text:0000000180006845                 bsr     rcx, rax
.text:0000000180006849                 mov     r8, rbx
.text:000000018000684C                 mov     [rsp+38h+var_18], r14
.text:0000000180006851                 inc     ecx
.text:0000000180006853                 shl     rdi, cl
.text:0000000180006856                 lea     rcx, [rsi+18h]
.text:000000018000685A                 lea     rdx, [rdi+rdi]
.text:000000018000685E                 call    sub_1800026C0
.text:0000000180006863                 lea     rax, [rdi-1]
.text:0000000180006867                 mov     [rsi+38h], rdi
.text:000000018000686B                 mov     [rsi+30h], rax
.text:000000018000686F                 mov     rax, [rsi+8]
.text:0000000180006873                 mov     rax, [rax]
.text:0000000180006876                 mov     rcx, rax
.text:0000000180006879                 cmp     rax, rbx
.text:000000018000687C                 jz      loc_180006976
.text:0000000180006882
.text:0000000180006882 loc_180006882:                          ; DATA XREF: .rdata:0000000180015440↓o
.text:0000000180006882                                         ; .rdata:0000000180015450↓o ...
.text:0000000180006882                 mov     [rsp+38h+arg_18], rbp
.text:0000000180006887                 mov     rdi, 100000001B3h
.text:0000000180006891                 mov     rbp, 0CBF29CE484222325h
.text:000000018000689B                 nop     dword ptr [rax+rax+00h]
.text:00000001800068A0
.text:00000001800068A0 loc_1800068A0:                          ; CODE XREF: sub_180006800+16B↓j
.text:00000001800068A0                 movzx   edx, byte ptr [rax+11h]
.text:00000001800068A4                 movzx   r9d, byte ptr [rax+10h]
.text:00000001800068A9                 mov     r11, [rsi+30h]
.text:00000001800068AD                 xor     r9, rbp
.text:00000001800068B0                 mov     rcx, [rcx]
.text:00000001800068B3                 imul    r9, rdi
.text:00000001800068B7                 xor     r9, rdx
.text:00000001800068BA                 movzx   edx, byte ptr [rax+12h]
.text:00000001800068BE                 imul    r9, rdi
.text:00000001800068C2                 xor     r9, rdx
.text:00000001800068C5                 movzx   edx, byte ptr [rax+13h]
.text:00000001800068C9                 imul    r9, rdi
.text:00000001800068CD                 xor     r9, rdx
.text:00000001800068D0                 imul    r9, rdi
.text:00000001800068D4                 and     r11, r9
.text:00000001800068D7                 shl     r11, 4
.text:00000001800068DB                 add     r11, [rsi+18h]
.text:00000001800068DF                 mov     r9, [r11]
.text:00000001800068E2                 cmp     r9, rbx
.text:00000001800068E5                 jnz     short loc_1800068F0
.text:00000001800068E7                 mov     [r11], rax
.text:00000001800068EA                 mov     [r11+8], rax
.text:00000001800068EE                 jmp     short loc_180006965
.text:00000001800068F0 ; ---------------------------------------------------------------------------
.text:00000001800068F0
.text:00000001800068F0 loc_1800068F0:                          ; CODE XREF: sub_180006800+E5↑j
.text:00000001800068F0                 mov     rdx, [r11+8]
.text:00000001800068F4                 mov     r8d, [rax+10h]
.text:00000001800068F8                 cmp     r8d, [rdx+10h]
.text:00000001800068FC                 jnz     short loc_18000692D
.text:00000001800068FE                 mov     r10, [rdx]
.text:0000000180006901                 cmp     r10, rax
.text:0000000180006904                 jz      short loc_180006927
.text:0000000180006906                 mov     r9, [rax+8]
.text:000000018000690A                 mov     [r9], rcx
.text:000000018000690D                 mov     r8, [rcx+8]
.text:0000000180006911                 mov     [r8], r10
.text:0000000180006914                 mov     rdx, [r10+8]
.text:0000000180006918                 mov     [rdx], rax
.text:000000018000691B                 mov     [r10+8], r8
.text:000000018000691F                 mov     [rcx+8], r9
.text:0000000180006923                 mov     [rax+8], rdx
.text:0000000180006927
.text:0000000180006927 loc_180006927:                          ; CODE XREF: sub_180006800+104↑j
.text:0000000180006927                 mov     [r11+8], rax
.text:000000018000692B                 jmp     short loc_180006965
.text:000000018000692D ; ---------------------------------------------------------------------------
.text:000000018000692D
.text:000000018000692D loc_18000692D:                          ; CODE XREF: sub_180006800+FC↑j
.text:000000018000692D                 cmp     r9, rdx
.text:0000000180006930                 jz      short loc_180006941
.text:0000000180006932
.text:0000000180006932 loc_180006932:                          ; CODE XREF: sub_180006800+13F↓j
.text:0000000180006932                 mov     rdx, [rdx+8]
.text:0000000180006936                 cmp     r8d, [rdx+10h]
.text:000000018000693A                 jz      short loc_180006987
.text:000000018000693C                 cmp     r9, rdx
.text:000000018000693F                 jnz     short loc_180006932
.text:0000000180006941
.text:0000000180006941 loc_180006941:                          ; CODE XREF: sub_180006800+130↑j
.text:0000000180006941                 mov     r10, [rax+8]
.text:0000000180006945                 mov     [r10], rcx
.text:0000000180006948                 mov     r9, [rcx+8]
.text:000000018000694C                 mov     [r9], rdx
.text:000000018000694F                 mov     r8, [rdx+8]
.text:0000000180006953                 mov     [r8], rax
.text:0000000180006956                 mov     [rdx+8], r9
.text:000000018000695A                 mov     [rcx+8], r10
.text:000000018000695E                 mov     [rax+8], r8
.text:0000000180006962                 mov     [r11], rax
.text:0000000180006965
.text:0000000180006965 loc_180006965:                          ; CODE XREF: sub_180006800+EE↑j
.text:0000000180006965                                         ; sub_180006800+12B↑j ...
.text:0000000180006965                 mov     rax, rcx
.text:0000000180006968                 cmp     rcx, rbx
.text:000000018000696B                 jnz     loc_1800068A0
.text:0000000180006971                 mov     rbp, [rsp+38h+arg_18]
.text:0000000180006976
.text:0000000180006976 loc_180006976:                          ; CODE XREF: sub_180006800+7C↑j
.text:0000000180006976                                         ; DATA XREF: .pdata:000000018001C5AC↓o ...
.text:0000000180006976                 mov     rbx, [rsp+38h+arg_10]
.text:000000018000697B                 mov     r14, [rsp+38h+var_18]
.text:0000000180006980                 add     rsp, 28h
.text:0000000180006984                 pop     rdi
.text:0000000180006985                 pop     rsi
.text:0000000180006986                 retn
.text:0000000180006987 ; ---------------------------------------------------------------------------
.text:0000000180006987
.text:0000000180006987 loc_180006987:                          ; CODE XREF: sub_180006800+13A↑j
.text:0000000180006987                                         ; DATA XREF: .pdata:000000018001C5B8↓o ...
.text:0000000180006987                 mov     r10, [rdx]
.text:000000018000698A                 mov     r9, [rax+8]
.text:000000018000698E                 mov     [r9], rcx
.text:0000000180006991                 mov     r8, [rcx+8]
.text:0000000180006995                 mov     [r8], r10
.text:0000000180006998                 mov     rdx, [r10+8]
.text:000000018000699C                 mov     [rdx], rax
.text:000000018000699F                 mov     [r10+8], r8
.text:00000001800069A3                 mov     [rcx+8], r9
.text:00000001800069A7                 mov     [rax+8], rdx
.text:00000001800069AB                 jmp     short loc_180006965
.text:00000001800069AB sub_180006800   endp
.text:00000001800069AB
.text:00000001800069AB ; ---------------------------------------------------------------------------
.text:00000001800069AD algn_1800069AD:                         ; DATA XREF: .pdata:000000018001C5C4↓o
.text:00000001800069AD                 align 10h
.text:00000001800069B0
.text:00000001800069B0 ; =============== S U B R O U T I N E =======================================
.text:00000001800069B0
.text:00000001800069B0
.text:00000001800069B0 sub_1800069B0   proc near               ; CODE XREF: fsuipcw_getLvarValues+10E↑p
.text:00000001800069B0                                         ; DATA XREF: .pdata:000000018001C5D0↓o
.text:00000001800069B0
.text:00000001800069B0 var_68          = xmmword ptr -68h
.text:00000001800069B0 var_58          = qword ptr -58h
.text:00000001800069B0 var_50          = xmmword ptr -50h
.text:00000001800069B0 arg_18          = qword ptr  20h
.text:00000001800069B0
.text:00000001800069B0 ; __unwind { // __CxxFrameHandler4
.text:00000001800069B0                 mov     [rsp+arg_18], rbx
.text:00000001800069B5                 push    rbp
.text:00000001800069B6                 push    rsi
.text:00000001800069B7                 push    rdi
.text:00000001800069B8                 push    r12
.text:00000001800069BA                 push    r13
.text:00000001800069BC                 push    r14
.text:00000001800069BE                 push    r15
.text:00000001800069C0                 sub     rsp, 50h
.text:00000001800069C4                 mov     rsi, r8
.text:00000001800069C7                 mov     r15, rdx
.text:00000001800069CA                 mov     rbp, rcx
.text:00000001800069CD                 mov     [rsp+88h+var_58], rcx
.text:00000001800069D2                 mov     r12, [rcx]
.text:00000001800069D5                 mov     qword ptr [rsp+88h+var_68], r12
.text:00000001800069DA                 mov     rbx, [r12+8]
.text:00000001800069DF                 mov     qword ptr [rsp+88h+var_50], rbx
.text:00000001800069E4                 mov     dword ptr [rsp+88h+var_50+8], 0
.text:00000001800069EC                 mov     r14, r12
.text:00000001800069EF                 cmp     byte ptr [rbx+19h], 0
.text:00000001800069F3                 jnz     loc_180006A7F
.text:00000001800069F9                 mov     r12, [r8+18h]
.text:00000001800069FD                 mov     rbp, [r8+10h]
.text:0000000180006A01
.text:0000000180006A01 loc_180006A01:                          ; CODE XREF: sub_1800069B0+C3↓j
.text:0000000180006A01                 mov     qword ptr [rsp+88h+var_50], rbx
.text:0000000180006A06                 mov     rdx, rsi
.text:0000000180006A09                 cmp     r12, 10h
.text:0000000180006A0D                 jb      short loc_180006A12
.text:0000000180006A0F                 mov     rdx, [rsi]      ; Buf2
.text:0000000180006A12
.text:0000000180006A12 loc_180006A12:                          ; CODE XREF: sub_1800069B0+5D↑j
.text:0000000180006A12                 lea     rcx, [rbx+20h]
.text:0000000180006A16                 cmp     qword ptr [rbx+38h], 10h
.text:0000000180006A1B                 jb      short loc_180006A21
.text:0000000180006A1D                 mov     rcx, [rbx+20h]  ; Buf1
.text:0000000180006A21
.text:0000000180006A21 loc_180006A21:                          ; CODE XREF: sub_1800069B0+6B↑j
.text:0000000180006A21                 mov     rdi, [rbx+30h]
.text:0000000180006A25                 mov     r8, rdi
.text:0000000180006A28                 cmp     rbp, rdi
.text:0000000180006A2B                 cmovb   r8, rbp         ; Size
.text:0000000180006A2F                 call    memcmp
.text:0000000180006A34                 test    eax, eax
.text:0000000180006A36                 jnz     short loc_180006A4C
.text:0000000180006A38                 cmp     rdi, rbp
.text:0000000180006A3B                 jnb     short loc_180006A44
.text:0000000180006A3D                 mov     eax, 0FFFFFFFFh
.text:0000000180006A42                 jmp     short loc_180006A4C
.text:0000000180006A44 ; ---------------------------------------------------------------------------
.text:0000000180006A44
.text:0000000180006A44 loc_180006A44:                          ; CODE XREF: sub_1800069B0+8B↑j
.text:0000000180006A44                 xor     eax, eax
.text:0000000180006A46                 cmp     rdi, rbp
.text:0000000180006A49                 setnbe  al
.text:0000000180006A4C
.text:0000000180006A4C loc_180006A4C:                          ; CODE XREF: sub_1800069B0+86↑j
.text:0000000180006A4C                                         ; sub_1800069B0+92↑j
.text:0000000180006A4C                 shr     eax, 1Fh
.text:0000000180006A4F                 test    al, al
.text:0000000180006A51                 jz      short loc_180006A61
.text:0000000180006A53                 mov     dword ptr [rsp+88h+var_50+8], 0
.text:0000000180006A5B                 mov     rbx, [rbx+10h]
.text:0000000180006A5F                 jmp     short loc_180006A6F
.text:0000000180006A61 ; ---------------------------------------------------------------------------
.text:0000000180006A61
.text:0000000180006A61 loc_180006A61:                          ; CODE XREF: sub_1800069B0+A1↑j
.text:0000000180006A61                 mov     dword ptr [rsp+88h+var_50+8], 1
.text:0000000180006A69                 mov     r14, rbx
.text:0000000180006A6C                 mov     rbx, [rbx]
.text:0000000180006A6F
.text:0000000180006A6F loc_180006A6F:                          ; CODE XREF: sub_1800069B0+AF↑j
.text:0000000180006A6F                 cmp     byte ptr [rbx+19h], 0
.text:0000000180006A73                 jz      short loc_180006A01
.text:0000000180006A75                 mov     rbp, [rsp+88h+var_58]
.text:0000000180006A7A                 mov     r12, qword ptr [rsp+88h+var_68]
.text:0000000180006A7F
.text:0000000180006A7F loc_180006A7F:                          ; CODE XREF: sub_1800069B0+43↑j
.text:0000000180006A7F                 cmp     byte ptr [r14+19h], 0
.text:0000000180006A84                 jnz     short loc_180006AE4
.text:0000000180006A86                 lea     rdx, [r14+20h]
.text:0000000180006A8A                 cmp     qword ptr [r14+38h], 10h
.text:0000000180006A8F                 jb      short loc_180006A95
.text:0000000180006A91                 mov     rdx, [r14+20h]  ; Buf2
.text:0000000180006A95
.text:0000000180006A95 loc_180006A95:                          ; CODE XREF: sub_1800069B0+DF↑j
.text:0000000180006A95                 mov     rcx, rsi
.text:0000000180006A98                 cmp     qword ptr [rsi+18h], 10h
.text:0000000180006A9D                 jb      short loc_180006AA2
.text:0000000180006A9F                 mov     rcx, [rsi]      ; Buf1
.text:0000000180006AA2
.text:0000000180006AA2 loc_180006AA2:                          ; CODE XREF: sub_1800069B0+ED↑j
.text:0000000180006AA2                 mov     rdi, [r14+30h]
.text:0000000180006AA6                 mov     rbx, [rsi+10h]
.text:0000000180006AAA                 mov     r8, rbx
.text:0000000180006AAD                 cmp     rdi, rbx
.text:0000000180006AB0                 cmovb   r8, rdi         ; Size
.text:0000000180006AB4                 call    memcmp
.text:0000000180006AB9                 test    eax, eax
.text:0000000180006ABB                 jnz     short loc_180006AD1
.text:0000000180006ABD                 cmp     rbx, rdi
.text:0000000180006AC0                 jnb     short loc_180006AC9
.text:0000000180006AC2                 mov     eax, 0FFFFFFFFh
.text:0000000180006AC7                 jmp     short loc_180006AD1
.text:0000000180006AC9 ; ---------------------------------------------------------------------------
.text:0000000180006AC9
.text:0000000180006AC9 loc_180006AC9:                          ; CODE XREF: sub_1800069B0+110↑j
.text:0000000180006AC9                 xor     eax, eax
.text:0000000180006ACB                 cmp     rbx, rdi
.text:0000000180006ACE                 setnbe  al
.text:0000000180006AD1
.text:0000000180006AD1 loc_180006AD1:                          ; CODE XREF: sub_1800069B0+10B↑j
.text:0000000180006AD1                                         ; sub_1800069B0+117↑j
.text:0000000180006AD1                 shr     eax, 1Fh
.text:0000000180006AD4                 test    al, al
.text:0000000180006AD6                 jnz     short loc_180006AE4
.text:0000000180006AD8                 mov     [r15], r14
.text:0000000180006ADB                 mov     [r15+8], al
.text:0000000180006ADF                 jmp     loc_180006B72
.text:0000000180006AE4 ; ---------------------------------------------------------------------------
.text:0000000180006AE4
.text:0000000180006AE4 loc_180006AE4:                          ; CODE XREF: sub_1800069B0+D4↑j
.text:0000000180006AE4                                         ; sub_1800069B0+126↑j
.text:0000000180006AE4                 mov     rax, 38E38E38E38E38Eh
.text:0000000180006AEE                 cmp     [rbp+8], rax
.text:0000000180006AF2                 jz      loc_180006B8D
.text:0000000180006AF8                 mov     qword ptr [rsp+88h+var_68], rbp
.text:0000000180006AFD                 xor     ebx, ebx
.text:0000000180006AFF                 mov     qword ptr [rsp+88h+var_68+8], rbx
.text:0000000180006B04                 lea     ecx, [rbx+48h]  ; Size
.text:0000000180006B07                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180006B0C                 mov     r8, rax
.text:0000000180006B0F                 xorps   xmm0, xmm0
.text:0000000180006B12                 movups  xmmword ptr [rax+20h], xmm0
.text:0000000180006B16                 mov     [rax+30h], rbx
.text:0000000180006B1A                 mov     [rax+38h], rbx
.text:0000000180006B1E                 movups  xmm0, xmmword ptr [rsi]
.text:0000000180006B21                 movups  xmmword ptr [rax+20h], xmm0
.text:0000000180006B25                 movups  xmm1, xmmword ptr [rsi+10h]
.text:0000000180006B29                 movups  xmmword ptr [rax+30h], xmm1
.text:0000000180006B2D                 mov     [rsi+10h], rbx
.text:0000000180006B31                 mov     qword ptr [rsi+18h], 0Fh
.text:0000000180006B39                 mov     [rsi], bl
.text:0000000180006B3B                 mov     rax, [rsi+20h]
.text:0000000180006B3F                 mov     [r8+40h], rax
.text:0000000180006B43                 mov     [r8], r12
.text:0000000180006B46                 mov     [r8+8], r12
.text:0000000180006B4A                 mov     [r8+10h], r12
.text:0000000180006B4E                 mov     [r8+18h], bx
.text:0000000180006B53                 movups  xmm0, [rsp+88h+var_50]
.text:0000000180006B58                 movaps  [rsp+88h+var_68], xmm0
.text:0000000180006B5D                 lea     rdx, [rsp+88h+var_68]
.text:0000000180006B62                 mov     rcx, rbp
.text:0000000180006B65                 call    sub_180006BA0
.text:0000000180006B6A                 mov     [r15], rax
.text:0000000180006B6D                 mov     byte ptr [r15+8], 1
.text:0000000180006B72
.text:0000000180006B72 loc_180006B72:                          ; CODE XREF: sub_1800069B0+12F↑j
.text:0000000180006B72                 mov     rax, r15
.text:0000000180006B75                 mov     rbx, [rsp+88h+arg_18]
.text:0000000180006B7D                 add     rsp, 50h
.text:0000000180006B81                 pop     r15
.text:0000000180006B83                 pop     r14
.text:0000000180006B85                 pop     r13
.text:0000000180006B87                 pop     r12
.text:0000000180006B89                 pop     rdi
.text:0000000180006B8A                 pop     rsi
.text:0000000180006B8B                 pop     rbp
.text:0000000180006B8C                 retn
.text:0000000180006B8D ; ---------------------------------------------------------------------------
.text:0000000180006B8D
.text:0000000180006B8D loc_180006B8D:                          ; CODE XREF: sub_1800069B0+142↑j
.text:0000000180006B8D                 call    sub_180002AA0
.text:0000000180006B8D ; ---------------------------------------------------------------------------
.text:0000000180006B92                 db 0CCh
.text:0000000180006B92 ; } // starts at 1800069B0
.text:0000000180006B92 sub_1800069B0   endp
.text:0000000180006B92
.text:0000000180006B93 algn_180006B93:                         ; DATA XREF: .pdata:000000018001C5D0↓o
.text:0000000180006B93                 align 20h
.text:0000000180006BA0
.text:0000000180006BA0 ; =============== S U B R O U T I N E =======================================
.text:0000000180006BA0
.text:0000000180006BA0
.text:0000000180006BA0 sub_180006BA0   proc near               ; CODE XREF: sub_1800069B0+1B5↑p
.text:0000000180006BA0                                         ; sub_18000ADD0+315↓p ...
.text:0000000180006BA0                 inc     qword ptr [rcx+8]
.text:0000000180006BA4                 mov     r9, r8
.text:0000000180006BA7                 mov     r11, [rcx]
.text:0000000180006BAA                 mov     r10, rcx
.text:0000000180006BAD                 mov     rax, [rdx]
.text:0000000180006BB0                 mov     [r8+8], rax
.text:0000000180006BB4                 cmp     rax, r11
.text:0000000180006BB7                 jnz     short loc_180006BCD
.text:0000000180006BB9                 mov     [r11], r8
.text:0000000180006BBC                 mov     rax, r8
.text:0000000180006BBF                 mov     [r11+8], r8
.text:0000000180006BC3                 mov     [r11+10h], r8
.text:0000000180006BC7                 mov     byte ptr [r8+18h], 1
.text:0000000180006BCC                 retn
.text:0000000180006BCD ; ---------------------------------------------------------------------------
.text:0000000180006BCD
.text:0000000180006BCD loc_180006BCD:                          ; CODE XREF: sub_180006BA0+17↑j
.text:0000000180006BCD                 cmp     dword ptr [rdx+8], 0
.text:0000000180006BD1                 jnz     short loc_180006BE3
.text:0000000180006BD3                 mov     [rax+10h], r9
.text:0000000180006BD7                 cmp     rax, [r11+10h]
.text:0000000180006BDB                 jnz     short loc_180006BEE
.text:0000000180006BDD                 mov     [r11+10h], r9
.text:0000000180006BE1                 jmp     short loc_180006BEE
.text:0000000180006BE3 ; ---------------------------------------------------------------------------
.text:0000000180006BE3
.text:0000000180006BE3 loc_180006BE3:                          ; CODE XREF: sub_180006BA0+31↑j
.text:0000000180006BE3                 mov     [rax], r9
.text:0000000180006BE6                 cmp     rax, [r11]
.text:0000000180006BE9                 jnz     short loc_180006BEE
.text:0000000180006BEB                 mov     [r11], r9
.text:0000000180006BEE
.text:0000000180006BEE loc_180006BEE:                          ; CODE XREF: sub_180006BA0+3B↑j
.text:0000000180006BEE                                         ; sub_180006BA0+41↑j ...
.text:0000000180006BEE                 mov     rcx, [r8+8]
.text:0000000180006BF2                 mov     rax, r9
.text:0000000180006BF5                 cmp     byte ptr [rcx+18h], 0
.text:0000000180006BF9                 jnz     loc_180006DEF
.text:0000000180006BFF                 nop
.text:0000000180006C00
.text:0000000180006C00 loc_180006C00:                          ; CODE XREF: sub_180006BA0+249↓j
.text:0000000180006C00                 mov     rdx, [rax+8]
.text:0000000180006C04                 mov     r8, [rdx+8]
.text:0000000180006C08                 mov     rcx, [r8]
.text:0000000180006C0B                 cmp     rdx, rcx
.text:0000000180006C0E                 jnz     loc_180006D04
.text:0000000180006C14                 mov     rcx, [r8+10h]
.text:0000000180006C18                 cmp     byte ptr [rcx+18h], 0
.text:0000000180006C1C                 jnz     short loc_180006C3F
.text:0000000180006C1E                 mov     byte ptr [rdx+18h], 1
.text:0000000180006C22                 mov     byte ptr [rcx+18h], 1
.text:0000000180006C26                 mov     rcx, [rax+8]
.text:0000000180006C2A                 mov     rdx, [rcx+8]
.text:0000000180006C2E                 mov     byte ptr [rdx+18h], 0
.text:0000000180006C32                 mov     rcx, [rax+8]
.text:0000000180006C36                 mov     rax, [rcx+8]
.text:0000000180006C3A                 jmp     loc_180006DE1
.text:0000000180006C3F ; ---------------------------------------------------------------------------
.text:0000000180006C3F
.text:0000000180006C3F loc_180006C3F:                          ; CODE XREF: sub_180006BA0+7C↑j
.text:0000000180006C3F                 mov     r8, [rdx+10h]
.text:0000000180006C43                 cmp     rax, r8
.text:0000000180006C46                 jnz     short loc_180006C8F
.text:0000000180006C48                 mov     rcx, [r8]
.text:0000000180006C4B                 mov     rax, rdx
.text:0000000180006C4E                 mov     [rdx+10h], rcx
.text:0000000180006C52                 mov     rcx, [r8]
.text:0000000180006C55                 cmp     byte ptr [rcx+19h], 0
.text:0000000180006C59                 jnz     short loc_180006C5F
.text:0000000180006C5B                 mov     [rcx+8], rdx
.text:0000000180006C5F
.text:0000000180006C5F loc_180006C5F:                          ; CODE XREF: sub_180006BA0+B9↑j
.text:0000000180006C5F                 mov     rcx, [rdx+8]
.text:0000000180006C63                 mov     [r8+8], rcx
.text:0000000180006C67                 mov     rcx, [r10]
.text:0000000180006C6A                 cmp     rdx, [rcx+8]
.text:0000000180006C6E                 jnz     short loc_180006C76
.text:0000000180006C70                 mov     [rcx+8], r8
.text:0000000180006C74                 jmp     short loc_180006C88
.text:0000000180006C76 ; ---------------------------------------------------------------------------
.text:0000000180006C76
.text:0000000180006C76 loc_180006C76:                          ; CODE XREF: sub_180006BA0+CE↑j
.text:0000000180006C76                 mov     rcx, [rdx+8]
.text:0000000180006C7A                 cmp     rdx, [rcx]
.text:0000000180006C7D                 jnz     short loc_180006C84
.text:0000000180006C7F                 mov     [rcx], r8
.text:0000000180006C82                 jmp     short loc_180006C88
.text:0000000180006C84 ; ---------------------------------------------------------------------------
.text:0000000180006C84
.text:0000000180006C84 loc_180006C84:                          ; CODE XREF: sub_180006BA0+DD↑j
.text:0000000180006C84                 mov     [rcx+10h], r8
.text:0000000180006C88
.text:0000000180006C88 loc_180006C88:                          ; CODE XREF: sub_180006BA0+D4↑j
.text:0000000180006C88                                         ; sub_180006BA0+E2↑j
.text:0000000180006C88                 mov     [r8], rdx
.text:0000000180006C8B                 mov     [rdx+8], r8
.text:0000000180006C8F
.text:0000000180006C8F loc_180006C8F:                          ; CODE XREF: sub_180006BA0+A6↑j
.text:0000000180006C8F                 mov     rcx, [rax+8]
.text:0000000180006C93                 mov     byte ptr [rcx+18h], 1
.text:0000000180006C97                 mov     rcx, [rax+8]
.text:0000000180006C9B                 mov     rdx, [rcx+8]
.text:0000000180006C9F                 mov     byte ptr [rdx+18h], 0
.text:0000000180006CA3                 mov     rcx, [rax+8]
.text:0000000180006CA7                 mov     rdx, [rcx+8]
.text:0000000180006CAB                 mov     r8, [rdx]
.text:0000000180006CAE                 mov     rcx, [r8+10h]
.text:0000000180006CB2                 mov     [rdx], rcx
.text:0000000180006CB5                 mov     rcx, [r8+10h]
.text:0000000180006CB9                 cmp     byte ptr [rcx+19h], 0
.text:0000000180006CBD                 jnz     short loc_180006CC3
.text:0000000180006CBF                 mov     [rcx+8], rdx
.text:0000000180006CC3
.text:0000000180006CC3 loc_180006CC3:                          ; CODE XREF: sub_180006BA0+11D↑j
.text:0000000180006CC3                 mov     rcx, [rdx+8]
.text:0000000180006CC7                 mov     [r8+8], rcx
.text:0000000180006CCB                 mov     rcx, [r10]
.text:0000000180006CCE                 cmp     rdx, [rcx+8]
.text:0000000180006CD2                 jnz     short loc_180006CE1
.text:0000000180006CD4                 mov     [rcx+8], r8
.text:0000000180006CD8                 mov     [r8+10h], rdx
.text:0000000180006CDC                 jmp     loc_180006DDD
.text:0000000180006CE1 ; ---------------------------------------------------------------------------
.text:0000000180006CE1
.text:0000000180006CE1 loc_180006CE1:                          ; CODE XREF: sub_180006BA0+132↑j
.text:0000000180006CE1                 mov     rcx, [rdx+8]
.text:0000000180006CE5                 cmp     rdx, [rcx+10h]
.text:0000000180006CE9                 jnz     short loc_180006CF8
.text:0000000180006CEB                 mov     [rcx+10h], r8
.text:0000000180006CEF                 mov     [r8+10h], rdx
.text:0000000180006CF3                 jmp     loc_180006DDD
.text:0000000180006CF8 ; ---------------------------------------------------------------------------
.text:0000000180006CF8
.text:0000000180006CF8 loc_180006CF8:                          ; CODE XREF: sub_180006BA0+149↑j
.text:0000000180006CF8                 mov     [rcx], r8
.text:0000000180006CFB                 mov     [r8+10h], rdx
.text:0000000180006CFF                 jmp     loc_180006DDD
.text:0000000180006D04 ; ---------------------------------------------------------------------------
.text:0000000180006D04
.text:0000000180006D04 loc_180006D04:                          ; CODE XREF: sub_180006BA0+6E↑j
.text:0000000180006D04                 cmp     byte ptr [rcx+18h], 0
.text:0000000180006D08                 jnz     short loc_180006D2B
.text:0000000180006D0A                 mov     byte ptr [rdx+18h], 1
.text:0000000180006D0E                 mov     byte ptr [rcx+18h], 1
.text:0000000180006D12                 mov     rcx, [rax+8]
.text:0000000180006D16                 mov     rdx, [rcx+8]
.text:0000000180006D1A                 mov     byte ptr [rdx+18h], 0
.text:0000000180006D1E                 mov     rcx, [rax+8]
.text:0000000180006D22                 mov     rax, [rcx+8]
.text:0000000180006D26                 jmp     loc_180006DE1
.text:0000000180006D2B ; ---------------------------------------------------------------------------
.text:0000000180006D2B
.text:0000000180006D2B loc_180006D2B:                          ; CODE XREF: sub_180006BA0+168↑j
.text:0000000180006D2B                 mov     r8, [rdx]
.text:0000000180006D2E                 cmp     rax, r8
.text:0000000180006D31                 jnz     short loc_180006D7D
.text:0000000180006D33                 mov     rcx, [r8+10h]
.text:0000000180006D37                 mov     rax, rdx
.text:0000000180006D3A                 mov     [rdx], rcx
.text:0000000180006D3D                 mov     rcx, [r8+10h]
.text:0000000180006D41                 cmp     byte ptr [rcx+19h], 0
.text:0000000180006D45                 jnz     short loc_180006D4B
.text:0000000180006D47                 mov     [rcx+8], rdx
.text:0000000180006D4B
.text:0000000180006D4B loc_180006D4B:                          ; CODE XREF: sub_180006BA0+1A5↑j
.text:0000000180006D4B                 mov     rcx, [rdx+8]
.text:0000000180006D4F                 mov     [r8+8], rcx
.text:0000000180006D53                 mov     rcx, [r10]
.text:0000000180006D56                 cmp     rdx, [rcx+8]
.text:0000000180006D5A                 jnz     short loc_180006D62
.text:0000000180006D5C                 mov     [rcx+8], r8
.text:0000000180006D60                 jmp     short loc_180006D75
.text:0000000180006D62 ; ---------------------------------------------------------------------------
.text:0000000180006D62
.text:0000000180006D62 loc_180006D62:                          ; CODE XREF: sub_180006BA0+1BA↑j
.text:0000000180006D62                 mov     rcx, [rdx+8]
.text:0000000180006D66                 cmp     rdx, [rcx+10h]
.text:0000000180006D6A                 jnz     short loc_180006D72
.text:0000000180006D6C                 mov     [rcx+10h], r8
.text:0000000180006D70                 jmp     short loc_180006D75
.text:0000000180006D72 ; ---------------------------------------------------------------------------
.text:0000000180006D72
.text:0000000180006D72 loc_180006D72:                          ; CODE XREF: sub_180006BA0+1CA↑j
.text:0000000180006D72                 mov     [rcx], r8
.text:0000000180006D75
.text:0000000180006D75 loc_180006D75:                          ; CODE XREF: sub_180006BA0+1C0↑j
.text:0000000180006D75                                         ; sub_180006BA0+1D0↑j
.text:0000000180006D75                 mov     [r8+10h], rdx
.text:0000000180006D79                 mov     [rdx+8], r8
.text:0000000180006D7D
.text:0000000180006D7D loc_180006D7D:                          ; CODE XREF: sub_180006BA0+191↑j
.text:0000000180006D7D                 mov     rcx, [rax+8]
.text:0000000180006D81                 mov     byte ptr [rcx+18h], 1
.text:0000000180006D85                 mov     rcx, [rax+8]
.text:0000000180006D89                 mov     rdx, [rcx+8]
.text:0000000180006D8D                 mov     byte ptr [rdx+18h], 0
.text:0000000180006D91                 mov     rcx, [rax+8]
.text:0000000180006D95                 mov     rdx, [rcx+8]
.text:0000000180006D99                 mov     r8, [rdx+10h]
.text:0000000180006D9D                 mov     rcx, [r8]
.text:0000000180006DA0                 mov     [rdx+10h], rcx
.text:0000000180006DA4                 mov     rcx, [r8]
.text:0000000180006DA7                 cmp     byte ptr [rcx+19h], 0
.text:0000000180006DAB                 jnz     short loc_180006DB1
.text:0000000180006DAD                 mov     [rcx+8], rdx
.text:0000000180006DB1
.text:0000000180006DB1 loc_180006DB1:                          ; CODE XREF: sub_180006BA0+20B↑j
.text:0000000180006DB1                 mov     rcx, [rdx+8]
.text:0000000180006DB5                 mov     [r8+8], rcx
.text:0000000180006DB9                 mov     rcx, [r10]
.text:0000000180006DBC                 cmp     rdx, [rcx+8]
.text:0000000180006DC0                 jnz     short loc_180006DC8
.text:0000000180006DC2                 mov     [rcx+8], r8
.text:0000000180006DC6                 jmp     short loc_180006DDA
.text:0000000180006DC8 ; ---------------------------------------------------------------------------
.text:0000000180006DC8
.text:0000000180006DC8 loc_180006DC8:                          ; CODE XREF: sub_180006BA0+220↑j
.text:0000000180006DC8                 mov     rcx, [rdx+8]
.text:0000000180006DCC                 cmp     rdx, [rcx]
.text:0000000180006DCF                 jnz     short loc_180006DD6
.text:0000000180006DD1                 mov     [rcx], r8
.text:0000000180006DD4                 jmp     short loc_180006DDA
.text:0000000180006DD6 ; ---------------------------------------------------------------------------
.text:0000000180006DD6
.text:0000000180006DD6 loc_180006DD6:                          ; CODE XREF: sub_180006BA0+22F↑j
.text:0000000180006DD6                 mov     [rcx+10h], r8
.text:0000000180006DDA
.text:0000000180006DDA loc_180006DDA:                          ; CODE XREF: sub_180006BA0+226↑j
.text:0000000180006DDA                                         ; sub_180006BA0+234↑j
.text:0000000180006DDA                 mov     [r8], rdx
.text:0000000180006DDD
.text:0000000180006DDD loc_180006DDD:                          ; CODE XREF: sub_180006BA0+13C↑j
.text:0000000180006DDD                                         ; sub_180006BA0+153↑j ...
.text:0000000180006DDD                 mov     [rdx+8], r8
.text:0000000180006DE1
.text:0000000180006DE1 loc_180006DE1:                          ; CODE XREF: sub_180006BA0+9A↑j
.text:0000000180006DE1                                         ; sub_180006BA0+186↑j
.text:0000000180006DE1                 mov     rcx, [rax+8]
.text:0000000180006DE5                 cmp     byte ptr [rcx+18h], 0
.text:0000000180006DE9                 jz      loc_180006C00
.text:0000000180006DEF
.text:0000000180006DEF loc_180006DEF:                          ; CODE XREF: sub_180006BA0+59↑j
.text:0000000180006DEF                 mov     rax, [r11+8]
.text:0000000180006DF3                 mov     byte ptr [rax+18h], 1
.text:0000000180006DF7                 mov     rax, r9
.text:0000000180006DFA                 retn
.text:0000000180006DFA sub_180006BA0   endp
.text:0000000180006DFA
.text:0000000180006DFA ; ---------------------------------------------------------------------------
.text:0000000180006DFB                 align 20h
.text:0000000180006E00 ; [00000014 BYTES: COLLAPSED CHUNK OF FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180006E14                 align 20h
.text:0000000180006E20
.text:0000000180006E20 ; =============== S U B R O U T I N E =======================================
.text:0000000180006E20
.text:0000000180006E20
.text:0000000180006E20 sub_180006E20   proc near               ; CODE XREF: sub_1800034B0+576↑p
.text:0000000180006E20                                         ; sub_18000A6F0+193↓p ...
.text:0000000180006E20
.text:0000000180006E20 arg_10          = qword ptr  18h
.text:0000000180006E20
.text:0000000180006E20                 mov     [rsp+arg_10], rbx
.text:0000000180006E25                 push    rdi
.text:0000000180006E26                 sub     rsp, 20h
.text:0000000180006E2A                 mov     rdi, rdx
.text:0000000180006E2D                 mov     rbx, rcx
.text:0000000180006E30                 cmp     rcx, rdx
.text:0000000180006E33                 jz      short loc_180006E97
.text:0000000180006E35                 mov     rdx, [rcx+18h]
.text:0000000180006E39                 cmp     rdx, 10h
.text:0000000180006E3D                 jb      short loc_180006E6B
.text:0000000180006E3F                 mov     rcx, [rcx]
.text:0000000180006E42                 inc     rdx
.text:0000000180006E45                 cmp     rdx, 1000h
.text:0000000180006E4C                 jb      short loc_180006E66
.text:0000000180006E4E                 mov     r8, [rcx-8]
.text:0000000180006E52                 add     rdx, 27h ; '''
.text:0000000180006E56                 sub     rcx, r8
.text:0000000180006E59                 lea     rax, [rcx-8]
.text:0000000180006E5D                 cmp     rax, 1Fh
.text:0000000180006E61                 ja      short loc_180006EA5
.text:0000000180006E63                 mov     rcx, r8         ; Block
.text:0000000180006E66
.text:0000000180006E66 loc_180006E66:                          ; CODE XREF: sub_180006E20+2C↑j
.text:0000000180006E66                 call    j_j_free
.text:0000000180006E6B
.text:0000000180006E6B loc_180006E6B:                          ; CODE XREF: sub_180006E20+1D↑j
.text:0000000180006E6B                 mov     qword ptr [rbx+18h], 0Fh
.text:0000000180006E73                 xor     eax, eax
.text:0000000180006E75                 mov     [rbx+10h], rax
.text:0000000180006E79                 mov     [rbx], al
.text:0000000180006E7B                 movups  xmm0, xmmword ptr [rdi]
.text:0000000180006E7E                 movups  xmmword ptr [rbx], xmm0
.text:0000000180006E81                 movups  xmm1, xmmword ptr [rdi+10h]
.text:0000000180006E85                 movups  xmmword ptr [rbx+10h], xmm1
.text:0000000180006E89                 mov     [rdi+10h], rax
.text:0000000180006E8D                 mov     qword ptr [rdi+18h], 0Fh
.text:0000000180006E95                 mov     [rdi], al
.text:0000000180006E97
.text:0000000180006E97 loc_180006E97:                          ; CODE XREF: sub_180006E20+13↑j
.text:0000000180006E97                 mov     rax, rbx
.text:0000000180006E9A                 mov     rbx, [rsp+28h+arg_10]
.text:0000000180006E9F                 add     rsp, 20h
.text:0000000180006EA3                 pop     rdi
.text:0000000180006EA4                 retn
.text:0000000180006EA5 ; ---------------------------------------------------------------------------
.text:0000000180006EA5
.text:0000000180006EA5 loc_180006EA5:                          ; CODE XREF: sub_180006E20+41↑j
.text:0000000180006EA5                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180006EA5 ; ---------------------------------------------------------------------------
.text:0000000180006EAB                 db 0CCh
.text:0000000180006EAB sub_180006E20   endp
.text:0000000180006EAB
.text:0000000180006EAC algn_180006EAC:                         ; DATA XREF: .pdata:000000018001C5DC↓o
.text:0000000180006EAC                 align 10h
.text:0000000180006EB0
.text:0000000180006EB0 ; =============== S U B R O U T I N E =======================================
.text:0000000180006EB0
.text:0000000180006EB0
.text:0000000180006EB0 sub_180006EB0   proc near               ; CODE XREF: Concurrency::cancel_current_task(void)+9↓p
.text:0000000180006EB0                 lea     rax, aBadCast   ; "bad cast"
.text:0000000180006EB7                 mov     qword ptr [rcx+10h], 0
.text:0000000180006EBF                 mov     [rcx+8], rax
.text:0000000180006EC3                 lea     rax, off_180013AA8
.text:0000000180006ECA                 mov     [rcx], rax
.text:0000000180006ECD                 mov     rax, rcx
.text:0000000180006ED0                 retn
.text:0000000180006ED0 sub_180006EB0   endp
.text:0000000180006ED0
.text:0000000180006ED0 ; ---------------------------------------------------------------------------
.text:0000000180006ED1                 align 20h
.text:0000000180006EE0 ; [00000020 BYTES: COLLAPSED FUNCTION Concurrency::cancel_current_task(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180006F00
.text:0000000180006F00 ; =============== S U B R O U T I N E =======================================
.text:0000000180006F00
.text:0000000180006F00
.text:0000000180006F00 sub_180006F00   proc near               ; DATA XREF: .pdata:000000018001C5E8↓o
.text:0000000180006F00                                         ; .pdata:000000018001C5F4↓o
.text:0000000180006F00                 push    rbx
.text:0000000180006F02                 sub     rsp, 20h
.text:0000000180006F06                 mov     rbx, rcx
.text:0000000180006F09                 mov     rax, rdx
.text:0000000180006F0C                 lea     rcx, off_180012710
.text:0000000180006F13                 xorps   xmm0, xmm0
.text:0000000180006F16                 lea     rdx, [rbx+8]
.text:0000000180006F1A                 mov     [rbx], rcx
.text:0000000180006F1D                 lea     rcx, [rax+8]
.text:0000000180006F21                 movups  xmmword ptr [rdx], xmm0
.text:0000000180006F24                 call    cs:__std_exception_copy
.text:0000000180006F2A                 lea     rax, off_180013AA8
.text:0000000180006F31                 mov     [rbx], rax
.text:0000000180006F34                 mov     rax, rbx
.text:0000000180006F37                 add     rsp, 20h
.text:0000000180006F3B                 pop     rbx
.text:0000000180006F3C                 retn
.text:0000000180006F3C sub_180006F00   endp
.text:0000000180006F3C
.text:0000000180006F3C ; ---------------------------------------------------------------------------
.text:0000000180006F3D algn_180006F3D:                         ; DATA XREF: .pdata:000000018001C5F4↓o
.text:0000000180006F3D                 align 20h
.text:0000000180006F40
.text:0000000180006F40 ; =============== S U B R O U T I N E =======================================
.text:0000000180006F40
.text:0000000180006F40
.text:0000000180006F40 sub_180006F40   proc near               ; CODE XREF: int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0+7↓j
.text:0000000180006F40                                         ; sub_1800115E8+7↓j
.text:0000000180006F40                                         ; DATA XREF: ...
.text:0000000180006F40                 sub     rsp, 28h
.text:0000000180006F44                 mov     rcx, [rcx+8]
.text:0000000180006F48                 test    rcx, rcx
.text:0000000180006F4B                 jz      short loc_180006F6A
.text:0000000180006F4D                 mov     rax, [rcx]
.text:0000000180006F50                 call    qword ptr [rax+10h]
.text:0000000180006F53                 test    rax, rax
.text:0000000180006F56                 jz      short loc_180006F6A
.text:0000000180006F58                 mov     r8, [rax]
.text:0000000180006F5B                 mov     edx, 1
.text:0000000180006F60                 mov     rcx, rax
.text:0000000180006F63                 add     rsp, 28h
.text:0000000180006F67                 jmp     qword ptr [r8]
.text:0000000180006F6A ; ---------------------------------------------------------------------------
.text:0000000180006F6A
.text:0000000180006F6A loc_180006F6A:                          ; CODE XREF: sub_180006F40+B↑j
.text:0000000180006F6A                                         ; sub_180006F40+16↑j
.text:0000000180006F6A                 add     rsp, 28h
.text:0000000180006F6E                 retn
.text:0000000180006F6E sub_180006F40   endp
.text:0000000180006F6E
.text:0000000180006F6E ; ---------------------------------------------------------------------------
.text:0000000180006F6F algn_180006F6F:                         ; DATA XREF: .pdata:000000018001C600↓o
.text:0000000180006F6F                 align 10h
.text:0000000180006F70
.text:0000000180006F70 ; =============== S U B R O U T I N E =======================================
.text:0000000180006F70
.text:0000000180006F70
.text:0000000180006F70 sub_180006F70   proc near               ; CODE XREF: sub_1800096C0+16↓p
.text:0000000180006F70                                         ; sub_180011440+7↓j
.text:0000000180006F70                                         ; DATA XREF: ...
.text:0000000180006F70
.text:0000000180006F70 arg_0           = qword ptr  8
.text:0000000180006F70
.text:0000000180006F70 ; FUNCTION CHUNK AT .text:00000001800111E6 SIZE 00000006 BYTES
.text:0000000180006F70
.text:0000000180006F70 ; __unwind { // __CxxFrameHandler4
.text:0000000180006F70                 mov     [rsp+arg_0], rbx
.text:0000000180006F75                 push    rdi
.text:0000000180006F76                 sub     rsp, 20h
.text:0000000180006F7A                 lea     rdi, [rcx+0A8h]
.text:0000000180006F81                 mov     rax, [rcx]
.text:0000000180006F84                 movsxd  rdx, dword ptr [rax+4]
.text:0000000180006F88                 lea     rax, off_180013A98
.text:0000000180006F8F                 mov     [rdx+rdi-0A8h], rax
.text:0000000180006F97                 mov     rax, [rcx]
.text:0000000180006F9A                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180006F9E                 lea     edx, [rcx-0A8h]
.text:0000000180006FA4                 mov     [rcx+rdi-0ACh], edx
.text:0000000180006FAB                 lea     rbx, [rdi-0A0h]
.text:0000000180006FB2                 lea     rax, off_180013A10
.text:0000000180006FB9                 mov     [rbx], rax
.text:0000000180006FBC                 cmp     qword ptr [rbx+80h], 0
.text:0000000180006FC4                 jz      short loc_180006FF5
.text:0000000180006FC6                 mov     rcx, [rbx+18h]
.text:0000000180006FCA                 lea     rax, [rbx+70h]
.text:0000000180006FCE                 cmp     [rcx], rax
.text:0000000180006FD1                 jnz     short loc_180006FF5
.text:0000000180006FD3                 mov     r8, [rbx+90h]
.text:0000000180006FDA                 mov     rdx, [rbx+88h]
.text:0000000180006FE1                 mov     [rcx], rdx
.text:0000000180006FE4                 mov     rax, [rbx+38h]
.text:0000000180006FE8                 mov     [rax], rdx
.text:0000000180006FEB                 sub     r8d, edx
.text:0000000180006FEE                 mov     rax, [rbx+50h]
.text:0000000180006FF2                 mov     [rax], r8d
.text:0000000180006FF5
.text:0000000180006FF5 loc_180006FF5:                          ; CODE XREF: sub_180006F70+54↑j
.text:0000000180006FF5                                         ; sub_180006F70+61↑j
.text:0000000180006FF5                 cmp     byte ptr [rbx+7Ch], 0
.text:0000000180006FF9                 jz      short loc_180007003
.text:0000000180006FFB                 mov     rcx, rbx
.text:0000000180006FFE                 call    sub_180009830
.text:0000000180007003
.text:0000000180007003 loc_180007003:                          ; CODE XREF: sub_180006F70+89↑j
.text:0000000180007003                 mov     rcx, rbx
.text:0000000180007006                 call    cs:__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_streambuf<char,std::char_traits<char>>::~basic_streambuf<char,std::char_traits<char>>(void)
.text:000000018000700C                 nop
.text:000000018000700D                 lea     rcx, [rdi-98h]
.text:0000000180007014                 call    cs:??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ostream<char,std::char_traits<char>>::~basic_ostream<char,std::char_traits<char>>(void)
.text:000000018000701A                 mov     rcx, rdi
.text:000000018000701D                 mov     rbx, [rsp+28h+arg_0]
.text:0000000180007022                 add     rsp, 20h
.text:0000000180007026                 pop     rdi
.text:0000000180007027                 jmp     cs:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ios<char,std::char_traits<char>>::~basic_ios<char,std::char_traits<char>>(void)
.text:0000000180007027 ; } // starts at 180006F70
.text:0000000180007027 sub_180006F70   endp
.text:0000000180007027
.text:0000000180007027 ; ---------------------------------------------------------------------------
.text:000000018000702E algn_18000702E:                         ; DATA XREF: .pdata:000000018001C60C↓o
.text:000000018000702E                 align 10h
.text:0000000180007030
.text:0000000180007030 ; =============== S U B R O U T I N E =======================================
.text:0000000180007030
.text:0000000180007030 ; Attributes: bp-based frame fpd=57h
.text:0000000180007030
.text:0000000180007030 sub_180007030   proc near               ; CODE XREF: fsuipcw_init+92↑p
.text:0000000180007030                                         ; DATA XREF: .pdata:000000018001C618↓o
.text:0000000180007030
.text:0000000180007030 Size            = qword ptr -0D0h
.text:0000000180007030 Block           = qword ptr -0B8h
.text:0000000180007030 var_A8          = xmmword ptr -0A8h
.text:0000000180007030 var_98          = qword ptr -98h
.text:0000000180007030 var_90          = qword ptr -90h
.text:0000000180007030 var_78          = qword ptr -78h
.text:0000000180007030 FileName        = qword ptr -70h
.text:0000000180007030 var_58          = qword ptr -58h
.text:0000000180007030 var_50          = qword ptr -50h
.text:0000000180007030 var_20          = byte ptr -20h
.text:0000000180007030
.text:0000000180007030 ; FUNCTION CHUNK AT .text:000000018001144C SIZE 00000013 BYTES
.text:0000000180007030
.text:0000000180007030 ; __unwind { // __GSHandlerCheck_EH4
.text:0000000180007030                 mov     rax, rsp
.text:0000000180007033                 mov     [rax+18h], rbx
.text:0000000180007037                 push    rbp
.text:0000000180007038                 push    rsi
.text:0000000180007039                 push    rdi
.text:000000018000703A                 push    r14
.text:000000018000703C                 push    r15
.text:000000018000703E                 lea     rbp, [rax-5Fh]
.text:0000000180007042                 sub     rsp, 0D0h
.text:0000000180007049                 movaps  xmmword ptr [rax-38h], xmm6
.text:000000018000704D                 movaps  xmmword ptr [rax-48h], xmm7
.text:0000000180007051                 mov     rax, cs:__security_cookie
.text:0000000180007058                 xor     rax, rsp
.text:000000018000705B                 mov     [rbp+57h+var_50], rax
.text:000000018000705F                 mov     rbx, rdx
.text:0000000180007062                 mov     r14, rcx
.text:0000000180007065                 mov     [rbp+57h+var_98], rcx
.text:0000000180007069                 xor     r15d, r15d
.text:000000018000706C                 call    sub_180009480
.text:0000000180007071                 nop
.text:0000000180007072                 mov     dword ptr [r14+108h], 2
.text:000000018000707D                 mov     dword ptr [r14+10Ch], 2
.text:0000000180007088                 lea     rdi, [r14+110h]
.text:000000018000708F                 xorps   xmm0, xmm0
.text:0000000180007092                 movups  xmmword ptr [rdi], xmm0
.text:0000000180007095                 mov     [rdi+10h], r15
.text:0000000180007099                 mov     qword ptr [rdi+18h], 0Fh
.text:00000001800070A1                 mov     [rdi], r15b
.text:00000001800070A4                 lea     rcx, [r14+138h] ; lpCriticalSection
.text:00000001800070AB                 call    cs:InitializeCriticalSection
.text:00000001800070B1                 test    rbx, rbx
.text:00000001800070B4                 jnz     short loc_1800070BE
.text:00000001800070B6                 lea     eax, [rbx+2]
.text:00000001800070B9                 jmp     loc_1800073DA
.text:00000001800070BE ; ---------------------------------------------------------------------------
.text:00000001800070BE
.text:00000001800070BE loc_1800070BE:                          ; CODE XREF: sub_180007030+84↑j
.text:00000001800070BE                 mov     rdx, rbx
.text:00000001800070C1                 lea     rcx, [rbp+57h+FileName]
.text:00000001800070C5                 call    sub_180005650
.text:00000001800070CA                 mov     rcx, rax        ; Src
.text:00000001800070CD                 mov     rdx, [rax+10h]
.text:00000001800070D1                 mov     r8, [rax+18h]
.text:00000001800070D5                 mov     rax, r8
.text:00000001800070D8                 sub     rax, rdx
.text:00000001800070DB                 cmp     rax, 4
.text:00000001800070DF                 jb      short loc_180007103
.text:00000001800070E1                 lea     rax, [rdx+4]
.text:00000001800070E5                 mov     [rcx+10h], rax
.text:00000001800070E9                 mov     rax, rcx
.text:00000001800070EC                 cmp     r8, 10h
.text:00000001800070F0                 jb      short loc_1800070F5
.text:00000001800070F2                 mov     rax, [rcx]
.text:00000001800070F5
.text:00000001800070F5 loc_1800070F5:                          ; CODE XREF: sub_180007030+C0↑j
.text:00000001800070F5                 mov     dword ptr [rax+rdx], 676F6C2Eh
.text:00000001800070FC                 mov     byte ptr [rax+rdx+4], 0
.text:0000000180007101                 jmp     short loc_180007120
.text:0000000180007103 ; ---------------------------------------------------------------------------
.text:0000000180007103
.text:0000000180007103 loc_180007103:                          ; CODE XREF: sub_180007030+AF↑j
.text:0000000180007103                 mov     [rsp+0F0h+Size], 4 ; Size
.text:000000018000710C                 lea     r9, aLog        ; ".log"
.text:0000000180007113                 mov     edx, 4
.text:0000000180007118 ;   try {
.text:0000000180007118                 call    sub_18000A340
.text:000000018000711D                 mov     rcx, rax
.text:0000000180007120
.text:0000000180007120 loc_180007120:                          ; CODE XREF: sub_180007030+D1↑j
.text:0000000180007120                 movups  xmm6, xmmword ptr [rcx]
.text:0000000180007123                 movups  xmmword ptr [rbp+57h+Block], xmm6
.text:0000000180007127                 movups  xmm7, xmmword ptr [rcx+10h]
.text:000000018000712B                 movups  [rbp+57h+var_A8], xmm7
.text:000000018000712F                 mov     [rcx+10h], r15
.text:0000000180007133                 mov     qword ptr [rcx+18h], 0Fh
.text:000000018000713B                 mov     byte ptr [rcx], 0
.text:000000018000713E                 lea     rax, [rbp+57h+Block]
.text:0000000180007142                 cmp     rdi, rax
.text:0000000180007145                 jz      short loc_18000719A
.text:0000000180007147                 mov     rdx, [rdi+18h]
.text:000000018000714B                 cmp     rdx, 10h
.text:000000018000714F                 jb      short loc_18000717D
.text:0000000180007151                 mov     rcx, [rdi]
.text:0000000180007154                 inc     rdx
.text:0000000180007157                 cmp     rdx, 1000h
.text:000000018000715E                 jb      short loc_180007178
.text:0000000180007160                 add     rdx, 27h ; '''
.text:0000000180007164                 mov     r8, [rcx-8]
.text:0000000180007168                 sub     rcx, r8
.text:000000018000716B                 lea     rax, [rcx-8]
.text:000000018000716F                 cmp     rax, 1Fh
.text:0000000180007173                 ja      short loc_1800071CC
.text:0000000180007175                 mov     rcx, r8         ; Block
.text:0000000180007178
.text:0000000180007178 loc_180007178:                          ; CODE XREF: sub_180007030+12E↑j
.text:0000000180007178                 call    j_j_free
.text:000000018000717D
.text:000000018000717D loc_18000717D:                          ; CODE XREF: sub_180007030+11F↑j
.text:000000018000717D                 mov     qword ptr [rdi+18h], 0Fh
.text:0000000180007185                 mov     byte ptr [rdi], 0
.text:0000000180007188                 movups  xmmword ptr [rdi], xmm6
.text:000000018000718B                 movups  xmmword ptr [rdi+10h], xmm7
.text:000000018000718F                 mov     edx, 0Fh
.text:0000000180007194                 mov     byte ptr [rbp+57h+Block], 0
.text:0000000180007198                 jmp     short loc_18000719E
.text:000000018000719A ; ---------------------------------------------------------------------------
.text:000000018000719A
.text:000000018000719A loc_18000719A:                          ; CODE XREF: sub_180007030+115↑j
.text:000000018000719A                 mov     rdx, qword ptr [rbp+57h+var_A8+8]
.text:000000018000719E
.text:000000018000719E loc_18000719E:                          ; CODE XREF: sub_180007030+168↑j
.text:000000018000719E                 cmp     rdx, 10h
.text:00000001800071A2                 jb      short loc_1800071D9
.text:00000001800071A4                 inc     rdx
.text:00000001800071A7                 mov     rcx, [rbp+57h+Block] ; Block
.text:00000001800071AB                 mov     rax, rcx
.text:00000001800071AE                 cmp     rdx, 1000h
.text:00000001800071B5                 jb      short loc_1800071D3
.text:00000001800071B7                 add     rdx, 27h ; '''
.text:00000001800071BB                 mov     rcx, [rcx-8]
.text:00000001800071BF                 sub     rax, rcx
.text:00000001800071C2                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:00000001800071C6                 cmp     rax, 1Fh
.text:00000001800071CA                 jbe     short loc_1800071D3
.text:00000001800071CC
.text:00000001800071CC loc_1800071CC:                          ; CODE XREF: sub_180007030+143↑j
.text:00000001800071CC                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800071D2                 int     3               ; Trap to Debugger
.text:00000001800071D3 ; ---------------------------------------------------------------------------
.text:00000001800071D3
.text:00000001800071D3 loc_1800071D3:                          ; CODE XREF: sub_180007030+185↑j
.text:00000001800071D3                                         ; sub_180007030+19A↑j
.text:00000001800071D3                 call    j_j_free
.text:00000001800071D8                 nop
.text:00000001800071D9
.text:00000001800071D9 loc_1800071D9:                          ; CODE XREF: sub_180007030+172↑j
.text:00000001800071D9                 mov     rdx, [rbp+57h+var_58]
.text:00000001800071DD                 cmp     rdx, 10h
.text:00000001800071E1                 jb      short loc_180007217
.text:00000001800071E3                 inc     rdx
.text:00000001800071E6                 mov     rcx, [rbp+57h+FileName] ; Block
.text:00000001800071EA                 mov     rax, rcx
.text:00000001800071ED                 cmp     rdx, 1000h
.text:00000001800071F4                 jb      short loc_180007212
.text:00000001800071F6                 add     rdx, 27h ; '''
.text:00000001800071FA                 mov     rcx, [rcx-8]
.text:00000001800071FE                 sub     rax, rcx
.text:0000000180007201                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180007205                 cmp     rax, 1Fh
.text:0000000180007209                 jbe     short loc_180007212
.text:000000018000720B                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180007211                 int     3               ; Trap to Debugger
.text:0000000180007212 ; ---------------------------------------------------------------------------
.text:0000000180007212
.text:0000000180007212 loc_180007212:                          ; CODE XREF: sub_180007030+1C4↑j
.text:0000000180007212                                         ; sub_180007030+1D9↑j
.text:0000000180007212                 call    j_j_free
.text:0000000180007217
.text:0000000180007217 loc_180007217:                          ; CODE XREF: sub_180007030+1B1↑j
.text:0000000180007217                 mov     rcx, rdi
.text:000000018000721A                 cmp     qword ptr [rdi+18h], 10h
.text:000000018000721F                 jb      short loc_180007224
.text:0000000180007221                 mov     rcx, [rdi]      ; FileName
.text:0000000180007224
.text:0000000180007224 loc_180007224:                          ; CODE XREF: sub_180007030+1EF↑j
.text:0000000180007224                 lea     rdx, Mode       ; "r"
.text:000000018000722B                 call    cs:fopen
.text:0000000180007231                 test    rax, rax
.text:0000000180007234                 jz      loc_1800073C0
.text:000000018000723A                 mov     rcx, rax        ; Stream
.text:000000018000723D                 call    cs:fclose
.text:0000000180007243                 mov     rdx, rbx
.text:0000000180007246                 lea     rcx, [rbp+57h+var_90]
.text:0000000180007246 ;   } // starts at 180007118
.text:000000018000724A                 call    sub_180005650
.text:000000018000724F                 mov     rsi, rax
.text:0000000180007252                 mov     rcx, [rax+10h]
.text:0000000180007256                 mov     rdx, [rax+18h]
.text:000000018000725A                 mov     rax, rdx
.text:000000018000725D                 sub     rax, rcx
.text:0000000180007260                 cmp     rax, 9
.text:0000000180007264                 jb      short loc_180007299
.text:0000000180007266                 lea     rax, [rcx+9]
.text:000000018000726A                 mov     [rsi+10h], rax
.text:000000018000726E                 mov     rax, rsi
.text:0000000180007271                 cmp     rdx, 10h
.text:0000000180007275                 jb      short loc_18000727A
.text:0000000180007277                 mov     rax, [rsi]
.text:000000018000727A
.text:000000018000727A loc_18000727A:                          ; CODE XREF: sub_180007030+245↑j
.text:000000018000727A                 lea     rbx, [rax+rcx]
.text:000000018000727E                 mov     r8d, 9          ; Size
.text:0000000180007284                 lea     rdx, aPrevLog   ; "_prev.log"
.text:000000018000728B                 mov     rcx, rbx        ; void *
.text:000000018000728E                 call    memmove
.text:0000000180007293                 mov     byte ptr [rbx+9], 0
.text:0000000180007297                 jmp     short loc_1800072B9
.text:0000000180007299 ; ---------------------------------------------------------------------------
.text:0000000180007299
.text:0000000180007299 loc_180007299:                          ; CODE XREF: sub_180007030+234↑j
.text:0000000180007299                 mov     [rsp+0F0h+Size], 9 ; Size
.text:00000001800072A2                 lea     r9, aPrevLog    ; "_prev.log"
.text:00000001800072A9                 mov     edx, 9
.text:00000001800072AE                 mov     rcx, rsi        ; Src
.text:00000001800072B1 ;   try {
.text:00000001800072B1                 call    sub_18000A340
.text:00000001800072B6                 mov     rsi, rax
.text:00000001800072B9
.text:00000001800072B9 loc_1800072B9:                          ; CODE XREF: sub_180007030+267↑j
.text:00000001800072B9                 xorps   xmm0, xmm0
.text:00000001800072BC                 movups  xmmword ptr [rbp+57h+FileName], xmm0
.text:00000001800072C0                 xorps   xmm1, xmm1
.text:00000001800072C3                 movdqu  xmmword ptr [rbp-9], xmm1
.text:00000001800072C8                 movups  xmm0, xmmword ptr [rsi]
.text:00000001800072CB                 movups  xmmword ptr [rbp+57h+FileName], xmm0
.text:00000001800072CF                 movups  xmm1, xmmword ptr [rsi+10h]
.text:00000001800072D3                 movups  xmmword ptr [rbp-9], xmm1
.text:00000001800072D7                 mov     [rsi+10h], r15
.text:00000001800072DB                 mov     qword ptr [rsi+18h], 0Fh
.text:00000001800072E3                 mov     byte ptr [rsi], 0
.text:00000001800072E6                 mov     rdx, [rbp+57h+var_78]
.text:00000001800072EA                 cmp     rdx, 10h
.text:00000001800072EE                 jb      short loc_180007324
.text:00000001800072F0                 inc     rdx
.text:00000001800072F3                 mov     rcx, [rbp+57h+var_90] ; Block
.text:00000001800072F7                 mov     rax, rcx
.text:00000001800072FA                 cmp     rdx, 1000h
.text:0000000180007301                 jb      short loc_18000731F
.text:0000000180007303                 add     rdx, 27h ; '''
.text:0000000180007307                 mov     rcx, [rcx-8]
.text:000000018000730B                 sub     rax, rcx
.text:000000018000730E                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180007312                 cmp     rax, 1Fh
.text:0000000180007316                 jbe     short loc_18000731F
.text:0000000180007318                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000731E                 int     3               ; Trap to Debugger
.text:000000018000731F ; ---------------------------------------------------------------------------
.text:000000018000731F
.text:000000018000731F loc_18000731F:                          ; CODE XREF: sub_180007030+2D1↑j
.text:000000018000731F                                         ; sub_180007030+2E6↑j
.text:000000018000731F                 call    j_j_free
.text:0000000180007324
.text:0000000180007324 loc_180007324:                          ; CODE XREF: sub_180007030+2BE↑j
.text:0000000180007324                 lea     rcx, [rbp+57h+FileName]
.text:0000000180007328                 cmp     [rbp+57h+var_58], 10h
.text:000000018000732D                 cmovnb  rcx, [rbp+57h+FileName] ; FileName
.text:0000000180007332                 lea     rdx, Mode       ; "r"
.text:0000000180007339                 call    cs:fopen
.text:000000018000733F                 test    rax, rax
.text:0000000180007342                 jz      short loc_180007361
.text:0000000180007344                 mov     rcx, rax        ; Stream
.text:0000000180007347                 call    cs:fclose
.text:000000018000734D                 lea     rcx, [rbp+57h+FileName]
.text:0000000180007351                 cmp     [rbp+57h+var_58], 10h
.text:0000000180007356                 cmovnb  rcx, [rbp+57h+FileName] ; FileName
.text:000000018000735B                 call    cs:remove
.text:0000000180007361
.text:0000000180007361 loc_180007361:                          ; CODE XREF: sub_180007030+312↑j
.text:0000000180007361                 lea     rdx, [rbp+57h+FileName]
.text:0000000180007365                 cmp     [rbp+57h+var_58], 10h
.text:000000018000736A                 cmovnb  rdx, [rbp+57h+FileName] ; NewFilename
.text:000000018000736F                 mov     rcx, rdi
.text:0000000180007372                 cmp     qword ptr [rdi+18h], 10h
.text:0000000180007377                 jb      short loc_18000737C
.text:0000000180007379                 mov     rcx, [rdi]      ; OldFilename
.text:000000018000737C
.text:000000018000737C loc_18000737C:                          ; CODE XREF: sub_180007030+347↑j
.text:000000018000737C                 call    cs:rename
.text:0000000180007382                 mov     rdx, [rbp+57h+var_58]
.text:0000000180007386                 cmp     rdx, 10h
.text:000000018000738A                 jb      short loc_1800073C0
.text:000000018000738C                 inc     rdx
.text:000000018000738F                 mov     rcx, [rbp+57h+FileName] ; Block
.text:0000000180007393                 mov     rax, rcx
.text:0000000180007396                 cmp     rdx, 1000h
.text:000000018000739D                 jb      short loc_1800073BB
.text:000000018000739F                 add     rdx, 27h ; '''
.text:00000001800073A3                 mov     rcx, [rcx-8]
.text:00000001800073A7                 sub     rax, rcx
.text:00000001800073AA                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:00000001800073AE                 cmp     rax, 1Fh
.text:00000001800073B2                 jbe     short loc_1800073BB
.text:00000001800073B4                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800073BA                 int     3               ; Trap to Debugger
.text:00000001800073BB ; ---------------------------------------------------------------------------
.text:00000001800073BB
.text:00000001800073BB loc_1800073BB:                          ; CODE XREF: sub_180007030+36D↑j
.text:00000001800073BB                                         ; sub_180007030+382↑j
.text:00000001800073BB                 call    j_j_free
.text:00000001800073C0
.text:00000001800073C0 loc_1800073C0:                          ; CODE XREF: sub_180007030+204↑j
.text:00000001800073C0                                         ; sub_180007030+35A↑j
.text:00000001800073C0                 cmp     qword ptr [rdi+18h], 10h
.text:00000001800073C5                 jb      short loc_1800073CA
.text:00000001800073C7                 mov     rdi, [rdi]
.text:00000001800073CA
.text:00000001800073CA loc_1800073CA:                          ; CODE XREF: sub_180007030+395↑j
.text:00000001800073CA                 mov     rdx, rdi
.text:00000001800073CD                 mov     rcx, r14
.text:00000001800073CD ;   } // starts at 1800072B1
.text:00000001800073D0                 call    sub_180009300
.text:00000001800073D5                 mov     eax, 3
.text:00000001800073DA
.text:00000001800073DA loc_1800073DA:                          ; CODE XREF: sub_180007030+89↑j
.text:00000001800073DA                 mov     dword ptr [r14+108h], 2
.text:00000001800073E5                 mov     [r14+10Ch], eax
.text:00000001800073EC                 mov     [r14+130h], r15
.text:00000001800073F3                 mov     rax, r14
.text:00000001800073F6                 mov     rcx, [rbp+57h+var_50]
.text:00000001800073FA                 xor     rcx, rsp        ; StackCookie
.text:00000001800073FD                 call    __security_check_cookie
.text:0000000180007402                 lea     r11, [rsp+0F0h+var_20]
.text:000000018000740A                 mov     rbx, [r11+40h]
.text:000000018000740E                 movaps  xmm6, xmmword ptr [r11-10h]
.text:0000000180007413                 movaps  xmm7, xmmword ptr [r11-20h]
.text:0000000180007418                 mov     rsp, r11
.text:000000018000741B                 pop     r15
.text:000000018000741D                 pop     r14
.text:000000018000741F                 pop     rdi
.text:0000000180007420                 pop     rsi
.text:0000000180007421                 pop     rbp
.text:0000000180007422                 retn
.text:0000000180007422 ; } // starts at 180007030
.text:0000000180007422 sub_180007030   endp
.text:0000000180007422
.text:0000000180007422 ; ---------------------------------------------------------------------------
.text:0000000180007423 algn_180007423:                         ; DATA XREF: .pdata:000000018001C618↓o
.text:0000000180007423                 align 10h
.text:0000000180007430
.text:0000000180007430 ; =============== S U B R O U T I N E =======================================
.text:0000000180007430
.text:0000000180007430
.text:0000000180007430 sub_180007430   proc near               ; CODE XREF: fsuipcw_start+3E↑p
.text:0000000180007430                                         ; fsuipcw_start+86↑p ...
.text:0000000180007430
.text:0000000180007430 var_8           = qword ptr -8
.text:0000000180007430
.text:0000000180007430                 sub     rsp, 28h
.text:0000000180007434                 mov     rax, cs:qword_180019AE0
.text:000000018000743B                 test    rax, rax
.text:000000018000743E                 jnz     loc_1800074E4
.text:0000000180007444                 mov     ecx, 160h       ; Size
.text:0000000180007449
.text:0000000180007449 loc_180007449:                          ; DATA XREF: .rdata:000000018001554C↓o
.text:0000000180007449                                         ; .rdata:000000018001555C↓o ...
.text:0000000180007449                 mov     [rsp+28h+var_8], rbx
.text:000000018000744E                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180007453                 xor     edx, edx        ; Val
.text:0000000180007455                 mov     r8d, 160h       ; Size
.text:000000018000745B                 mov     rcx, rax        ; void *
.text:000000018000745E                 mov     rbx, rax
.text:0000000180007461                 call    memset
.text:0000000180007466                 mov     rcx, rbx
.text:0000000180007469                 call    sub_180009480
.text:000000018000746E                 mov     dword ptr [rbx+108h], 2
.text:0000000180007478                 lea     rcx, [rbx+138h] ; lpCriticalSection
.text:000000018000747F                 mov     dword ptr [rbx+10Ch], 2
.text:0000000180007489                 xorps   xmm0, xmm0
.text:000000018000748C                 movups  xmmword ptr [rbx+110h], xmm0
.text:0000000180007493                 mov     qword ptr [rbx+120h], 0
.text:000000018000749E                 mov     qword ptr [rbx+128h], 0Fh
.text:00000001800074A9                 mov     byte ptr [rbx+110h], 0
.text:00000001800074B0                 call    cs:InitializeCriticalSection
.text:00000001800074B6                 mov     rax, rbx
.text:00000001800074B9                 mov     dword ptr [rbx+108h], 2
.text:00000001800074C3                 mov     dword ptr [rbx+10Ch], 2
.text:00000001800074CD                 mov     qword ptr [rbx+130h], 0
.text:00000001800074D8                 mov     cs:qword_180019AE0, rbx
.text:00000001800074DF                 mov     rbx, [rsp+28h+var_8]
.text:00000001800074E4
.text:00000001800074E4 loc_1800074E4:                          ; CODE XREF: sub_180007430+E↑j
.text:00000001800074E4                                         ; DATA XREF: .pdata:000000018001C630↓o ...
.text:00000001800074E4                 add     rsp, 28h
.text:00000001800074E8                 retn
.text:00000001800074E8 sub_180007430   endp
.text:00000001800074E8
.text:00000001800074E8 ; ---------------------------------------------------------------------------
.text:00000001800074E9 algn_1800074E9:                         ; DATA XREF: .pdata:000000018001C63C↓o
.text:00000001800074E9                 align 10h
.text:00000001800074F0
.text:00000001800074F0 ; =============== S U B R O U T I N E =======================================
.text:00000001800074F0
.text:00000001800074F0
.text:00000001800074F0 sub_1800074F0   proc near               ; CODE XREF: sub_180007930+E9↓p
.text:00000001800074F0                                         ; sub_180007B30+F2↓p ...
.text:00000001800074F0
.text:00000001800074F0 Block           = qword ptr -28h
.text:00000001800074F0 var_10          = qword ptr -10h
.text:00000001800074F0 arg_10          = qword ptr  18h
.text:00000001800074F0 arg_18          = qword ptr  20h
.text:00000001800074F0
.text:00000001800074F0 ; __unwind { // __CxxFrameHandler4
.text:00000001800074F0                 mov     [rsp+arg_10], rbx
.text:00000001800074F5                 mov     [rsp+arg_18], rsi
.text:00000001800074FA                 push    rdi
.text:00000001800074FB                 sub     rsp, 40h
.text:00000001800074FF                 mov     rbx, rdx
.text:0000000180007502                 mov     rsi, rcx
.text:0000000180007505                 cmp     qword ptr [rcx+130h], 0
.text:000000018000750D                 jz      short loc_180007534
.text:000000018000750F                 add     rcx, 138h       ; lpCriticalSection
.text:0000000180007516                 call    cs:EnterCriticalSection
.text:000000018000751C                 cmp     qword ptr [rbx+18h], 10h
.text:0000000180007521                 jb      short loc_180007526
.text:0000000180007523                 mov     rbx, [rbx]
.text:0000000180007526
.text:0000000180007526 loc_180007526:                          ; CODE XREF: sub_1800074F0+31↑j
.text:0000000180007526                 mov     rcx, rbx
.text:0000000180007529                 call    qword ptr [rsi+130h]
.text:000000018000752F                 jmp     loc_1800075D7
.text:0000000180007534 ; ---------------------------------------------------------------------------
.text:0000000180007534
.text:0000000180007534 loc_180007534:                          ; CODE XREF: sub_1800074F0+1D↑j
.text:0000000180007534                 add     rcx, 138h       ; lpCriticalSection
.text:000000018000753B                 call    cs:EnterCriticalSection
.text:0000000180007541                 lea     rdx, [rsp+48h+Block]
.text:0000000180007546                 call    sub_180007600
.text:000000018000754B                 nop
.text:000000018000754C                 mov     rdx, rax
.text:000000018000754F                 cmp     qword ptr [rax+18h], 10h
.text:0000000180007554                 jb      short loc_180007559
.text:0000000180007556                 mov     rdx, [rax]
.text:0000000180007559
.text:0000000180007559 loc_180007559:                          ; CODE XREF: sub_1800074F0+64↑j
.text:0000000180007559                 mov     r8, [rax+10h]
.text:000000018000755D                 mov     rcx, rsi
.text:0000000180007560                 call    sub_18000A4F0
.text:0000000180007565                 mov     rcx, rax
.text:0000000180007568                 call    sub_180009A90
.text:000000018000756D                 mov     rdx, rbx
.text:0000000180007570                 cmp     qword ptr [rbx+18h], 10h
.text:0000000180007575                 jb      short loc_18000757A
.text:0000000180007577                 mov     rdx, [rbx]
.text:000000018000757A
.text:000000018000757A loc_18000757A:                          ; CODE XREF: sub_1800074F0+85↑j
.text:000000018000757A                 mov     r8, [rbx+10h]
.text:000000018000757E                 mov     rcx, rax
.text:0000000180007581                 call    sub_18000A4F0
.text:0000000180007586                 mov     rcx, rax
.text:0000000180007589                 lea     rdx, sub_180009C40
.text:0000000180007590                 call    cs:??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char>>::operator<<(std::basic_ostream<char,std::char_traits<char>> & (*)(std::basic_ostream<char,std::char_traits<char>> &))
.text:0000000180007596                 nop
.text:0000000180007597                 mov     rdx, [rsp+48h+var_10]
.text:000000018000759C                 cmp     rdx, 10h
.text:00000001800075A0                 jb      short loc_1800075D7
.text:00000001800075A2                 inc     rdx
.text:00000001800075A5                 mov     rcx, [rsp+48h+Block] ; Block
.text:00000001800075AA                 mov     rax, rcx
.text:00000001800075AD                 cmp     rdx, 1000h
.text:00000001800075B4                 jb      short loc_1800075D2
.text:00000001800075B6                 add     rdx, 27h ; '''
.text:00000001800075BA                 mov     rcx, [rcx-8]
.text:00000001800075BE                 sub     rax, rcx
.text:00000001800075C1                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:00000001800075C5                 cmp     rax, 1Fh
.text:00000001800075C9                 jbe     short loc_1800075D2
.text:00000001800075CB                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800075D1                 int     3               ; Trap to Debugger
.text:00000001800075D2 ; ---------------------------------------------------------------------------
.text:00000001800075D2
.text:00000001800075D2 loc_1800075D2:                          ; CODE XREF: sub_1800074F0+C4↑j
.text:00000001800075D2                                         ; sub_1800074F0+D9↑j
.text:00000001800075D2                 call    j_j_free
.text:00000001800075D7
.text:00000001800075D7 loc_1800075D7:                          ; CODE XREF: sub_1800074F0+3F↑j
.text:00000001800075D7                                         ; sub_1800074F0+B0↑j
.text:00000001800075D7                 lea     rcx, [rsi+138h]
.text:00000001800075DE                 mov     rbx, [rsp+48h+arg_10]
.text:00000001800075E3                 mov     rsi, [rsp+48h+arg_18]
.text:00000001800075E8                 add     rsp, 40h
.text:00000001800075EC                 pop     rdi
.text:00000001800075ED                 jmp     cs:LeaveCriticalSection
.text:00000001800075ED ; } // starts at 1800074F0
.text:00000001800075ED sub_1800074F0   endp
.text:00000001800075ED
.text:00000001800075ED ; ---------------------------------------------------------------------------
.text:00000001800075F4 algn_1800075F4:                         ; DATA XREF: .pdata:000000018001C648↓o
.text:00000001800075F4                 align 20h
.text:0000000180007600
.text:0000000180007600 ; =============== S U B R O U T I N E =======================================
.text:0000000180007600
.text:0000000180007600 ; Attributes: bp-based frame fpd=80h
.text:0000000180007600
.text:0000000180007600 sub_180007600   proc near               ; CODE XREF: sub_1800074F0+56↑p
.text:0000000180007600                                         ; sub_180007930+10F↓p ...
.text:0000000180007600
.text:0000000180007600 var_160         = dword ptr -160h
.text:0000000180007600 Src             = qword ptr -158h
.text:0000000180007600 var_148         = qword ptr -148h
.text:0000000180007600 var_140         = qword ptr -140h
.text:0000000180007600 var_138         = byte ptr -138h
.text:0000000180007600 Time            = qword ptr -128h
.text:0000000180007600 var_120         = qword ptr -120h
.text:0000000180007600 var_110         = qword ptr -110h
.text:0000000180007600 var_108         = qword ptr -108h
.text:0000000180007600 var_100         = byte ptr -100h
.text:0000000180007600 var_F0          = qword ptr -0F0h
.text:0000000180007600 var_E8          = qword ptr -0E8h
.text:0000000180007600 var_D0          = qword ptr -0D0h
.text:0000000180007600 var_C8          = qword ptr -0C8h
.text:0000000180007600 var_B8          = qword ptr -0B8h
.text:0000000180007600 var_A0          = qword ptr -0A0h
.text:0000000180007600 var_98          = dword ptr -98h
.text:0000000180007600 var_88          = byte ptr -88h
.text:0000000180007600 var_60          = dword ptr -60h
.text:0000000180007600 var_40          = qword ptr -40h
.text:0000000180007600 var_20          = qword ptr -20h
.text:0000000180007600 var_10          = byte ptr -10h
.text:0000000180007600 arg_0           = qword ptr  10h
.text:0000000180007600 arg_10          = qword ptr  20h
.text:0000000180007600 arg_18          = qword ptr  28h
.text:0000000180007600
.text:0000000180007600 ; FUNCTION CHUNK AT .text:0000000180011480 SIZE 00000040 BYTES
.text:0000000180007600 ; FUNCTION CHUNK AT .text:00000001800114CC SIZE 00000026 BYTES
.text:0000000180007600
.text:0000000180007600 ; __unwind { // __GSHandlerCheck_EH4
.text:0000000180007600                 mov     [rsp-8+arg_0], rbx
.text:0000000180007605                 mov     [rsp-8+arg_10], rsi
.text:000000018000760A                 mov     [rsp-8+arg_18], rdi
.text:000000018000760F                 push    rbp
.text:0000000180007610                 push    r14
.text:0000000180007612                 push    r15
.text:0000000180007614                 lea     rbp, [rsp-70h]
.text:0000000180007619                 sub     rsp, 170h
.text:0000000180007620                 mov     rax, cs:__security_cookie
.text:0000000180007627                 xor     rax, rsp
.text:000000018000762A                 mov     [rbp+80h+var_20], rax
.text:000000018000762E                 mov     rdi, rdx
.text:0000000180007631                 mov     [rsp+180h+var_140], rdx
.text:0000000180007636                 xor     r14d, r14d
.text:0000000180007639                 mov     [rsp+180h+var_160], r14d
.text:000000018000763E                 call    cs:_Xtime_get_ticks
.text:0000000180007644                 mov     rcx, rax
.text:0000000180007647                 mov     rax, 0D6BF94D5E57A42BDh
.text:0000000180007651                 imul    rcx
.text:0000000180007654                 add     rdx, rcx
.text:0000000180007657                 sar     rdx, 17h
.text:000000018000765B                 mov     rax, rdx
.text:000000018000765E                 shr     rax, 3Fh
.text:0000000180007662                 add     rdx, rax
.text:0000000180007665                 mov     [rsp+180h+Time], rdx
.text:000000018000766A                 mov     rax, 346DC5D63886594Bh
.text:0000000180007674                 imul    rcx
.text:0000000180007677                 mov     rsi, rdx
.text:000000018000767A                 sar     rsi, 0Bh
.text:000000018000767E                 mov     rax, rsi
.text:0000000180007681                 shr     rax, 3Fh
.text:0000000180007685                 add     rsi, rax
.text:0000000180007688                 mov     rax, 20C49BA5E353F7CFh
.text:0000000180007692                 imul    rsi
.text:0000000180007695                 sar     rdx, 7
.text:0000000180007699                 mov     rax, rdx
.text:000000018000769C                 shr     rax, 3Fh
.text:00000001800076A0                 add     rdx, rax
.text:00000001800076A3                 imul    rax, rdx, 3E8h
.text:00000001800076AA                 sub     rsi, rax
.text:00000001800076AD                 xor     edx, edx        ; Val
.text:00000001800076AF                 mov     r8d, 0F8h       ; Size
.text:00000001800076B5                 lea     rcx, [rsp+180h+var_120] ; void *
.text:00000001800076BA                 call    memset
.text:00000001800076BF                 lea     rax, unk_180013B50
.text:00000001800076C6                 mov     [rsp+180h+var_120], rax
.text:00000001800076CB                 lea     rax, unk_180013A88
.text:00000001800076D2                 mov     [rsp+180h+var_110], rax
.text:00000001800076D7                 lea     rcx, [rbp+80h+var_88]
.text:00000001800076DB                 call    cs:??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ ; std::basic_ios<char,std::char_traits<char>>::basic_ios<char,std::char_traits<char>>(void)
.text:00000001800076E1                 nop
.text:00000001800076E2                 mov     [rsp+180h+var_160], 2
.text:00000001800076EA                 xor     r8d, r8d
.text:00000001800076ED                 lea     rdx, [rsp+180h+var_108]
.text:00000001800076F2                 lea     rcx, [rsp+180h+var_120]
.text:00000001800076F7                 call    cs:??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::basic_iostream<char,std::char_traits<char>>::basic_iostream<char,std::char_traits<char>>(std::basic_streambuf<char,std::char_traits<char>> *)
.text:00000001800076FD                 nop
.text:00000001800076FE                 mov     rax, [rsp+180h+var_120]
.text:0000000180007703                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180007707                 lea     r15, off_180013B48
.text:000000018000770E                 mov     [rsp+rcx+180h+var_120], r15
.text:0000000180007713                 mov     rax, [rsp+180h+var_120]
.text:0000000180007718                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000771C                 lea     edx, [rcx-98h]
.text:0000000180007722                 mov     dword ptr [rsp+rcx+180h+Time+4], edx
.text:0000000180007726                 lea     rcx, [rsp+180h+var_108]
.text:000000018000772B ;   try {
.text:000000018000772B                 call    cs:??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ ; std::basic_streambuf<char,std::char_traits<char>>::basic_streambuf<char,std::char_traits<char>>(void)
.text:0000000180007731                 lea     rax, off_180013AC8
.text:0000000180007738                 mov     [rsp+180h+var_108], rax
.text:000000018000773D                 mov     [rbp+80h+var_A0], r14
.text:0000000180007741                 mov     [rbp+80h+var_98], r14d
.text:0000000180007745                 lea     rcx, [rsp+180h+Time] ; Time
.text:000000018000774A                 call    cs:_localtime64
.text:0000000180007750                 mov     [rsp+180h+Src], rax
.text:0000000180007755                 lea     rax, aABDYT     ; "%a %b %d %Y %T"
.text:000000018000775C                 mov     [rsp+180h+Src+8], rax
.text:0000000180007761                 mov     [rsp+180h+var_148], rax
.text:0000000180007766
.text:0000000180007766 loc_180007766:                          ; CODE XREF: sub_180007600+16C↓j
.text:0000000180007766                 inc     rax
.text:0000000180007769                 cmp     byte ptr [rax], 0
.text:000000018000776C                 jnz     short loc_180007766
.text:000000018000776E                 mov     [rsp+180h+var_148], rax
.text:0000000180007773                 lea     rdx, [rsp+180h+Src]
.text:0000000180007778                 lea     rcx, [rsp+180h+var_110]
.text:0000000180007778 ;   } // starts at 18000772B
.text:000000018000777D ;   try {
.text:000000018000777D                 call    sub_180009C80
.text:0000000180007782                 mov     rcx, rax
.text:0000000180007785                 call    sub_180009F20
.text:000000018000778A                 mov     rbx, rax
.text:000000018000778D                 mov     rax, [rax]
.text:0000000180007790                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180007794                 mov     byte ptr [rcx+rbx+58h], 30h ; '0'
.text:0000000180007799                 mov     edx, 3
.text:000000018000779E                 lea     rcx, [rsp+180h+var_138]
.text:00000001800077A3                 call    cs:?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z ; std::setw(__int64)
.text:00000001800077A9                 mov     r8, rax
.text:00000001800077AC                 mov     rax, [rbx]
.text:00000001800077AF                 movsxd  rcx, dword ptr [rax+4]
.text:00000001800077B3                 add     rcx, rbx
.text:00000001800077B6                 mov     rdx, [r8+8]
.text:00000001800077BA                 call    qword ptr [r8]
.text:00000001800077BD                 mov     rdx, rsi
.text:00000001800077C0                 mov     rcx, rbx
.text:00000001800077C3                 call    cs:??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z ; std::basic_ostream<char,std::char_traits<char>>::operator<<(__int64)
.text:00000001800077C9                 nop
.text:00000001800077C9 ;   } // starts at 18000777D
.text:00000001800077CA ;   try {
.text:00000001800077CA                 xorps   xmm0, xmm0
.text:00000001800077CD                 movups  xmmword ptr [rdi], xmm0
.text:00000001800077D0                 mov     [rdi+10h], r14
.text:00000001800077D4                 mov     qword ptr [rdi+18h], 0Fh
.text:00000001800077DC                 mov     byte ptr [rdi], 0
.text:00000001800077DF                 mov     [rsp+180h+var_160], 0Ah
.text:00000001800077E7                 movups  xmmword ptr [rsp+180h+Src], xmm0
.text:00000001800077EC                 mov     ecx, [rbp+80h+var_98]
.text:00000001800077EF                 mov     eax, ecx
.text:00000001800077F1                 and     al, 22h
.text:00000001800077F3                 cmp     al, 2
.text:00000001800077F5                 jz      short loc_180007818
.text:00000001800077F7                 mov     rax, [rbp+80h+var_C8]
.text:00000001800077FB                 mov     r8, [rax]
.text:00000001800077FE                 test    r8, r8
.text:0000000180007801                 jz      short loc_180007818
.text:0000000180007803                 mov     rax, [rbp+80h+var_E8]
.text:0000000180007807                 mov     rdx, [rax]
.text:000000018000780A                 cmp     r8, [rbp+80h+var_A0]
.text:000000018000780E                 cmovb   r8, [rbp+80h+var_A0]
.text:0000000180007813                 sub     r8, rdx
.text:0000000180007816                 jmp     short loc_180007849
.text:0000000180007818 ; ---------------------------------------------------------------------------
.text:0000000180007818
.text:0000000180007818 loc_180007818:                          ; CODE XREF: sub_180007600+1F5↑j
.text:0000000180007818                                         ; sub_180007600+201↑j
.text:0000000180007818                 test    cl, 4
.text:000000018000781B                 jnz     short loc_18000783F
.text:000000018000781D                 mov     rax, [rbp+80h+var_D0]
.text:0000000180007821                 mov     rcx, [rax]
.text:0000000180007824                 test    rcx, rcx
.text:0000000180007827                 jz      short loc_18000783F
.text:0000000180007829                 mov     rax, [rbp+80h+var_F0]
.text:000000018000782D                 mov     rdx, [rax]
.text:0000000180007830                 mov     rax, [rbp+80h+var_B8]
.text:0000000180007834                 movsxd  r8, dword ptr [rax]
.text:0000000180007837                 sub     r8, rdx
.text:000000018000783A                 add     r8, rcx
.text:000000018000783D                 jmp     short loc_180007849
.text:000000018000783F ; ---------------------------------------------------------------------------
.text:000000018000783F
.text:000000018000783F loc_18000783F:                          ; CODE XREF: sub_180007600+21B↑j
.text:000000018000783F                                         ; sub_180007600+227↑j
.text:000000018000783F                 mov     r8, [rsp+180h+Src+8] ; Size
.text:0000000180007844                 mov     rdx, [rsp+180h+Src] ; Src
.text:0000000180007849
.text:0000000180007849 loc_180007849:                          ; CODE XREF: sub_180007600+216↑j
.text:0000000180007849                                         ; sub_180007600+23D↑j
.text:0000000180007849                 test    rdx, rdx
.text:000000018000784C                 jz      short loc_180007857
.text:000000018000784E                 mov     rcx, rdi        ; void *
.text:0000000180007851                 call    sub_180009910
.text:0000000180007856                 nop
.text:0000000180007856 ;   } // starts at 1800077CA
.text:0000000180007857
.text:0000000180007857 loc_180007857:                          ; CODE XREF: sub_180007600+24C↑j
.text:0000000180007857                 mov     rcx, [rsp+180h+var_120]
.text:000000018000785C                 movsxd  rdx, dword ptr [rcx+4]
.text:0000000180007860                 mov     [rsp+rdx+180h+var_120], r15
.text:0000000180007865                 mov     rcx, [rsp+180h+var_120]
.text:000000018000786A                 movsxd  rdx, dword ptr [rcx+4]
.text:000000018000786E                 lea     r8d, [rdx-98h]
.text:0000000180007875                 mov     dword ptr [rsp+rdx+180h+Time+4], r8d
.text:000000018000787A                 lea     rcx, [rsp+180h+var_108]
.text:000000018000787F                 call    sub_1800086A0
.text:0000000180007884                 lea     rcx, [rbp+80h+var_100]
.text:0000000180007888                 call    cs:??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_iostream<char,std::char_traits<char>>::~basic_iostream<char,std::char_traits<char>>(void)
.text:000000018000788E                 lea     rcx, [rbp+80h+var_88]
.text:0000000180007892                 call    cs:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ios<char,std::char_traits<char>>::~basic_ios<char,std::char_traits<char>>(void)
.text:0000000180007898                 mov     rax, rdi
.text:000000018000789B                 mov     rcx, [rbp+80h+var_20]
.text:000000018000789F                 xor     rcx, rsp        ; StackCookie
.text:00000001800078A2                 call    __security_check_cookie
.text:00000001800078A7                 lea     r11, [rsp+180h+var_10]
.text:00000001800078AF                 mov     rbx, [r11+20h]
.text:00000001800078B3                 mov     rsi, [r11+30h]
.text:00000001800078B7                 mov     rdi, [r11+38h]
.text:00000001800078BB                 mov     rsp, r11
.text:00000001800078BE                 pop     r15
.text:00000001800078C0                 pop     r14
.text:00000001800078C2                 pop     rbp
.text:00000001800078C3                 retn
.text:00000001800078C3 ; } // starts at 180007600
.text:00000001800078C3 sub_180007600   endp
.text:00000001800078C3
.text:00000001800078C3 ; ---------------------------------------------------------------------------
.text:00000001800078C4 algn_1800078C4:                         ; DATA XREF: .pdata:000000018001C654↓o
.text:00000001800078C4                 align 10h
.text:00000001800078D0
.text:00000001800078D0 ; =============== S U B R O U T I N E =======================================
.text:00000001800078D0
.text:00000001800078D0
.text:00000001800078D0 sub_1800078D0   proc near               ; CODE XREF: sub_1800114C0+7↓j
.text:00000001800078D0                                         ; DATA XREF: .rdata:00000001800155CD↓o ...
.text:00000001800078D0                 push    rbx
.text:00000001800078D2                 sub     rsp, 20h
.text:00000001800078D6                 mov     rax, [rcx]
.text:00000001800078D9                 lea     rbx, [rcx+98h]
.text:00000001800078E0                 movsxd  rdx, dword ptr [rax+4]
.text:00000001800078E4                 lea     rax, off_180013B48
.text:00000001800078EB                 mov     [rdx+rbx-98h], rax
.text:00000001800078F3                 mov     rax, [rcx]
.text:00000001800078F6                 lea     rcx, [rbx-80h]
.text:00000001800078FA                 movsxd  rdx, dword ptr [rax+4]
.text:00000001800078FE                 lea     r8d, [rdx-98h]
.text:0000000180007905                 mov     [rdx+rbx-9Ch], r8d
.text:000000018000790D                 call    sub_1800086A0
.text:0000000180007912                 lea     rcx, [rbx-78h]
.text:0000000180007916                 call    cs:??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_iostream<char,std::char_traits<char>>::~basic_iostream<char,std::char_traits<char>>(void)
.text:000000018000791C                 mov     rcx, rbx
.text:000000018000791F                 add     rsp, 20h
.text:0000000180007923                 pop     rbx
.text:0000000180007924                 jmp     cs:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ios<char,std::char_traits<char>>::~basic_ios<char,std::char_traits<char>>(void)
.text:0000000180007924 sub_1800078D0   endp
.text:0000000180007924
.text:0000000180007924 ; ---------------------------------------------------------------------------
.text:000000018000792B algn_18000792B:                         ; DATA XREF: .pdata:000000018001C660↓o
.text:000000018000792B                 align 10h
.text:0000000180007930
.text:0000000180007930 ; =============== S U B R O U T I N E =======================================
.text:0000000180007930
.text:0000000180007930
.text:0000000180007930 sub_180007930   proc near               ; CODE XREF: fsuipcw_start+4D↑p
.text:0000000180007930                                         ; fsuipcw_start+13D↑p ...
.text:0000000180007930
.text:0000000180007930 Size            = qword ptr -68h
.text:0000000180007930 Block           = qword ptr -58h
.text:0000000180007930 var_40          = qword ptr -40h
.text:0000000180007930 Src             = qword ptr -38h
.text:0000000180007930 var_28          = qword ptr -28h
.text:0000000180007930 var_20          = qword ptr -20h
.text:0000000180007930 var_18          = qword ptr -18h
.text:0000000180007930 var_8           = qword ptr -8
.text:0000000180007930 arg_10          = qword ptr  18h
.text:0000000180007930 arg_18          = qword ptr  20h
.text:0000000180007930
.text:0000000180007930 ; __unwind { // __GSHandlerCheck
.text:0000000180007930                 mov     r11, rsp
.text:0000000180007933                 sub     rsp, 88h
.text:000000018000793A                 mov     rax, cs:__security_cookie
.text:0000000180007941                 xor     rax, rsp
.text:0000000180007944                 mov     [rsp+88h+var_18], rax
.text:0000000180007949                 movzx   eax, cs:word_1800139B8
.text:0000000180007950                 xorps   xmm0, xmm0
.text:0000000180007953                 movups  xmmword ptr [rsp+88h+Src], xmm0
.text:0000000180007958                 mov     r8d, 0Fh
.text:0000000180007958 ; } // starts at 180007930
.text:000000018000795E
.text:000000018000795E loc_18000795E:                          ; DATA XREF: .rdata:0000000180015600↓o
.text:000000018000795E                                         ; .rdata:0000000180015614↓o ...
.text:000000018000795E ; __unwind { // __GSHandlerCheck
.text:000000018000795E                 mov     [r11+20h], rsi
.text:0000000180007962                 movsd   xmm0, cs:qword_1800139B0
.text:000000018000796A                 mov     rsi, rcx
.text:000000018000796D                 mov     [r11-20h], r8
.text:0000000180007971                 mov     ecx, 0Ah
.text:0000000180007976                 mov     byte ptr [rsp+88h+Src], 0
.text:000000018000797B                 mov     [r11-28h], rcx
.text:000000018000797B ; } // starts at 18000795E
.text:000000018000797F
.text:000000018000797F loc_18000797F:                          ; DATA XREF: .rdata:0000000180015614↓o
.text:000000018000797F                                         ; .rdata:0000000180015628↓o ...
.text:000000018000797F ; __unwind { // __GSHandlerCheck
.text:000000018000797F                 mov     [r11-8], rdi
.text:0000000180007983                 mov     rdi, 0FFFFFFFFFFFFFFFFh
.text:000000018000798A                 movsd   [rsp+88h+Src], xmm0
.text:0000000180007990                 mov     word ptr [rsp+88h+Src+8], ax
.text:0000000180007995                 mov     byte ptr [rsp+88h+Src+0Ah], 0
.text:000000018000799A                 nop     word ptr [rax+rax+00h]
.text:00000001800079A0
.text:00000001800079A0 loc_1800079A0:                          ; CODE XREF: sub_180007930+77↓j
.text:00000001800079A0                 inc     rdi
.text:00000001800079A3                 cmp     byte ptr [rdx+rdi], 0
.text:00000001800079A7                 jnz     short loc_1800079A0
.text:00000001800079A9                 mov     rax, r8
.text:00000001800079AC                 sub     rax, rcx
.text:00000001800079AF                 cmp     rdi, rax
.text:00000001800079B2                 ja      short loc_1800079E6
.text:00000001800079B4                 lea     rax, [rdi+rcx]
.text:00000001800079B4 ; } // starts at 18000797F
.text:00000001800079B8
.text:00000001800079B8 loc_1800079B8:                          ; DATA XREF: .rdata:0000000180015628↓o
.text:00000001800079B8                                         ; .rdata:0000000180015638↓o ...
.text:00000001800079B8 ; __unwind { // __GSHandlerCheck
.text:00000001800079B8                 mov     [rsp+88h+arg_10], rbx
.text:00000001800079C0                 lea     rbx, [rsp+88h+Src]
.text:00000001800079C5                 mov     [rsp+88h+var_28], rax
.text:00000001800079CA                 add     rbx, rcx
.text:00000001800079CD                 mov     r8, rdi         ; Size
.text:00000001800079D0                 mov     rcx, rbx        ; void *
.text:00000001800079D3                 call    memmove
.text:00000001800079D8                 mov     byte ptr [rbx+rdi], 0
.text:00000001800079DC                 mov     rbx, [rsp+88h+arg_10]
.text:00000001800079E4                 jmp     short loc_1800079FB
.text:00000001800079E4 ; } // starts at 1800079B8
.text:00000001800079E6 ; ---------------------------------------------------------------------------
.text:00000001800079E6
.text:00000001800079E6 loc_1800079E6:                          ; CODE XREF: sub_180007930+82↑j
.text:00000001800079E6                                         ; DATA XREF: .pdata:000000018001C690↓o ...
.text:00000001800079E6 ; __unwind { // __GSHandlerCheck
.text:00000001800079E6                 mov     r9, rdx
.text:00000001800079E9                 mov     [rsp+88h+Size], rdi ; Size
.text:00000001800079EE                 mov     rdx, rdi
.text:00000001800079F1                 lea     rcx, [rsp+88h+Src] ; Src
.text:00000001800079F6                 call    sub_18000A340
.text:00000001800079FB
.text:00000001800079FB loc_1800079FB:                          ; CODE XREF: sub_180007930+B4↑j
.text:00000001800079FB                 mov     eax, [rsi+10Ch]
.text:0000000180007A01                 mov     rdi, [rsp+88h+var_8]
.text:0000000180007A09                 sub     eax, 3
.text:0000000180007A0C                 cmp     eax, 1
.text:0000000180007A0F                 ja      short loc_180007A1E
.text:0000000180007A0F ; } // starts at 1800079E6
.text:0000000180007A11
.text:0000000180007A11 loc_180007A11:                          ; DATA XREF: .pdata:000000018001C69C↓o
.text:0000000180007A11                                         ; .pdata:000000018001C6A8↓o
.text:0000000180007A11 ; __unwind { // __GSHandlerCheck
.text:0000000180007A11                 lea     rdx, [rsp+88h+Src]
.text:0000000180007A16                 mov     rcx, rsi
.text:0000000180007A19                 call    sub_1800074F0
.text:0000000180007A1E
.text:0000000180007A1E loc_180007A1E:                          ; CODE XREF: sub_180007930+DF↑j
.text:0000000180007A1E                 mov     eax, [rsi+10Ch]
.text:0000000180007A24                 mov     rsi, [rsp+88h+arg_18]
.text:0000000180007A2C                 sub     eax, 2
.text:0000000180007A2F                 test    eax, 0FFFFFFFDh
.text:0000000180007A34                 jnz     loc_180007AD7
.text:0000000180007A34 ; } // starts at 180007A11
.text:0000000180007A3A
.text:0000000180007A3A loc_180007A3A:                          ; DATA XREF: .pdata:000000018001C6A8↓o
.text:0000000180007A3A                                         ; .pdata:000000018001C6B4↓o
.text:0000000180007A3A ; __unwind { // __GSHandlerCheck
.text:0000000180007A3A                 lea     rdx, [rsp+88h+Block]
.text:0000000180007A3F                 call    sub_180007600
.text:0000000180007A44                 mov     rdx, rax
.text:0000000180007A47                 cmp     qword ptr [rax+18h], 10h
.text:0000000180007A4C                 jb      short loc_180007A51
.text:0000000180007A4E                 mov     rdx, [rax]
.text:0000000180007A51
.text:0000000180007A51 loc_180007A51:                          ; CODE XREF: sub_180007930+11C↑j
.text:0000000180007A51                 mov     r8, [rax+10h]
.text:0000000180007A55                 mov     rcx, cs:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::basic_ostream<char,std::char_traits<char>> std::cout
.text:0000000180007A5C                 call    sub_18000A4F0
.text:0000000180007A61                 mov     rcx, rax
.text:0000000180007A64                 call    sub_180009A90
.text:0000000180007A69                 cmp     [rsp+88h+var_20], 10h
.text:0000000180007A6F                 lea     rdx, [rsp+88h+Src]
.text:0000000180007A74                 mov     r8, [rsp+88h+var_28]
.text:0000000180007A79                 mov     rcx, rax
.text:0000000180007A7C                 cmovnb  rdx, [rsp+88h+Src]
.text:0000000180007A82                 call    sub_18000A4F0
.text:0000000180007A87                 mov     rcx, rax
.text:0000000180007A8A                 lea     rdx, sub_180009C40
.text:0000000180007A91                 call    cs:??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char>>::operator<<(std::basic_ostream<char,std::char_traits<char>> & (*)(std::basic_ostream<char,std::char_traits<char>> &))
.text:0000000180007A97                 mov     rdx, [rsp+88h+var_40]
.text:0000000180007A9C                 cmp     rdx, 10h
.text:0000000180007AA0                 jb      short loc_180007AD7
.text:0000000180007AA2                 mov     rcx, [rsp+88h+Block] ; Block
.text:0000000180007AA7                 inc     rdx
.text:0000000180007AAA                 mov     rax, rcx
.text:0000000180007AAD                 cmp     rdx, 1000h
.text:0000000180007AB4                 jb      short loc_180007AD2
.text:0000000180007AB6                 mov     rcx, [rcx-8]
.text:0000000180007ABA                 add     rdx, 27h ; '''
.text:0000000180007ABE                 sub     rax, rcx
.text:0000000180007AC1                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180007AC5                 cmp     rax, 1Fh
.text:0000000180007AC9                 jbe     short loc_180007AD2
.text:0000000180007ACB                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180007AD1                 int     3               ; Trap to Debugger
.text:0000000180007AD2 ; ---------------------------------------------------------------------------
.text:0000000180007AD2
.text:0000000180007AD2 loc_180007AD2:                          ; CODE XREF: sub_180007930+184↑j
.text:0000000180007AD2                                         ; sub_180007930+199↑j
.text:0000000180007AD2                 call    j_j_free
.text:0000000180007AD7
.text:0000000180007AD7 loc_180007AD7:                          ; CODE XREF: sub_180007930+104↑j
.text:0000000180007AD7                                         ; sub_180007930+170↑j
.text:0000000180007AD7                 mov     rdx, [rsp+88h+var_20]
.text:0000000180007ADC                 cmp     rdx, 10h
.text:0000000180007AE0                 jb      short loc_180007B17
.text:0000000180007AE2                 mov     rcx, [rsp+88h+Src] ; Block
.text:0000000180007AE7                 inc     rdx
.text:0000000180007AEA                 mov     rax, rcx
.text:0000000180007AED                 cmp     rdx, 1000h
.text:0000000180007AF4                 jb      short loc_180007B12
.text:0000000180007AF6                 mov     rcx, [rcx-8]
.text:0000000180007AFA                 add     rdx, 27h ; '''
.text:0000000180007AFE                 sub     rax, rcx
.text:0000000180007B01                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180007B05                 cmp     rax, 1Fh
.text:0000000180007B09                 jbe     short loc_180007B12
.text:0000000180007B0B                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180007B11                 int     3               ; Trap to Debugger
.text:0000000180007B12 ; ---------------------------------------------------------------------------
.text:0000000180007B12
.text:0000000180007B12 loc_180007B12:                          ; CODE XREF: sub_180007930+1C4↑j
.text:0000000180007B12                                         ; sub_180007930+1D9↑j
.text:0000000180007B12                 call    j_j_free
.text:0000000180007B17
.text:0000000180007B17 loc_180007B17:                          ; CODE XREF: sub_180007930+1B0↑j
.text:0000000180007B17                 mov     rcx, [rsp+88h+var_18]
.text:0000000180007B1C                 xor     rcx, rsp        ; StackCookie
.text:0000000180007B1F                 call    __security_check_cookie
.text:0000000180007B24                 add     rsp, 88h
.text:0000000180007B2B                 retn
.text:0000000180007B2B ; } // starts at 180007A3A
.text:0000000180007B2B sub_180007930   endp
.text:0000000180007B2B
.text:0000000180007B2B ; ---------------------------------------------------------------------------
.text:0000000180007B2C algn_180007B2C:                         ; DATA XREF: .pdata:000000018001C6B4↓o
.text:0000000180007B2C                 align 10h
.text:0000000180007B30
.text:0000000180007B30 ; =============== S U B R O U T I N E =======================================
.text:0000000180007B30
.text:0000000180007B30
.text:0000000180007B30 sub_180007B30   proc near               ; CODE XREF: fsuipcw_start+93↑p
.text:0000000180007B30                                         ; fsuipcw_start+F1↑p ...
.text:0000000180007B30
.text:0000000180007B30 Size            = qword ptr -68h
.text:0000000180007B30 Block           = qword ptr -58h
.text:0000000180007B30 var_40          = qword ptr -40h
.text:0000000180007B30 Src             = qword ptr -38h
.text:0000000180007B30 var_28          = qword ptr -28h
.text:0000000180007B30 var_20          = qword ptr -20h
.text:0000000180007B30 var_18          = qword ptr -18h
.text:0000000180007B30 arg_10          = qword ptr  18h
.text:0000000180007B30 arg_18          = qword ptr  20h
.text:0000000180007B30
.text:0000000180007B30 ; __unwind { // __GSHandlerCheck
.text:0000000180007B30                 push    rsi
.text:0000000180007B32                 sub     rsp, 80h
.text:0000000180007B39                 mov     rax, cs:__security_cookie
.text:0000000180007B40                 xor     rax, rsp
.text:0000000180007B43                 mov     [rsp+88h+var_18], rax
.text:0000000180007B48                 movzx   eax, cs:word_1800139C8
.text:0000000180007B4F                 xorps   xmm0, xmm0
.text:0000000180007B52                 movups  xmmword ptr [rsp+88h+Src], xmm0
.text:0000000180007B57                 mov     rsi, rcx
.text:0000000180007B5A                 mov     r8d, 0Fh
.text:0000000180007B60                 movsd   xmm0, cs:qword_1800139C0
.text:0000000180007B68                 mov     ecx, 0Ah
.text:0000000180007B68 ; } // starts at 180007B30
.text:0000000180007B6D
.text:0000000180007B6D loc_180007B6D:                          ; DATA XREF: .rdata:000000018001567C↓o
.text:0000000180007B6D                                         ; .rdata:0000000180015690↓o ...
.text:0000000180007B6D ; __unwind { // __GSHandlerCheck
.text:0000000180007B6D                 mov     [rsp+88h+arg_18], rdi
.text:0000000180007B75                 mov     rdi, 0FFFFFFFFFFFFFFFFh
.text:0000000180007B7C                 mov     byte ptr [rsp+88h+Src], 0
.text:0000000180007B81                 movsd   [rsp+88h+Src], xmm0
.text:0000000180007B87                 mov     [rsp+88h+var_20], r8
.text:0000000180007B8C                 mov     [rsp+88h+var_28], rcx
.text:0000000180007B91                 mov     word ptr [rsp+88h+Src+8], ax
.text:0000000180007B96                 mov     byte ptr [rsp+88h+Src+0Ah], 0
.text:0000000180007B9B                 nop     dword ptr [rax+rax+00h]
.text:0000000180007BA0
.text:0000000180007BA0 loc_180007BA0:                          ; CODE XREF: sub_180007B30+77↓j
.text:0000000180007BA0                 inc     rdi
.text:0000000180007BA3                 cmp     byte ptr [rdx+rdi], 0
.text:0000000180007BA7                 jnz     short loc_180007BA0
.text:0000000180007BA9                 mov     rax, r8
.text:0000000180007BAC                 sub     rax, rcx
.text:0000000180007BAF                 cmp     rdi, rax
.text:0000000180007BB2                 ja      short loc_180007BE6
.text:0000000180007BB4                 lea     rax, [rdi+rcx]
.text:0000000180007BB4 ; } // starts at 180007B6D
.text:0000000180007BB8
.text:0000000180007BB8 loc_180007BB8:                          ; DATA XREF: .rdata:0000000180015690↓o
.text:0000000180007BB8                                         ; .rdata:00000001800156A0↓o ...
.text:0000000180007BB8 ; __unwind { // __GSHandlerCheck
.text:0000000180007BB8                 mov     [rsp+88h+arg_10], rbx
.text:0000000180007BC0                 lea     rbx, [rsp+88h+Src]
.text:0000000180007BC5                 mov     [rsp+88h+var_28], rax
.text:0000000180007BCA                 add     rbx, rcx
.text:0000000180007BCD                 mov     r8, rdi         ; Size
.text:0000000180007BD0                 mov     rcx, rbx        ; void *
.text:0000000180007BD3                 call    memmove
.text:0000000180007BD8                 mov     byte ptr [rbx+rdi], 0
.text:0000000180007BDC                 mov     rbx, [rsp+88h+arg_10]
.text:0000000180007BE4                 jmp     short loc_180007BFB
.text:0000000180007BE4 ; } // starts at 180007BB8
.text:0000000180007BE6 ; ---------------------------------------------------------------------------
.text:0000000180007BE6
.text:0000000180007BE6 loc_180007BE6:                          ; CODE XREF: sub_180007B30+82↑j
.text:0000000180007BE6                                         ; DATA XREF: .pdata:000000018001C6D8↓o ...
.text:0000000180007BE6 ; __unwind { // __GSHandlerCheck
.text:0000000180007BE6                 mov     r9, rdx
.text:0000000180007BE9                 mov     [rsp+88h+Size], rdi ; Size
.text:0000000180007BEE                 mov     rdx, rdi
.text:0000000180007BF1                 lea     rcx, [rsp+88h+Src] ; Src
.text:0000000180007BF6                 call    sub_18000A340
.text:0000000180007BFB
.text:0000000180007BFB loc_180007BFB:                          ; CODE XREF: sub_180007B30+B4↑j
.text:0000000180007BFB                 mov     eax, [rsi+10Ch]
.text:0000000180007C01                 mov     rdi, [rsp+88h+arg_18]
.text:0000000180007C09                 sub     eax, 3
.text:0000000180007C0C                 cmp     eax, 1
.text:0000000180007C0F                 ja      short loc_180007C27
.text:0000000180007C0F ; } // starts at 180007BE6
.text:0000000180007C11
.text:0000000180007C11 loc_180007C11:                          ; DATA XREF: .pdata:000000018001C6E4↓o
.text:0000000180007C11                                         ; .pdata:000000018001C6F0↓o
.text:0000000180007C11 ; __unwind { // __GSHandlerCheck
.text:0000000180007C11                 cmp     dword ptr [rsi+108h], 2
.text:0000000180007C18                 jl      short loc_180007C27
.text:0000000180007C1A                 lea     rdx, [rsp+88h+Src]
.text:0000000180007C1F                 mov     rcx, rsi
.text:0000000180007C22                 call    sub_1800074F0
.text:0000000180007C27
.text:0000000180007C27 loc_180007C27:                          ; CODE XREF: sub_180007B30+DF↑j
.text:0000000180007C27                                         ; sub_180007B30+E8↑j
.text:0000000180007C27                 mov     eax, [rsi+10Ch]
.text:0000000180007C2D                 sub     eax, 2
.text:0000000180007C30                 test    eax, 0FFFFFFFDh
.text:0000000180007C35                 jnz     loc_180007CE5
.text:0000000180007C3B                 cmp     dword ptr [rsi+108h], 2
.text:0000000180007C42                 jl      loc_180007CE5
.text:0000000180007C48                 lea     rdx, [rsp+88h+Block]
.text:0000000180007C4D                 call    sub_180007600
.text:0000000180007C52                 mov     rdx, rax
.text:0000000180007C55                 cmp     qword ptr [rax+18h], 10h
.text:0000000180007C5A                 jb      short loc_180007C5F
.text:0000000180007C5C                 mov     rdx, [rax]
.text:0000000180007C5F
.text:0000000180007C5F loc_180007C5F:                          ; CODE XREF: sub_180007B30+12A↑j
.text:0000000180007C5F                 mov     r8, [rax+10h]
.text:0000000180007C63                 mov     rcx, cs:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::basic_ostream<char,std::char_traits<char>> std::cout
.text:0000000180007C6A                 call    sub_18000A4F0
.text:0000000180007C6F                 mov     rcx, rax
.text:0000000180007C72                 call    sub_180009A90
.text:0000000180007C77                 cmp     [rsp+88h+var_20], 10h
.text:0000000180007C7D                 lea     rdx, [rsp+88h+Src]
.text:0000000180007C82                 mov     r8, [rsp+88h+var_28]
.text:0000000180007C87                 mov     rcx, rax
.text:0000000180007C8A                 cmovnb  rdx, [rsp+88h+Src]
.text:0000000180007C90                 call    sub_18000A4F0
.text:0000000180007C95                 mov     rcx, rax
.text:0000000180007C98                 lea     rdx, sub_180009C40
.text:0000000180007C9F                 call    cs:??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char>>::operator<<(std::basic_ostream<char,std::char_traits<char>> & (*)(std::basic_ostream<char,std::char_traits<char>> &))
.text:0000000180007CA5                 mov     rdx, [rsp+88h+var_40]
.text:0000000180007CAA                 cmp     rdx, 10h
.text:0000000180007CAE                 jb      short loc_180007CE5
.text:0000000180007CB0                 mov     rcx, [rsp+88h+Block] ; Block
.text:0000000180007CB5                 inc     rdx
.text:0000000180007CB8                 mov     rax, rcx
.text:0000000180007CBB                 cmp     rdx, 1000h
.text:0000000180007CC2                 jb      short loc_180007CE0
.text:0000000180007CC4                 mov     rcx, [rcx-8]
.text:0000000180007CC8                 add     rdx, 27h ; '''
.text:0000000180007CCC                 sub     rax, rcx
.text:0000000180007CCF                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180007CD3                 cmp     rax, 1Fh
.text:0000000180007CD7                 jbe     short loc_180007CE0
.text:0000000180007CD9                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180007CDF                 int     3               ; Trap to Debugger
.text:0000000180007CE0 ; ---------------------------------------------------------------------------
.text:0000000180007CE0
.text:0000000180007CE0 loc_180007CE0:                          ; CODE XREF: sub_180007B30+192↑j
.text:0000000180007CE0                                         ; sub_180007B30+1A7↑j
.text:0000000180007CE0                 call    j_j_free
.text:0000000180007CE5
.text:0000000180007CE5 loc_180007CE5:                          ; CODE XREF: sub_180007B30+105↑j
.text:0000000180007CE5                                         ; sub_180007B30+112↑j ...
.text:0000000180007CE5                 mov     rdx, [rsp+88h+var_20]
.text:0000000180007CEA                 cmp     rdx, 10h
.text:0000000180007CEE                 jb      short loc_180007D25
.text:0000000180007CF0                 mov     rcx, [rsp+88h+Src] ; Block
.text:0000000180007CF5                 inc     rdx
.text:0000000180007CF8                 mov     rax, rcx
.text:0000000180007CFB                 cmp     rdx, 1000h
.text:0000000180007D02                 jb      short loc_180007D20
.text:0000000180007D04                 mov     rcx, [rcx-8]
.text:0000000180007D08                 add     rdx, 27h ; '''
.text:0000000180007D0C                 sub     rax, rcx
.text:0000000180007D0F                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180007D13                 cmp     rax, 1Fh
.text:0000000180007D17                 jbe     short loc_180007D20
.text:0000000180007D19                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180007D1F                 int     3               ; Trap to Debugger
.text:0000000180007D20 ; ---------------------------------------------------------------------------
.text:0000000180007D20
.text:0000000180007D20 loc_180007D20:                          ; CODE XREF: sub_180007B30+1D2↑j
.text:0000000180007D20                                         ; sub_180007B30+1E7↑j
.text:0000000180007D20                 call    j_j_free
.text:0000000180007D25
.text:0000000180007D25 loc_180007D25:                          ; CODE XREF: sub_180007B30+1BE↑j
.text:0000000180007D25                 mov     rcx, [rsp+88h+var_18]
.text:0000000180007D2A                 xor     rcx, rsp        ; StackCookie
.text:0000000180007D2D                 call    __security_check_cookie
.text:0000000180007D32                 add     rsp, 80h
.text:0000000180007D39                 pop     rsi
.text:0000000180007D3A                 retn
.text:0000000180007D3A ; } // starts at 180007C11
.text:0000000180007D3A sub_180007B30   endp
.text:0000000180007D3A
.text:0000000180007D3A ; ---------------------------------------------------------------------------
.text:0000000180007D3B algn_180007D3B:                         ; DATA XREF: .pdata:000000018001C6F0↓o
.text:0000000180007D3B                 align 20h
.text:0000000180007D40
.text:0000000180007D40 ; =============== S U B R O U T I N E =======================================
.text:0000000180007D40
.text:0000000180007D40
.text:0000000180007D40 sub_180007D40   proc near               ; CODE XREF: sub_180002E20+2E0↑p
.text:0000000180007D40                                         ; sub_180002E20+329↑p ...
.text:0000000180007D40
.text:0000000180007D40 Size            = qword ptr -68h
.text:0000000180007D40 Block           = qword ptr -58h
.text:0000000180007D40 var_40          = qword ptr -40h
.text:0000000180007D40 Src             = qword ptr -38h
.text:0000000180007D40 var_28          = qword ptr -28h
.text:0000000180007D40 var_20          = qword ptr -20h
.text:0000000180007D40 var_18          = qword ptr -18h
.text:0000000180007D40 arg_10          = qword ptr  18h
.text:0000000180007D40 arg_18          = qword ptr  20h
.text:0000000180007D40
.text:0000000180007D40 ; __unwind { // __GSHandlerCheck
.text:0000000180007D40                 push    rsi
.text:0000000180007D42                 sub     rsp, 80h
.text:0000000180007D49                 mov     rax, cs:__security_cookie
.text:0000000180007D50                 xor     rax, rsp
.text:0000000180007D53                 mov     [rsp+88h+var_18], rax
.text:0000000180007D58                 movzx   eax, cs:word_1800139D8
.text:0000000180007D5F                 xorps   xmm0, xmm0
.text:0000000180007D62                 movups  xmmword ptr [rsp+88h+Src], xmm0
.text:0000000180007D67                 mov     rsi, rcx
.text:0000000180007D6A                 mov     r8d, 0Fh
.text:0000000180007D70                 movsd   xmm0, cs:qword_1800139D0
.text:0000000180007D78                 mov     ecx, 0Ah
.text:0000000180007D78 ; } // starts at 180007D40
.text:0000000180007D7D
.text:0000000180007D7D loc_180007D7D:                          ; DATA XREF: .rdata:00000001800156C4↓o
.text:0000000180007D7D                                         ; .rdata:00000001800156D8↓o ...
.text:0000000180007D7D ; __unwind { // __GSHandlerCheck
.text:0000000180007D7D                 mov     [rsp+88h+arg_18], rdi
.text:0000000180007D85                 mov     rdi, 0FFFFFFFFFFFFFFFFh
.text:0000000180007D8C                 mov     byte ptr [rsp+88h+Src], 0
.text:0000000180007D91                 movsd   [rsp+88h+Src], xmm0
.text:0000000180007D97                 mov     [rsp+88h+var_20], r8
.text:0000000180007D9C                 mov     [rsp+88h+var_28], rcx
.text:0000000180007DA1                 mov     word ptr [rsp+88h+Src+8], ax
.text:0000000180007DA6                 mov     byte ptr [rsp+88h+Src+0Ah], 0
.text:0000000180007DAB                 nop     dword ptr [rax+rax+00h]
.text:0000000180007DB0
.text:0000000180007DB0 loc_180007DB0:                          ; CODE XREF: sub_180007D40+77↓j
.text:0000000180007DB0                 inc     rdi
.text:0000000180007DB3                 cmp     byte ptr [rdx+rdi], 0
.text:0000000180007DB7                 jnz     short loc_180007DB0
.text:0000000180007DB9                 mov     rax, r8
.text:0000000180007DBC                 sub     rax, rcx
.text:0000000180007DBF                 cmp     rdi, rax
.text:0000000180007DC2                 ja      short loc_180007DF6
.text:0000000180007DC4                 lea     rax, [rdi+rcx]
.text:0000000180007DC4 ; } // starts at 180007D7D
.text:0000000180007DC8
.text:0000000180007DC8 loc_180007DC8:                          ; DATA XREF: .rdata:00000001800156D8↓o
.text:0000000180007DC8                                         ; .rdata:00000001800156E8↓o ...
.text:0000000180007DC8 ; __unwind { // __GSHandlerCheck
.text:0000000180007DC8                 mov     [rsp+88h+arg_10], rbx
.text:0000000180007DD0                 lea     rbx, [rsp+88h+Src]
.text:0000000180007DD5                 mov     [rsp+88h+var_28], rax
.text:0000000180007DDA                 add     rbx, rcx
.text:0000000180007DDD                 mov     r8, rdi         ; Size
.text:0000000180007DE0                 mov     rcx, rbx        ; void *
.text:0000000180007DE3                 call    memmove
.text:0000000180007DE8                 mov     byte ptr [rbx+rdi], 0
.text:0000000180007DEC                 mov     rbx, [rsp+88h+arg_10]
.text:0000000180007DF4                 jmp     short loc_180007E0B
.text:0000000180007DF4 ; } // starts at 180007DC8
.text:0000000180007DF6 ; ---------------------------------------------------------------------------
.text:0000000180007DF6
.text:0000000180007DF6 loc_180007DF6:                          ; CODE XREF: sub_180007D40+82↑j
.text:0000000180007DF6                                         ; DATA XREF: .pdata:000000018001C714↓o ...
.text:0000000180007DF6 ; __unwind { // __GSHandlerCheck
.text:0000000180007DF6                 mov     r9, rdx
.text:0000000180007DF9                 mov     [rsp+88h+Size], rdi ; Size
.text:0000000180007DFE                 mov     rdx, rdi
.text:0000000180007E01                 lea     rcx, [rsp+88h+Src] ; Src
.text:0000000180007E06                 call    sub_18000A340
.text:0000000180007E0B
.text:0000000180007E0B loc_180007E0B:                          ; CODE XREF: sub_180007D40+B4↑j
.text:0000000180007E0B                 mov     eax, [rsi+10Ch]
.text:0000000180007E11                 mov     rdi, [rsp+88h+arg_18]
.text:0000000180007E19                 sub     eax, 3
.text:0000000180007E1C                 cmp     eax, 1
.text:0000000180007E1F                 ja      short loc_180007E37
.text:0000000180007E1F ; } // starts at 180007DF6
.text:0000000180007E21
.text:0000000180007E21 loc_180007E21:                          ; DATA XREF: .pdata:000000018001C720↓o
.text:0000000180007E21                                         ; .pdata:000000018001C72C↓o
.text:0000000180007E21 ; __unwind { // __GSHandlerCheck
.text:0000000180007E21                 cmp     dword ptr [rsi+108h], 5
.text:0000000180007E28                 jl      short loc_180007E37
.text:0000000180007E2A                 lea     rdx, [rsp+88h+Src]
.text:0000000180007E2F                 mov     rcx, rsi
.text:0000000180007E32                 call    sub_1800074F0
.text:0000000180007E37
.text:0000000180007E37 loc_180007E37:                          ; CODE XREF: sub_180007D40+DF↑j
.text:0000000180007E37                                         ; sub_180007D40+E8↑j
.text:0000000180007E37                 mov     eax, [rsi+10Ch]
.text:0000000180007E3D                 sub     eax, 2
.text:0000000180007E40                 test    eax, 0FFFFFFFDh
.text:0000000180007E45                 jnz     loc_180007EF5
.text:0000000180007E4B                 cmp     dword ptr [rsi+108h], 5
.text:0000000180007E52                 jl      loc_180007EF5
.text:0000000180007E58                 lea     rdx, [rsp+88h+Block]
.text:0000000180007E5D                 call    sub_180007600
.text:0000000180007E62                 mov     rdx, rax
.text:0000000180007E65                 cmp     qword ptr [rax+18h], 10h
.text:0000000180007E6A                 jb      short loc_180007E6F
.text:0000000180007E6C                 mov     rdx, [rax]
.text:0000000180007E6F
.text:0000000180007E6F loc_180007E6F:                          ; CODE XREF: sub_180007D40+12A↑j
.text:0000000180007E6F                 mov     r8, [rax+10h]
.text:0000000180007E73                 mov     rcx, cs:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::basic_ostream<char,std::char_traits<char>> std::cout
.text:0000000180007E7A                 call    sub_18000A4F0
.text:0000000180007E7F                 mov     rcx, rax
.text:0000000180007E82                 call    sub_180009A90
.text:0000000180007E87                 cmp     [rsp+88h+var_20], 10h
.text:0000000180007E8D                 lea     rdx, [rsp+88h+Src]
.text:0000000180007E92                 mov     r8, [rsp+88h+var_28]
.text:0000000180007E97                 mov     rcx, rax
.text:0000000180007E9A                 cmovnb  rdx, [rsp+88h+Src]
.text:0000000180007EA0                 call    sub_18000A4F0
.text:0000000180007EA5                 mov     rcx, rax
.text:0000000180007EA8                 lea     rdx, sub_180009C40
.text:0000000180007EAF                 call    cs:??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char>>::operator<<(std::basic_ostream<char,std::char_traits<char>> & (*)(std::basic_ostream<char,std::char_traits<char>> &))
.text:0000000180007EB5                 mov     rdx, [rsp+88h+var_40]
.text:0000000180007EBA                 cmp     rdx, 10h
.text:0000000180007EBE                 jb      short loc_180007EF5
.text:0000000180007EC0                 mov     rcx, [rsp+88h+Block] ; Block
.text:0000000180007EC5                 inc     rdx
.text:0000000180007EC8                 mov     rax, rcx
.text:0000000180007ECB                 cmp     rdx, 1000h
.text:0000000180007ED2                 jb      short loc_180007EF0
.text:0000000180007ED4                 mov     rcx, [rcx-8]
.text:0000000180007ED8                 add     rdx, 27h ; '''
.text:0000000180007EDC                 sub     rax, rcx
.text:0000000180007EDF                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180007EE3                 cmp     rax, 1Fh
.text:0000000180007EE7                 jbe     short loc_180007EF0
.text:0000000180007EE9                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180007EEF                 int     3               ; Trap to Debugger
.text:0000000180007EF0 ; ---------------------------------------------------------------------------
.text:0000000180007EF0
.text:0000000180007EF0 loc_180007EF0:                          ; CODE XREF: sub_180007D40+192↑j
.text:0000000180007EF0                                         ; sub_180007D40+1A7↑j
.text:0000000180007EF0                 call    j_j_free
.text:0000000180007EF5
.text:0000000180007EF5 loc_180007EF5:                          ; CODE XREF: sub_180007D40+105↑j
.text:0000000180007EF5                                         ; sub_180007D40+112↑j ...
.text:0000000180007EF5                 mov     rdx, [rsp+88h+var_20]
.text:0000000180007EFA                 cmp     rdx, 10h
.text:0000000180007EFE                 jb      short loc_180007F35
.text:0000000180007F00                 mov     rcx, [rsp+88h+Src] ; Block
.text:0000000180007F05                 inc     rdx
.text:0000000180007F08                 mov     rax, rcx
.text:0000000180007F0B                 cmp     rdx, 1000h
.text:0000000180007F12                 jb      short loc_180007F30
.text:0000000180007F14                 mov     rcx, [rcx-8]
.text:0000000180007F18                 add     rdx, 27h ; '''
.text:0000000180007F1C                 sub     rax, rcx
.text:0000000180007F1F                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180007F23                 cmp     rax, 1Fh
.text:0000000180007F27                 jbe     short loc_180007F30
.text:0000000180007F29                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180007F2F                 int     3               ; Trap to Debugger
.text:0000000180007F30 ; ---------------------------------------------------------------------------
.text:0000000180007F30
.text:0000000180007F30 loc_180007F30:                          ; CODE XREF: sub_180007D40+1D2↑j
.text:0000000180007F30                                         ; sub_180007D40+1E7↑j
.text:0000000180007F30                 call    j_j_free
.text:0000000180007F35
.text:0000000180007F35 loc_180007F35:                          ; CODE XREF: sub_180007D40+1BE↑j
.text:0000000180007F35                 mov     rcx, [rsp+88h+var_18]
.text:0000000180007F3A                 xor     rcx, rsp        ; StackCookie
.text:0000000180007F3D                 call    __security_check_cookie
.text:0000000180007F42                 add     rsp, 80h
.text:0000000180007F49                 pop     rsi
.text:0000000180007F4A                 retn
.text:0000000180007F4A ; } // starts at 180007E21
.text:0000000180007F4A sub_180007D40   endp
.text:0000000180007F4A
.text:0000000180007F4A ; ---------------------------------------------------------------------------
.text:0000000180007F4B algn_180007F4B:                         ; DATA XREF: .pdata:000000018001C72C↓o
.text:0000000180007F4B                 align 10h
.text:0000000180007F50
.text:0000000180007F50 ; =============== S U B R O U T I N E =======================================
.text:0000000180007F50
.text:0000000180007F50
.text:0000000180007F50 sub_180007F50   proc near               ; CODE XREF: fsuipcw_setHvar+8E↑p
.text:0000000180007F50                                         ; sub_180002E20+2A6↑p ...
.text:0000000180007F50
.text:0000000180007F50 Size            = qword ptr -68h
.text:0000000180007F50 Block           = qword ptr -58h
.text:0000000180007F50 var_40          = qword ptr -40h
.text:0000000180007F50 Src             = qword ptr -38h
.text:0000000180007F50 var_28          = qword ptr -28h
.text:0000000180007F50 var_20          = qword ptr -20h
.text:0000000180007F50 var_18          = qword ptr -18h
.text:0000000180007F50 arg_10          = qword ptr  18h
.text:0000000180007F50 arg_18          = qword ptr  20h
.text:0000000180007F50
.text:0000000180007F50 ; __unwind { // __GSHandlerCheck
.text:0000000180007F50                 push    rsi
.text:0000000180007F52                 sub     rsp, 80h
.text:0000000180007F59                 mov     rax, cs:__security_cookie
.text:0000000180007F60                 xor     rax, rsp
.text:0000000180007F63                 mov     [rsp+88h+var_18], rax
.text:0000000180007F68                 movzx   eax, cs:word_1800139E8
.text:0000000180007F6F                 xorps   xmm0, xmm0
.text:0000000180007F72                 movups  xmmword ptr [rsp+88h+Src], xmm0
.text:0000000180007F77                 mov     rsi, rcx
.text:0000000180007F7A                 mov     r8d, 0Fh
.text:0000000180007F80                 movsd   xmm0, cs:qword_1800139E0
.text:0000000180007F88                 mov     ecx, 0Ah
.text:0000000180007F88 ; } // starts at 180007F50
.text:0000000180007F8D
.text:0000000180007F8D loc_180007F8D:                          ; DATA XREF: .rdata:000000018001570C↓o
.text:0000000180007F8D                                         ; .rdata:0000000180015720↓o ...
.text:0000000180007F8D ; __unwind { // __GSHandlerCheck
.text:0000000180007F8D                 mov     [rsp+88h+arg_18], rdi
.text:0000000180007F95                 mov     rdi, 0FFFFFFFFFFFFFFFFh
.text:0000000180007F9C                 mov     byte ptr [rsp+88h+Src], 0
.text:0000000180007FA1                 movsd   [rsp+88h+Src], xmm0
.text:0000000180007FA7                 mov     [rsp+88h+var_20], r8
.text:0000000180007FAC                 mov     [rsp+88h+var_28], rcx
.text:0000000180007FB1                 mov     word ptr [rsp+88h+Src+8], ax
.text:0000000180007FB6                 mov     byte ptr [rsp+88h+Src+0Ah], 0
.text:0000000180007FBB                 nop     dword ptr [rax+rax+00h]
.text:0000000180007FC0
.text:0000000180007FC0 loc_180007FC0:                          ; CODE XREF: sub_180007F50+77↓j
.text:0000000180007FC0                 inc     rdi
.text:0000000180007FC3                 cmp     byte ptr [rdx+rdi], 0
.text:0000000180007FC7                 jnz     short loc_180007FC0
.text:0000000180007FC9                 mov     rax, r8
.text:0000000180007FCC                 sub     rax, rcx
.text:0000000180007FCF                 cmp     rdi, rax
.text:0000000180007FD2                 ja      short loc_180008006
.text:0000000180007FD4                 lea     rax, [rdi+rcx]
.text:0000000180007FD4 ; } // starts at 180007F8D
.text:0000000180007FD8
.text:0000000180007FD8 loc_180007FD8:                          ; DATA XREF: .rdata:0000000180015720↓o
.text:0000000180007FD8                                         ; .rdata:0000000180015730↓o ...
.text:0000000180007FD8 ; __unwind { // __GSHandlerCheck
.text:0000000180007FD8                 mov     [rsp+88h+arg_10], rbx
.text:0000000180007FE0                 lea     rbx, [rsp+88h+Src]
.text:0000000180007FE5                 mov     [rsp+88h+var_28], rax
.text:0000000180007FEA                 add     rbx, rcx
.text:0000000180007FED                 mov     r8, rdi         ; Size
.text:0000000180007FF0                 mov     rcx, rbx        ; void *
.text:0000000180007FF3                 call    memmove
.text:0000000180007FF8                 mov     byte ptr [rbx+rdi], 0
.text:0000000180007FFC                 mov     rbx, [rsp+88h+arg_10]
.text:0000000180008004                 jmp     short loc_18000801B
.text:0000000180008004 ; } // starts at 180007FD8
.text:0000000180008006 ; ---------------------------------------------------------------------------
.text:0000000180008006
.text:0000000180008006 loc_180008006:                          ; CODE XREF: sub_180007F50+82↑j
.text:0000000180008006                                         ; DATA XREF: .pdata:000000018001C750↓o ...
.text:0000000180008006 ; __unwind { // __GSHandlerCheck
.text:0000000180008006                 mov     r9, rdx
.text:0000000180008009                 mov     [rsp+88h+Size], rdi ; Size
.text:000000018000800E                 mov     rdx, rdi
.text:0000000180008011                 lea     rcx, [rsp+88h+Src] ; Src
.text:0000000180008016                 call    sub_18000A340
.text:000000018000801B
.text:000000018000801B loc_18000801B:                          ; CODE XREF: sub_180007F50+B4↑j
.text:000000018000801B                 mov     eax, [rsi+10Ch]
.text:0000000180008021                 mov     rdi, [rsp+88h+arg_18]
.text:0000000180008029                 sub     eax, 3
.text:000000018000802C                 cmp     eax, 1
.text:000000018000802F                 ja      short loc_180008047
.text:000000018000802F ; } // starts at 180008006
.text:0000000180008031
.text:0000000180008031 loc_180008031:                          ; DATA XREF: .pdata:000000018001C75C↓o
.text:0000000180008031                                         ; .pdata:000000018001C768↓o
.text:0000000180008031 ; __unwind { // __GSHandlerCheck
.text:0000000180008031                 cmp     dword ptr [rsi+108h], 4
.text:0000000180008038                 jl      short loc_180008047
.text:000000018000803A                 lea     rdx, [rsp+88h+Src]
.text:000000018000803F                 mov     rcx, rsi
.text:0000000180008042                 call    sub_1800074F0
.text:0000000180008047
.text:0000000180008047 loc_180008047:                          ; CODE XREF: sub_180007F50+DF↑j
.text:0000000180008047                                         ; sub_180007F50+E8↑j
.text:0000000180008047                 mov     eax, [rsi+10Ch]
.text:000000018000804D                 sub     eax, 2
.text:0000000180008050                 test    eax, 0FFFFFFFDh
.text:0000000180008055                 jnz     loc_180008105
.text:000000018000805B                 cmp     dword ptr [rsi+108h], 4
.text:0000000180008062                 jl      loc_180008105
.text:0000000180008068                 lea     rdx, [rsp+88h+Block]
.text:000000018000806D                 call    sub_180007600
.text:0000000180008072                 mov     rdx, rax
.text:0000000180008075                 cmp     qword ptr [rax+18h], 10h
.text:000000018000807A                 jb      short loc_18000807F
.text:000000018000807C                 mov     rdx, [rax]
.text:000000018000807F
.text:000000018000807F loc_18000807F:                          ; CODE XREF: sub_180007F50+12A↑j
.text:000000018000807F                 mov     r8, [rax+10h]
.text:0000000180008083                 mov     rcx, cs:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::basic_ostream<char,std::char_traits<char>> std::cout
.text:000000018000808A                 call    sub_18000A4F0
.text:000000018000808F                 mov     rcx, rax
.text:0000000180008092                 call    sub_180009A90
.text:0000000180008097                 cmp     [rsp+88h+var_20], 10h
.text:000000018000809D                 lea     rdx, [rsp+88h+Src]
.text:00000001800080A2                 mov     r8, [rsp+88h+var_28]
.text:00000001800080A7                 mov     rcx, rax
.text:00000001800080AA                 cmovnb  rdx, [rsp+88h+Src]
.text:00000001800080B0                 call    sub_18000A4F0
.text:00000001800080B5                 mov     rcx, rax
.text:00000001800080B8                 lea     rdx, sub_180009C40
.text:00000001800080BF                 call    cs:??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z ; std::basic_ostream<char,std::char_traits<char>>::operator<<(std::basic_ostream<char,std::char_traits<char>> & (*)(std::basic_ostream<char,std::char_traits<char>> &))
.text:00000001800080C5                 mov     rdx, [rsp+88h+var_40]
.text:00000001800080CA                 cmp     rdx, 10h
.text:00000001800080CE                 jb      short loc_180008105
.text:00000001800080D0                 mov     rcx, [rsp+88h+Block] ; Block
.text:00000001800080D5                 inc     rdx
.text:00000001800080D8                 mov     rax, rcx
.text:00000001800080DB                 cmp     rdx, 1000h
.text:00000001800080E2                 jb      short loc_180008100
.text:00000001800080E4                 mov     rcx, [rcx-8]
.text:00000001800080E8                 add     rdx, 27h ; '''
.text:00000001800080EC                 sub     rax, rcx
.text:00000001800080EF                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:00000001800080F3                 cmp     rax, 1Fh
.text:00000001800080F7                 jbe     short loc_180008100
.text:00000001800080F9                 call    cs:_invalid_parameter_noinfo_noreturn
.text:00000001800080FF                 int     3               ; Trap to Debugger
.text:0000000180008100 ; ---------------------------------------------------------------------------
.text:0000000180008100
.text:0000000180008100 loc_180008100:                          ; CODE XREF: sub_180007F50+192↑j
.text:0000000180008100                                         ; sub_180007F50+1A7↑j
.text:0000000180008100                 call    j_j_free
.text:0000000180008105
.text:0000000180008105 loc_180008105:                          ; CODE XREF: sub_180007F50+105↑j
.text:0000000180008105                                         ; sub_180007F50+112↑j ...
.text:0000000180008105                 mov     rdx, [rsp+88h+var_20]
.text:000000018000810A                 cmp     rdx, 10h
.text:000000018000810E                 jb      short loc_180008145
.text:0000000180008110                 mov     rcx, [rsp+88h+Src] ; Block
.text:0000000180008115                 inc     rdx
.text:0000000180008118                 mov     rax, rcx
.text:000000018000811B                 cmp     rdx, 1000h
.text:0000000180008122                 jb      short loc_180008140
.text:0000000180008124                 mov     rcx, [rcx-8]
.text:0000000180008128                 add     rdx, 27h ; '''
.text:000000018000812C                 sub     rax, rcx
.text:000000018000812F                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180008133                 cmp     rax, 1Fh
.text:0000000180008137                 jbe     short loc_180008140
.text:0000000180008139                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000813F                 int     3               ; Trap to Debugger
.text:0000000180008140 ; ---------------------------------------------------------------------------
.text:0000000180008140
.text:0000000180008140 loc_180008140:                          ; CODE XREF: sub_180007F50+1D2↑j
.text:0000000180008140                                         ; sub_180007F50+1E7↑j
.text:0000000180008140                 call    j_j_free
.text:0000000180008145
.text:0000000180008145 loc_180008145:                          ; CODE XREF: sub_180007F50+1BE↑j
.text:0000000180008145                 mov     rcx, [rsp+88h+var_18]
.text:000000018000814A                 xor     rcx, rsp        ; StackCookie
.text:000000018000814D                 call    __security_check_cookie
.text:0000000180008152                 add     rsp, 80h
.text:0000000180008159                 pop     rsi
.text:000000018000815A                 retn
.text:000000018000815A ; } // starts at 180008031
.text:000000018000815A sub_180007F50   endp
.text:000000018000815A
.text:000000018000815A ; ---------------------------------------------------------------------------
.text:000000018000815B algn_18000815B:                         ; DATA XREF: .pdata:000000018001C768↓o
.text:000000018000815B                 align 20h
.text:0000000180008160
.text:0000000180008160 ; =============== S U B R O U T I N E =======================================
.text:0000000180008160
.text:0000000180008160
.text:0000000180008160 sub_180008160   proc near               ; DATA XREF: .rdata:0000000180013B20↓o
.text:0000000180008160                                         ; .pdata:000000018001C774↓o
.text:0000000180008160
.text:0000000180008160 arg_0           = qword ptr  8
.text:0000000180008160 arg_8           = qword ptr  10h
.text:0000000180008160 arg_10          = qword ptr  18h
.text:0000000180008160 arg_18          = qword ptr  20h
.text:0000000180008160
.text:0000000180008160                 mov     [rsp+arg_0], rbx
.text:0000000180008165                 mov     [rsp+arg_8], rbp
.text:000000018000816A                 mov     [rsp+arg_10], rsi
.text:000000018000816F                 mov     [rsp+arg_18], rdi
.text:0000000180008174                 mov     r11, [r8+8]
.text:0000000180008178                 mov     r10, rcx
.text:000000018000817B                 mov     rax, [rcx+38h]
.text:000000018000817F                 add     r11, [r8]
.text:0000000180008182                 test    byte ptr [rcx+70h], 2
.text:0000000180008186                 mov     rbp, [rax]
.text:0000000180008189                 jz      short loc_18000818F
.text:000000018000818B                 xor     ecx, ecx
.text:000000018000818D                 jmp     short loc_1800081A5
.text:000000018000818F ; ---------------------------------------------------------------------------
.text:000000018000818F
.text:000000018000818F loc_18000818F:                          ; CODE XREF: sub_180008160+29↑j
.text:000000018000818F                 mov     rax, [rcx+40h]
.text:0000000180008193                 mov     rcx, [rax]
.text:0000000180008196                 test    rcx, rcx
.text:0000000180008199                 jz      short loc_1800081A5
.text:000000018000819B                 cmp     [r10+68h], rcx
.text:000000018000819F                 jnb     short loc_1800081A5
.text:00000001800081A1                 mov     [r10+68h], rcx
.text:00000001800081A5
.text:00000001800081A5 loc_1800081A5:                          ; CODE XREF: sub_180008160+2D↑j
.text:00000001800081A5                                         ; sub_180008160+39↑j ...
.text:00000001800081A5                 mov     rsi, [r10+18h]
.text:00000001800081A9                 mov     rbx, [r10+68h]
.text:00000001800081AD                 mov     rax, rbx
.text:00000001800081B0                 mov     rdi, [rsi]
.text:00000001800081B3                 sub     rax, rdi
.text:00000001800081B6                 cmp     r11, rax
.text:00000001800081B9                 ja      short loc_18000822D
.text:00000001800081BB                 test    r11, r11
.text:00000001800081BE                 jz      short loc_1800081D6
.text:00000001800081C0                 test    r9b, 1
.text:00000001800081C4                 jz      short loc_1800081CB
.text:00000001800081C6                 test    rbp, rbp
.text:00000001800081C9                 jz      short loc_18000822D
.text:00000001800081CB
.text:00000001800081CB loc_1800081CB:                          ; CODE XREF: sub_180008160+64↑j
.text:00000001800081CB                 test    r9b, 2
.text:00000001800081CF                 jz      short loc_1800081D6
.text:00000001800081D1                 test    rcx, rcx
.text:00000001800081D4                 jz      short loc_18000822D
.text:00000001800081D6
.text:00000001800081D6 loc_1800081D6:                          ; CODE XREF: sub_180008160+5E↑j
.text:00000001800081D6                                         ; sub_180008160+6F↑j
.text:00000001800081D6                 lea     r8, [rdi+r11]
.text:00000001800081DA                 test    r9b, 1
.text:00000001800081DE                 jz      short loc_1800081F8
.text:00000001800081E0                 test    rbp, rbp
.text:00000001800081E3                 jz      short loc_1800081F8
.text:00000001800081E5                 mov     [rsi], rdi
.text:00000001800081E8                 sub     ebx, r8d
.text:00000001800081EB                 mov     rax, [r10+38h]
.text:00000001800081EF                 mov     [rax], r8
.text:00000001800081F2                 mov     rax, [r10+50h]
.text:00000001800081F6                 mov     [rax], ebx
.text:00000001800081F8
.text:00000001800081F8 loc_1800081F8:                          ; CODE XREF: sub_180008160+7E↑j
.text:00000001800081F8                                         ; sub_180008160+83↑j
.text:00000001800081F8                 test    r9b, 2
.text:00000001800081FC                 jz      short loc_180008228
.text:00000001800081FE                 test    rcx, rcx
.text:0000000180008201                 jz      short loc_180008228
.text:0000000180008203                 mov     rax, [r10+58h]
.text:0000000180008207                 movsxd  rcx, dword ptr [rax]
.text:000000018000820A                 mov     rax, [r10+40h]
.text:000000018000820E                 add     rcx, [rax]
.text:0000000180008211                 mov     rax, [r10+20h]
.text:0000000180008215                 sub     ecx, r8d
.text:0000000180008218                 mov     [rax], rdi
.text:000000018000821B                 mov     rax, [r10+40h]
.text:000000018000821F                 mov     [rax], r8
.text:0000000180008222                 mov     rax, [r10+58h]
.text:0000000180008226                 mov     [rax], ecx
.text:0000000180008228
.text:0000000180008228 loc_180008228:                          ; CODE XREF: sub_180008160+9C↑j
.text:0000000180008228                                         ; sub_180008160+A1↑j
.text:0000000180008228                 mov     [rdx], r11
.text:000000018000822B                 jmp     short loc_180008234
.text:000000018000822D ; ---------------------------------------------------------------------------
.text:000000018000822D
.text:000000018000822D loc_18000822D:                          ; CODE XREF: sub_180008160+59↑j
.text:000000018000822D                                         ; sub_180008160+69↑j ...
.text:000000018000822D                 mov     qword ptr [rdx], 0FFFFFFFFFFFFFFFFh
.text:0000000180008234
.text:0000000180008234 loc_180008234:                          ; CODE XREF: sub_180008160+CB↑j
.text:0000000180008234                 mov     rbx, [rsp+arg_0]
.text:0000000180008239                 xor     eax, eax
.text:000000018000823B                 mov     rbp, [rsp+arg_8]
.text:0000000180008240                 mov     rsi, [rsp+arg_10]
.text:0000000180008245                 mov     rdi, [rsp+arg_18]
.text:000000018000824A                 mov     qword ptr [rdx+8], 0
.text:0000000180008252                 mov     [rdx+10h], rax
.text:0000000180008256                 mov     rax, rdx
.text:0000000180008259                 retn
.text:0000000180008259 sub_180008160   endp
.text:0000000180008259
.text:0000000180008259 ; ---------------------------------------------------------------------------
.text:000000018000825A algn_18000825A:                         ; DATA XREF: .pdata:000000018001C774↓o
.text:000000018000825A                 align 20h
.text:0000000180008260
.text:0000000180008260 ; =============== S U B R O U T I N E =======================================
.text:0000000180008260
.text:0000000180008260
.text:0000000180008260 sub_180008260   proc near               ; DATA XREF: .rdata:0000000180013B18↓o
.text:0000000180008260                                         ; .pdata:000000018001C780↓o
.text:0000000180008260
.text:0000000180008260 arg_0           = qword ptr  8
.text:0000000180008260 arg_8           = qword ptr  10h
.text:0000000180008260 arg_10          = qword ptr  18h
.text:0000000180008260 arg_18          = qword ptr  20h
.text:0000000180008260 arg_20          = dword ptr  28h
.text:0000000180008260
.text:0000000180008260                 mov     [rsp+arg_0], rbx
.text:0000000180008265                 mov     [rsp+arg_8], rbp
.text:000000018000826A                 mov     [rsp+arg_10], rsi
.text:000000018000826F                 mov     [rsp+arg_18], rdi
.text:0000000180008274                 push    r14
.text:0000000180008276                 test    byte ptr [rcx+70h], 2
.text:000000018000827A                 mov     rbp, r8
.text:000000018000827D                 mov     rax, [rcx+38h]
.text:0000000180008281                 mov     r10, rcx
.text:0000000180008284                 mov     rdi, [rax]
.text:0000000180008287                 jz      short loc_18000828D
.text:0000000180008289                 xor     ecx, ecx
.text:000000018000828B                 jmp     short loc_1800082A3
.text:000000018000828D ; ---------------------------------------------------------------------------
.text:000000018000828D
.text:000000018000828D loc_18000828D:                          ; CODE XREF: sub_180008260+27↑j
.text:000000018000828D                 mov     rax, [rcx+40h]
.text:0000000180008291                 mov     rcx, [rax]
.text:0000000180008294                 test    rcx, rcx
.text:0000000180008297                 jz      short loc_1800082A3
.text:0000000180008299                 cmp     [r10+68h], rcx
.text:000000018000829D                 jnb     short loc_1800082A3
.text:000000018000829F                 mov     [r10+68h], rcx
.text:00000001800082A3
.text:00000001800082A3 loc_1800082A3:                          ; CODE XREF: sub_180008260+2B↑j
.text:00000001800082A3                                         ; sub_180008260+37↑j ...
.text:00000001800082A3                 mov     r14, [r10+18h]
.text:00000001800082A7                 mov     rsi, [r10+68h]
.text:00000001800082AB                 mov     r8d, [rsp+8+arg_20]
.text:00000001800082B0                 mov     r11, rsi
.text:00000001800082B3                 mov     rbx, [r14]
.text:00000001800082B6                 sub     r11, rbx
.text:00000001800082B9                 test    r9d, r9d
.text:00000001800082BC                 jz      short loc_18000831D
.text:00000001800082BE                 sub     r9d, 1
.text:00000001800082C2                 jz      short loc_1800082D3
.text:00000001800082C4                 cmp     r9d, 1
.text:00000001800082C8                 jnz     loc_18000839A
.text:00000001800082CE                 mov     rax, r11
.text:00000001800082D1                 jmp     short loc_18000831F
.text:00000001800082D3 ; ---------------------------------------------------------------------------
.text:00000001800082D3
.text:00000001800082D3 loc_1800082D3:                          ; CODE XREF: sub_180008260+62↑j
.text:00000001800082D3                 mov     eax, r8d
.text:00000001800082D6                 and     eax, 3
.text:00000001800082D9                 cmp     al, 3
.text:00000001800082DB                 jz      loc_18000839A
.text:00000001800082E1                 test    r8b, 1
.text:00000001800082E5                 jz      short loc_1800082FD
.text:00000001800082E7                 test    rdi, rdi
.text:00000001800082EA                 jnz     short loc_1800082F5
.text:00000001800082EC                 test    rbx, rbx
.text:00000001800082EF                 jnz     loc_18000839A
.text:00000001800082F5
.text:00000001800082F5 loc_1800082F5:                          ; CODE XREF: sub_180008260+8A↑j
.text:00000001800082F5                 mov     rax, rdi
.text:00000001800082F8                 sub     rax, rbx
.text:00000001800082FB                 jmp     short loc_18000831F
.text:00000001800082FD ; ---------------------------------------------------------------------------
.text:00000001800082FD
.text:00000001800082FD loc_1800082FD:                          ; CODE XREF: sub_180008260+85↑j
.text:00000001800082FD                 test    r8b, 2
.text:0000000180008301                 jz      loc_18000839A
.text:0000000180008307                 test    rcx, rcx
.text:000000018000830A                 jnz     short loc_180008315
.text:000000018000830C                 test    rbx, rbx
.text:000000018000830F                 jnz     loc_18000839A
.text:0000000180008315
.text:0000000180008315 loc_180008315:                          ; CODE XREF: sub_180008260+AA↑j
.text:0000000180008315                 mov     rax, rcx
.text:0000000180008318                 sub     rax, rbx
.text:000000018000831B                 jmp     short loc_18000831F
.text:000000018000831D ; ---------------------------------------------------------------------------
.text:000000018000831D
.text:000000018000831D loc_18000831D:                          ; CODE XREF: sub_180008260+5C↑j
.text:000000018000831D                 xor     eax, eax
.text:000000018000831F
.text:000000018000831F loc_18000831F:                          ; CODE XREF: sub_180008260+71↑j
.text:000000018000831F                                         ; sub_180008260+9B↑j ...
.text:000000018000831F                 lea     r9, [rax+rbp]
.text:0000000180008323                 cmp     r9, r11
.text:0000000180008326                 ja      short loc_18000839A
.text:0000000180008328                 test    r9, r9
.text:000000018000832B                 jz      short loc_180008343
.text:000000018000832D                 test    r8b, 1
.text:0000000180008331                 jz      short loc_180008338
.text:0000000180008333                 test    rdi, rdi
.text:0000000180008336                 jz      short loc_18000839A
.text:0000000180008338
.text:0000000180008338 loc_180008338:                          ; CODE XREF: sub_180008260+D1↑j
.text:0000000180008338                 test    r8b, 2
.text:000000018000833C                 jz      short loc_180008343
.text:000000018000833E                 test    rcx, rcx
.text:0000000180008341                 jz      short loc_18000839A
.text:0000000180008343
.text:0000000180008343 loc_180008343:                          ; CODE XREF: sub_180008260+CB↑j
.text:0000000180008343                                         ; sub_180008260+DC↑j
.text:0000000180008343                 lea     r11, [rbx+r9]
.text:0000000180008347                 test    r8b, 1
.text:000000018000834B                 jz      short loc_180008365
.text:000000018000834D                 test    rdi, rdi
.text:0000000180008350                 jz      short loc_180008365
.text:0000000180008352                 mov     [r14], rbx
.text:0000000180008355                 sub     esi, r11d
.text:0000000180008358                 mov     rax, [r10+38h]
.text:000000018000835C                 mov     [rax], r11
.text:000000018000835F                 mov     rax, [r10+50h]
.text:0000000180008363                 mov     [rax], esi
.text:0000000180008365
.text:0000000180008365 loc_180008365:                          ; CODE XREF: sub_180008260+EB↑j
.text:0000000180008365                                         ; sub_180008260+F0↑j
.text:0000000180008365                 test    r8b, 2
.text:0000000180008369                 jz      short loc_180008395
.text:000000018000836B                 test    rcx, rcx
.text:000000018000836E                 jz      short loc_180008395
.text:0000000180008370                 mov     rax, [r10+58h]
.text:0000000180008374                 movsxd  rcx, dword ptr [rax]
.text:0000000180008377                 mov     rax, [r10+40h]
.text:000000018000837B                 add     rcx, [rax]
.text:000000018000837E                 mov     rax, [r10+20h]
.text:0000000180008382                 sub     ecx, r11d
.text:0000000180008385                 mov     [rax], rbx
.text:0000000180008388                 mov     rax, [r10+40h]
.text:000000018000838C                 mov     [rax], r11
.text:000000018000838F                 mov     rax, [r10+58h]
.text:0000000180008393                 mov     [rax], ecx
.text:0000000180008395
.text:0000000180008395 loc_180008395:                          ; CODE XREF: sub_180008260+109↑j
.text:0000000180008395                                         ; sub_180008260+10E↑j
.text:0000000180008395                 mov     [rdx], r9
.text:0000000180008398                 jmp     short loc_1800083A1
.text:000000018000839A ; ---------------------------------------------------------------------------
.text:000000018000839A
.text:000000018000839A loc_18000839A:                          ; CODE XREF: sub_180008260+68↑j
.text:000000018000839A                                         ; sub_180008260+7B↑j ...
.text:000000018000839A                 mov     qword ptr [rdx], 0FFFFFFFFFFFFFFFFh
.text:00000001800083A1
.text:00000001800083A1 loc_1800083A1:                          ; CODE XREF: sub_180008260+138↑j
.text:00000001800083A1                 mov     rbx, [rsp+8+arg_0]
.text:00000001800083A6                 xor     eax, eax
.text:00000001800083A8                 mov     rbp, [rsp+8+arg_8]
.text:00000001800083AD                 mov     rsi, [rsp+8+arg_10]
.text:00000001800083B2                 mov     rdi, [rsp+8+arg_18]
.text:00000001800083B7                 mov     qword ptr [rdx+8], 0
.text:00000001800083BF                 mov     [rdx+10h], rax
.text:00000001800083C3                 mov     rax, rdx
.text:00000001800083C6                 pop     r14
.text:00000001800083C8                 retn
.text:00000001800083C8 sub_180008260   endp
.text:00000001800083C8
.text:00000001800083C8 ; ---------------------------------------------------------------------------
.text:00000001800083C9 algn_1800083C9:                         ; DATA XREF: .pdata:000000018001C780↓o
.text:00000001800083C9                 align 10h
.text:00000001800083D0
.text:00000001800083D0 ; =============== S U B R O U T I N E =======================================
.text:00000001800083D0
.text:00000001800083D0
.text:00000001800083D0 sub_1800083D0   proc near               ; DATA XREF: .rdata:0000000180013AF8↓o
.text:00000001800083D0                                         ; .pdata:000000018001C78C↓o
.text:00000001800083D0                 sub     rsp, 18h
.text:00000001800083D4                 mov     r10, [rcx+38h]
.text:00000001800083D8                 mov     rdx, rcx
.text:00000001800083DB                 mov     r8, [r10]
.text:00000001800083DE                 test    r8, r8
.text:00000001800083E1                 jz      short loc_180008440
.text:00000001800083E3                 mov     rax, [rcx+50h]
.text:00000001800083E7                 movsxd  rcx, dword ptr [rax]
.text:00000001800083EA                 add     rcx, r8
.text:00000001800083ED                 cmp     r8, rcx
.text:00000001800083F0                 jnb     short loc_1800083FB
.text:00000001800083F2                 movzx   eax, byte ptr [r8]
.text:00000001800083F6                 add     rsp, 18h
.text:00000001800083FA                 retn
.text:00000001800083FB ; ---------------------------------------------------------------------------
.text:00000001800083FB
.text:00000001800083FB loc_1800083FB:                          ; CODE XREF: sub_1800083D0+20↑j
.text:00000001800083FB                 mov     rax, [rdx+40h]
.text:00000001800083FF                 mov     rcx, [rax]
.text:0000000180008402                 test    rcx, rcx
.text:0000000180008405                 jz      short loc_180008440
.text:0000000180008407                 test    byte ptr [rdx+70h], 4
.text:000000018000840B                 jnz     short loc_180008440
.text:000000018000840D                 mov     r9, [rdx+68h]
.text:0000000180008411                 cmp     r9, rcx
.text:0000000180008414                 cmovb   r9, rcx
.text:0000000180008418                 cmp     r9, r8
.text:000000018000841B                 jbe     short loc_180008440
.text:000000018000841D                 mov     [rdx+68h], r9
.text:0000000180008421                 mov     rcx, [r10]
.text:0000000180008424                 mov     [r10], rcx
.text:0000000180008427                 sub     r9d, ecx
.text:000000018000842A                 mov     rax, [rdx+50h]
.text:000000018000842E                 mov     [rax], r9d
.text:0000000180008431                 mov     rax, [rdx+38h]
.text:0000000180008435                 mov     rcx, [rax]
.text:0000000180008438                 movzx   eax, byte ptr [rcx]
.text:000000018000843B                 add     rsp, 18h
.text:000000018000843F                 retn
.text:0000000180008440 ; ---------------------------------------------------------------------------
.text:0000000180008440
.text:0000000180008440 loc_180008440:                          ; CODE XREF: sub_1800083D0+11↑j
.text:0000000180008440                                         ; sub_1800083D0+35↑j ...
.text:0000000180008440                 mov     eax, 0FFFFFFFFh
.text:0000000180008445                 add     rsp, 18h
.text:0000000180008449                 retn
.text:0000000180008449 sub_1800083D0   endp
.text:0000000180008449
.text:0000000180008449 ; ---------------------------------------------------------------------------
.text:000000018000844A algn_18000844A:                         ; DATA XREF: .pdata:000000018001C78C↓o
.text:000000018000844A                 align 10h
.text:0000000180008450
.text:0000000180008450 ; =============== S U B R O U T I N E =======================================
.text:0000000180008450
.text:0000000180008450
.text:0000000180008450 sub_180008450   proc near               ; DATA XREF: .rdata:0000000180013AE8↓o
.text:0000000180008450                 mov     rax, [rcx+38h]
.text:0000000180008454                 mov     r8, [rax]
.text:0000000180008457                 test    r8, r8
.text:000000018000845A                 jz      short loc_18000849C
.text:000000018000845C                 mov     rax, [rcx+18h]
.text:0000000180008460                 cmp     r8, [rax]
.text:0000000180008463                 jbe     short loc_18000849C
.text:0000000180008465                 cmp     edx, 0FFFFFFFFh
.text:0000000180008468                 jz      short loc_180008476
.text:000000018000846A                 cmp     dl, [r8-1]
.text:000000018000846E                 jz      short loc_180008476
.text:0000000180008470                 test    byte ptr [rcx+70h], 2
.text:0000000180008474                 jnz     short loc_18000849C
.text:0000000180008476
.text:0000000180008476 loc_180008476:                          ; CODE XREF: sub_180008450+18↑j
.text:0000000180008476                                         ; sub_180008450+1E↑j
.text:0000000180008476                 mov     rax, [rcx+50h]
.text:000000018000847A                 inc     dword ptr [rax]
.text:000000018000847C                 mov     rax, [rcx+38h]
.text:0000000180008480                 dec     qword ptr [rax]
.text:0000000180008483                 cmp     edx, 0FFFFFFFFh
.text:0000000180008486                 jz      short loc_180008491
.text:0000000180008488                 mov     rax, [rcx+38h]
.text:000000018000848C                 mov     rcx, [rax]
.text:000000018000848F                 mov     [rcx], dl
.text:0000000180008491
.text:0000000180008491 loc_180008491:                          ; CODE XREF: sub_180008450+36↑j
.text:0000000180008491                 xor     eax, eax
.text:0000000180008493                 cmp     edx, 0FFFFFFFFh
.text:0000000180008496                 cmovz   edx, eax
.text:0000000180008499                 mov     eax, edx
.text:000000018000849B                 retn
.text:000000018000849C ; ---------------------------------------------------------------------------
.text:000000018000849C
.text:000000018000849C loc_18000849C:                          ; CODE XREF: sub_180008450+A↑j
.text:000000018000849C                                         ; sub_180008450+13↑j ...
.text:000000018000849C                 mov     eax, 0FFFFFFFFh
.text:00000001800084A1                 retn
.text:00000001800084A1 sub_180008450   endp
.text:00000001800084A1
.text:00000001800084A1 ; ---------------------------------------------------------------------------
.text:00000001800084A2                 align 10h
.text:00000001800084B0
.text:00000001800084B0 ; =============== S U B R O U T I N E =======================================
.text:00000001800084B0
.text:00000001800084B0
.text:00000001800084B0 sub_1800084B0   proc near               ; DATA XREF: .rdata:0000000180013AE0↓o
.text:00000001800084B0                                         ; .pdata:000000018001C798↓o
.text:00000001800084B0
.text:00000001800084B0 arg_8           = qword ptr  10h
.text:00000001800084B0 arg_10          = qword ptr  18h
.text:00000001800084B0
.text:00000001800084B0                 mov     [rsp+arg_8], rbx
.text:00000001800084B5                 mov     [rsp+arg_10], rbp
.text:00000001800084BA                 push    rsi
.text:00000001800084BB                 push    rdi
.text:00000001800084BC                 push    r12
.text:00000001800084BE                 push    r14
.text:00000001800084C0                 push    r15
.text:00000001800084C2                 sub     rsp, 20h
.text:00000001800084C6                 test    byte ptr [rcx+70h], 2
.text:00000001800084CA                 mov     r15d, edx
.text:00000001800084CD                 mov     rbx, rcx
.text:00000001800084D0                 jnz     loc_180008672
.text:00000001800084D6                 cmp     edx, 0FFFFFFFFh
.text:00000001800084D9                 jnz     short loc_1800084E2
.text:00000001800084DB                 xor     eax, eax
.text:00000001800084DD                 jmp     loc_180008677
.text:00000001800084E2 ; ---------------------------------------------------------------------------
.text:00000001800084E2
.text:00000001800084E2 loc_1800084E2:                          ; CODE XREF: sub_1800084B0+29↑j
.text:00000001800084E2                 mov     rax, [rcx+40h]
.text:00000001800084E6                 mov     rsi, [rax]
.text:00000001800084E9                 mov     rax, [rcx+58h]
.text:00000001800084ED                 movsxd  rdi, dword ptr [rax]
.text:00000001800084F0                 add     rdi, rsi
.text:00000001800084F3                 test    rsi, rsi
.text:00000001800084F6                 jz      short loc_180008516
.text:00000001800084F8                 cmp     rsi, rdi
.text:00000001800084FB                 jnb     short loc_180008516
.text:00000001800084FD                 call    cs:?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Pninc(void)
.text:0000000180008503                 mov     [rax], r15b
.text:0000000180008506                 lea     rax, [rsi+1]
.text:000000018000850A                 mov     [rbx+68h], rax
.text:000000018000850E                 mov     eax, r15d
.text:0000000180008511                 jmp     loc_180008677
.text:0000000180008516 ; ---------------------------------------------------------------------------
.text:0000000180008516
.text:0000000180008516 loc_180008516:                          ; CODE XREF: sub_1800084B0+46↑j
.text:0000000180008516                                         ; sub_1800084B0+4B↑j
.text:0000000180008516                 mov     rax, [rcx+18h]
.text:000000018000851A                 xor     r12d, r12d
.text:000000018000851D                 mov     r14, [rax]
.text:0000000180008520                 sub     rdi, r14
.text:0000000180008523                 test    rsi, rsi
.text:0000000180008526                 cmovz   rdi, r12
.text:000000018000852A                 cmp     rdi, 20h ; ' '
.text:000000018000852E                 jnb     short loc_180008541
.text:0000000180008530                 mov     esi, 20h ; ' '
.text:0000000180008535                 mov     ecx, esi        ; Size
.text:0000000180008537                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000853C                 mov     rbp, rax
.text:000000018000853F                 jmp     short loc_1800085AD
.text:0000000180008541 ; ---------------------------------------------------------------------------
.text:0000000180008541
.text:0000000180008541 loc_180008541:                          ; CODE XREF: sub_1800084B0+7E↑j
.text:0000000180008541                 cmp     rdi, 3FFFFFFFh
.text:0000000180008548                 jnb     short loc_180008580
.text:000000018000854A                 lea     rsi, [rdi+rdi]
.text:000000018000854E                 mov     rax, rsi
.text:0000000180008551                 cmp     rsi, 1000h
.text:0000000180008558                 jb      short loc_180008569
.text:000000018000855A                 lea     rcx, [rsi+27h]
.text:000000018000855E                 cmp     rcx, rsi
.text:0000000180008561                 jbe     loc_18000868E
.text:0000000180008567                 jmp     short loc_180008593
.text:0000000180008569 ; ---------------------------------------------------------------------------
.text:0000000180008569
.text:0000000180008569 loc_180008569:                          ; CODE XREF: sub_1800084B0+A8↑j
.text:0000000180008569                 test    rax, rax
.text:000000018000856C                 jz      short loc_18000857B
.text:000000018000856E                 mov     rcx, rsi        ; Size
.text:0000000180008571                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180008576                 mov     rbp, rax
.text:0000000180008579                 jmp     short loc_1800085AD
.text:000000018000857B ; ---------------------------------------------------------------------------
.text:000000018000857B
.text:000000018000857B loc_18000857B:                          ; CODE XREF: sub_1800084B0+BC↑j
.text:000000018000857B                 mov     rbp, r12
.text:000000018000857E                 jmp     short loc_1800085AD
.text:0000000180008580 ; ---------------------------------------------------------------------------
.text:0000000180008580
.text:0000000180008580 loc_180008580:                          ; CODE XREF: sub_1800084B0+98↑j
.text:0000000180008580                 mov     esi, 7FFFFFFFh
.text:0000000180008585                 cmp     rdi, rsi
.text:0000000180008588                 jnb     loc_180008672
.text:000000018000858E                 mov     ecx, 80000026h  ; Size
.text:0000000180008593
.text:0000000180008593 loc_180008593:                          ; CODE XREF: sub_1800084B0+B7↑j
.text:0000000180008593                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:0000000180008598                 test    rax, rax
.text:000000018000859B                 jz      loc_18000866B
.text:00000001800085A1                 lea     rbp, [rax+27h]
.text:00000001800085A5                 and     rbp, 0FFFFFFFFFFFFFFE0h
.text:00000001800085A9                 mov     [rbp-8], rax
.text:00000001800085AD
.text:00000001800085AD loc_1800085AD:                          ; CODE XREF: sub_1800084B0+8F↑j
.text:00000001800085AD                                         ; sub_1800084B0+C9↑j ...
.text:00000001800085AD                 mov     r8, rdi         ; Size
.text:00000001800085B0                 mov     rdx, r14        ; Src
.text:00000001800085B3                 mov     rcx, rbp        ; void *
.text:00000001800085B6                 call    memcpy
.text:00000001800085BB                 lea     rdx, [rdi+rbp]
.text:00000001800085BF                 mov     ecx, ebp
.text:00000001800085C1                 lea     rax, [rdx+1]
.text:00000001800085C5                 sub     ecx, edx
.text:00000001800085C7                 mov     [rbx+68h], rax
.text:00000001800085CB                 add     ecx, esi
.text:00000001800085CD                 mov     rax, [rbx+20h]
.text:00000001800085D1                 mov     [rax], rbp
.text:00000001800085D4                 mov     rax, [rbx+40h]
.text:00000001800085D8                 mov     [rax], rdx
.text:00000001800085DB                 mov     rax, [rbx+58h]
.text:00000001800085DF                 mov     [rax], ecx
.text:00000001800085E1                 test    byte ptr [rbx+70h], 4
.text:00000001800085E5                 jz      short loc_1800085FD
.text:00000001800085E7                 mov     rax, [rbx+18h]
.text:00000001800085EB                 mov     [rax], rbp
.text:00000001800085EE                 mov     rax, [rbx+38h]
.text:00000001800085F2                 mov     [rax], r12
.text:00000001800085F5                 mov     rax, [rbx+50h]
.text:00000001800085F9                 mov     [rax], ebp
.text:00000001800085FB                 jmp     short loc_180008624
.text:00000001800085FD ; ---------------------------------------------------------------------------
.text:00000001800085FD
.text:00000001800085FD loc_1800085FD:                          ; CODE XREF: sub_1800084B0+135↑j
.text:00000001800085FD                 mov     rax, [rbx+38h]
.text:0000000180008601                 mov     rdx, [rbx+68h]
.text:0000000180008605                 mov     rcx, [rax]
.text:0000000180008608                 mov     rax, [rbx+18h]
.text:000000018000860C                 sub     rcx, r14
.text:000000018000860F                 add     rcx, rbp
.text:0000000180008612                 sub     edx, ecx
.text:0000000180008614                 mov     [rax], rbp
.text:0000000180008617                 mov     rax, [rbx+38h]
.text:000000018000861B                 mov     [rax], rcx
.text:000000018000861E                 mov     rax, [rbx+50h]
.text:0000000180008622                 mov     [rax], edx
.text:0000000180008624
.text:0000000180008624 loc_180008624:                          ; CODE XREF: sub_1800084B0+14B↑j
.text:0000000180008624                 test    byte ptr [rbx+70h], 1
.text:0000000180008628                 jz      short loc_180008656
.text:000000018000862A                 cmp     rdi, 1000h
.text:0000000180008631                 jb      short loc_18000864B
.text:0000000180008633                 mov     rcx, [r14-8]
.text:0000000180008637                 add     rdi, 27h ; '''
.text:000000018000863B                 sub     r14, rcx
.text:000000018000863E                 lea     rax, [r14-8]
.text:0000000180008642                 cmp     rax, 1Fh
.text:0000000180008646                 ja      short loc_18000866B
.text:0000000180008648                 mov     r14, rcx
.text:000000018000864B
.text:000000018000864B loc_18000864B:                          ; CODE XREF: sub_1800084B0+181↑j
.text:000000018000864B                 mov     rdx, rdi
.text:000000018000864E                 mov     rcx, r14        ; Block
.text:0000000180008651                 call    j_j_free
.text:0000000180008656
.text:0000000180008656 loc_180008656:                          ; CODE XREF: sub_1800084B0+178↑j
.text:0000000180008656                 or      dword ptr [rbx+70h], 1
.text:000000018000865A                 mov     rcx, rbx
.text:000000018000865D                 call    cs:?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Pninc(void)
.text:0000000180008663                 mov     [rax], r15b
.text:0000000180008666                 mov     eax, r15d
.text:0000000180008669                 jmp     short loc_180008677
.text:000000018000866B ; ---------------------------------------------------------------------------
.text:000000018000866B
.text:000000018000866B loc_18000866B:                          ; CODE XREF: sub_1800084B0+EB↑j
.text:000000018000866B                                         ; sub_1800084B0+196↑j
.text:000000018000866B                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180008671                 int     3               ; Trap to Debugger
.text:0000000180008672 ; ---------------------------------------------------------------------------
.text:0000000180008672
.text:0000000180008672 loc_180008672:                          ; CODE XREF: sub_1800084B0+20↑j
.text:0000000180008672                                         ; sub_1800084B0+D8↑j
.text:0000000180008672                 mov     eax, 0FFFFFFFFh
.text:0000000180008677
.text:0000000180008677 loc_180008677:                          ; CODE XREF: sub_1800084B0+2D↑j
.text:0000000180008677                                         ; sub_1800084B0+61↑j ...
.text:0000000180008677                 mov     rbx, [rsp+48h+arg_8]
.text:000000018000867C                 mov     rbp, [rsp+48h+arg_10]
.text:0000000180008681                 add     rsp, 20h
.text:0000000180008685                 pop     r15
.text:0000000180008687                 pop     r14
.text:0000000180008689                 pop     r12
.text:000000018000868B                 pop     rdi
.text:000000018000868C                 pop     rsi
.text:000000018000868D                 retn
.text:000000018000868E ; ---------------------------------------------------------------------------
.text:000000018000868E
.text:000000018000868E loc_18000868E:                          ; CODE XREF: sub_1800084B0+B1↑j
.text:000000018000868E                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:000000018000868E ; ---------------------------------------------------------------------------
.text:0000000180008693                 db 0CCh
.text:0000000180008693 sub_1800084B0   endp
.text:0000000180008693
.text:0000000180008694 algn_180008694:                         ; DATA XREF: .pdata:000000018001C798↓o
.text:0000000180008694                 align 20h
.text:00000001800086A0
.text:00000001800086A0 ; =============== S U B R O U T I N E =======================================
.text:00000001800086A0
.text:00000001800086A0
.text:00000001800086A0 sub_1800086A0   proc near               ; CODE XREF: sub_180007600+27F↑p
.text:00000001800086A0                                         ; sub_1800078D0+3D↑p ...
.text:00000001800086A0                 push    rbx
.text:00000001800086A2                 sub     rsp, 20h
.text:00000001800086A6                 test    byte ptr [rcx+70h], 1
.text:00000001800086AA                 lea     rax, off_180013AC8
.text:00000001800086B1                 mov     [rcx], rax
.text:00000001800086B4                 mov     rbx, rcx
.text:00000001800086B7                 jz      short loc_18000870F
.text:00000001800086B9                 mov     rax, [rcx+40h]
.text:00000001800086BD                 mov     rcx, [rax]
.text:00000001800086C0                 test    rcx, rcx
.text:00000001800086C3                 jz      short loc_1800086D1
.text:00000001800086C5                 mov     rax, [rbx+58h]
.text:00000001800086C9                 movsxd  rdx, dword ptr [rax]
.text:00000001800086CC                 add     rdx, rcx
.text:00000001800086CF                 jmp     short loc_1800086DF
.text:00000001800086D1 ; ---------------------------------------------------------------------------
.text:00000001800086D1
.text:00000001800086D1 loc_1800086D1:                          ; CODE XREF: sub_1800086A0+23↑j
.text:00000001800086D1                 mov     rax, [rbx+50h]
.text:00000001800086D5                 mov     rcx, [rbx+38h]
.text:00000001800086D9                 movsxd  rdx, dword ptr [rax]
.text:00000001800086DC                 add     rdx, [rcx]
.text:00000001800086DF
.text:00000001800086DF loc_1800086DF:                          ; CODE XREF: sub_1800086A0+2F↑j
.text:00000001800086DF                 mov     rax, [rbx+18h]
.text:00000001800086E3                 mov     rcx, [rax]
.text:00000001800086E6                 sub     rdx, rcx
.text:00000001800086E9                 cmp     rdx, 1000h
.text:00000001800086F0                 jb      short loc_18000870A
.text:00000001800086F2                 mov     r8, [rcx-8]
.text:00000001800086F6                 add     rdx, 27h ; '''
.text:00000001800086FA                 sub     rcx, r8
.text:00000001800086FD                 lea     rax, [rcx-8]
.text:0000000180008701                 cmp     rax, 1Fh
.text:0000000180008705                 ja      short loc_180008750
.text:0000000180008707                 mov     rcx, r8         ; Block
.text:000000018000870A
.text:000000018000870A loc_18000870A:                          ; CODE XREF: sub_1800086A0+50↑j
.text:000000018000870A                 call    j_j_free
.text:000000018000870F
.text:000000018000870F loc_18000870F:                          ; CODE XREF: sub_1800086A0+17↑j
.text:000000018000870F                 mov     rax, [rbx+18h]
.text:0000000180008713                 xor     ecx, ecx
.text:0000000180008715                 mov     [rax], rcx
.text:0000000180008718                 mov     rax, [rbx+38h]
.text:000000018000871C                 mov     [rax], rcx
.text:000000018000871F                 mov     rax, [rbx+50h]
.text:0000000180008723                 mov     [rax], ecx
.text:0000000180008725                 mov     rax, [rbx+20h]
.text:0000000180008729                 mov     [rax], rcx
.text:000000018000872C                 mov     rax, [rbx+40h]
.text:0000000180008730                 mov     [rax], rcx
.text:0000000180008733                 mov     rax, [rbx+58h]
.text:0000000180008737                 mov     [rax], ecx
.text:0000000180008739                 and     dword ptr [rbx+70h], 0FFFFFFFEh
.text:000000018000873D                 mov     [rbx+68h], rcx
.text:0000000180008741                 mov     rcx, rbx
.text:0000000180008744                 add     rsp, 20h
.text:0000000180008748                 pop     rbx
.text:0000000180008749                 jmp     cs:__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_streambuf<char,std::char_traits<char>>::~basic_streambuf<char,std::char_traits<char>>(void)
.text:0000000180008750 ; ---------------------------------------------------------------------------
.text:0000000180008750
.text:0000000180008750 loc_180008750:                          ; CODE XREF: sub_1800086A0+65↑j
.text:0000000180008750                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180008750 ; ---------------------------------------------------------------------------
.text:0000000180008756                 db 0CCh
.text:0000000180008756 sub_1800086A0   endp
.text:0000000180008756
.text:0000000180008757 algn_180008757:                         ; DATA XREF: .pdata:000000018001C7A4↓o
.text:0000000180008757                 align 20h
.text:0000000180008760
.text:0000000180008760 ; =============== S U B R O U T I N E =======================================
.text:0000000180008760
.text:0000000180008760
.text:0000000180008760 sub_180008760   proc near               ; DATA XREF: .rdata:0000000180013A80↓o
.text:0000000180008760                                         ; .pdata:000000018001C7B0↓o
.text:0000000180008760
.text:0000000180008760 arg_0           = qword ptr  8
.text:0000000180008760
.text:0000000180008760                 mov     [rsp+arg_0], rbx
.text:0000000180008765                 push    rdi
.text:0000000180008766                 sub     rsp, 20h
.text:000000018000876A                 mov     rbx, rcx
.text:000000018000876D                 mov     rcx, rdx
.text:0000000180008770                 call    sub_18000A0D0
.text:0000000180008775                 mov     rcx, rax
.text:0000000180008778                 mov     rdi, rax
.text:000000018000877B                 call    cs:?always_noconv@codecvt_base@std@@QEBA_NXZ ; std::codecvt_base::always_noconv(void)
.text:0000000180008781                 test    al, al
.text:0000000180008783                 jz      short loc_180008798
.text:0000000180008785                 mov     qword ptr [rbx+68h], 0
.text:000000018000878D                 mov     rbx, [rsp+28h+arg_0]
.text:0000000180008792                 add     rsp, 20h
.text:0000000180008796                 pop     rdi
.text:0000000180008797                 retn
.text:0000000180008798 ; ---------------------------------------------------------------------------
.text:0000000180008798
.text:0000000180008798 loc_180008798:                          ; CODE XREF: sub_180008760+23↑j
.text:0000000180008798                 mov     rcx, rbx
.text:000000018000879B                 mov     [rbx+68h], rdi
.text:000000018000879F                 mov     rbx, [rsp+28h+arg_0]
.text:00000001800087A4                 add     rsp, 20h
.text:00000001800087A8                 pop     rdi
.text:00000001800087A9                 jmp     cs:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Init(void)
.text:00000001800087A9 sub_180008760   endp
.text:00000001800087A9
.text:00000001800087B0
.text:00000001800087B0 ; =============== S U B R O U T I N E =======================================
.text:00000001800087B0
.text:00000001800087B0
.text:00000001800087B0 sub_1800087B0   proc near               ; DATA XREF: .rdata:0000000180013A78↓o
.text:00000001800087B0                                         ; .pdata:000000018001C7B0↓o ...
.text:00000001800087B0                 push    rbx
.text:00000001800087B2                 sub     rsp, 20h
.text:00000001800087B6                 cmp     qword ptr [rcx+80h], 0
.text:00000001800087BE                 mov     rbx, rcx
.text:00000001800087C1                 jz      short loc_1800087F0
.text:00000001800087C3                 mov     rax, [rcx]
.text:00000001800087C6                 mov     edx, 0FFFFFFFFh
.text:00000001800087CB                 call    qword ptr [rax+18h]
.text:00000001800087CE                 cmp     eax, 0FFFFFFFFh
.text:00000001800087D1                 jz      short loc_1800087F0
.text:00000001800087D3                 mov     rcx, [rbx+80h]  ; Stream
.text:00000001800087DA                 call    cs:fflush
.text:00000001800087E0                 xor     ecx, ecx
.text:00000001800087E2                 test    eax, eax
.text:00000001800087E4                 setns   cl
.text:00000001800087E7                 lea     eax, [rcx-1]
.text:00000001800087EA                 add     rsp, 20h
.text:00000001800087EE                 pop     rbx
.text:00000001800087EF                 retn
.text:00000001800087F0 ; ---------------------------------------------------------------------------
.text:00000001800087F0
.text:00000001800087F0 loc_1800087F0:                          ; CODE XREF: sub_1800087B0+11↑j
.text:00000001800087F0                                         ; sub_1800087B0+21↑j
.text:00000001800087F0                 xor     eax, eax
.text:00000001800087F2                 add     rsp, 20h
.text:00000001800087F6                 pop     rbx
.text:00000001800087F7                 retn
.text:00000001800087F7 sub_1800087B0   endp
.text:00000001800087F7
.text:00000001800087F7 ; ---------------------------------------------------------------------------
.text:00000001800087F8 algn_1800087F8:                         ; DATA XREF: .pdata:000000018001C7BC↓o
.text:00000001800087F8                 align 20h
.text:0000000180008800
.text:0000000180008800 ; =============== S U B R O U T I N E =======================================
.text:0000000180008800
.text:0000000180008800
.text:0000000180008800 sub_180008800   proc near               ; DATA XREF: .rdata:0000000180013A70↓o
.text:0000000180008800                                         ; .rdata:00000001800157B4↓o ...
.text:0000000180008800
.text:0000000180008800 Base            = qword ptr -38h
.text:0000000180008800 Pointer         = qword ptr -30h
.text:0000000180008800 Count           = qword ptr -28h
.text:0000000180008800 var_20          = qword ptr -20h
.text:0000000180008800 var_18          = qword ptr -18h
.text:0000000180008800
.text:0000000180008800 ; __unwind { // __GSHandlerCheck
.text:0000000180008800                 push    rbx
.text:0000000180008802                 push    rsi
.text:0000000180008803                 sub     rsp, 48h
.text:0000000180008807                 mov     rax, cs:__security_cookie
.text:000000018000880E                 xor     rax, rsp
.text:0000000180008811                 mov     [rsp+58h+var_20], rax
.text:0000000180008816                 xor     esi, esi
.text:0000000180008818                 mov     r9, r8          ; Size
.text:000000018000881B                 mov     rbx, rcx
.text:000000018000881E                 test    rdx, rdx
.text:0000000180008821                 jnz     short loc_18000882C
.text:0000000180008823                 test    r8, r8
.text:0000000180008826                 lea     r8d, [rsi+4]
.text:000000018000882A                 jz      short loc_18000882F
.text:000000018000882C
.text:000000018000882C loc_18000882C:                          ; CODE XREF: sub_180008800+21↑j
.text:000000018000882C                 mov     r8d, esi        ; Mode
.text:000000018000882F
.text:000000018000882F loc_18000882F:                          ; CODE XREF: sub_180008800+2A↑j
.text:000000018000882F                 mov     rcx, [rcx+80h]  ; Stream
.text:0000000180008836                 test    rcx, rcx
.text:0000000180008839                 jz      loc_1800088DD
.text:000000018000883F                 call    cs:setvbuf
.text:0000000180008845                 test    eax, eax
.text:0000000180008847                 jnz     loc_1800088DD
.text:0000000180008847 ; } // starts at 180008800
.text:000000018000884D
.text:000000018000884D loc_18000884D:                          ; DATA XREF: .rdata:00000001800157B4↓o
.text:000000018000884D                                         ; .rdata:00000001800157C4↓o ...
.text:000000018000884D ; __unwind { // __GSHandlerCheck
.text:000000018000884D                 mov     [rsp+58h+var_18], rdi
.text:0000000180008852                 mov     rcx, rbx
.text:0000000180008855                 mov     rdi, [rbx+80h]
.text:000000018000885C                 mov     byte ptr [rbx+7Ch], 1
.text:0000000180008860                 mov     [rbx+71h], sil
.text:0000000180008864                 call    cs:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Init(void)
.text:000000018000886A                 test    rdi, rdi
.text:000000018000886D                 jz      short loc_1800088BD
.text:000000018000886F                 lea     r9, [rsp+58h+Count] ; Count
.text:0000000180008874                 mov     [rsp+58h+Base], rsi
.text:0000000180008879                 lea     r8, [rsp+58h+Pointer] ; Pointer
.text:000000018000887E                 mov     [rsp+58h+Pointer], rsi
.text:0000000180008883                 lea     rdx, [rsp+58h+Base] ; Base
.text:0000000180008888                 mov     [rsp+58h+Count], rsi
.text:000000018000888D                 mov     rcx, rdi        ; Stream
.text:0000000180008890                 call    cs:_get_stream_buffer_pointers
.text:0000000180008896                 mov     rcx, [rsp+58h+Base]
.text:000000018000889B                 mov     [rbx+18h], rcx
.text:000000018000889F                 mov     [rbx+20h], rcx
.text:00000001800088A3                 mov     rcx, [rsp+58h+Pointer]
.text:00000001800088A8                 mov     [rbx+38h], rcx
.text:00000001800088AC                 mov     [rbx+40h], rcx
.text:00000001800088B0                 mov     rcx, [rsp+58h+Count]
.text:00000001800088B5                 mov     [rbx+50h], rcx
.text:00000001800088B9                 mov     [rbx+58h], rcx
.text:00000001800088BD
.text:00000001800088BD loc_1800088BD:                          ; CODE XREF: sub_180008800+6D↑j
.text:00000001800088BD                 mov     rcx, cs:qword_18001B2B0
.text:00000001800088C4                 mov     rax, rbx
.text:00000001800088C7                 mov     [rbx+80h], rdi
.text:00000001800088CE                 mov     rdi, [rsp+58h+var_18]
.text:00000001800088D3                 mov     [rbx+74h], rcx
.text:00000001800088D7                 mov     [rbx+68h], rsi
.text:00000001800088DB                 jmp     short loc_1800088DF
.text:00000001800088DB ; } // starts at 18000884D
.text:00000001800088DD ; ---------------------------------------------------------------------------
.text:00000001800088DD
.text:00000001800088DD loc_1800088DD:                          ; CODE XREF: sub_180008800+39↑j
.text:00000001800088DD                                         ; sub_180008800+47↑j
.text:00000001800088DD                                         ; DATA XREF: ...
.text:00000001800088DD ; __unwind { // __GSHandlerCheck
.text:00000001800088DD                 xor     eax, eax
.text:00000001800088DF
.text:00000001800088DF loc_1800088DF:                          ; CODE XREF: sub_180008800+DB↑j
.text:00000001800088DF                 mov     rcx, [rsp+58h+var_20]
.text:00000001800088E4                 xor     rcx, rsp        ; StackCookie
.text:00000001800088E7                 call    __security_check_cookie
.text:00000001800088EC                 add     rsp, 48h
.text:00000001800088F0                 pop     rsi
.text:00000001800088F1                 pop     rbx
.text:00000001800088F2                 retn
.text:00000001800088F2 ; } // starts at 1800088DD
.text:00000001800088F2 sub_180008800   endp
.text:00000001800088F2
.text:00000001800088F2 ; ---------------------------------------------------------------------------
.text:00000001800088F3 algn_1800088F3:                         ; DATA XREF: .pdata:000000018001C7E0↓o
.text:00000001800088F3                 align 20h
.text:0000000180008900
.text:0000000180008900 ; =============== S U B R O U T I N E =======================================
.text:0000000180008900
.text:0000000180008900
.text:0000000180008900 sub_180008900   proc near               ; DATA XREF: .rdata:0000000180013A68↓o
.text:0000000180008900                                         ; .pdata:000000018001C7EC↓o
.text:0000000180008900
.text:0000000180008900 Position        = qword ptr -28h
.text:0000000180008900 var_20          = qword ptr -20h
.text:0000000180008900
.text:0000000180008900 ; __unwind { // __GSHandlerCheck
.text:0000000180008900                 push    rbx
.text:0000000180008902                 push    rsi
.text:0000000180008903                 push    rdi
.text:0000000180008904                 sub     rsp, 30h
.text:0000000180008908                 mov     rax, cs:__security_cookie
.text:000000018000890F                 xor     rax, rsp
.text:0000000180008912                 mov     [rsp+48h+var_20], rax
.text:0000000180008917                 mov     rax, [r8+8]
.text:000000018000891B                 mov     rsi, r8
.text:000000018000891E                 add     rax, [r8]
.text:0000000180008921                 mov     rbx, rdx
.text:0000000180008924                 cmp     qword ptr [rcx+80h], 0
.text:000000018000892C                 mov     rdi, rcx
.text:000000018000892F                 mov     [rsp+48h+Position], rax
.text:0000000180008934                 jz      short loc_1800089A6
.text:0000000180008936                 call    sub_180009740
.text:000000018000893B                 test    al, al
.text:000000018000893D                 jz      short loc_1800089A6
.text:000000018000893F                 mov     rcx, [rdi+80h]  ; Stream
.text:0000000180008946                 lea     rdx, [rsp+48h+Position] ; Position
.text:000000018000894B                 call    cs:fsetpos
.text:0000000180008951                 test    eax, eax
.text:0000000180008953                 jnz     short loc_1800089A6
.text:0000000180008955                 mov     rax, [rsi+10h]
.text:0000000180008959                 mov     rcx, [rdi+18h]
.text:000000018000895D                 mov     [rdi+74h], rax
.text:0000000180008961                 lea     rax, [rdi+70h]
.text:0000000180008965                 cmp     [rcx], rax
.text:0000000180008968                 jnz     short loc_18000898C
.text:000000018000896A                 mov     rdx, [rdi+88h]
.text:0000000180008971                 mov     r8, [rdi+90h]
.text:0000000180008978                 mov     [rcx], rdx
.text:000000018000897B                 sub     r8d, edx
.text:000000018000897E                 mov     rcx, [rdi+38h]
.text:0000000180008982                 mov     [rcx], rdx
.text:0000000180008985                 mov     rcx, [rdi+50h]
.text:0000000180008989                 mov     [rcx], r8d
.text:000000018000898C
.text:000000018000898C loc_18000898C:                          ; CODE XREF: sub_180008900+68↑j
.text:000000018000898C                 mov     rcx, [rdi+74h]
.text:0000000180008990                 mov     rdx, [rsp+48h+Position]
.text:0000000180008995                 mov     [rbx], rdx
.text:0000000180008998                 mov     [rbx+10h], rcx
.text:000000018000899C                 mov     qword ptr [rbx+8], 0
.text:00000001800089A4                 jmp     short loc_1800089BB
.text:00000001800089A6 ; ---------------------------------------------------------------------------
.text:00000001800089A6
.text:00000001800089A6 loc_1800089A6:                          ; CODE XREF: sub_180008900+34↑j
.text:00000001800089A6                                         ; sub_180008900+3D↑j ...
.text:00000001800089A6                 xor     eax, eax
.text:00000001800089A8                 mov     qword ptr [rbx], 0FFFFFFFFFFFFFFFFh
.text:00000001800089AF                 mov     qword ptr [rbx+8], 0
.text:00000001800089B7                 mov     [rbx+10h], rax
.text:00000001800089BB
.text:00000001800089BB loc_1800089BB:                          ; CODE XREF: sub_180008900+A4↑j
.text:00000001800089BB                 mov     rax, rbx
.text:00000001800089BE                 mov     rcx, [rsp+48h+var_20]
.text:00000001800089C3                 xor     rcx, rsp        ; StackCookie
.text:00000001800089C6                 call    __security_check_cookie
.text:00000001800089CB                 add     rsp, 30h
.text:00000001800089CF                 pop     rdi
.text:00000001800089D0                 pop     rsi
.text:00000001800089D1                 pop     rbx
.text:00000001800089D2                 retn
.text:00000001800089D2 ; } // starts at 180008900
.text:00000001800089D2 sub_180008900   endp
.text:00000001800089D2
.text:00000001800089D2 ; ---------------------------------------------------------------------------
.text:00000001800089D3 algn_1800089D3:                         ; DATA XREF: .pdata:000000018001C7EC↓o
.text:00000001800089D3                 align 20h
.text:00000001800089E0
.text:00000001800089E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800089E0
.text:00000001800089E0
.text:00000001800089E0 sub_1800089E0   proc near               ; DATA XREF: .rdata:0000000180013A60↓o
.text:00000001800089E0                                         ; .pdata:000000018001C7F8↓o
.text:00000001800089E0
.text:00000001800089E0 Position        = qword ptr -38h
.text:00000001800089E0 var_30          = qword ptr -30h
.text:00000001800089E0
.text:00000001800089E0 ; __unwind { // __GSHandlerCheck
.text:00000001800089E0                 push    rbx
.text:00000001800089E2                 push    rbp
.text:00000001800089E3                 push    rsi
.text:00000001800089E4                 push    rdi
.text:00000001800089E5                 push    r14
.text:00000001800089E7                 sub     rsp, 30h
.text:00000001800089EB                 mov     rax, cs:__security_cookie
.text:00000001800089F2                 xor     rax, rsp
.text:00000001800089F5                 mov     [rsp+58h+var_30], rax
.text:00000001800089FA                 mov     rax, [rcx+38h]
.text:00000001800089FE                 lea     r14, [rcx+70h]
.text:0000000180008A02                 mov     ebp, r9d
.text:0000000180008A05                 mov     rsi, r8
.text:0000000180008A08                 mov     rdi, rdx
.text:0000000180008A0B                 mov     rbx, rcx
.text:0000000180008A0E                 cmp     [rax], r14
.text:0000000180008A11                 jnz     short loc_180008A23
.text:0000000180008A13                 cmp     r9d, 1
.text:0000000180008A17                 jnz     short loc_180008A23
.text:0000000180008A19                 cmp     qword ptr [rcx+68h], 0
.text:0000000180008A1E                 jnz     short loc_180008A23
.text:0000000180008A20                 dec     rsi
.text:0000000180008A23
.text:0000000180008A23 loc_180008A23:                          ; CODE XREF: sub_1800089E0+31↑j
.text:0000000180008A23                                         ; sub_1800089E0+37↑j ...
.text:0000000180008A23                 cmp     qword ptr [rcx+80h], 0
.text:0000000180008A2B                 jz      loc_180008AB6
.text:0000000180008A31                 call    sub_180009740
.text:0000000180008A36                 test    al, al
.text:0000000180008A38                 jz      short loc_180008AB6
.text:0000000180008A3A                 test    rsi, rsi
.text:0000000180008A3D                 jnz     short loc_180008A44
.text:0000000180008A3F                 cmp     ebp, 1
.text:0000000180008A42                 jz      short loc_180008A5B
.text:0000000180008A44
.text:0000000180008A44 loc_180008A44:                          ; CODE XREF: sub_1800089E0+5D↑j
.text:0000000180008A44                 mov     rcx, [rbx+80h]  ; Stream
.text:0000000180008A4B                 mov     r8d, ebp        ; Origin
.text:0000000180008A4E                 mov     rdx, rsi        ; Offset
.text:0000000180008A51                 call    cs:_fseeki64
.text:0000000180008A57                 test    eax, eax
.text:0000000180008A59                 jnz     short loc_180008AB6
.text:0000000180008A5B
.text:0000000180008A5B loc_180008A5B:                          ; CODE XREF: sub_1800089E0+62↑j
.text:0000000180008A5B                 mov     rcx, [rbx+80h]  ; Stream
.text:0000000180008A62                 lea     rdx, [rsp+58h+Position] ; Position
.text:0000000180008A67                 call    cs:fgetpos
.text:0000000180008A6D                 test    eax, eax
.text:0000000180008A6F                 jnz     short loc_180008AB6
.text:0000000180008A71                 mov     rax, [rbx+18h]
.text:0000000180008A75                 cmp     [rax], r14
.text:0000000180008A78                 jnz     short loc_180008A9C
.text:0000000180008A7A                 mov     rdx, [rbx+88h]
.text:0000000180008A81                 mov     r8, [rbx+90h]
.text:0000000180008A88                 mov     [rax], rdx
.text:0000000180008A8B                 sub     r8d, edx
.text:0000000180008A8E                 mov     rcx, [rbx+38h]
.text:0000000180008A92                 mov     [rcx], rdx
.text:0000000180008A95                 mov     rcx, [rbx+50h]
.text:0000000180008A99                 mov     [rcx], r8d
.text:0000000180008A9C
.text:0000000180008A9C loc_180008A9C:                          ; CODE XREF: sub_1800089E0+98↑j
.text:0000000180008A9C                 mov     rcx, [rbx+74h]
.text:0000000180008AA0                 mov     rdx, [rsp+58h+Position]
.text:0000000180008AA5                 mov     [rdi], rdx
.text:0000000180008AA8                 mov     [rdi+10h], rcx
.text:0000000180008AAC                 mov     qword ptr [rdi+8], 0
.text:0000000180008AB4                 jmp     short loc_180008ACB
.text:0000000180008AB6 ; ---------------------------------------------------------------------------
.text:0000000180008AB6
.text:0000000180008AB6 loc_180008AB6:                          ; CODE XREF: sub_1800089E0+4B↑j
.text:0000000180008AB6                                         ; sub_1800089E0+58↑j ...
.text:0000000180008AB6                 xor     eax, eax
.text:0000000180008AB8                 mov     qword ptr [rdi], 0FFFFFFFFFFFFFFFFh
.text:0000000180008ABF                 mov     qword ptr [rdi+8], 0
.text:0000000180008AC7                 mov     [rdi+10h], rax
.text:0000000180008ACB
.text:0000000180008ACB loc_180008ACB:                          ; CODE XREF: sub_1800089E0+D4↑j
.text:0000000180008ACB                 mov     rax, rdi
.text:0000000180008ACE                 mov     rcx, [rsp+58h+var_30]
.text:0000000180008AD3                 xor     rcx, rsp        ; StackCookie
.text:0000000180008AD6                 call    __security_check_cookie
.text:0000000180008ADB                 add     rsp, 30h
.text:0000000180008ADF                 pop     r14
.text:0000000180008AE1                 pop     rdi
.text:0000000180008AE2                 pop     rsi
.text:0000000180008AE3                 pop     rbp
.text:0000000180008AE4                 pop     rbx
.text:0000000180008AE5                 retn
.text:0000000180008AE5 ; } // starts at 1800089E0
.text:0000000180008AE5 sub_1800089E0   endp
.text:0000000180008AE5
.text:0000000180008AE5 ; ---------------------------------------------------------------------------
.text:0000000180008AE6 algn_180008AE6:                         ; DATA XREF: .pdata:000000018001C7F8↓o
.text:0000000180008AE6                 align 10h
.text:0000000180008AF0
.text:0000000180008AF0 ; =============== S U B R O U T I N E =======================================
.text:0000000180008AF0
.text:0000000180008AF0
.text:0000000180008AF0 sub_180008AF0   proc near               ; DATA XREF: .rdata:0000000180013A58↓o
.text:0000000180008AF0                                         ; .pdata:000000018001C804↓o
.text:0000000180008AF0
.text:0000000180008AF0 arg_0           = qword ptr  8
.text:0000000180008AF0 arg_8           = qword ptr  10h
.text:0000000180008AF0 arg_18          = qword ptr  20h
.text:0000000180008AF0
.text:0000000180008AF0                 push    rbx
.text:0000000180008AF2                 push    rdi
.text:0000000180008AF3                 push    r15
.text:0000000180008AF5                 sub     rsp, 20h
.text:0000000180008AF9                 cmp     qword ptr [rcx+68h], 0
.text:0000000180008AFE                 mov     rbx, r8
.text:0000000180008B01                 mov     r15, rdx
.text:0000000180008B04                 mov     rdi, rcx
.text:0000000180008B07                 jz      short loc_180008B18
.text:0000000180008B09                 add     rsp, 20h
.text:0000000180008B0D                 pop     r15
.text:0000000180008B0F                 pop     rdi
.text:0000000180008B10                 pop     rbx
.text:0000000180008B11                 jmp     cs:__imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char>>::xsputn(char const *,__int64)
.text:0000000180008B18 ; ---------------------------------------------------------------------------
.text:0000000180008B18
.text:0000000180008B18 loc_180008B18:                          ; CODE XREF: sub_180008AF0+17↑j
.text:0000000180008B18                 mov     rax, [rcx+40h]
.text:0000000180008B1C                 mov     [rsp+38h+arg_0], rbp
.text:0000000180008B21                 mov     [rsp+38h+arg_8], rsi
.text:0000000180008B26                 mov     rsi, rbx
.text:0000000180008B29                 mov     [rsp+38h+arg_18], r14
.text:0000000180008B2E                 mov     r9, [rax]
.text:0000000180008B31                 test    r9, r9
.text:0000000180008B34                 jz      short loc_180008B3E
.text:0000000180008B36                 mov     rax, [rcx+58h]
.text:0000000180008B3A                 mov     ecx, [rax]
.text:0000000180008B3C                 jmp     short loc_180008B40
.text:0000000180008B3E ; ---------------------------------------------------------------------------
.text:0000000180008B3E
.text:0000000180008B3E loc_180008B3E:                          ; CODE XREF: sub_180008AF0+44↑j
.text:0000000180008B3E                 xor     ecx, ecx
.text:0000000180008B40
.text:0000000180008B40 loc_180008B40:                          ; CODE XREF: sub_180008AF0+4C↑j
.text:0000000180008B40                 movsxd  rbp, ecx
.text:0000000180008B43                 test    rbx, rbx
.text:0000000180008B46                 jle     short loc_180008B99
.text:0000000180008B48                 test    ecx, ecx
.text:0000000180008B4A                 jle     short loc_180008B79
.text:0000000180008B4C                 cmp     rbx, rbp
.text:0000000180008B4F                 mov     rcx, r9         ; void *
.text:0000000180008B52                 cmovl   rbp, rbx
.text:0000000180008B56                 mov     r8, rbp         ; Size
.text:0000000180008B59                 call    memcpy
.text:0000000180008B5E                 mov     rax, [rdi+58h]
.text:0000000180008B62                 add     r15, rbp
.text:0000000180008B65                 sub     rbx, rbp
.text:0000000180008B68                 sub     [rax], ebp
.text:0000000180008B6A                 mov     rcx, [rdi+40h]
.text:0000000180008B6E                 movsxd  rax, ebp
.text:0000000180008B71                 add     [rcx], rax
.text:0000000180008B74                 test    rbx, rbx
.text:0000000180008B77                 jle     short loc_180008B99
.text:0000000180008B79
.text:0000000180008B79 loc_180008B79:                          ; CODE XREF: sub_180008AF0+5A↑j
.text:0000000180008B79                 mov     r9, [rdi+80h]   ; Stream
.text:0000000180008B80                 test    r9, r9
.text:0000000180008B83                 jz      short loc_180008B99
.text:0000000180008B85                 mov     r8, rbx         ; ElementCount
.text:0000000180008B88                 mov     edx, 1          ; ElementSize
.text:0000000180008B8D                 mov     rcx, r15        ; Buffer
.text:0000000180008B90                 call    cs:fwrite
.text:0000000180008B96                 sub     rbx, rax
.text:0000000180008B99
.text:0000000180008B99 loc_180008B99:                          ; CODE XREF: sub_180008AF0+56↑j
.text:0000000180008B99                                         ; sub_180008AF0+87↑j ...
.text:0000000180008B99                 mov     r14, [rsp+38h+arg_18]
.text:0000000180008B9E                 sub     rsi, rbx
.text:0000000180008BA1                 mov     rbp, [rsp+38h+arg_0]
.text:0000000180008BA6                 mov     rax, rsi
.text:0000000180008BA9                 mov     rsi, [rsp+38h+arg_8]
.text:0000000180008BAE                 add     rsp, 20h
.text:0000000180008BB2                 pop     r15
.text:0000000180008BB4                 pop     rdi
.text:0000000180008BB5                 pop     rbx
.text:0000000180008BB6                 retn
.text:0000000180008BB6 sub_180008AF0   endp
.text:0000000180008BB6
.text:0000000180008BB6 ; ---------------------------------------------------------------------------
.text:0000000180008BB7 algn_180008BB7:                         ; DATA XREF: .pdata:000000018001C804↓o
.text:0000000180008BB7                 align 20h
.text:0000000180008BC0
.text:0000000180008BC0 ; =============== S U B R O U T I N E =======================================
.text:0000000180008BC0
.text:0000000180008BC0
.text:0000000180008BC0 sub_180008BC0   proc near               ; DATA XREF: .rdata:0000000180013A50↓o
.text:0000000180008BC0                                         ; .rdata:000000018001582C↓o ...
.text:0000000180008BC0
.text:0000000180008BC0 var_28          = qword ptr -28h
.text:0000000180008BC0 var_20          = qword ptr -20h
.text:0000000180008BC0
.text:0000000180008BC0                 push    rbp
.text:0000000180008BC2                 push    rsi
.text:0000000180008BC3                 push    r14
.text:0000000180008BC5                 sub     rsp, 30h
.text:0000000180008BC9                 mov     rbp, r8
.text:0000000180008BCC                 mov     r14, rdx
.text:0000000180008BCF                 mov     rsi, rcx
.text:0000000180008BD2                 test    r8, r8
.text:0000000180008BD5                 jg      short loc_180008BE2
.text:0000000180008BD7                 xor     eax, eax
.text:0000000180008BD9                 add     rsp, 30h
.text:0000000180008BDD                 pop     r14
.text:0000000180008BDF                 pop     rsi
.text:0000000180008BE0                 pop     rbp
.text:0000000180008BE1                 retn
.text:0000000180008BE2 ; ---------------------------------------------------------------------------
.text:0000000180008BE2
.text:0000000180008BE2 loc_180008BE2:                          ; CODE XREF: sub_180008BC0+15↑j
.text:0000000180008BE2                 cmp     qword ptr [rcx+68h], 0
.text:0000000180008BE7                 jz      short loc_180008BF8
.text:0000000180008BE9                 add     rsp, 30h
.text:0000000180008BED                 pop     r14
.text:0000000180008BEF                 pop     rsi
.text:0000000180008BF0                 pop     rbp
.text:0000000180008BF1                 jmp     cs:__imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ; std::basic_streambuf<char,std::char_traits<char>>::xsgetn(char *,__int64)
.text:0000000180008BF8 ; ---------------------------------------------------------------------------
.text:0000000180008BF8
.text:0000000180008BF8 loc_180008BF8:                          ; CODE XREF: sub_180008BC0+27↑j
.text:0000000180008BF8                 mov     rax, [rcx+38h]
.text:0000000180008BFC                 mov     [rsp+48h+var_20], rbx
.text:0000000180008C01                 mov     rbx, rbp
.text:0000000180008C04                 mov     rdx, [rax]      ; Src
.text:0000000180008C07                 test    rdx, rdx
.text:0000000180008C0A                 jz      short loc_180008C14
.text:0000000180008C0C                 mov     rax, [rcx+50h]
.text:0000000180008C10                 mov     ecx, [rax]
.text:0000000180008C12                 jmp     short loc_180008C16
.text:0000000180008C14 ; ---------------------------------------------------------------------------
.text:0000000180008C14
.text:0000000180008C14 loc_180008C14:                          ; CODE XREF: sub_180008BC0+4A↑j
.text:0000000180008C14                 xor     ecx, ecx
.text:0000000180008C16
.text:0000000180008C16 loc_180008C16:                          ; CODE XREF: sub_180008BC0+52↑j
.text:0000000180008C16                 movsxd  rax, ecx
.text:0000000180008C19                 test    ecx, ecx
.text:0000000180008C1B                 jz      short loc_180008C52
.text:0000000180008C1D
.text:0000000180008C1D loc_180008C1D:                          ; DATA XREF: .rdata:000000018001582C↓o
.text:0000000180008C1D                                         ; .rdata:000000018001583C↓o ...
.text:0000000180008C1D                 mov     [rsp+48h+var_28], rdi
.text:0000000180008C22                 cmp     rax, rbp
.text:0000000180008C25                 mov     rdi, rbp
.text:0000000180008C28                 mov     rcx, r14        ; void *
.text:0000000180008C2B                 cmovb   rdi, rax
.text:0000000180008C2F                 mov     r8, rdi         ; Size
.text:0000000180008C32                 call    memcpy
.text:0000000180008C37                 mov     rax, [rsi+50h]
.text:0000000180008C3B                 add     r14, rdi
.text:0000000180008C3E                 sub     rbx, rdi
.text:0000000180008C41                 sub     [rax], edi
.text:0000000180008C43                 mov     rcx, [rsi+38h]
.text:0000000180008C47                 movsxd  rax, edi
.text:0000000180008C4A                 mov     rdi, [rsp+48h+var_28]
.text:0000000180008C4F                 add     [rcx], rax
.text:0000000180008C52
.text:0000000180008C52 loc_180008C52:                          ; CODE XREF: sub_180008BC0+5B↑j
.text:0000000180008C52                                         ; DATA XREF: .pdata:000000018001C81C↓o ...
.text:0000000180008C52                 cmp     qword ptr [rsi+80h], 0
.text:0000000180008C5A                 jz      loc_180008CEE
.text:0000000180008C60                 mov     r8, [rsi+18h]
.text:0000000180008C64                 lea     rax, [rsi+70h]
.text:0000000180008C68                 cmp     [r8], rax
.text:0000000180008C6B                 jnz     short loc_180008C8D
.text:0000000180008C6D                 mov     rcx, [rsi+88h]
.text:0000000180008C74                 mov     rdx, [rsi+90h]
.text:0000000180008C7B                 mov     [r8], rcx
.text:0000000180008C7E                 sub     edx, ecx
.text:0000000180008C80                 mov     rax, [rsi+38h]
.text:0000000180008C84                 mov     [rax], rcx
.text:0000000180008C87                 mov     rax, [rsi+50h]
.text:0000000180008C8B                 mov     [rax], edx
.text:0000000180008C8D
.text:0000000180008C8D loc_180008C8D:                          ; CODE XREF: sub_180008BC0+AB↑j
.text:0000000180008C8D                 cmp     rbx, 0FFFh
.text:0000000180008C94                 jbe     short loc_180008CCE
.text:0000000180008C96                 db      66h, 66h
.text:0000000180008C96                 nop     word ptr [rax+rax+00000000h]
.text:0000000180008CA0
.text:0000000180008CA0 loc_180008CA0:                          ; CODE XREF: sub_180008BC0+10C↓j
.text:0000000180008CA0                 mov     r9, [rsi+80h]   ; Stream
.text:0000000180008CA7                 mov     edx, 1          ; ElementSize
.text:0000000180008CAC                 mov     r8d, 0FFFh      ; ElementCount
.text:0000000180008CB2                 mov     rcx, r14        ; Buffer
.text:0000000180008CB5                 call    cs:fread
.text:0000000180008CBB                 add     r14, rax
.text:0000000180008CBE                 sub     rbx, rax
.text:0000000180008CC1                 cmp     rax, 0FFFh
.text:0000000180008CC7                 jnz     short loc_180008CEE
.text:0000000180008CC9                 cmp     rbx, rax
.text:0000000180008CCC                 ja      short loc_180008CA0
.text:0000000180008CCE
.text:0000000180008CCE loc_180008CCE:                          ; CODE XREF: sub_180008BC0+D4↑j
.text:0000000180008CCE                 test    rbx, rbx
.text:0000000180008CD1                 jz      short loc_180008CEE
.text:0000000180008CD3                 mov     r9, [rsi+80h]   ; Stream
.text:0000000180008CDA                 mov     r8, rbx         ; ElementCount
.text:0000000180008CDD                 mov     edx, 1          ; ElementSize
.text:0000000180008CE2                 mov     rcx, r14        ; Buffer
.text:0000000180008CE5                 call    cs:fread
.text:0000000180008CEB                 sub     rbx, rax
.text:0000000180008CEE
.text:0000000180008CEE loc_180008CEE:                          ; CODE XREF: sub_180008BC0+9A↑j
.text:0000000180008CEE                                         ; sub_180008BC0+107↑j ...
.text:0000000180008CEE                 sub     rbp, rbx
.text:0000000180008CF1                 mov     rbx, [rsp+48h+var_20]
.text:0000000180008CF6                 mov     rax, rbp
.text:0000000180008CF9                 add     rsp, 30h
.text:0000000180008CFD                 pop     r14
.text:0000000180008CFF                 pop     rsi
.text:0000000180008D00                 pop     rbp
.text:0000000180008D01                 retn
.text:0000000180008D01 sub_180008BC0   endp
.text:0000000180008D01
.text:0000000180008D01 ; ---------------------------------------------------------------------------
.text:0000000180008D02 algn_180008D02:                         ; DATA XREF: .pdata:000000018001C828↓o
.text:0000000180008D02                 align 10h
.text:0000000180008D10
.text:0000000180008D10 ; =============== S U B R O U T I N E =======================================
.text:0000000180008D10
.text:0000000180008D10 ; Attributes: bp-based frame
.text:0000000180008D10
.text:0000000180008D10 sub_180008D10   proc near               ; DATA XREF: .rdata:0000000180013A48↓o
.text:0000000180008D10                                         ; .pdata:000000018001C834↓o
.text:0000000180008D10
.text:0000000180008D10 var_60          = qword ptr -60h
.text:0000000180008D10 var_58          = qword ptr -58h
.text:0000000180008D10 var_50          = qword ptr -50h
.text:0000000180008D10 var_48          = qword ptr -48h
.text:0000000180008D10 var_40          = qword ptr -40h
.text:0000000180008D10 var_38          = qword ptr -38h
.text:0000000180008D10 var_30          = byte ptr -30h
.text:0000000180008D10 var_2F          = byte ptr -2Fh
.text:0000000180008D10 Block           = qword ptr -28h
.text:0000000180008D10 var_18          = qword ptr -18h
.text:0000000180008D10 var_10          = qword ptr -10h
.text:0000000180008D10 var_8           = qword ptr -8
.text:0000000180008D10 var_s0          = byte ptr  0
.text:0000000180008D10 arg_8           = qword ptr  18h
.text:0000000180008D10 arg_10          = qword ptr  20h
.text:0000000180008D10 arg_18          = qword ptr  28h
.text:0000000180008D10
.text:0000000180008D10 ; __unwind { // __GSHandlerCheck_EH4
.text:0000000180008D10                 mov     [rsp-8+arg_8], rbx
.text:0000000180008D15                 mov     [rsp-8+arg_10], rsi
.text:0000000180008D1A                 mov     [rsp-8+arg_18], rdi
.text:0000000180008D1F                 push    rbp
.text:0000000180008D20                 mov     rbp, rsp
.text:0000000180008D23                 sub     rsp, 80h
.text:0000000180008D2A                 mov     rax, cs:__security_cookie
.text:0000000180008D31                 xor     rax, rsp
.text:0000000180008D34                 mov     [rbp+var_8], rax
.text:0000000180008D38                 mov     rdi, rcx
.text:0000000180008D3B                 mov     rax, [rcx+38h]
.text:0000000180008D3F                 mov     rcx, [rax]
.text:0000000180008D42                 test    rcx, rcx
.text:0000000180008D45                 jz      short loc_180008D73
.text:0000000180008D47                 mov     rdx, [rdi+50h]
.text:0000000180008D4B                 movsxd  r8, dword ptr [rdx]
.text:0000000180008D4E                 lea     rax, [rcx+r8]
.text:0000000180008D52                 cmp     rcx, rax
.text:0000000180008D55                 jnb     short loc_180008D73
.text:0000000180008D57                 lea     eax, [r8-1]
.text:0000000180008D5B                 mov     [rdx], eax
.text:0000000180008D5D                 mov     rcx, [rdi+38h]
.text:0000000180008D61                 mov     rdx, [rcx]
.text:0000000180008D64                 lea     rax, [rdx+1]
.text:0000000180008D68                 mov     [rcx], rax
.text:0000000180008D6B                 movzx   eax, byte ptr [rdx]
.text:0000000180008D6E                 jmp     loc_180008F9A
.text:0000000180008D73 ; ---------------------------------------------------------------------------
.text:0000000180008D73
.text:0000000180008D73 loc_180008D73:                          ; CODE XREF: sub_180008D10+35↑j
.text:0000000180008D73                                         ; sub_180008D10+45↑j
.text:0000000180008D73                 cmp     qword ptr [rdi+80h], 0
.text:0000000180008D7B                 jnz     short loc_180008D87
.text:0000000180008D7D                 mov     eax, 0FFFFFFFFh
.text:0000000180008D82                 jmp     loc_180008F9A
.text:0000000180008D87 ; ---------------------------------------------------------------------------
.text:0000000180008D87
.text:0000000180008D87 loc_180008D87:                          ; CODE XREF: sub_180008D10+6B↑j
.text:0000000180008D87                 mov     r8, [rdi+18h]
.text:0000000180008D8B                 lea     rax, [rdi+70h]
.text:0000000180008D8F                 cmp     [r8], rax
.text:0000000180008D92                 jnz     short loc_180008DB4
.text:0000000180008D94                 mov     rdx, [rdi+90h]
.text:0000000180008D9B                 mov     rcx, [rdi+88h]
.text:0000000180008DA2                 mov     [r8], rcx
.text:0000000180008DA5                 mov     rax, [rdi+38h]
.text:0000000180008DA9                 mov     [rax], rcx
.text:0000000180008DAC                 sub     edx, ecx
.text:0000000180008DAE                 mov     rax, [rdi+50h]
.text:0000000180008DB2                 mov     [rax], edx
.text:0000000180008DB4
.text:0000000180008DB4 loc_180008DB4:                          ; CODE XREF: sub_180008D10+82↑j
.text:0000000180008DB4                 mov     rcx, [rdi+80h]  ; Stream
.text:0000000180008DBB                 cmp     qword ptr [rdi+68h], 0
.text:0000000180008DC0                 jnz     short loc_180008DDE
.text:0000000180008DC2                 call    cs:fgetc
.text:0000000180008DC8                 cmp     eax, 0FFFFFFFFh
.text:0000000180008DCB                 mov     ebx, 0FFFFFFFFh
.text:0000000180008DD0                 jz      loc_180008F98
.text:0000000180008DD6                 movzx   ebx, al
.text:0000000180008DD9                 jmp     loc_180008F98
.text:0000000180008DDE ; ---------------------------------------------------------------------------
.text:0000000180008DDE
.text:0000000180008DDE loc_180008DDE:                          ; CODE XREF: sub_180008D10+B0↑j
.text:0000000180008DDE                 xorps   xmm0, xmm0
.text:0000000180008DE1                 movups  xmmword ptr [rbp+Block], xmm0
.text:0000000180008DE5                 mov     [rbp+var_18], 0
.text:0000000180008DED                 mov     [rbp+var_10], 0Fh
.text:0000000180008DF5                 mov     byte ptr [rbp+Block], 0
.text:0000000180008DF9
.text:0000000180008DF9 loc_180008DF9:                          ; CODE XREF: sub_180008D10+1E5↓j
.text:0000000180008DF9                 call    cs:fgetc
.text:0000000180008DFF                 cmp     eax, 0FFFFFFFFh
.text:0000000180008E02                 mov     r8d, eax
.text:0000000180008E05                 jz      loc_180008F55
.text:0000000180008E0B                 mov     rcx, [rbp+var_18]
.text:0000000180008E0F                 mov     rdx, [rbp+var_10]
.text:0000000180008E13                 cmp     rcx, rdx
.text:0000000180008E16                 jnb     short loc_180008E38
.text:0000000180008E18                 lea     rax, [rcx+1]
.text:0000000180008E1C                 mov     [rbp+var_18], rax
.text:0000000180008E20                 lea     rax, [rbp+Block]
.text:0000000180008E24                 cmp     rdx, 10h
.text:0000000180008E28                 cmovnb  rax, [rbp+Block]
.text:0000000180008E2D                 mov     [rax+rcx], r8b
.text:0000000180008E31                 mov     byte ptr [rax+rcx+1], 0
.text:0000000180008E36                 jmp     short loc_180008E45
.text:0000000180008E38 ; ---------------------------------------------------------------------------
.text:0000000180008E38
.text:0000000180008E38 loc_180008E38:                          ; CODE XREF: sub_180008D10+106↑j
.text:0000000180008E38                 movzx   r9d, r8b
.text:0000000180008E3C                 lea     rcx, [rbp+Block] ; Src
.text:0000000180008E40                 call    sub_18000A1E0
.text:0000000180008E45
.text:0000000180008E45 loc_180008E45:                          ; CODE XREF: sub_180008D10+126↑j
.text:0000000180008E45                 lea     r9, [rbp+Block]
.text:0000000180008E49                 cmp     [rbp+var_10], 10h
.text:0000000180008E4E                 setnb   dl
.text:0000000180008E51                 cmovnb  r9, [rbp+Block]
.text:0000000180008E56                 lea     r8, [rbp+Block]
.text:0000000180008E5A                 test    dl, dl
.text:0000000180008E5C                 cmovnz  r8, [rbp+Block]
.text:0000000180008E61                 add     r9, [rbp+var_18]
.text:0000000180008E65                 lea     rax, [rbp+var_38]
.text:0000000180008E69                 mov     [rsp+80h+var_48], rax
.text:0000000180008E6E                 lea     rax, [rbp+var_2F]
.text:0000000180008E72                 mov     [rsp+80h+var_50], rax
.text:0000000180008E77                 lea     rax, [rbp+var_30]
.text:0000000180008E7B                 mov     [rsp+80h+var_58], rax
.text:0000000180008E80                 lea     rax, [rbp+var_40]
.text:0000000180008E84                 mov     [rsp+80h+var_60], rax
.text:0000000180008E89                 lea     rdx, [rdi+74h]
.text:0000000180008E8D                 mov     rcx, [rdi+68h]
.text:0000000180008E91                 call    cs:?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z ; std::codecvt<char,char,_Mbstatet>::in(_Mbstatet &,char const *,char const *,char const * &,char *,char *,char * &)
.text:0000000180008E97                 test    eax, eax
.text:0000000180008E99                 jz      short loc_180008EA0
.text:0000000180008E9B                 sub     eax, 1
.text:0000000180008E9E                 jnz     short loc_180008EFA
.text:0000000180008EA0
.text:0000000180008EA0 loc_180008EA0:                          ; CODE XREF: sub_180008D10+189↑j
.text:0000000180008EA0                 lea     rax, [rbp+var_30]
.text:0000000180008EA4                 mov     rbx, [rbp+var_18]
.text:0000000180008EA8                 cmp     [rbp+var_38], rax
.text:0000000180008EAC                 jnz     short loc_180008F12
.text:0000000180008EAE                 lea     rcx, [rbp+Block]
.text:0000000180008EB2                 cmp     [rbp+var_10], 10h
.text:0000000180008EB7                 setnb   r8b
.text:0000000180008EBB                 cmovnb  rcx, [rbp+Block]
.text:0000000180008EC0                 mov     rax, [rbp+var_40]
.text:0000000180008EC4                 sub     rax, rcx
.text:0000000180008EC7                 cmp     rbx, rax
.text:0000000180008ECA                 cmovb   rax, rbx
.text:0000000180008ECE                 lea     rcx, [rbp+Block]
.text:0000000180008ED2                 test    r8b, r8b
.text:0000000180008ED5                 cmovnz  rcx, [rbp+Block] ; void *
.text:0000000180008EDA                 sub     rbx, rax
.text:0000000180008EDD                 lea     r8, [rbx+1]     ; Size
.text:0000000180008EE1                 lea     rdx, [rcx+rax]  ; Src
.text:0000000180008EE5                 call    memmove
.text:0000000180008EEA                 mov     [rbp+var_18], rbx
.text:0000000180008EEE                 mov     rcx, [rdi+80h]
.text:0000000180008EF5                 jmp     loc_180008DF9
.text:0000000180008EFA ; ---------------------------------------------------------------------------
.text:0000000180008EFA
.text:0000000180008EFA loc_180008EFA:                          ; CODE XREF: sub_180008D10+18E↑j
.text:0000000180008EFA                 cmp     eax, 2
.text:0000000180008EFD                 jnz     short loc_180008F55
.text:0000000180008EFF                 lea     rax, [rbp+Block]
.text:0000000180008F03                 cmp     [rbp+var_10], 10h
.text:0000000180008F08                 cmovnb  rax, [rbp+Block]
.text:0000000180008F0D                 movsx   ebx, byte ptr [rax]
.text:0000000180008F10                 jmp     short loc_180008F5A
.text:0000000180008F12 ; ---------------------------------------------------------------------------
.text:0000000180008F12
.text:0000000180008F12 loc_180008F12:                          ; CODE XREF: sub_180008D10+19C↑j
.text:0000000180008F12                 lea     rax, [rbp+Block]
.text:0000000180008F16                 cmp     [rbp+var_10], 10h
.text:0000000180008F1B                 cmovnb  rax, [rbp+Block]
.text:0000000180008F20                 mov     rcx, [rbp+var_40]
.text:0000000180008F24                 sub     rbx, rcx
.text:0000000180008F27                 add     rbx, rax
.text:0000000180008F2A                 test    rbx, rbx
.text:0000000180008F2D                 jle     short loc_180008F4F
.text:0000000180008F2F                 nop
.text:0000000180008F30
.text:0000000180008F30 loc_180008F30:                          ; CODE XREF: sub_180008D10+23D↓j
.text:0000000180008F30                 dec     rbx
.text:0000000180008F33                 movsx   ecx, byte ptr [rbx+rcx] ; Character
.text:0000000180008F37                 mov     rdx, [rdi+80h]  ; Stream
.text:0000000180008F3E                 call    cs:ungetc
.text:0000000180008F44                 test    rbx, rbx
.text:0000000180008F47                 jle     short loc_180008F4F
.text:0000000180008F49                 mov     rcx, [rbp+var_40]
.text:0000000180008F4D                 jmp     short loc_180008F30
.text:0000000180008F4F ; ---------------------------------------------------------------------------
.text:0000000180008F4F
.text:0000000180008F4F loc_180008F4F:                          ; CODE XREF: sub_180008D10+21D↑j
.text:0000000180008F4F                                         ; sub_180008D10+237↑j
.text:0000000180008F4F                 movzx   ebx, [rbp+var_30]
.text:0000000180008F53                 jmp     short loc_180008F5A
.text:0000000180008F55 ; ---------------------------------------------------------------------------
.text:0000000180008F55
.text:0000000180008F55 loc_180008F55:                          ; CODE XREF: sub_180008D10+F5↑j
.text:0000000180008F55                                         ; sub_180008D10+1ED↑j
.text:0000000180008F55                 mov     ebx, 0FFFFFFFFh
.text:0000000180008F5A
.text:0000000180008F5A loc_180008F5A:                          ; CODE XREF: sub_180008D10+200↑j
.text:0000000180008F5A                                         ; sub_180008D10+243↑j
.text:0000000180008F5A                 mov     rdx, [rbp+var_10]
.text:0000000180008F5E                 cmp     rdx, 10h
.text:0000000180008F62                 jb      short loc_180008F98
.text:0000000180008F64                 inc     rdx
.text:0000000180008F67                 mov     rcx, [rbp+Block] ; Block
.text:0000000180008F6B                 mov     rax, rcx
.text:0000000180008F6E                 cmp     rdx, 1000h
.text:0000000180008F75                 jb      short loc_180008F93
.text:0000000180008F77                 add     rdx, 27h ; '''
.text:0000000180008F7B                 mov     rcx, [rcx-8]
.text:0000000180008F7F                 sub     rax, rcx
.text:0000000180008F82                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:0000000180008F86                 cmp     rax, 1Fh
.text:0000000180008F8A                 jbe     short loc_180008F93
.text:0000000180008F8C                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180008F92                 int     3               ; Trap to Debugger
.text:0000000180008F93 ; ---------------------------------------------------------------------------
.text:0000000180008F93
.text:0000000180008F93 loc_180008F93:                          ; CODE XREF: sub_180008D10+265↑j
.text:0000000180008F93                                         ; sub_180008D10+27A↑j
.text:0000000180008F93                 call    j_j_free
.text:0000000180008F98
.text:0000000180008F98 loc_180008F98:                          ; CODE XREF: sub_180008D10+C0↑j
.text:0000000180008F98                                         ; sub_180008D10+C9↑j ...
.text:0000000180008F98                 mov     eax, ebx
.text:0000000180008F9A
.text:0000000180008F9A loc_180008F9A:                          ; CODE XREF: sub_180008D10+5E↑j
.text:0000000180008F9A                                         ; sub_180008D10+72↑j
.text:0000000180008F9A                 mov     rcx, [rbp+var_8]
.text:0000000180008F9E                 xor     rcx, rsp        ; StackCookie
.text:0000000180008FA1                 call    __security_check_cookie
.text:0000000180008FA6                 lea     r11, [rsp+80h+var_s0]
.text:0000000180008FAE                 mov     rbx, [r11+18h]
.text:0000000180008FB2                 mov     rsi, [r11+20h]
.text:0000000180008FB6                 mov     rdi, [r11+28h]
.text:0000000180008FBA                 mov     rsp, r11
.text:0000000180008FBD                 pop     rbp
.text:0000000180008FBE                 retn
.text:0000000180008FBE ; } // starts at 180008D10
.text:0000000180008FBE sub_180008D10   endp
.text:0000000180008FBE
.text:0000000180008FBE ; ---------------------------------------------------------------------------
.text:0000000180008FBF algn_180008FBF:                         ; DATA XREF: .pdata:000000018001C834↓o
.text:0000000180008FBF                 align 20h
.text:0000000180008FC0
.text:0000000180008FC0 ; =============== S U B R O U T I N E =======================================
.text:0000000180008FC0
.text:0000000180008FC0
.text:0000000180008FC0 sub_180008FC0   proc near               ; DATA XREF: .rdata:0000000180013A40↓o
.text:0000000180008FC0                                         ; .rdata:0000000180015888↓o ...
.text:0000000180008FC0
.text:0000000180008FC0 arg_0           = qword ptr  8
.text:0000000180008FC0
.text:0000000180008FC0                 push    rbx
.text:0000000180008FC2                 sub     rsp, 20h
.text:0000000180008FC6                 mov     rax, [rcx+38h]
.text:0000000180008FCA                 mov     rbx, rcx
.text:0000000180008FCD                 mov     rcx, [rax]
.text:0000000180008FD0                 test    rcx, rcx
.text:0000000180008FD3                 jz      short loc_180008FED
.text:0000000180008FD5                 mov     rax, [rbx+50h]
.text:0000000180008FD9                 movsxd  rdx, dword ptr [rax]
.text:0000000180008FDC                 add     rdx, rcx
.text:0000000180008FDF                 cmp     rcx, rdx
.text:0000000180008FE2                 jnb     short loc_180008FED
.text:0000000180008FE4                 movzx   eax, byte ptr [rcx]
.text:0000000180008FE7                 add     rsp, 20h
.text:0000000180008FEB                 pop     rbx
.text:0000000180008FEC                 retn
.text:0000000180008FED ; ---------------------------------------------------------------------------
.text:0000000180008FED
.text:0000000180008FED loc_180008FED:                          ; CODE XREF: sub_180008FC0+13↑j
.text:0000000180008FED                                         ; sub_180008FC0+22↑j
.text:0000000180008FED                 mov     rax, [rbx]
.text:0000000180008FF0                 mov     rcx, rbx
.text:0000000180008FF3
.text:0000000180008FF3 loc_180008FF3:                          ; DATA XREF: .rdata:0000000180015888↓o
.text:0000000180008FF3                                         ; .rdata:000000018001589C↓o ...
.text:0000000180008FF3                 mov     [rsp+28h+arg_0], rdi
.text:0000000180008FF8                 call    qword ptr [rax+38h]
.text:0000000180008FFB                 mov     edi, eax
.text:0000000180008FFD                 cmp     eax, 0FFFFFFFFh
.text:0000000180009000                 jnz     short loc_18000900D
.text:0000000180009002                 mov     rdi, [rsp+28h+arg_0]
.text:0000000180009007                 add     rsp, 20h
.text:000000018000900B                 pop     rbx
.text:000000018000900C                 retn
.text:000000018000900D ; ---------------------------------------------------------------------------
.text:000000018000900D
.text:000000018000900D loc_18000900D:                          ; CODE XREF: sub_180008FC0+40↑j
.text:000000018000900D                                         ; DATA XREF: .pdata:000000018001C84C↓o ...
.text:000000018000900D                 mov     rax, [rbx]
.text:0000000180009010                 mov     edx, edi
.text:0000000180009012                 mov     rcx, rbx
.text:0000000180009015                 call    qword ptr [rax+20h]
.text:0000000180009018                 mov     eax, edi
.text:000000018000901A                 mov     rdi, [rsp+28h+arg_0]
.text:000000018000901F                 add     rsp, 20h
.text:0000000180009023                 pop     rbx
.text:0000000180009024                 retn
.text:0000000180009024 sub_180008FC0   endp
.text:0000000180009024
.text:0000000180009024 ; ---------------------------------------------------------------------------
.text:0000000180009025 algn_180009025:                         ; DATA XREF: .pdata:000000018001C858↓o
.text:0000000180009025                 align 10h
.text:0000000180009030
.text:0000000180009030 ; =============== S U B R O U T I N E =======================================
.text:0000000180009030
.text:0000000180009030
.text:0000000180009030 sub_180009030   proc near               ; DATA XREF: .rdata:0000000180013A30↓o
.text:0000000180009030                                         ; .pdata:000000018001C864↓o
.text:0000000180009030
.text:0000000180009030 arg_10          = qword ptr  18h
.text:0000000180009030
.text:0000000180009030                 mov     [rsp+arg_10], rbx
.text:0000000180009035                 push    rdi
.text:0000000180009036                 sub     rsp, 20h
.text:000000018000903A                 mov     rax, [rcx+38h]
.text:000000018000903E                 mov     rbx, rcx
.text:0000000180009041                 mov     edi, edx
.text:0000000180009043                 mov     rcx, [rax]
.text:0000000180009046                 test    rcx, rcx
.text:0000000180009049                 jz      short loc_180009081
.text:000000018000904B                 mov     rax, [rbx+18h]
.text:000000018000904F                 cmp     [rax], rcx
.text:0000000180009052                 jnb     short loc_180009081
.text:0000000180009054                 cmp     edx, 0FFFFFFFFh
.text:0000000180009057                 jz      short loc_180009061
.text:0000000180009059                 movzx   eax, byte ptr [rcx-1]
.text:000000018000905D                 cmp     eax, edx
.text:000000018000905F                 jnz     short loc_180009081
.text:0000000180009061
.text:0000000180009061 loc_180009061:                          ; CODE XREF: sub_180009030+27↑j
.text:0000000180009061                 mov     rax, [rbx+50h]
.text:0000000180009065                 inc     dword ptr [rax]
.text:0000000180009067                 mov     rax, [rbx+38h]
.text:000000018000906B                 dec     qword ptr [rax]
.text:000000018000906E                 xor     eax, eax
.text:0000000180009070                 cmp     edi, 0FFFFFFFFh
.text:0000000180009073                 cmovnz  eax, edi
.text:0000000180009076                 mov     rbx, [rsp+28h+arg_10]
.text:000000018000907B                 add     rsp, 20h
.text:000000018000907F                 pop     rdi
.text:0000000180009080                 retn
.text:0000000180009081 ; ---------------------------------------------------------------------------
.text:0000000180009081
.text:0000000180009081 loc_180009081:                          ; CODE XREF: sub_180009030+19↑j
.text:0000000180009081                                         ; sub_180009030+22↑j ...
.text:0000000180009081                 mov     rdx, [rbx+80h]  ; Stream
.text:0000000180009088                 test    rdx, rdx
.text:000000018000908B                 jz      short loc_180009100
.text:000000018000908D                 cmp     edi, 0FFFFFFFFh
.text:0000000180009090                 jz      short loc_180009100
.text:0000000180009092                 cmp     qword ptr [rbx+68h], 0
.text:0000000180009097                 jnz     short loc_1800090A8
.text:0000000180009099                 movzx   ecx, dil        ; Character
.text:000000018000909D                 call    cs:ungetc
.text:00000001800090A3                 cmp     eax, 0FFFFFFFFh
.text:00000001800090A6                 jnz     short loc_1800090F3
.text:00000001800090A8
.text:00000001800090A8 loc_1800090A8:                          ; CODE XREF: sub_180009030+67↑j
.text:00000001800090A8                 mov     r9, [rbx+38h]
.text:00000001800090AC                 lea     rdx, [rbx+70h]
.text:00000001800090B0                 cmp     [r9], rdx
.text:00000001800090B3                 jz      short loc_180009100
.text:00000001800090B5                 mov     r10, [rbx+18h]
.text:00000001800090B9                 lea     r8, [rbx+50h]
.text:00000001800090BD                 mov     [rdx], dil
.text:00000001800090C0                 mov     rax, [r10]
.text:00000001800090C3                 cmp     rax, rdx
.text:00000001800090C6                 jz      short loc_1800090DF
.text:00000001800090C8                 mov     [rbx+88h], rax
.text:00000001800090CF                 mov     rax, [r8]
.text:00000001800090D2                 movsxd  rcx, dword ptr [rax]
.text:00000001800090D5                 add     rcx, [r9]
.text:00000001800090D8                 mov     [rbx+90h], rcx
.text:00000001800090DF
.text:00000001800090DF loc_1800090DF:                          ; CODE XREF: sub_180009030+96↑j
.text:00000001800090DF                 mov     [r10], rdx
.text:00000001800090E2                 mov     rax, [rbx+38h]
.text:00000001800090E6                 sub     ebx, edx
.text:00000001800090E8                 add     ebx, 71h ; 'q'
.text:00000001800090EB                 mov     [rax], rdx
.text:00000001800090EE                 mov     rax, [r8]
.text:00000001800090F1                 mov     [rax], ebx
.text:00000001800090F3
.text:00000001800090F3 loc_1800090F3:                          ; CODE XREF: sub_180009030+76↑j
.text:00000001800090F3                 mov     eax, edi
.text:00000001800090F5                 mov     rbx, [rsp+28h+arg_10]
.text:00000001800090FA                 add     rsp, 20h
.text:00000001800090FE                 pop     rdi
.text:00000001800090FF                 retn
.text:0000000180009100 ; ---------------------------------------------------------------------------
.text:0000000180009100
.text:0000000180009100 loc_180009100:                          ; CODE XREF: sub_180009030+5B↑j
.text:0000000180009100                                         ; sub_180009030+60↑j ...
.text:0000000180009100                 mov     rbx, [rsp+28h+arg_10]
.text:0000000180009105                 mov     eax, 0FFFFFFFFh
.text:000000018000910A                 add     rsp, 20h
.text:000000018000910E                 pop     rdi
.text:000000018000910F                 retn
.text:000000018000910F sub_180009030   endp
.text:000000018000910F
.text:0000000180009110
.text:0000000180009110 ; =============== S U B R O U T I N E =======================================
.text:0000000180009110
.text:0000000180009110
.text:0000000180009110 sub_180009110   proc near               ; DATA XREF: .rdata:0000000180013A28↓o
.text:0000000180009110                                         ; .rdata:00000001800158C4↓o ...
.text:0000000180009110
.text:0000000180009110 var_68          = qword ptr -68h
.text:0000000180009110 var_60          = qword ptr -60h
.text:0000000180009110 var_58          = qword ptr -58h
.text:0000000180009110 var_50          = qword ptr -50h
.text:0000000180009110 var_48          = qword ptr -48h
.text:0000000180009110 var_40          = qword ptr -40h
.text:0000000180009110 var_38          = byte ptr -38h
.text:0000000180009110 var_37          = byte ptr -37h
.text:0000000180009110 Buffer          = byte ptr -30h
.text:0000000180009110 var_10          = qword ptr -10h
.text:0000000180009110 arg_10          = qword ptr  18h
.text:0000000180009110 arg_18          = qword ptr  20h
.text:0000000180009110
.text:0000000180009110 ; __unwind { // __GSHandlerCheck
.text:0000000180009110                 mov     [rsp+arg_18], rbx
.text:0000000180009115                 push    rdi
.text:0000000180009116                 sub     rsp, 80h
.text:000000018000911D                 mov     rax, cs:__security_cookie
.text:0000000180009124                 xor     rax, rsp
.text:0000000180009127                 mov     [rsp+88h+var_10], rax
.text:000000018000912C                 mov     edi, edx
.text:000000018000912E                 mov     rbx, rcx
.text:0000000180009131                 cmp     edx, 0FFFFFFFFh
.text:0000000180009134                 jnz     short loc_18000913D
.text:0000000180009136                 xor     eax, eax
.text:0000000180009138                 jmp     loc_18000929A
.text:000000018000913D ; ---------------------------------------------------------------------------
.text:000000018000913D
.text:000000018000913D loc_18000913D:                          ; CODE XREF: sub_180009110+24↑j
.text:000000018000913D                 mov     rdx, [rcx+40h]
.text:0000000180009141                 mov     rax, [rdx]
.text:0000000180009144                 test    rax, rax
.text:0000000180009147                 jz      short loc_180009168
.text:0000000180009149                 mov     rdx, [rcx+58h]
.text:000000018000914D                 movsxd  r8, dword ptr [rdx]
.text:0000000180009150                 add     r8, rax
.text:0000000180009153                 cmp     rax, r8
.text:0000000180009156                 jnb     short loc_180009168
.text:0000000180009158                 call    cs:?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Pninc(void)
.text:000000018000915E                 mov     [rax], dil
.text:0000000180009161                 mov     eax, edi
.text:0000000180009163                 jmp     loc_18000929A
.text:0000000180009168 ; ---------------------------------------------------------------------------
.text:0000000180009168
.text:0000000180009168 loc_180009168:                          ; CODE XREF: sub_180009110+37↑j
.text:0000000180009168                                         ; sub_180009110+46↑j
.text:0000000180009168                 cmp     qword ptr [rcx+80h], 0
.text:0000000180009168 ; } // starts at 180009110
.text:0000000180009170
.text:0000000180009170 loc_180009170:                          ; DATA XREF: .rdata:00000001800158C4↓o
.text:0000000180009170                                         ; .rdata:00000001800158D4↓o ...
.text:0000000180009170 ; __unwind { // __GSHandlerCheck
.text:0000000180009170                 mov     [rsp+88h+arg_10], rsi
.text:0000000180009178                 jz      loc_18000928D
.text:000000018000917E                 mov     r8, [rcx+18h]
.text:0000000180009182                 lea     rax, [rcx+70h]
.text:0000000180009186                 cmp     [r8], rax
.text:0000000180009189                 jnz     short loc_1800091AB
.text:000000018000918B                 mov     rdx, [rcx+90h]
.text:0000000180009192                 mov     rcx, [rcx+88h]
.text:0000000180009199                 mov     [r8], rcx
.text:000000018000919C                 sub     edx, ecx
.text:000000018000919E                 mov     rax, [rbx+38h]
.text:00000001800091A2                 mov     [rax], rcx
.text:00000001800091A5                 mov     rax, [rbx+50h]
.text:00000001800091A9                 mov     [rax], edx
.text:00000001800091AB
.text:00000001800091AB loc_1800091AB:                          ; CODE XREF: sub_180009110+79↑j
.text:00000001800091AB                 mov     rcx, [rbx+68h]
.text:00000001800091AF                 test    rcx, rcx
.text:00000001800091B2                 jnz     short loc_1800091D6
.text:00000001800091B4                 mov     rdx, [rbx+80h]  ; Stream
.text:00000001800091BB                 movsx   ecx, dil        ; Character
.text:00000001800091BF                 call    cs:fputc
.text:00000001800091C5                 mov     ecx, 0FFFFFFFFh
.text:00000001800091CA                 cmp     eax, ecx
.text:00000001800091CC                 cmovnz  ecx, edi
.text:00000001800091CF                 mov     eax, ecx
.text:00000001800091D1                 jmp     loc_180009292
.text:00000001800091D6 ; ---------------------------------------------------------------------------
.text:00000001800091D6
.text:00000001800091D6 loc_1800091D6:                          ; CODE XREF: sub_180009110+A2↑j
.text:00000001800091D6                 lea     rax, [rsp+88h+var_48]
.text:00000001800091DB                 mov     [rsp+88h+var_38], dil
.text:00000001800091E0                 mov     [rsp+88h+var_50], rax
.text:00000001800091E5                 lea     rdx, [rbx+74h]
.text:00000001800091E9                 lea     rax, [rsp+88h+var_10]
.text:00000001800091EE                 mov     [rsp+88h+var_58], rax
.text:00000001800091F3                 lea     r9, [rsp+88h+var_37]
.text:00000001800091F8                 lea     rax, [rsp+88h+Buffer]
.text:00000001800091FD                 mov     [rsp+88h+var_60], rax
.text:0000000180009202                 lea     r8, [rsp+88h+var_38]
.text:0000000180009207                 lea     rax, [rsp+88h+var_40]
.text:000000018000920C                 mov     [rsp+88h+var_68], rax
.text:0000000180009211                 call    cs:?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z ; std::codecvt<char,char,_Mbstatet>::out(_Mbstatet &,char const *,char const *,char const * &,char *,char *,char * &)
.text:0000000180009217                 test    eax, eax
.text:0000000180009219                 jz      short loc_180009245
.text:000000018000921B                 sub     eax, 1
.text:000000018000921E                 jz      short loc_180009245
.text:0000000180009220                 cmp     eax, 2
.text:0000000180009223                 jnz     short loc_18000928D
.text:0000000180009225                 movsx   ecx, [rsp+88h+var_38] ; Character
.text:000000018000922A                 mov     rdx, [rbx+80h]  ; Stream
.text:0000000180009231                 call    cs:fputc
.text:0000000180009237                 mov     ecx, 0FFFFFFFFh
.text:000000018000923C                 cmp     eax, ecx
.text:000000018000923E                 cmovnz  ecx, edi
.text:0000000180009241                 mov     eax, ecx
.text:0000000180009243                 jmp     short loc_180009292
.text:0000000180009245 ; ---------------------------------------------------------------------------
.text:0000000180009245
.text:0000000180009245 loc_180009245:                          ; CODE XREF: sub_180009110+109↑j
.text:0000000180009245                                         ; sub_180009110+10E↑j
.text:0000000180009245                 mov     rsi, [rsp+88h+var_48]
.text:000000018000924A                 lea     rax, [rsp+88h+Buffer]
.text:000000018000924F                 sub     rsi, rax
.text:0000000180009252                 jz      short loc_180009273
.text:0000000180009254                 mov     r9, [rbx+80h]   ; Stream
.text:000000018000925B                 lea     rcx, [rsp+88h+Buffer] ; Buffer
.text:0000000180009260                 mov     r8, rsi         ; ElementCount
.text:0000000180009263                 mov     edx, 1          ; ElementSize
.text:0000000180009268                 call    cs:fwrite
.text:000000018000926E                 cmp     rsi, rax
.text:0000000180009271                 jnz     short loc_18000928D
.text:0000000180009273
.text:0000000180009273 loc_180009273:                          ; CODE XREF: sub_180009110+142↑j
.text:0000000180009273                 lea     rax, [rsp+88h+var_38]
.text:0000000180009278                 mov     byte ptr [rbx+71h], 1
.text:000000018000927C                 cmp     [rsp+88h+var_40], rax
.text:0000000180009281                 mov     ecx, 0FFFFFFFFh
.text:0000000180009286                 cmovnz  ecx, edi
.text:0000000180009289                 mov     eax, ecx
.text:000000018000928B                 jmp     short loc_180009292
.text:000000018000928D ; ---------------------------------------------------------------------------
.text:000000018000928D
.text:000000018000928D loc_18000928D:                          ; CODE XREF: sub_180009110+68↑j
.text:000000018000928D                                         ; sub_180009110+113↑j ...
.text:000000018000928D                 mov     eax, 0FFFFFFFFh
.text:0000000180009292
.text:0000000180009292 loc_180009292:                          ; CODE XREF: sub_180009110+C1↑j
.text:0000000180009292                                         ; sub_180009110+133↑j ...
.text:0000000180009292                 mov     rsi, [rsp+88h+arg_10]
.text:0000000180009292 ; } // starts at 180009170
.text:000000018000929A
.text:000000018000929A loc_18000929A:                          ; CODE XREF: sub_180009110+28↑j
.text:000000018000929A                                         ; sub_180009110+53↑j
.text:000000018000929A                                         ; DATA XREF: ...
.text:000000018000929A ; __unwind { // __GSHandlerCheck
.text:000000018000929A                 mov     rcx, [rsp+88h+var_10]
.text:000000018000929F                 xor     rcx, rsp        ; StackCookie
.text:00000001800092A2                 call    __security_check_cookie
.text:00000001800092A7                 mov     rbx, [rsp+88h+arg_18]
.text:00000001800092AF                 add     rsp, 80h
.text:00000001800092B6                 pop     rdi
.text:00000001800092B7                 retn
.text:00000001800092B7 ; } // starts at 18000929A
.text:00000001800092B7 sub_180009110   endp
.text:00000001800092B7
.text:00000001800092B7 ; ---------------------------------------------------------------------------
.text:00000001800092B8 algn_1800092B8:                         ; DATA XREF: .pdata:000000018001C888↓o
.text:00000001800092B8                 align 20h
.text:00000001800092C0
.text:00000001800092C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800092C0
.text:00000001800092C0
.text:00000001800092C0 sub_1800092C0   proc near               ; DATA XREF: .rdata:0000000180013A20↓o
.text:00000001800092C0                 mov     rcx, [rcx+80h]
.text:00000001800092C7                 test    rcx, rcx
.text:00000001800092CA                 jz      short locret_1800092D3
.text:00000001800092CC                 jmp     cs:_unlock_file
.text:00000001800092D3 ; ---------------------------------------------------------------------------
.text:00000001800092D3
.text:00000001800092D3 locret_1800092D3:                       ; CODE XREF: sub_1800092C0+A↑j
.text:00000001800092D3                 retn
.text:00000001800092D3 sub_1800092C0   endp
.text:00000001800092D3
.text:00000001800092D3 ; ---------------------------------------------------------------------------
.text:00000001800092D4                 align 20h
.text:00000001800092E0
.text:00000001800092E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800092E0
.text:00000001800092E0
.text:00000001800092E0 sub_1800092E0   proc near               ; DATA XREF: .rdata:0000000180013A18↓o
.text:00000001800092E0                 mov     rcx, [rcx+80h]
.text:00000001800092E7                 test    rcx, rcx
.text:00000001800092EA                 jz      short locret_1800092F3
.text:00000001800092EC                 jmp     cs:_lock_file
.text:00000001800092F3 ; ---------------------------------------------------------------------------
.text:00000001800092F3
.text:00000001800092F3 locret_1800092F3:                       ; CODE XREF: sub_1800092E0+A↑j
.text:00000001800092F3                 retn
.text:00000001800092F3 sub_1800092E0   endp
.text:00000001800092F3
.text:00000001800092F3 ; ---------------------------------------------------------------------------
.text:00000001800092F4                 align 20h
.text:0000000180009300
.text:0000000180009300 ; =============== S U B R O U T I N E =======================================
.text:0000000180009300
.text:0000000180009300
.text:0000000180009300 sub_180009300   proc near               ; CODE XREF: sub_180007030+3A0↑p
.text:0000000180009300                                         ; DATA XREF: .pdata:000000018001C894↓o
.text:0000000180009300
.text:0000000180009300 var_48          = byte ptr -48h
.text:0000000180009300 var_40          = qword ptr -40h
.text:0000000180009300 Base            = qword ptr -38h
.text:0000000180009300 Pointer         = qword ptr -30h
.text:0000000180009300 Count           = qword ptr -28h
.text:0000000180009300 var_20          = qword ptr -20h
.text:0000000180009300 arg_10          = qword ptr  18h
.text:0000000180009300
.text:0000000180009300 ; __unwind { // __GSHandlerCheck_EH4
.text:0000000180009300                 mov     [rsp+arg_10], rbx
.text:0000000180009305                 push    rbp
.text:0000000180009306                 push    rsi
.text:0000000180009307                 push    rdi
.text:0000000180009308                 sub     rsp, 50h
.text:000000018000930C                 mov     rax, cs:__security_cookie
.text:0000000180009313                 xor     rax, rsp
.text:0000000180009316                 mov     [rsp+68h+var_20], rax
.text:000000018000931B                 mov     rax, rdx
.text:000000018000931E                 mov     rdi, rcx
.text:0000000180009321                 lea     rbx, [rcx+8]
.text:0000000180009325                 cmp     qword ptr [rbx+80h], 0
.text:000000018000932D                 jz      short loc_180009366
.text:000000018000932F                 mov     rax, [rcx]
.text:0000000180009332
.text:0000000180009332 loc_180009332:                          ; CODE XREF: sub_180009300+83↓j
.text:0000000180009332                 add     rax, 4
.text:0000000180009336
.text:0000000180009336 loc_180009336:                          ; CODE XREF: sub_180009300+164↓j
.text:0000000180009336                 movsxd  rcx, dword ptr [rax]
.text:0000000180009339                 add     rcx, rdi
.text:000000018000933C                 xor     r8d, r8d
.text:000000018000933F                 lea     edx, [r8+2]
.text:0000000180009343                 call    cs:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
.text:0000000180009349
.text:0000000180009349 loc_180009349:                          ; CODE XREF: sub_180009300+17B↓j
.text:0000000180009349                 mov     rcx, [rsp+68h+var_20]
.text:000000018000934E                 xor     rcx, rsp        ; StackCookie
.text:0000000180009351                 call    __security_check_cookie
.text:0000000180009356                 mov     rbx, [rsp+68h+arg_10]
.text:000000018000935E                 add     rsp, 50h
.text:0000000180009362                 pop     rdi
.text:0000000180009363                 pop     rsi
.text:0000000180009364                 pop     rbp
.text:0000000180009365                 retn
.text:0000000180009366 ; ---------------------------------------------------------------------------
.text:0000000180009366
.text:0000000180009366 loc_180009366:                          ; CODE XREF: sub_180009300+2D↑j
.text:0000000180009366                 mov     edx, 0Ah
.text:000000018000936B                 lea     r8d, [rdx+36h]
.text:000000018000936F                 mov     rcx, rax
.text:0000000180009372                 call    cs:?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z ; std::_Fiopen(char const *,int,int)
.text:0000000180009378                 mov     rsi, rax
.text:000000018000937B                 test    rax, rax
.text:000000018000937E                 jnz     short loc_180009385
.text:0000000180009380                 mov     rax, [rdi]
.text:0000000180009383                 jmp     short loc_180009332
.text:0000000180009385 ; ---------------------------------------------------------------------------
.text:0000000180009385
.text:0000000180009385 loc_180009385:                          ; CODE XREF: sub_180009300+7E↑j
.text:0000000180009385                 mov     byte ptr [rbx+7Ch], 1
.text:0000000180009389                 mov     byte ptr [rbx+71h], 0
.text:000000018000938D                 mov     rcx, rbx
.text:0000000180009390                 call    cs:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Init(void)
.text:0000000180009396                 xor     ebp, ebp
.text:0000000180009398                 mov     [rsp+68h+Base], rbp
.text:000000018000939D                 mov     [rsp+68h+Pointer], rbp
.text:00000001800093A2                 mov     [rsp+68h+Count], rbp
.text:00000001800093A7                 lea     r9, [rsp+68h+Count] ; Count
.text:00000001800093AC                 lea     r8, [rsp+68h+Pointer] ; Pointer
.text:00000001800093B1                 lea     rdx, [rsp+68h+Base] ; Base
.text:00000001800093B6                 mov     rcx, rsi        ; Stream
.text:00000001800093B9                 call    cs:_get_stream_buffer_pointers
.text:00000001800093BF                 mov     rax, [rsp+68h+Base]
.text:00000001800093C4                 mov     [rbx+18h], rax
.text:00000001800093C8                 mov     [rbx+20h], rax
.text:00000001800093CC                 mov     rax, [rsp+68h+Pointer]
.text:00000001800093D1                 mov     [rbx+38h], rax
.text:00000001800093D5                 mov     [rbx+40h], rax
.text:00000001800093D9                 mov     rax, [rsp+68h+Count]
.text:00000001800093DE                 mov     [rbx+50h], rax
.text:00000001800093E2                 mov     [rbx+58h], rax
.text:00000001800093E6                 mov     [rbx+80h], rsi
.text:00000001800093ED                 mov     rax, cs:qword_18001B2B0
.text:00000001800093F4                 mov     [rbx+74h], rax
.text:00000001800093F8                 mov     [rbx+68h], rbp
.text:00000001800093FC                 lea     rdx, [rsp+68h+var_48]
.text:0000000180009401                 mov     rcx, rbx
.text:0000000180009404                 call    cs:?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ ; std::basic_streambuf<char,std::char_traits<char>>::getloc(void)
.text:000000018000940A                 nop
.text:000000018000940B                 mov     rcx, rax
.text:000000018000940E                 call    sub_18000A0D0
.text:0000000180009413                 mov     rsi, rax
.text:0000000180009416                 mov     rcx, rax
.text:0000000180009419                 call    cs:?always_noconv@codecvt_base@std@@QEBA_NXZ ; std::codecvt_base::always_noconv(void)
.text:000000018000941F                 test    al, al
.text:0000000180009421                 jz      short loc_180009429
.text:0000000180009423                 mov     [rbx+68h], rbp
.text:0000000180009427                 jmp     short loc_180009437
.text:0000000180009429 ; ---------------------------------------------------------------------------
.text:0000000180009429
.text:0000000180009429 loc_180009429:                          ; CODE XREF: sub_180009300+121↑j
.text:0000000180009429                 mov     [rbx+68h], rsi
.text:000000018000942D                 mov     rcx, rbx
.text:0000000180009430                 call    cs:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Init(void)
.text:0000000180009436                 nop
.text:0000000180009437
.text:0000000180009437 loc_180009437:                          ; CODE XREF: sub_180009300+127↑j
.text:0000000180009437                 mov     rcx, [rsp+68h+var_40]
.text:000000018000943C                 test    rcx, rcx
.text:000000018000943F                 jz      short loc_18000945A
.text:0000000180009441                 mov     rax, [rcx]
.text:0000000180009444                 call    qword ptr [rax+10h]
.text:0000000180009447                 test    rax, rax
.text:000000018000944A                 jz      short loc_18000945A
.text:000000018000944C                 mov     r8, [rax]
.text:000000018000944F                 mov     edx, 1
.text:0000000180009454                 mov     rcx, rax
.text:0000000180009457                 call    qword ptr [r8]
.text:000000018000945A
.text:000000018000945A loc_18000945A:                          ; CODE XREF: sub_180009300+13F↑j
.text:000000018000945A                                         ; sub_180009300+14A↑j
.text:000000018000945A                 mov     rax, [rdi]
.text:000000018000945D                 add     rax, 4
.text:0000000180009461                 test    rbx, rbx
.text:0000000180009464                 jz      loc_180009336
.text:000000018000946A                 movsxd  rcx, dword ptr [rax]
.text:000000018000946D                 add     rcx, rdi
.text:0000000180009470                 xor     r8d, r8d
.text:0000000180009473                 xor     edx, edx
.text:0000000180009475                 call    cs:?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char>>::clear(int,bool)
.text:000000018000947B                 jmp     loc_180009349
.text:000000018000947B ; } // starts at 180009300
.text:000000018000947B sub_180009300   endp
.text:000000018000947B
.text:0000000180009480
.text:0000000180009480 ; =============== S U B R O U T I N E =======================================
.text:0000000180009480
.text:0000000180009480
.text:0000000180009480 sub_180009480   proc near               ; CODE XREF: fsuipcw_init+CB↑p
.text:0000000180009480                                         ; sub_180007030+3C↑p ...
.text:0000000180009480
.text:0000000180009480 var_28          = dword ptr -28h
.text:0000000180009480 var_20          = qword ptr -20h
.text:0000000180009480 var_18          = qword ptr -18h
.text:0000000180009480 arg_8           = qword ptr  10h
.text:0000000180009480
.text:0000000180009480 ; FUNCTION CHUNK AT .text:0000000180011520 SIZE 00000040 BYTES
.text:0000000180009480
.text:0000000180009480 ; __unwind { // __CxxFrameHandler4
.text:0000000180009480                 mov     [rsp+arg_8], rbx
.text:0000000180009485                 push    rdi
.text:0000000180009486                 sub     rsp, 40h
.text:000000018000948A                 mov     rdi, rcx
.text:000000018000948D                 mov     [rsp+48h+var_20], rcx
.text:0000000180009492                 mov     [rsp+48h+var_28], 0
.text:000000018000949A                 lea     rax, unk_180013AB8
.text:00000001800094A1                 mov     [rcx], rax
.text:00000001800094A4                 add     rcx, 0A8h
.text:00000001800094AB                 call    cs:??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ ; std::basic_ios<char,std::char_traits<char>>::basic_ios<char,std::char_traits<char>>(void)
.text:00000001800094B1                 nop
.text:00000001800094B2                 mov     [rsp+48h+var_28], 1
.text:00000001800094BA                 lea     rbx, [rdi+8]
.text:00000001800094BE                 xor     r9d, r9d
.text:00000001800094C1                 xor     r8d, r8d
.text:00000001800094C4                 mov     rdx, rbx
.text:00000001800094C7                 mov     rcx, rdi
.text:00000001800094CA                 call    cs:??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ; std::basic_ostream<char,std::char_traits<char>>::basic_ostream<char,std::char_traits<char>>(std::basic_streambuf<char,std::char_traits<char>> *,bool)
.text:00000001800094D0                 nop
.text:00000001800094D1                 mov     rax, [rdi]
.text:00000001800094D4                 movsxd  rcx, dword ptr [rax+4]
.text:00000001800094D8                 lea     rax, off_180013A98
.text:00000001800094DF                 mov     [rcx+rdi], rax
.text:00000001800094E3                 mov     rax, [rdi]
.text:00000001800094E6                 movsxd  rcx, dword ptr [rax+4]
.text:00000001800094EA                 lea     edx, [rcx-0A8h]
.text:00000001800094F0                 mov     [rcx+rdi-4], edx
.text:00000001800094F4                 mov     [rsp+48h+var_18], rbx
.text:00000001800094F9                 mov     rcx, rbx
.text:00000001800094FC ;   try {
.text:00000001800094FC                 call    cs:??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ ; std::basic_streambuf<char,std::char_traits<char>>::basic_streambuf<char,std::char_traits<char>>(void)
.text:0000000180009502                 nop
.text:0000000180009503                 lea     rax, off_180013A10
.text:000000018000950A                 mov     [rbx], rax
.text:000000018000950D                 mov     byte ptr [rbx+7Ch], 0
.text:0000000180009511                 mov     byte ptr [rbx+71h], 0
.text:0000000180009515                 mov     rcx, rbx
.text:0000000180009515 ;   } // starts at 1800094FC
.text:0000000180009518                 call    cs:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Init(void)
.text:000000018000951E                 mov     qword ptr [rbx+80h], 0
.text:0000000180009529                 mov     rcx, cs:qword_18001B2B0
.text:0000000180009530                 mov     [rbx+74h], rcx
.text:0000000180009534                 mov     qword ptr [rbx+68h], 0
.text:000000018000953C                 mov     rax, rdi
.text:000000018000953F                 mov     rbx, [rsp+48h+arg_8]
.text:0000000180009544                 add     rsp, 40h
.text:0000000180009548                 pop     rdi
.text:0000000180009549                 retn
.text:0000000180009549 ; } // starts at 180009480
.text:0000000180009549 sub_180009480   endp
.text:0000000180009549
.text:0000000180009549 ; ---------------------------------------------------------------------------
.text:000000018000954A algn_18000954A:                         ; DATA XREF: .pdata:000000018001C8A0↓o
.text:000000018000954A                 align 10h
.text:0000000180009550 ; [00000034 BYTES: COLLAPSED FUNCTION std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char>>::`scalar deleting destructor'(uint). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180009584 algn_180009584:                         ; DATA XREF: .pdata:000000018001C8AC↓o
.text:0000000180009584                 align 10h
.text:0000000180009590
.text:0000000180009590 ; =============== S U B R O U T I N E =======================================
.text:0000000180009590
.text:0000000180009590
.text:0000000180009590 sub_180009590   proc near               ; CODE XREF: sub_18000A6A4+7↓j
.text:0000000180009590                                         ; DATA XREF: .pdata:000000018001C8B8↓o
.text:0000000180009590
.text:0000000180009590 arg_0           = qword ptr  8
.text:0000000180009590 arg_8           = qword ptr  10h
.text:0000000180009590
.text:0000000180009590                 mov     [rsp+arg_0], rbx
.text:0000000180009595                 mov     [rsp+arg_8], rsi
.text:000000018000959A                 push    rdi
.text:000000018000959B                 sub     rsp, 20h
.text:000000018000959F                 mov     rax, [rcx-98h]
.text:00000001800095A6                 mov     rbx, rcx
.text:00000001800095A9                 mov     edi, edx
.text:00000001800095AB                 movsxd  r8, dword ptr [rax+4]
.text:00000001800095AF                 lea     rax, off_180013B48
.text:00000001800095B6                 mov     [r8+rcx-98h], rax
.text:00000001800095BE                 mov     rax, [rcx-98h]
.text:00000001800095C5                 movsxd  r8, dword ptr [rax+4]
.text:00000001800095C9                 lea     r9d, [r8-98h]
.text:00000001800095D0                 mov     [r8+rcx-9Ch], r9d
.text:00000001800095D8                 add     rcx, 0FFFFFFFFFFFFFF80h
.text:00000001800095DC                 call    sub_1800086A0
.text:00000001800095E1                 lea     rcx, [rbx-78h]
.text:00000001800095E5                 call    cs:??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_iostream<char,std::char_traits<char>>::~basic_iostream<char,std::char_traits<char>>(void)
.text:00000001800095EB                 mov     rcx, rbx
.text:00000001800095EE                 call    cs:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ios<char,std::char_traits<char>>::~basic_ios<char,std::char_traits<char>>(void)
.text:00000001800095F4                 test    dil, 1
.text:00000001800095F8                 jz      short loc_18000960B
.text:00000001800095FA                 mov     edx, 0F8h
.text:00000001800095FF                 lea     rcx, [rbx-98h]  ; Block
.text:0000000180009606                 call    j_j_free
.text:000000018000960B
.text:000000018000960B loc_18000960B:                          ; CODE XREF: sub_180009590+68↑j
.text:000000018000960B                 mov     rsi, [rsp+28h+arg_8]
.text:0000000180009610                 lea     rax, [rbx-98h]
.text:0000000180009617                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000961C                 add     rsp, 20h
.text:0000000180009620                 pop     rdi
.text:0000000180009621                 retn
.text:0000000180009621 sub_180009590   endp
.text:0000000180009621
.text:0000000180009621 ; ---------------------------------------------------------------------------
.text:0000000180009622 algn_180009622:                         ; DATA XREF: .pdata:000000018001C8B8↓o
.text:0000000180009622                 align 10h
.text:0000000180009630
.text:0000000180009630 ; =============== S U B R O U T I N E =======================================
.text:0000000180009630
.text:0000000180009630
.text:0000000180009630 ; __int64 __fastcall sub_180009630(void *Block)
.text:0000000180009630 sub_180009630   proc near               ; DATA XREF: .rdata:off_180013A10↓o
.text:0000000180009630                                         ; .pdata:000000018001C8C4↓o
.text:0000000180009630
.text:0000000180009630 arg_0           = qword ptr  8
.text:0000000180009630
.text:0000000180009630 ; FUNCTION CHUNK AT .text:00000001800111E6 SIZE 00000006 BYTES
.text:0000000180009630
.text:0000000180009630 ; __unwind { // __CxxFrameHandler4
.text:0000000180009630                 mov     [rsp+arg_0], rbx
.text:0000000180009635                 push    rdi
.text:0000000180009636                 sub     rsp, 20h
.text:000000018000963A                 mov     edi, edx
.text:000000018000963C                 mov     rbx, rcx
.text:000000018000963F                 lea     rax, off_180013A10
.text:0000000180009646                 mov     [rcx], rax
.text:0000000180009649                 cmp     qword ptr [rcx+80h], 0
.text:0000000180009651                 jz      short loc_180009680
.text:0000000180009653                 mov     r8, [rcx+18h]
.text:0000000180009657                 lea     rax, [rcx+70h]
.text:000000018000965B                 cmp     [r8], rax
.text:000000018000965E                 jnz     short loc_180009680
.text:0000000180009660                 mov     rdx, [rcx+90h]
.text:0000000180009667                 mov     rcx, [rcx+88h]
.text:000000018000966E                 mov     [r8], rcx
.text:0000000180009671                 mov     rax, [rbx+38h]
.text:0000000180009675                 mov     [rax], rcx
.text:0000000180009678                 sub     edx, ecx
.text:000000018000967A                 mov     rax, [rbx+50h]
.text:000000018000967E                 mov     [rax], edx
.text:0000000180009680
.text:0000000180009680 loc_180009680:                          ; CODE XREF: sub_180009630+21↑j
.text:0000000180009680                                         ; sub_180009630+2E↑j
.text:0000000180009680                 cmp     byte ptr [rbx+7Ch], 0
.text:0000000180009684                 jz      short loc_18000968E
.text:0000000180009686                 mov     rcx, rbx
.text:0000000180009689                 call    sub_180009830
.text:000000018000968E
.text:000000018000968E loc_18000968E:                          ; CODE XREF: sub_180009630+54↑j
.text:000000018000968E                 mov     rcx, rbx
.text:0000000180009691                 call    cs:__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_streambuf<char,std::char_traits<char>>::~basic_streambuf<char,std::char_traits<char>>(void)
.text:0000000180009697                 nop
.text:0000000180009698                 test    dil, 1
.text:000000018000969C                 jz      short loc_1800096AB
.text:000000018000969E                 mov     edx, 98h
.text:00000001800096A3                 mov     rcx, rbx        ; Block
.text:00000001800096A6                 call    j_j_free
.text:00000001800096AB
.text:00000001800096AB loc_1800096AB:                          ; CODE XREF: sub_180009630+6C↑j
.text:00000001800096AB                 mov     rax, rbx
.text:00000001800096AE                 mov     rbx, [rsp+28h+arg_0]
.text:00000001800096B3                 add     rsp, 20h
.text:00000001800096B7                 pop     rdi
.text:00000001800096B8                 retn
.text:00000001800096B8 ; } // starts at 180009630
.text:00000001800096B8 sub_180009630   endp
.text:00000001800096B8
.text:00000001800096B8 ; ---------------------------------------------------------------------------
.text:00000001800096B9 algn_1800096B9:                         ; DATA XREF: .pdata:000000018001C8C4↓o
.text:00000001800096B9                 align 20h
.text:00000001800096C0
.text:00000001800096C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800096C0
.text:00000001800096C0
.text:00000001800096C0 sub_1800096C0   proc near               ; CODE XREF: .text:000000018000A6B7↓j
.text:00000001800096C0                                         ; DATA XREF: .pdata:000000018001C8D0↓o
.text:00000001800096C0
.text:00000001800096C0 arg_0           = qword ptr  8
.text:00000001800096C0
.text:00000001800096C0                 mov     [rsp+arg_0], rbx
.text:00000001800096C5                 push    rdi
.text:00000001800096C6                 sub     rsp, 20h
.text:00000001800096CA                 lea     rdi, [rcx-0A8h]
.text:00000001800096D1                 mov     ebx, edx
.text:00000001800096D3                 mov     rcx, rdi
.text:00000001800096D6                 call    sub_180006F70
.text:00000001800096DB                 test    bl, 1
.text:00000001800096DE                 jz      short loc_1800096ED
.text:00000001800096E0                 mov     edx, 108h
.text:00000001800096E5                 mov     rcx, rdi        ; Block
.text:00000001800096E8                 call    j_j_free
.text:00000001800096ED
.text:00000001800096ED loc_1800096ED:                          ; CODE XREF: sub_1800096C0+1E↑j
.text:00000001800096ED                 mov     rbx, [rsp+28h+arg_0]
.text:00000001800096F2                 mov     rax, rdi
.text:00000001800096F5                 add     rsp, 20h
.text:00000001800096F9                 pop     rdi
.text:00000001800096FA                 retn
.text:00000001800096FA sub_1800096C0   endp
.text:00000001800096FA
.text:00000001800096FA ; ---------------------------------------------------------------------------
.text:00000001800096FB algn_1800096FB:                         ; DATA XREF: .pdata:000000018001C8D0↓o
.text:00000001800096FB                 align 20h
.text:0000000180009700
.text:0000000180009700 ; =============== S U B R O U T I N E =======================================
.text:0000000180009700
.text:0000000180009700
.text:0000000180009700 sub_180009700   proc near               ; CODE XREF: int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0+7↓j
.text:0000000180009700                                         ; int `_wcrtomb_s_l(int * const,char * const,unsigned __int64,wchar_t,_Mbstatet * const,__crt_locale_pointers * const)'::`1'::dtor$0+7↓j ...
.text:0000000180009700
.text:0000000180009700 ; FUNCTION CHUNK AT .text:00000001800111E6 SIZE 00000006 BYTES
.text:0000000180009700
.text:0000000180009700 ; __unwind { // __CxxFrameHandler4
.text:0000000180009700                 push    rbx
.text:0000000180009702                 sub     rsp, 20h
.text:0000000180009706                 mov     rbx, rcx
.text:0000000180009709                 call    cs:?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception(void)
.text:000000018000970F                 test    al, al
.text:0000000180009711                 jnz     short loc_18000971D
.text:0000000180009713                 mov     rcx, [rbx]
.text:0000000180009716                 call    cs:?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)
.text:000000018000971C                 nop
.text:000000018000971D
.text:000000018000971D loc_18000971D:                          ; CODE XREF: sub_180009700+11↑j
.text:000000018000971D                 mov     rdx, [rbx]
.text:0000000180009720                 mov     rax, [rdx]
.text:0000000180009723                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009727                 mov     rcx, [rcx+rdx+48h]
.text:000000018000972C                 test    rcx, rcx
.text:000000018000972F                 jz      short loc_180009738
.text:0000000180009731                 mov     rax, [rcx]
.text:0000000180009734                 call    qword ptr [rax+10h]
.text:0000000180009737                 nop
.text:0000000180009738
.text:0000000180009738 loc_180009738:                          ; CODE XREF: sub_180009700+2F↑j
.text:0000000180009738                 add     rsp, 20h
.text:000000018000973C                 pop     rbx
.text:000000018000973D                 retn
.text:000000018000973D ; } // starts at 180009700
.text:000000018000973D sub_180009700   endp
.text:000000018000973D
.text:000000018000973D ; ---------------------------------------------------------------------------
.text:000000018000973E algn_18000973E:                         ; DATA XREF: .pdata:000000018001C8DC↓o
.text:000000018000973E                 align 20h
.text:0000000180009740
.text:0000000180009740 ; =============== S U B R O U T I N E =======================================
.text:0000000180009740
.text:0000000180009740
.text:0000000180009740 sub_180009740   proc near               ; CODE XREF: sub_180008900+36↑p
.text:0000000180009740                                         ; sub_1800089E0+51↑p ...
.text:0000000180009740
.text:0000000180009740 var_48          = qword ptr -48h
.text:0000000180009740 var_38          = qword ptr -38h
.text:0000000180009740 Buffer          = byte ptr -30h
.text:0000000180009740 var_10          = qword ptr -10h
.text:0000000180009740 arg_8           = qword ptr  10h
.text:0000000180009740
.text:0000000180009740 ; __unwind { // __GSHandlerCheck
.text:0000000180009740                 push    rbx
.text:0000000180009742                 sub     rsp, 60h
.text:0000000180009746                 mov     rax, cs:__security_cookie
.text:000000018000974D                 xor     rax, rsp
.text:0000000180009750                 mov     [rsp+68h+var_10], rax
.text:0000000180009755                 cmp     qword ptr [rcx+68h], 0
.text:000000018000975A                 mov     rbx, rcx
.text:000000018000975D                 jz      loc_180009813
.text:0000000180009763                 cmp     byte ptr [rcx+71h], 0
.text:0000000180009767                 jz      loc_180009813
.text:000000018000976D                 mov     rax, [rcx]
.text:0000000180009770                 mov     edx, 0FFFFFFFFh
.text:0000000180009770 ; } // starts at 180009740
.text:0000000180009775
.text:0000000180009775 loc_180009775:                          ; DATA XREF: .rdata:00000001800159B4↓o
.text:0000000180009775                                         ; .rdata:00000001800159C8↓o ...
.text:0000000180009775 ; __unwind { // __GSHandlerCheck
.text:0000000180009775                 mov     [rsp+68h+arg_8], rdi
.text:000000018000977A                 call    qword ptr [rax+18h]
.text:000000018000977D                 cmp     eax, 0FFFFFFFFh
.text:0000000180009780                 jz      loc_18000980F
.text:0000000180009786                 mov     rcx, [rbx+68h]
.text:000000018000978A                 lea     rax, [rsp+68h+var_38]
.text:000000018000978F                 lea     rdx, [rbx+74h]
.text:0000000180009793                 mov     [rsp+68h+var_48], rax
.text:0000000180009798                 lea     r9, [rsp+68h+var_10]
.text:000000018000979D                 lea     r8, [rsp+68h+Buffer]
.text:00000001800097A2                 call    cs:?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z ; std::codecvt<char,char,_Mbstatet>::unshift(_Mbstatet &,char *,char *,char * &)
.text:00000001800097A8                 test    eax, eax
.text:00000001800097AA                 jz      short loc_1800097D4
.text:00000001800097AC                 sub     eax, 1
.text:00000001800097AF                 jz      short loc_1800097D8
.text:00000001800097B1                 cmp     eax, 2
.text:00000001800097B4                 jnz     short loc_18000980F
.text:00000001800097B6                 mov     byte ptr [rbx+71h], 0
.text:00000001800097BA                 mov     al, 1
.text:00000001800097BC
.text:00000001800097BC loc_1800097BC:                          ; CODE XREF: sub_180009740+CD↓j
.text:00000001800097BC                                         ; sub_180009740+D1↓j
.text:00000001800097BC                 mov     rdi, [rsp+68h+arg_8]
.text:00000001800097C1                 mov     rcx, [rsp+68h+var_10]
.text:00000001800097C6                 xor     rcx, rsp        ; StackCookie
.text:00000001800097C9                 call    __security_check_cookie
.text:00000001800097CE                 add     rsp, 60h
.text:00000001800097D2                 pop     rbx
.text:00000001800097D3                 retn
.text:00000001800097D3 ; } // starts at 180009775
.text:00000001800097D4 ; ---------------------------------------------------------------------------
.text:00000001800097D4
.text:00000001800097D4 loc_1800097D4:                          ; CODE XREF: sub_180009740+6A↑j
.text:00000001800097D4                                         ; DATA XREF: .pdata:000000018001C8F4↓o ...
.text:00000001800097D4 ; __unwind { // __GSHandlerCheck
.text:00000001800097D4                 mov     byte ptr [rbx+71h], 0
.text:00000001800097D8
.text:00000001800097D8 loc_1800097D8:                          ; CODE XREF: sub_180009740+6F↑j
.text:00000001800097D8                 mov     rdi, [rsp+68h+var_38]
.text:00000001800097DD                 lea     rax, [rsp+68h+Buffer]
.text:00000001800097E2                 sub     rdi, rax
.text:00000001800097E5                 jz      short loc_180009806
.text:00000001800097E7                 mov     r9, [rbx+80h]   ; Stream
.text:00000001800097EE                 lea     rcx, [rsp+68h+Buffer] ; Buffer
.text:00000001800097F3                 mov     r8, rdi         ; ElementCount
.text:00000001800097F6                 mov     edx, 1          ; ElementSize
.text:00000001800097FB                 call    cs:fwrite
.text:0000000180009801                 cmp     rdi, rax
.text:0000000180009804                 jnz     short loc_18000980F
.text:0000000180009806
.text:0000000180009806 loc_180009806:                          ; CODE XREF: sub_180009740+A5↑j
.text:0000000180009806                 cmp     byte ptr [rbx+71h], 0
.text:000000018000980A                 setz    al
.text:000000018000980D                 jmp     short loc_1800097BC
.text:000000018000980F ; ---------------------------------------------------------------------------
.text:000000018000980F
.text:000000018000980F loc_18000980F:                          ; CODE XREF: sub_180009740+40↑j
.text:000000018000980F                                         ; sub_180009740+74↑j ...
.text:000000018000980F                 xor     al, al
.text:0000000180009811                 jmp     short loc_1800097BC
.text:0000000180009811 ; } // starts at 1800097D4
.text:0000000180009813 ; ---------------------------------------------------------------------------
.text:0000000180009813
.text:0000000180009813 loc_180009813:                          ; CODE XREF: sub_180009740+1D↑j
.text:0000000180009813                                         ; sub_180009740+27↑j
.text:0000000180009813                                         ; DATA XREF: ...
.text:0000000180009813 ; __unwind { // __GSHandlerCheck
.text:0000000180009813                 mov     al, 1
.text:0000000180009815                 mov     rcx, [rsp+68h+var_10]
.text:000000018000981A                 xor     rcx, rsp        ; StackCookie
.text:000000018000981D                 call    __security_check_cookie
.text:0000000180009822                 add     rsp, 60h
.text:0000000180009826                 pop     rbx
.text:0000000180009827                 retn
.text:0000000180009827 ; } // starts at 180009813
.text:0000000180009827 sub_180009740   endp
.text:0000000180009827
.text:0000000180009827 ; ---------------------------------------------------------------------------
.text:0000000180009828 algn_180009828:                         ; DATA XREF: .pdata:000000018001C90C↓o
.text:0000000180009828                 align 10h
.text:0000000180009830
.text:0000000180009830 ; =============== S U B R O U T I N E =======================================
.text:0000000180009830
.text:0000000180009830
.text:0000000180009830 sub_180009830   proc near               ; CODE XREF: sub_180006F70+8E↑p
.text:0000000180009830                                         ; sub_180009630+59↑p
.text:0000000180009830                                         ; DATA XREF: ...
.text:0000000180009830
.text:0000000180009830 arg_8           = qword ptr  10h
.text:0000000180009830 arg_10          = qword ptr  18h
.text:0000000180009830
.text:0000000180009830                 mov     [rsp+arg_8], rbx
.text:0000000180009835                 mov     [rsp+arg_10], rsi
.text:000000018000983A                 push    rdi
.text:000000018000983B                 sub     rsp, 20h
.text:000000018000983F                 cmp     qword ptr [rcx+80h], 0
.text:0000000180009847                 mov     rbx, rcx
.text:000000018000984A                 jz      short loc_18000989F
.text:000000018000984C                 mov     r8, [rcx+18h]
.text:0000000180009850                 lea     rax, [rcx+70h]
.text:0000000180009854                 cmp     [r8], rax
.text:0000000180009857                 jnz     short loc_180009879
.text:0000000180009859                 mov     rdx, [rcx+90h]
.text:0000000180009860                 mov     rcx, [rcx+88h]
.text:0000000180009867                 mov     [r8], rcx
.text:000000018000986A                 sub     edx, ecx
.text:000000018000986C                 mov     rax, [rbx+38h]
.text:0000000180009870                 mov     [rax], rcx
.text:0000000180009873                 mov     rax, [rbx+50h]
.text:0000000180009877                 mov     [rax], edx
.text:0000000180009879
.text:0000000180009879 loc_180009879:                          ; CODE XREF: sub_180009830+27↑j
.text:0000000180009879                 mov     rcx, rbx
.text:000000018000987C                 call    sub_180009740
.text:0000000180009881                 mov     rcx, [rbx+80h]  ; Stream
.text:0000000180009888                 xor     edi, edi
.text:000000018000988A                 test    al, al
.text:000000018000988C                 mov     rsi, rbx
.text:000000018000988F                 cmovz   rsi, rdi
.text:0000000180009893                 call    cs:fclose
.text:0000000180009899                 test    eax, eax
.text:000000018000989B                 jz      short loc_1800098A4
.text:000000018000989D                 jmp     short loc_1800098A1
.text:000000018000989F ; ---------------------------------------------------------------------------
.text:000000018000989F
.text:000000018000989F loc_18000989F:                          ; CODE XREF: sub_180009830+1A↑j
.text:000000018000989F                 xor     edi, edi
.text:00000001800098A1
.text:00000001800098A1 loc_1800098A1:                          ; CODE XREF: sub_180009830+6D↑j
.text:00000001800098A1                 mov     rsi, rdi
.text:00000001800098A4
.text:00000001800098A4 loc_1800098A4:                          ; CODE XREF: sub_180009830+6B↑j
.text:00000001800098A4                 mov     rcx, rbx
.text:00000001800098A7                 mov     byte ptr [rbx+7Ch], 0
.text:00000001800098AB                 mov     byte ptr [rbx+71h], 0
.text:00000001800098AF                 call    cs:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Init(void)
.text:00000001800098B5                 mov     rcx, cs:qword_18001B2B0
.text:00000001800098BC                 mov     rax, rsi
.text:00000001800098BF                 mov     rsi, [rsp+28h+arg_10]
.text:00000001800098C4                 mov     [rbx+74h], rcx
.text:00000001800098C8                 mov     [rbx+80h], rdi
.text:00000001800098CF                 mov     [rbx+68h], rdi
.text:00000001800098D3                 mov     rbx, [rsp+28h+arg_8]
.text:00000001800098D8                 add     rsp, 20h
.text:00000001800098DC                 pop     rdi
.text:00000001800098DD                 retn
.text:00000001800098DD sub_180009830   endp
.text:00000001800098DD
.text:00000001800098DD ; ---------------------------------------------------------------------------
.text:00000001800098DE algn_1800098DE:                         ; DATA XREF: .pdata:000000018001C918↓o
.text:00000001800098DE                 align 20h
.text:00000001800098E0
.text:00000001800098E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800098E0
.text:00000001800098E0
.text:00000001800098E0 sub_1800098E0   proc near               ; CODE XREF: int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0+7↓j
.text:00000001800098E0                                         ; int `_wcrtomb_s_l(int * const,char * const,unsigned __int64,wchar_t,_Mbstatet * const,__crt_locale_pointers * const)'::`1'::dtor$0+7↓j ...
.text:00000001800098E0 ; __unwind { // __CxxFrameHandler4
.text:00000001800098E0                 sub     rsp, 28h
.text:00000001800098E4                 mov     rdx, [rcx]
.text:00000001800098E7                 mov     rax, [rdx]
.text:00000001800098EA                 movsxd  rcx, dword ptr [rax+4]
.text:00000001800098EE                 mov     rcx, [rcx+rdx+48h]
.text:00000001800098F3                 test    rcx, rcx
.text:00000001800098F6                 jz      short loc_1800098FF
.text:00000001800098F8                 mov     rax, [rcx]
.text:00000001800098FB                 call    qword ptr [rax+10h]
.text:00000001800098FE                 nop
.text:00000001800098FF
.text:00000001800098FF loc_1800098FF:                          ; CODE XREF: sub_1800098E0+16↑j
.text:00000001800098FF                 add     rsp, 28h
.text:0000000180009903                 retn
.text:0000000180009903 ; } // starts at 1800098E0
.text:0000000180009903 sub_1800098E0   endp
.text:0000000180009903
.text:0000000180009903 ; ---------------------------------------------------------------------------
.text:0000000180009904 algn_180009904:                         ; DATA XREF: .pdata:000000018001C924↓o
.text:0000000180009904                 align 10h
.text:0000000180009910
.text:0000000180009910 ; =============== S U B R O U T I N E =======================================
.text:0000000180009910
.text:0000000180009910
.text:0000000180009910 ; __int64 __fastcall sub_180009910(void *, void *Src, size_t Size)
.text:0000000180009910 sub_180009910   proc near               ; CODE XREF: sub_180007600+251↑p
.text:0000000180009910                                         ; sub_18000CFD0+C3↓p ...
.text:0000000180009910
.text:0000000180009910 arg_18          = qword ptr  20h
.text:0000000180009910
.text:0000000180009910                 push    rbx
.text:0000000180009912                 push    rbp
.text:0000000180009913                 push    rdi
.text:0000000180009914                 push    r14
.text:0000000180009916                 push    r15
.text:0000000180009918                 sub     rsp, 20h
.text:000000018000991C                 mov     rbp, [rcx+18h]
.text:0000000180009920                 mov     r14, r8
.text:0000000180009923                 mov     r15, rdx
.text:0000000180009926                 mov     rbx, rcx
.text:0000000180009929                 cmp     r8, rbp
.text:000000018000992C                 ja      short loc_18000995A
.text:000000018000992E                 mov     rdi, rcx
.text:0000000180009931                 cmp     rbp, 10h
.text:0000000180009935                 jb      short loc_18000993A
.text:0000000180009937                 mov     rdi, [rcx]
.text:000000018000993A
.text:000000018000993A loc_18000993A:                          ; CODE XREF: sub_180009910+25↑j
.text:000000018000993A                 mov     [rcx+10h], r14
.text:000000018000993E                 mov     rcx, rdi        ; void *
.text:0000000180009941                 call    memmove
.text:0000000180009946                 mov     rax, rbx
.text:0000000180009949                 mov     byte ptr [r14+rdi], 0
.text:000000018000994E                 add     rsp, 20h
.text:0000000180009952                 pop     r15
.text:0000000180009954                 pop     r14
.text:0000000180009956                 pop     rdi
.text:0000000180009957                 pop     rbp
.text:0000000180009958                 pop     rbx
.text:0000000180009959                 retn
.text:000000018000995A ; ---------------------------------------------------------------------------
.text:000000018000995A
.text:000000018000995A loc_18000995A:                          ; CODE XREF: sub_180009910+1C↑j
.text:000000018000995A                 mov     rdi, 7FFFFFFFFFFFFFFFh
.text:0000000180009964                 cmp     r14, rdi
.text:0000000180009967                 ja      loc_180009A67
.text:000000018000996D                 mov     rcx, r14
.text:0000000180009970                 or      rcx, 0Fh
.text:0000000180009974                 cmp     rcx, rdi
.text:0000000180009977                 ja      short loc_180009998
.text:0000000180009979                 mov     rdx, rbp
.text:000000018000997C                 mov     rax, rdi
.text:000000018000997F                 shr     rdx, 1
.text:0000000180009982                 sub     rax, rdx
.text:0000000180009985                 cmp     rbp, rax
.text:0000000180009988                 ja      short loc_180009998
.text:000000018000998A                 lea     rax, [rdx+rbp]
.text:000000018000998E                 mov     rdi, rcx
.text:0000000180009991                 cmp     rcx, rax
.text:0000000180009994                 cmovb   rdi, rax
.text:0000000180009998
.text:0000000180009998 loc_180009998:                          ; CODE XREF: sub_180009910+67↑j
.text:0000000180009998                                         ; sub_180009910+78↑j
.text:0000000180009998                 mov     rcx, rdi
.text:000000018000999B
.text:000000018000999B loc_18000999B:                          ; DATA XREF: .rdata:0000000180015A24↓o
.text:000000018000999B                                         ; .rdata:0000000180015A38↓o ...
.text:000000018000999B                 mov     [rsp+48h+arg_18], rsi
.text:00000001800099A0                 add     rcx, 1
.text:00000001800099A4                 mov     rax, 0FFFFFFFFFFFFFFFFh
.text:00000001800099AB                 cmovb   rcx, rax        ; Size
.text:00000001800099AF                 cmp     rcx, 1000h
.text:00000001800099B6                 jb      short loc_1800099E4
.text:00000001800099B8                 lea     rax, [rcx+27h]
.text:00000001800099BC                 cmp     rax, rcx
.text:00000001800099BF                 jbe     loc_180009A61
.text:00000001800099C5                 mov     rcx, rax        ; Size
.text:00000001800099C8                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:00000001800099CD                 test    rax, rax
.text:00000001800099D0                 jz      loc_180009A5A
.text:00000001800099D6                 lea     rsi, [rax+27h]
.text:00000001800099DA                 and     rsi, 0FFFFFFFFFFFFFFE0h
.text:00000001800099DE                 mov     [rsi-8], rax
.text:00000001800099E2                 jmp     short loc_1800099F5
.text:00000001800099E4 ; ---------------------------------------------------------------------------
.text:00000001800099E4
.text:00000001800099E4 loc_1800099E4:                          ; CODE XREF: sub_180009910+A6↑j
.text:00000001800099E4                 test    rcx, rcx
.text:00000001800099E7                 jz      short loc_1800099F3
.text:00000001800099E9                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:00000001800099EE                 mov     rsi, rax
.text:00000001800099F1                 jmp     short loc_1800099F5
.text:00000001800099F3 ; ---------------------------------------------------------------------------
.text:00000001800099F3
.text:00000001800099F3 loc_1800099F3:                          ; CODE XREF: sub_180009910+D7↑j
.text:00000001800099F3                 xor     esi, esi
.text:00000001800099F5
.text:00000001800099F5 loc_1800099F5:                          ; CODE XREF: sub_180009910+D2↑j
.text:00000001800099F5                                         ; sub_180009910+E1↑j
.text:00000001800099F5                 mov     r8, r14         ; Size
.text:00000001800099F8                 mov     [rbx+10h], r14
.text:00000001800099FC                 mov     rdx, r15        ; Src
.text:00000001800099FF                 mov     [rbx+18h], rdi
.text:0000000180009A03                 mov     rcx, rsi        ; void *
.text:0000000180009A06                 call    memcpy
.text:0000000180009A0B                 mov     byte ptr [r14+rsi], 0
.text:0000000180009A10                 cmp     rbp, 10h
.text:0000000180009A14                 jb      short loc_180009A43
.text:0000000180009A16                 mov     rcx, [rbx]
.text:0000000180009A19                 lea     rdx, [rbp+1]
.text:0000000180009A1D                 cmp     rdx, 1000h
.text:0000000180009A24                 jb      short loc_180009A3E
.text:0000000180009A26                 mov     r8, [rcx-8]
.text:0000000180009A2A                 add     rdx, 27h ; '''
.text:0000000180009A2E                 sub     rcx, r8
.text:0000000180009A31                 lea     rax, [rcx-8]
.text:0000000180009A35                 cmp     rax, 1Fh
.text:0000000180009A39                 ja      short loc_180009A5A
.text:0000000180009A3B                 mov     rcx, r8         ; Block
.text:0000000180009A3E
.text:0000000180009A3E loc_180009A3E:                          ; CODE XREF: sub_180009910+114↑j
.text:0000000180009A3E                 call    j_j_free
.text:0000000180009A43
.text:0000000180009A43 loc_180009A43:                          ; CODE XREF: sub_180009910+104↑j
.text:0000000180009A43                 mov     [rbx], rsi
.text:0000000180009A46                 mov     rax, rbx
.text:0000000180009A49                 mov     rsi, [rsp+48h+arg_18]
.text:0000000180009A4E                 add     rsp, 20h
.text:0000000180009A52                 pop     r15
.text:0000000180009A54                 pop     r14
.text:0000000180009A56                 pop     rdi
.text:0000000180009A57                 pop     rbp
.text:0000000180009A58                 pop     rbx
.text:0000000180009A59                 retn
.text:0000000180009A5A ; ---------------------------------------------------------------------------
.text:0000000180009A5A
.text:0000000180009A5A loc_180009A5A:                          ; CODE XREF: sub_180009910+C0↑j
.text:0000000180009A5A                                         ; sub_180009910+129↑j
.text:0000000180009A5A                                         ; DATA XREF: ...
.text:0000000180009A5A                 call    cs:_invalid_parameter_noinfo_noreturn
.text:0000000180009A60                 int     3               ; Trap to Debugger
.text:0000000180009A61 ; ---------------------------------------------------------------------------
.text:0000000180009A61
.text:0000000180009A61 loc_180009A61:                          ; CODE XREF: sub_180009910+AF↑j
.text:0000000180009A61                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:0000000180009A61 ; ---------------------------------------------------------------------------
.text:0000000180009A66                 db 0CCh
.text:0000000180009A67 ; ---------------------------------------------------------------------------
.text:0000000180009A67
.text:0000000180009A67 loc_180009A67:                          ; CODE XREF: sub_180009910+57↑j
.text:0000000180009A67                                         ; DATA XREF: .pdata:000000018001C948↓o ...
.text:0000000180009A67                 call    sub_180002AC0
.text:0000000180009A67 ; ---------------------------------------------------------------------------
.text:0000000180009A6C                 db 0CCh
.text:0000000180009A6C sub_180009910   endp
.text:0000000180009A6C
.text:0000000180009A6D algn_180009A6D:                         ; DATA XREF: .pdata:000000018001C954↓o
.text:0000000180009A6D                 align 10h
.text:0000000180009A70
.text:0000000180009A70 ; =============== S U B R O U T I N E =======================================
.text:0000000180009A70
.text:0000000180009A70 ; Attributes: noreturn
.text:0000000180009A70
.text:0000000180009A70 sub_180009A70   proc near               ; CODE XREF: sub_18000DF60:loc_18000E357↓p
.text:0000000180009A70                                         ; DATA XREF: .pdata:000000018001C960↓o
.text:0000000180009A70                 sub     rsp, 28h
.text:0000000180009A74                 lea     rcx, aInvalidStringP ; "invalid string position"
.text:0000000180009A7B                 call    cs:?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range(char const *)
.text:0000000180009A7B ; ---------------------------------------------------------------------------
.text:0000000180009A81                 db 0CCh
.text:0000000180009A81 sub_180009A70   endp
.text:0000000180009A81
.text:0000000180009A82 algn_180009A82:                         ; DATA XREF: .pdata:000000018001C960↓o
.text:0000000180009A82                 align 10h
.text:0000000180009A90
.text:0000000180009A90 ; =============== S U B R O U T I N E =======================================
.text:0000000180009A90
.text:0000000180009A90
.text:0000000180009A90 sub_180009A90   proc near               ; CODE XREF: sub_1800074F0+78↑p
.text:0000000180009A90                                         ; sub_180007930+134↑p ...
.text:0000000180009A90
.text:0000000180009A90 var_38          = qword ptr -38h
.text:0000000180009A90 var_28          = qword ptr -28h
.text:0000000180009A90 var_20          = byte ptr -20h
.text:0000000180009A90 arg_0           = qword ptr  8
.text:0000000180009A90 arg_8           = qword ptr  10h
.text:0000000180009A90 arg_10          = qword ptr  18h
.text:0000000180009A90
.text:0000000180009A90 ; FUNCTION CHUNK AT .text:00000001800111E6 SIZE 00000006 BYTES
.text:0000000180009A90 ; FUNCTION CHUNK AT .text:0000000180011588 SIZE 0000003B BYTES
.text:0000000180009A90
.text:0000000180009A90 ; __unwind { // __CxxFrameHandler4
.text:0000000180009A90                 mov     [rsp+arg_10], rbx
.text:0000000180009A95                 mov     [rsp+arg_8], rdx
.text:0000000180009A9A                 mov     [rsp+arg_0], rcx
.text:0000000180009A9F                 push    rsi
.text:0000000180009AA0                 push    rdi
.text:0000000180009AA1                 push    r14
.text:0000000180009AA3                 sub     rsp, 30h
.text:0000000180009AA7                 mov     rsi, rcx
.text:0000000180009AAA                 xor     ebx, ebx
.text:0000000180009AAC                 mov     dword ptr [rsp+48h+arg_8], ebx
.text:0000000180009AB0                 mov     rax, [rcx]
.text:0000000180009AB3                 movsxd  rdx, dword ptr [rax+4]
.text:0000000180009AB7                 mov     rdi, [rdx+rcx+28h]
.text:0000000180009ABC                 cmp     rdi, 3
.text:0000000180009AC0                 jl      short loc_180009AC8
.text:0000000180009AC2                 add     rdi, 0FFFFFFFFFFFFFFFEh
.text:0000000180009AC6                 jmp     short loc_180009ACA
.text:0000000180009AC8 ; ---------------------------------------------------------------------------
.text:0000000180009AC8
.text:0000000180009AC8 loc_180009AC8:                          ; CODE XREF: sub_180009A90+30↑j
.text:0000000180009AC8                 xor     edi, edi
.text:0000000180009ACA
.text:0000000180009ACA loc_180009ACA:                          ; CODE XREF: sub_180009A90+36↑j
.text:0000000180009ACA                 mov     r14, rsi
.text:0000000180009ACD                 mov     [rsp+48h+var_28], rsi
.text:0000000180009AD2                 mov     rcx, [rdx+rcx+48h]
.text:0000000180009AD7                 test    rcx, rcx
.text:0000000180009ADA                 jz      short loc_180009AE3
.text:0000000180009ADC                 mov     rax, [rcx]
.text:0000000180009ADF                 call    qword ptr [rax+8]
.text:0000000180009AE2                 nop
.text:0000000180009AE3
.text:0000000180009AE3 loc_180009AE3:                          ; CODE XREF: sub_180009A90+4A↑j
.text:0000000180009AE3                 mov     rcx, [rsi]
.text:0000000180009AE6                 movsxd  rax, dword ptr [rcx+4]
.text:0000000180009AEA                 cmp     dword ptr [rax+rsi+10h], 0
.text:0000000180009AEF                 jz      short loc_180009AF5
.text:0000000180009AF1                 xor     al, al
.text:0000000180009AF3                 jmp     short loc_180009B20
.text:0000000180009AF5 ; ---------------------------------------------------------------------------
.text:0000000180009AF5
.text:0000000180009AF5 loc_180009AF5:                          ; CODE XREF: sub_180009A90+5F↑j
.text:0000000180009AF5                 mov     rax, [rax+rsi+50h]
.text:0000000180009AFA                 test    rax, rax
.text:0000000180009AFD                 jz      short loc_180009B1E
.text:0000000180009AFF                 cmp     rax, rsi
.text:0000000180009B02                 jz      short loc_180009B1E
.text:0000000180009B04                 mov     rcx, rax
.text:0000000180009B07                 call    cs:?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char>>::flush(void)
.text:0000000180009B0D                 mov     rcx, [rsi]
.text:0000000180009B10                 movsxd  rax, dword ptr [rcx+4]
.text:0000000180009B14                 cmp     dword ptr [rax+rsi+10h], 0
.text:0000000180009B19                 setz    al
.text:0000000180009B1C                 jmp     short loc_180009B20
.text:0000000180009B1E ; ---------------------------------------------------------------------------
.text:0000000180009B1E
.text:0000000180009B1E loc_180009B1E:                          ; CODE XREF: sub_180009A90+6D↑j
.text:0000000180009B1E                                         ; sub_180009A90+72↑j
.text:0000000180009B1E                 mov     al, 1
.text:0000000180009B20
.text:0000000180009B20 loc_180009B20:                          ; CODE XREF: sub_180009A90+63↑j
.text:0000000180009B20                                         ; sub_180009A90+8C↑j
.text:0000000180009B20                 mov     [rsp+48h+var_20], al
.text:0000000180009B24                 test    al, al
.text:0000000180009B26                 jnz     short loc_180009B32
.text:0000000180009B28                 mov     ebx, 4
.text:0000000180009B2D                 jmp     loc_180009BE2
.text:0000000180009B32 ; ---------------------------------------------------------------------------
.text:0000000180009B32
.text:0000000180009B32 loc_180009B32:                          ; CODE XREF: sub_180009A90+96↑j
.text:0000000180009B32                 movsxd  rax, dword ptr [rcx+4]
.text:0000000180009B36                 mov     ecx, [rax+rsi+18h]
.text:0000000180009B3A                 and     ecx, 1C0h
.text:0000000180009B40                 cmp     ecx, 40h ; '@'
.text:0000000180009B43                 jz      short loc_180009B70
.text:0000000180009B45
.text:0000000180009B45 loc_180009B45:                          ; CODE XREF: sub_180009A90+DE↓j
.text:0000000180009B45                 test    rdi, rdi
.text:0000000180009B48                 jle     short loc_180009B70
.text:0000000180009B4A                 mov     rax, [rsi]
.text:0000000180009B4D                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009B51                 movzx   edx, byte ptr [rcx+rsi+58h]
.text:0000000180009B56                 mov     rcx, [rcx+rsi+48h]
.text:0000000180009B5B ;   try {
.text:0000000180009B5B                 call    cs:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
.text:0000000180009B61                 cmp     eax, 0FFFFFFFFh
.text:0000000180009B64                 jnz     short loc_180009B6B
.text:0000000180009B66                 lea     ebx, [rax+5]
.text:0000000180009B69                 jmp     short loc_180009BBE
.text:0000000180009B6B ; ---------------------------------------------------------------------------
.text:0000000180009B6B
.text:0000000180009B6B loc_180009B6B:                          ; CODE XREF: sub_180009A90+D4↑j
.text:0000000180009B6B                 dec     rdi
.text:0000000180009B6E                 jmp     short loc_180009B45
.text:0000000180009B70 ; ---------------------------------------------------------------------------
.text:0000000180009B70
.text:0000000180009B70 loc_180009B70:                          ; CODE XREF: sub_180009A90+B3↑j
.text:0000000180009B70                                         ; sub_180009A90+B8↑j
.text:0000000180009B70                 mov     rax, [rsi]
.text:0000000180009B73                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009B77                 mov     r8d, 2
.text:0000000180009B7D                 lea     rdx, asc_18001399C ; "  "
.text:0000000180009B84                 mov     rcx, [rcx+rsi+48h]
.text:0000000180009B89                 call    cs:?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputn(char const *,__int64)
.text:0000000180009B8F                 cmp     rax, 2
.text:0000000180009B93                 jnz     short loc_180009BBB
.text:0000000180009B95
.text:0000000180009B95 loc_180009B95:                          ; CODE XREF: sub_180009A90+129↓j
.text:0000000180009B95                 test    rdi, rdi
.text:0000000180009B98                 jle     short loc_180009BC2
.text:0000000180009B9A                 mov     rax, [rsi]
.text:0000000180009B9D                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009BA1                 movzx   edx, byte ptr [rcx+rsi+58h]
.text:0000000180009BA6                 mov     rcx, [rcx+rsi+48h]
.text:0000000180009BAB                 call    cs:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
.text:0000000180009BB1                 cmp     eax, 0FFFFFFFFh
.text:0000000180009BB4                 jz      short loc_180009BBB
.text:0000000180009BB6                 dec     rdi
.text:0000000180009BB9                 jmp     short loc_180009B95
.text:0000000180009BBB ; ---------------------------------------------------------------------------
.text:0000000180009BBB
.text:0000000180009BBB loc_180009BBB:                          ; CODE XREF: sub_180009A90+103↑j
.text:0000000180009BBB                                         ; sub_180009A90+124↑j
.text:0000000180009BBB                 or      ebx, 4
.text:0000000180009BBE
.text:0000000180009BBE loc_180009BBE:                          ; CODE XREF: sub_180009A90+D9↑j
.text:0000000180009BBE                 mov     dword ptr [rsp+48h+arg_8], ebx
.text:0000000180009BC2
.text:0000000180009BC2 loc_180009BC2:                          ; CODE XREF: sub_180009A90+108↑j
.text:0000000180009BC2                 mov     rax, [rsi]
.text:0000000180009BC5                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009BC9                 mov     qword ptr [rcx+rsi+28h], 0
.text:0000000180009BC9 ;   } // starts at 180009B5B
.text:0000000180009BD2                 jmp     short loc_180009BE2
.text:0000000180009BD4 ; ---------------------------------------------------------------------------
.text:0000000180009BD4                 mov     rsi, [rsp+48h+arg_0]
.text:0000000180009BD9                 mov     ebx, dword ptr [rsp+48h+arg_8]
.text:0000000180009BDD                 mov     r14, [rsp+48h+var_28]
.text:0000000180009BE2
.text:0000000180009BE2 loc_180009BE2:                          ; CODE XREF: sub_180009A90+9D↑j
.text:0000000180009BE2                                         ; sub_180009A90+142↑j
.text:0000000180009BE2                 mov     rax, [rsi]
.text:0000000180009BE5                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009BE9                 add     rcx, rsi
.text:0000000180009BEC                 xor     r8d, r8d
.text:0000000180009BEF                 mov     edx, ebx
.text:0000000180009BF1                 call    cs:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
.text:0000000180009BF7                 nop
.text:0000000180009BF8                 call    cs:?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception(void)
.text:0000000180009BFE                 test    al, al
.text:0000000180009C00                 jnz     short loc_180009C0C
.text:0000000180009C02                 mov     rcx, r14
.text:0000000180009C05                 call    cs:?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)
.text:0000000180009C0B                 nop
.text:0000000180009C0C
.text:0000000180009C0C loc_180009C0C:                          ; CODE XREF: sub_180009A90+170↑j
.text:0000000180009C0C ;   try {
.text:0000000180009C0C                 mov     rax, [r14]
.text:0000000180009C0F                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009C13                 mov     rcx, [rcx+r14+48h]
.text:0000000180009C18                 test    rcx, rcx
.text:0000000180009C1B                 jz      short loc_180009C24
.text:0000000180009C1D                 mov     rax, [rcx]
.text:0000000180009C20                 call    qword ptr [rax+10h]
.text:0000000180009C23                 nop
.text:0000000180009C23 ;   } // starts at 180009C0C
.text:0000000180009C24
.text:0000000180009C24 loc_180009C24:                          ; CODE XREF: sub_180009A90+18B↑j
.text:0000000180009C24                 mov     rax, rsi
.text:0000000180009C27                 mov     rbx, [rsp+48h+arg_10]
.text:0000000180009C2C                 add     rsp, 30h
.text:0000000180009C30                 pop     r14
.text:0000000180009C32                 pop     rdi
.text:0000000180009C33                 pop     rsi
.text:0000000180009C34                 retn
.text:0000000180009C34 ; } // starts at 180009A90
.text:0000000180009C34 sub_180009A90   endp ; sp-analysis failed
.text:0000000180009C34
.text:0000000180009C34 ; ---------------------------------------------------------------------------
.text:0000000180009C35 algn_180009C35:                         ; DATA XREF: .pdata:000000018001C96C↓o
.text:0000000180009C35                 align 20h
.text:0000000180009C40
.text:0000000180009C40 ; =============== S U B R O U T I N E =======================================
.text:0000000180009C40
.text:0000000180009C40
.text:0000000180009C40 sub_180009C40   proc near               ; DATA XREF: sub_1800074F0+99↑o
.text:0000000180009C40                                         ; sub_180007930+15A↑o ...
.text:0000000180009C40                 push    rbx
.text:0000000180009C42                 sub     rsp, 20h
.text:0000000180009C46                 mov     rax, [rcx]
.text:0000000180009C49                 mov     rbx, rcx
.text:0000000180009C4C                 mov     dl, 0Ah
.text:0000000180009C4E                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009C52                 add     rcx, rbx
.text:0000000180009C55                 call    cs:?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z ; std::basic_ios<char,std::char_traits<char>>::widen(char)
.text:0000000180009C5B                 movzx   edx, al
.text:0000000180009C5E                 mov     rcx, rbx
.text:0000000180009C61                 call    cs:?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z ; std::basic_ostream<char,std::char_traits<char>>::put(char)
.text:0000000180009C67                 mov     rcx, rbx
.text:0000000180009C6A                 call    cs:?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char>>::flush(void)
.text:0000000180009C70                 mov     rax, rbx
.text:0000000180009C73                 add     rsp, 20h
.text:0000000180009C77                 pop     rbx
.text:0000000180009C78                 retn
.text:0000000180009C78 sub_180009C40   endp
.text:0000000180009C78
.text:0000000180009C78 ; ---------------------------------------------------------------------------
.text:0000000180009C79 algn_180009C79:                         ; DATA XREF: .pdata:000000018001C978↓o
.text:0000000180009C79                 align 20h
.text:0000000180009C80
.text:0000000180009C80 ; =============== S U B R O U T I N E =======================================
.text:0000000180009C80
.text:0000000180009C80
.text:0000000180009C80 sub_180009C80   proc near               ; CODE XREF: sub_180007600+17D↑p
.text:0000000180009C80                                         ; DATA XREF: .pdata:000000018001C984↓o
.text:0000000180009C80
.text:0000000180009C80 var_1A0         = qword ptr -1A0h
.text:0000000180009C80 var_B8          = byte ptr -0B8h
.text:0000000180009C80 var_B0          = qword ptr -0B0h
.text:0000000180009C80 var_A8          = qword ptr -0A8h
.text:0000000180009C80 var_A0          = qword ptr -0A0h
.text:0000000180009C80 var_98          = qword ptr -98h
.text:0000000180009C80 var_88          = qword ptr -88h
.text:0000000180009C80 var_80          = byte ptr -80h
.text:0000000180009C80 var_78          = byte ptr -78h
.text:0000000180009C80 var_70          = qword ptr -70h
.text:0000000180009C80 var_68          = byte ptr -68h
.text:0000000180009C80 var_58          = qword ptr -58h
.text:0000000180009C80 var_50          = byte ptr -50h
.text:0000000180009C80 var_48          = xmmword ptr -48h
.text:0000000180009C80 var_38          = qword ptr -38h
.text:0000000180009C80 arg_10          = qword ptr  18h
.text:0000000180009C80
.text:0000000180009C80 ; FUNCTION CHUNK AT .text:00000001800111E6 SIZE 00000006 BYTES
.text:0000000180009C80 ; FUNCTION CHUNK AT .text:000000018001160E SIZE 0000003B BYTES
.text:0000000180009C80
.text:0000000180009C80 ; __unwind { // __GSHandlerCheck_EH4
.text:0000000180009C80                 mov     [rsp+arg_10], rbx
.text:0000000180009C85                 push    rsi
.text:0000000180009C86                 push    rdi
.text:0000000180009C87                 push    r12
.text:0000000180009C89                 push    r14
.text:0000000180009C8B                 push    r15
.text:0000000180009C8D                 sub     rsp, 0B0h
.text:0000000180009C94                 mov     rax, cs:__security_cookie
.text:0000000180009C9B                 xor     rax, rsp
.text:0000000180009C9E                 mov     [rsp+0D8h+var_38], rax
.text:0000000180009CA6                 mov     r12, rdx
.text:0000000180009CA9                 mov     rdi, rcx
.text:0000000180009CAC                 mov     [rsp+0D8h+var_98], rcx
.text:0000000180009CB1                 mov     [rsp+0D8h+var_88], rcx
.text:0000000180009CB6                 mov     rax, [rcx]
.text:0000000180009CB9                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009CBD                 mov     rcx, [rcx+rdi+48h]
.text:0000000180009CC2                 test    rcx, rcx
.text:0000000180009CC5                 jz      short loc_180009CCE
.text:0000000180009CC7                 mov     rax, [rcx]
.text:0000000180009CCA                 call    qword ptr [rax+8]
.text:0000000180009CCD                 nop
.text:0000000180009CCE
.text:0000000180009CCE loc_180009CCE:                          ; CODE XREF: sub_180009C80+45↑j
.text:0000000180009CCE                 mov     rcx, [rdi]
.text:0000000180009CD1                 movsxd  rax, dword ptr [rcx+4]
.text:0000000180009CD5                 cmp     dword ptr [rax+rdi+10h], 0
.text:0000000180009CDA                 jz      short loc_180009CE0
.text:0000000180009CDC                 xor     al, al
.text:0000000180009CDE                 jmp     short loc_180009D0B
.text:0000000180009CE0 ; ---------------------------------------------------------------------------
.text:0000000180009CE0
.text:0000000180009CE0 loc_180009CE0:                          ; CODE XREF: sub_180009C80+5A↑j
.text:0000000180009CE0                 mov     rax, [rax+rdi+50h]
.text:0000000180009CE5                 test    rax, rax
.text:0000000180009CE8                 jz      short loc_180009D09
.text:0000000180009CEA                 cmp     rax, rdi
.text:0000000180009CED                 jz      short loc_180009D09
.text:0000000180009CEF                 mov     rcx, rax
.text:0000000180009CF2                 call    cs:?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char>>::flush(void)
.text:0000000180009CF8                 mov     rcx, [rdi]
.text:0000000180009CFB                 movsxd  rax, dword ptr [rcx+4]
.text:0000000180009CFF                 cmp     dword ptr [rax+rdi+10h], 0
.text:0000000180009D04                 setz    al
.text:0000000180009D07                 jmp     short loc_180009D0B
.text:0000000180009D09 ; ---------------------------------------------------------------------------
.text:0000000180009D09
.text:0000000180009D09 loc_180009D09:                          ; CODE XREF: sub_180009C80+68↑j
.text:0000000180009D09                                         ; sub_180009C80+6D↑j
.text:0000000180009D09                 mov     al, 1
.text:0000000180009D0B
.text:0000000180009D0B loc_180009D0B:                          ; CODE XREF: sub_180009C80+5E↑j
.text:0000000180009D0B                                         ; sub_180009C80+87↑j
.text:0000000180009D0B                 mov     [rsp+0D8h+var_80], al
.text:0000000180009D0F                 test    al, al
.text:0000000180009D11                 jz      loc_180009EB7
.text:0000000180009D17                 movsxd  rcx, dword ptr [rcx+4]
.text:0000000180009D1B                 add     rcx, rdi
.text:0000000180009D1E                 lea     rdx, [rsp+0D8h+var_78]
.text:0000000180009D23                 call    cs:?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc(void)
.text:0000000180009D29                 mov     r15, rax
.text:0000000180009D2C                 xor     edx, edx
.text:0000000180009D2E                 lea     rcx, [rsp+0D8h+var_50]
.text:0000000180009D36                 call    cs:??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit(int)
.text:0000000180009D3C                 nop
.text:0000000180009D3D                 mov     rax, cs:qword_18001B2C0
.text:0000000180009D44                 mov     [rsp+0D8h+var_58], rax
.text:0000000180009D4C                 mov     rcx, cs:?id@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::locale::id std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>::id
.text:0000000180009D53                 call    cs:??Bid@locale@std@@QEAA_KXZ ; std::locale::id::operator unsigned __int64(void)
.text:0000000180009D59                 mov     r14, rax
.text:0000000180009D5C                 mov     rcx, [r15+8]
.text:0000000180009D60                 lea     rsi, ds:0[rax*8]
.text:0000000180009D68                 cmp     rax, [rcx+18h]
.text:0000000180009D6C                 jnb     short loc_180009D7D
.text:0000000180009D6E                 mov     rax, [rcx+10h]
.text:0000000180009D72                 mov     rbx, [rsi+rax]
.text:0000000180009D76                 test    rbx, rbx
.text:0000000180009D79                 jnz     short loc_180009DF6
.text:0000000180009D7B                 jmp     short loc_180009D7F
.text:0000000180009D7D ; ---------------------------------------------------------------------------
.text:0000000180009D7D
.text:0000000180009D7D loc_180009D7D:                          ; CODE XREF: sub_180009C80+EC↑j
.text:0000000180009D7D                 xor     ebx, ebx
.text:0000000180009D7F
.text:0000000180009D7F loc_180009D7F:                          ; CODE XREF: sub_180009C80+FB↑j
.text:0000000180009D7F                 cmp     byte ptr [rcx+24h], 0
.text:0000000180009D83                 jz      short loc_180009D99
.text:0000000180009D85                 call    cs:?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale(void)
.text:0000000180009D8B                 cmp     r14, [rax+18h]
.text:0000000180009D8F                 jnb     short loc_180009D9E
.text:0000000180009D91                 mov     rax, [rax+10h]
.text:0000000180009D95                 mov     rbx, [rsi+rax]
.text:0000000180009D99
.text:0000000180009D99 loc_180009D99:                          ; CODE XREF: sub_180009C80+103↑j
.text:0000000180009D99                 test    rbx, rbx
.text:0000000180009D9C                 jnz     short loc_180009DF6
.text:0000000180009D9E
.text:0000000180009D9E loc_180009D9E:                          ; CODE XREF: sub_180009C80+10F↑j
.text:0000000180009D9E                 mov     rbx, [rsp+0D8h+var_58]
.text:0000000180009DA6                 test    rbx, rbx
.text:0000000180009DA9                 jnz     short loc_180009DF6
.text:0000000180009DAB                 mov     rdx, r15
.text:0000000180009DAE                 lea     rcx, [rsp+0D8h+var_58]
.text:0000000180009DB6                 call    cs:?_Getcat@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>::_Getcat(std::locale::facet const * *,std::locale const *)
.text:0000000180009DBC                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000180009DC0                 jz      loc_180009F0E
.text:0000000180009DC6                 mov     rbx, [rsp+0D8h+var_58]
.text:0000000180009DCE                 mov     qword ptr [rsp+0D8h+var_48], rbx
.text:0000000180009DD6                 mov     rcx, rbx        ; struct std::_Facet_base *
.text:0000000180009DD9                 call    ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register(std::_Facet_base *)
.text:0000000180009DDE                 mov     rax, [rbx]
.text:0000000180009DE1                 mov     rcx, rbx
.text:0000000180009DE4                 call    qword ptr [rax+8]
.text:0000000180009DE7                 mov     rbx, [rsp+0D8h+var_58]
.text:0000000180009DEF                 mov     cs:qword_18001B2C0, rbx
.text:0000000180009DF6
.text:0000000180009DF6 loc_180009DF6:                          ; CODE XREF: sub_180009C80+F9↑j
.text:0000000180009DF6                                         ; sub_180009C80+11C↑j ...
.text:0000000180009DF6                 lea     rcx, [rsp+0D8h+var_50]
.text:0000000180009DFE                 call    cs:__imp_??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
.text:0000000180009E04                 nop
.text:0000000180009E05                 mov     rcx, [rsp+0D8h+var_70]
.text:0000000180009E0A                 test    rcx, rcx
.text:0000000180009E0D                 jz      short loc_180009E28
.text:0000000180009E0F                 mov     rax, [rcx]
.text:0000000180009E12                 call    qword ptr [rax+10h]
.text:0000000180009E15                 mov     rcx, rax
.text:0000000180009E18                 test    rax, rax
.text:0000000180009E1B                 jz      short loc_180009E28
.text:0000000180009E1D                 mov     rax, [rax]
.text:0000000180009E20                 mov     edx, 1
.text:0000000180009E25                 call    qword ptr [rax]
.text:0000000180009E27                 nop
.text:0000000180009E28
.text:0000000180009E28 loc_180009E28:                          ; CODE XREF: sub_180009C80+18D↑j
.text:0000000180009E28                                         ; sub_180009C80+19B↑j
.text:0000000180009E28                 mov     rax, [rdi]
.text:0000000180009E2B                 movsxd  r9, dword ptr [rax+4]
.text:0000000180009E2F                 add     r9, rdi
.text:0000000180009E32                 mov     rax, [r9+48h]
.text:0000000180009E36                 mov     byte ptr [rsp+0D8h+var_48], 0
.text:0000000180009E3E                 mov     qword ptr [rsp+0D8h+var_48+8], rax
.text:0000000180009E46                 movaps  xmm0, [rsp+0D8h+var_48]
.text:0000000180009E4E                 movdqa  [rsp+0D8h+var_48], xmm0
.text:0000000180009E57                 movzx   edx, byte ptr [r9+58h]
.text:0000000180009E5C                 mov     rax, [r12+10h]
.text:0000000180009E61                 mov     [rsp+0D8h+var_A0], rax
.text:0000000180009E66                 mov     rax, [r12+8]
.text:0000000180009E6B                 mov     [rsp+0D8h+var_A8], rax
.text:0000000180009E70                 mov     rax, [r12]
.text:0000000180009E74                 mov     [rsp+0D8h+var_B0], rax
.text:0000000180009E79                 mov     [rsp+0D8h+var_B8], dl
.text:0000000180009E7D                 lea     r8, [rsp+0D8h+var_48]
.text:0000000180009E85                 lea     rdx, [rsp+0D8h+var_68]
.text:0000000180009E8A                 mov     rcx, rbx
.text:0000000180009E8D ;   try {
.text:0000000180009E8D                 call    cs:?put@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBUtm@@PEBD3@Z ; std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>::put(std::ostreambuf_iterator<char,std::char_traits<char>>,std::ios_base &,char,tm const *,char const *,char const *)
.text:0000000180009E93                 cmp     byte ptr [rax], 0
.text:0000000180009E96                 jz      short loc_180009EB0
.text:0000000180009E98                 mov     rax, [rdi]
.text:0000000180009E9B                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009E9F                 add     rcx, rdi
.text:0000000180009EA2                 xor     r8d, r8d
.text:0000000180009EA5                 lea     edx, [r8+4]
.text:0000000180009EA9                 call    cs:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
.text:0000000180009EAF                 nop
.text:0000000180009EAF ;   } // starts at 180009E8D
.text:0000000180009EB0
.text:0000000180009EB0 loc_180009EB0:                          ; CODE XREF: sub_180009C80+216↑j
.text:0000000180009EB0                 jmp     short loc_180009EB7
.text:0000000180009EB2 ; ---------------------------------------------------------------------------
.text:0000000180009EB2                 mov     rdi, [rsp+0D8h+var_98]
.text:0000000180009EB7
.text:0000000180009EB7 loc_180009EB7:                          ; CODE XREF: sub_180009C80+91↑j
.text:0000000180009EB7                                         ; sub_180009C80:loc_180009EB0↑j
.text:0000000180009EB7                 call    cs:?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception(void)
.text:0000000180009EBD                 test    al, al
.text:0000000180009EBF                 jnz     short loc_180009ECB
.text:0000000180009EC1                 mov     rcx, rdi
.text:0000000180009EC4                 call    cs:?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)
.text:0000000180009ECA                 nop
.text:0000000180009ECB
.text:0000000180009ECB loc_180009ECB:                          ; CODE XREF: sub_180009C80+23F↑j
.text:0000000180009ECB                 mov     rcx, [rdi]
.text:0000000180009ECE                 movsxd  rdx, dword ptr [rcx+4]
.text:0000000180009ED2                 mov     rcx, [rdx+rdi+48h]
.text:0000000180009ED7                 test    rcx, rcx
.text:0000000180009EDA                 jz      short loc_180009EE3
.text:0000000180009EDC                 mov     rdx, [rcx]
.text:0000000180009EDF ;   try {
.text:0000000180009EDF                 call    qword ptr [rdx+10h]
.text:0000000180009EE2                 nop
.text:0000000180009EE3
.text:0000000180009EE3 loc_180009EE3:                          ; CODE XREF: sub_180009C80+25A↑j
.text:0000000180009EE3                 mov     rax, rdi
.text:0000000180009EE6                 mov     rcx, [rsp+0D8h+var_38]
.text:0000000180009EEE                 xor     rcx, rsp        ; StackCookie
.text:0000000180009EEE ;   } // starts at 180009EDF
.text:0000000180009EF1                 call    __security_check_cookie
.text:0000000180009EF6                 mov     rbx, [rsp+0D8h+arg_10]
.text:0000000180009EFE                 add     rsp, 0B0h
.text:0000000180009F05                 pop     r15
.text:0000000180009F07                 pop     r14
.text:0000000180009F09                 pop     r12
.text:0000000180009F0B                 pop     rdi
.text:0000000180009F0C                 pop     rsi
.text:0000000180009F0D                 retn
.text:0000000180009F0E ; ---------------------------------------------------------------------------
.text:0000000180009F0E
.text:0000000180009F0E loc_180009F0E:                          ; CODE XREF: sub_180009C80+140↑j
.text:0000000180009F0E                 call    ?cancel_current_task@Concurrency@@YAXXZ_0 ; Concurrency::cancel_current_task(void)
.text:0000000180009F0E ; ---------------------------------------------------------------------------
.text:0000000180009F13                 align 4
.text:0000000180009F13 ; } // starts at 180009C80
.text:0000000180009F13 sub_180009C80   endp ; sp-analysis failed
.text:0000000180009F13
.text:0000000180009F14 algn_180009F14:                         ; DATA XREF: .pdata:000000018001C984↓o
.text:0000000180009F14                 align 20h
.text:0000000180009F20
.text:0000000180009F20 ; =============== S U B R O U T I N E =======================================
.text:0000000180009F20
.text:0000000180009F20
.text:0000000180009F20 sub_180009F20   proc near               ; CODE XREF: sub_180007600+185↑p
.text:0000000180009F20                                         ; DATA XREF: .pdata:000000018001C990↓o
.text:0000000180009F20
.text:0000000180009F20 var_38          = qword ptr -38h
.text:0000000180009F20 var_30          = byte ptr -30h
.text:0000000180009F20 arg_0           = qword ptr  8
.text:0000000180009F20 arg_8           = dword ptr  10h
.text:0000000180009F20
.text:0000000180009F20 ; FUNCTION CHUNK AT .text:00000001800111E6 SIZE 00000006 BYTES
.text:0000000180009F20 ; FUNCTION CHUNK AT .text:0000000180011668 SIZE 0000003B BYTES
.text:0000000180009F20
.text:0000000180009F20 ; __unwind { // __CxxFrameHandler4
.text:0000000180009F20                 mov     byte ptr [rsp+arg_8], dl
.text:0000000180009F24                 mov     [rsp+arg_0], rcx
.text:0000000180009F29                 push    rbx
.text:0000000180009F2A                 push    rsi
.text:0000000180009F2B                 push    rdi
.text:0000000180009F2C                 push    r14
.text:0000000180009F2E                 push    r15
.text:0000000180009F30                 sub     rsp, 30h
.text:0000000180009F34                 mov     rsi, rcx
.text:0000000180009F37                 xor     ebx, ebx
.text:0000000180009F39                 mov     [rsp+58h+arg_8], ebx
.text:0000000180009F3D                 mov     r15, rcx
.text:0000000180009F40                 mov     [rsp+58h+var_38], rcx
.text:0000000180009F45                 mov     rax, [rcx]
.text:0000000180009F48                 movsxd  rdx, dword ptr [rax+4]
.text:0000000180009F4C                 mov     rcx, [rdx+rcx+48h]
.text:0000000180009F51                 test    rcx, rcx
.text:0000000180009F54                 jz      short loc_180009F5D
.text:0000000180009F56                 mov     rax, [rcx]
.text:0000000180009F59                 call    qword ptr [rax+8]
.text:0000000180009F5C                 nop
.text:0000000180009F5D
.text:0000000180009F5D loc_180009F5D:                          ; CODE XREF: sub_180009F20+34↑j
.text:0000000180009F5D                 mov     rcx, [rsi]
.text:0000000180009F60                 movsxd  rax, dword ptr [rcx+4]
.text:0000000180009F64                 cmp     dword ptr [rax+rsi+10h], 0
.text:0000000180009F69                 jz      short loc_180009F6F
.text:0000000180009F6B                 xor     al, al
.text:0000000180009F6D                 jmp     short loc_180009F9D
.text:0000000180009F6F ; ---------------------------------------------------------------------------
.text:0000000180009F6F
.text:0000000180009F6F loc_180009F6F:                          ; CODE XREF: sub_180009F20+49↑j
.text:0000000180009F6F                 mov     rax, [rax+rsi+50h]
.text:0000000180009F74                 test    rax, rax
.text:0000000180009F77                 jz      short loc_180009F9B
.text:0000000180009F79                 cmp     rax, rsi
.text:0000000180009F7C                 jz      short loc_180009F9B
.text:0000000180009F7E                 mov     rcx, rax
.text:0000000180009F81                 call    cs:?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char>>::flush(void)
.text:0000000180009F87                 mov     rdx, [rsi]
.text:0000000180009F8A                 movsxd  rax, dword ptr [rdx+4]
.text:0000000180009F8E                 cmp     dword ptr [rax+rsi+10h], 0
.text:0000000180009F93                 setz    al
.text:0000000180009F96                 mov     rcx, rdx
.text:0000000180009F99                 jmp     short loc_180009FA0
.text:0000000180009F9B ; ---------------------------------------------------------------------------
.text:0000000180009F9B
.text:0000000180009F9B loc_180009F9B:                          ; CODE XREF: sub_180009F20+57↑j
.text:0000000180009F9B                                         ; sub_180009F20+5C↑j
.text:0000000180009F9B                 mov     al, 1
.text:0000000180009F9D
.text:0000000180009F9D loc_180009F9D:                          ; CODE XREF: sub_180009F20+4D↑j
.text:0000000180009F9D                 mov     rdx, rcx
.text:0000000180009FA0
.text:0000000180009FA0 loc_180009FA0:                          ; CODE XREF: sub_180009F20+79↑j
.text:0000000180009FA0                 mov     [rsp+58h+var_30], al
.text:0000000180009FA4                 test    al, al
.text:0000000180009FA6                 jz      loc_18000A062
.text:0000000180009FAC                 movsxd  rdx, dword ptr [rdx+4]
.text:0000000180009FB0                 mov     r8, [rdx+rsi+28h]
.text:0000000180009FB5                 lea     rax, [r8-1]
.text:0000000180009FB9                 xor     edi, edi
.text:0000000180009FBB                 cmp     r8, 1
.text:0000000180009FBF                 cmovg   rdi, rax
.text:0000000180009FC3                 mov     eax, [rdx+rsi+18h]
.text:0000000180009FC7                 and     eax, 1C0h
.text:0000000180009FCC                 mov     r14d, 4
.text:0000000180009FD2                 cmp     eax, 40h ; '@'
.text:0000000180009FD5                 jz      short loc_18000A00A
.text:0000000180009FD7
.text:0000000180009FD7 loc_180009FD7:                          ; CODE XREF: sub_180009F20+E5↓j
.text:0000000180009FD7                 test    ebx, ebx
.text:0000000180009FD9                 jnz     short loc_18000A052
.text:0000000180009FDB                 test    rdi, rdi
.text:0000000180009FDE                 jle     short loc_18000A007
.text:0000000180009FE0                 mov     rax, [rsi]
.text:0000000180009FE3                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180009FE7                 movzx   edx, byte ptr [rcx+rsi+58h]
.text:0000000180009FEC                 mov     rcx, [rcx+rsi+48h]
.text:0000000180009FF1 ;   try {
.text:0000000180009FF1                 call    cs:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
.text:0000000180009FF7                 cmp     eax, 0FFFFFFFFh
.text:0000000180009FFA                 cmovz   ebx, r14d
.text:0000000180009FFE                 mov     [rsp+58h+arg_8], ebx
.text:000000018000A002                 dec     rdi
.text:000000018000A005                 jmp     short loc_180009FD7
.text:000000018000A007 ; ---------------------------------------------------------------------------
.text:000000018000A007
.text:000000018000A007 loc_18000A007:                          ; CODE XREF: sub_180009F20+BE↑j
.text:000000018000A007                 mov     rcx, [rsi]
.text:000000018000A00A
.text:000000018000A00A loc_18000A00A:                          ; CODE XREF: sub_180009F20+B5↑j
.text:000000018000A00A                 movsxd  rax, dword ptr [rcx+4]
.text:000000018000A00E                 mov     dl, 2Eh ; '.'
.text:000000018000A010                 mov     rcx, [rax+rsi+48h]
.text:000000018000A015                 call    cs:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
.text:000000018000A01B                 cmp     eax, 0FFFFFFFFh
.text:000000018000A01E                 cmovz   ebx, r14d
.text:000000018000A022
.text:000000018000A022 loc_18000A022:                          ; CODE XREF: sub_180009F20+130↓j
.text:000000018000A022                 mov     [rsp+58h+arg_8], ebx
.text:000000018000A026                 test    ebx, ebx
.text:000000018000A028                 jnz     short loc_18000A052
.text:000000018000A02A                 test    rdi, rdi
.text:000000018000A02D                 jle     short loc_18000A052
.text:000000018000A02F                 mov     rax, [rsi]
.text:000000018000A032                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A036                 movzx   edx, byte ptr [rcx+rsi+58h]
.text:000000018000A03B                 mov     rcx, [rcx+rsi+48h]
.text:000000018000A040                 call    cs:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
.text:000000018000A046                 cmp     eax, 0FFFFFFFFh
.text:000000018000A049                 cmovz   ebx, r14d
.text:000000018000A04D                 dec     rdi
.text:000000018000A050                 jmp     short loc_18000A022
.text:000000018000A050 ;   } // starts at 180009FF1
.text:000000018000A052 ; ---------------------------------------------------------------------------
.text:000000018000A052
.text:000000018000A052 loc_18000A052:                          ; CODE XREF: sub_180009F20+B9↑j
.text:000000018000A052                                         ; sub_180009F20+108↑j ...
.text:000000018000A052                 jmp     short loc_18000A062
.text:000000018000A054 ; ---------------------------------------------------------------------------
.text:000000018000A054                 mov     rsi, [rsp+58h+arg_0]
.text:000000018000A059                 mov     ebx, [rsp+58h+arg_8]
.text:000000018000A05D                 mov     r15, [rsp+58h+var_38]
.text:000000018000A062
.text:000000018000A062 loc_18000A062:                          ; CODE XREF: sub_180009F20+86↑j
.text:000000018000A062                                         ; sub_180009F20:loc_18000A052↑j
.text:000000018000A062                 mov     rax, [rsi]
.text:000000018000A065                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A069                 mov     qword ptr [rcx+rsi+28h], 0
.text:000000018000A072                 mov     rax, [rsi]
.text:000000018000A075                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A079                 add     rcx, rsi
.text:000000018000A07C                 xor     r8d, r8d
.text:000000018000A07F                 mov     edx, ebx
.text:000000018000A081                 call    cs:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
.text:000000018000A087                 nop
.text:000000018000A088                 call    cs:?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception(void)
.text:000000018000A08E                 test    al, al
.text:000000018000A090                 jnz     short loc_18000A09C
.text:000000018000A092                 mov     rcx, r15
.text:000000018000A095                 call    cs:?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)
.text:000000018000A09B                 nop
.text:000000018000A09C
.text:000000018000A09C loc_18000A09C:                          ; CODE XREF: sub_180009F20+170↑j
.text:000000018000A09C ;   try {
.text:000000018000A09C                 mov     rax, [r15]
.text:000000018000A09F                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A0A3                 mov     rcx, [rcx+r15+48h]
.text:000000018000A0A8                 test    rcx, rcx
.text:000000018000A0AB                 jz      short loc_18000A0B4
.text:000000018000A0AD                 mov     rax, [rcx]
.text:000000018000A0B0                 call    qword ptr [rax+10h]
.text:000000018000A0B3                 nop
.text:000000018000A0B3 ;   } // starts at 18000A09C
.text:000000018000A0B4
.text:000000018000A0B4 loc_18000A0B4:                          ; CODE XREF: sub_180009F20+18B↑j
.text:000000018000A0B4                 mov     rax, rsi
.text:000000018000A0B7                 add     rsp, 30h
.text:000000018000A0BB                 pop     r15
.text:000000018000A0BD                 pop     r14
.text:000000018000A0BF                 pop     rdi
.text:000000018000A0C0                 pop     rsi
.text:000000018000A0C1                 pop     rbx
.text:000000018000A0C2                 retn
.text:000000018000A0C2 ; } // starts at 180009F20
.text:000000018000A0C2 sub_180009F20   endp ; sp-analysis failed
.text:000000018000A0C2
.text:000000018000A0C2 ; ---------------------------------------------------------------------------
.text:000000018000A0C3 algn_18000A0C3:                         ; DATA XREF: .pdata:000000018001C990↓o
.text:000000018000A0C3                 align 10h
.text:000000018000A0D0
.text:000000018000A0D0 ; =============== S U B R O U T I N E =======================================
.text:000000018000A0D0
.text:000000018000A0D0
.text:000000018000A0D0 sub_18000A0D0   proc near               ; CODE XREF: sub_180008760+10↑p
.text:000000018000A0D0                                         ; sub_180009300+10E↑p
.text:000000018000A0D0                                         ; DATA XREF: ...
.text:000000018000A0D0
.text:000000018000A0D0 var_28          = qword ptr -28h
.text:000000018000A0D0 var_20          = byte ptr -20h
.text:000000018000A0D0 var_18          = qword ptr -18h
.text:000000018000A0D0 var_10          = qword ptr -10h
.text:000000018000A0D0 arg_8           = qword ptr  10h
.text:000000018000A0D0 arg_10          = qword ptr  18h
.text:000000018000A0D0 arg_18          = qword ptr  20h
.text:000000018000A0D0
.text:000000018000A0D0 ; __unwind { // __GSHandlerCheck_EH4
.text:000000018000A0D0                 mov     [rsp+arg_8], rbx
.text:000000018000A0D5                 mov     [rsp+arg_10], rbp
.text:000000018000A0DA                 mov     [rsp+arg_18], rsi
.text:000000018000A0DF                 push    rdi
.text:000000018000A0E0                 sub     rsp, 40h
.text:000000018000A0E4                 mov     rax, cs:__security_cookie
.text:000000018000A0EB                 xor     rax, rsp
.text:000000018000A0EE                 mov     [rsp+48h+var_10], rax
.text:000000018000A0F3                 mov     rbp, rcx
.text:000000018000A0F6                 xor     edx, edx
.text:000000018000A0F8                 lea     rcx, [rsp+48h+var_20]
.text:000000018000A0FD                 call    cs:??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit(int)
.text:000000018000A103                 nop
.text:000000018000A104                 mov     rax, cs:qword_18001B2B8
.text:000000018000A10B                 mov     [rsp+48h+var_28], rax
.text:000000018000A110                 mov     rcx, cs:?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A ; std::locale::id std::codecvt<char,char,_Mbstatet>::id
.text:000000018000A117                 call    cs:??Bid@locale@std@@QEAA_KXZ ; std::locale::id::operator unsigned __int64(void)
.text:000000018000A11D                 mov     rsi, rax
.text:000000018000A120                 mov     rdx, [rbp+8]
.text:000000018000A124                 lea     rdi, ds:0[rax*8]
.text:000000018000A12C                 cmp     rax, [rdx+18h]
.text:000000018000A130                 jnb     short loc_18000A141
.text:000000018000A132                 mov     rcx, [rdx+10h]
.text:000000018000A136                 mov     rbx, [rdi+rcx]
.text:000000018000A13A                 test    rbx, rbx
.text:000000018000A13D                 jnz     short loc_18000A1A7
.text:000000018000A13F                 jmp     short loc_18000A143
.text:000000018000A141 ; ---------------------------------------------------------------------------
.text:000000018000A141
.text:000000018000A141 loc_18000A141:                          ; CODE XREF: sub_18000A0D0+60↑j
.text:000000018000A141                 xor     ebx, ebx
.text:000000018000A143
.text:000000018000A143 loc_18000A143:                          ; CODE XREF: sub_18000A0D0+6F↑j
.text:000000018000A143                 cmp     byte ptr [rdx+24h], 0
.text:000000018000A147                 jz      short loc_18000A15D
.text:000000018000A149                 call    cs:?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale(void)
.text:000000018000A14F                 cmp     rsi, [rax+18h]
.text:000000018000A153                 jnb     short loc_18000A162
.text:000000018000A155                 mov     rax, [rax+10h]
.text:000000018000A159                 mov     rbx, [rdi+rax]
.text:000000018000A15D
.text:000000018000A15D loc_18000A15D:                          ; CODE XREF: sub_18000A0D0+77↑j
.text:000000018000A15D                 test    rbx, rbx
.text:000000018000A160                 jnz     short loc_18000A1A7
.text:000000018000A162
.text:000000018000A162 loc_18000A162:                          ; CODE XREF: sub_18000A0D0+83↑j
.text:000000018000A162                 mov     rbx, [rsp+48h+var_28]
.text:000000018000A167                 test    rbx, rbx
.text:000000018000A16A                 jnz     short loc_18000A1A7
.text:000000018000A16C                 mov     rdx, rbp
.text:000000018000A16F                 lea     rcx, [rsp+48h+var_28]
.text:000000018000A174                 call    cs:?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::codecvt<char,char,_Mbstatet>::_Getcat(std::locale::facet const * *,std::locale const *)
.text:000000018000A17A                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:000000018000A17E                 jz      short loc_18000A1D7
.text:000000018000A180                 mov     rbx, [rsp+48h+var_28]
.text:000000018000A185                 mov     [rsp+48h+var_18], rbx
.text:000000018000A18A                 mov     rcx, rbx        ; struct std::_Facet_base *
.text:000000018000A18D                 call    ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register(std::_Facet_base *)
.text:000000018000A192                 mov     rax, [rbx]
.text:000000018000A195                 mov     rcx, rbx
.text:000000018000A198                 call    qword ptr [rax+8]
.text:000000018000A19B                 mov     rbx, [rsp+48h+var_28]
.text:000000018000A1A0                 mov     cs:qword_18001B2B8, rbx
.text:000000018000A1A7
.text:000000018000A1A7 loc_18000A1A7:                          ; CODE XREF: sub_18000A0D0+6D↑j
.text:000000018000A1A7                                         ; sub_18000A0D0+90↑j ...
.text:000000018000A1A7                 lea     rcx, [rsp+48h+var_20]
.text:000000018000A1AC                 call    cs:__imp_??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
.text:000000018000A1B2                 mov     rax, rbx
.text:000000018000A1B5                 mov     rcx, [rsp+48h+var_10]
.text:000000018000A1BA                 xor     rcx, rsp        ; StackCookie
.text:000000018000A1BD                 call    __security_check_cookie
.text:000000018000A1C2                 mov     rbx, [rsp+48h+arg_8]
.text:000000018000A1C7                 mov     rbp, [rsp+48h+arg_10]
.text:000000018000A1CC                 mov     rsi, [rsp+48h+arg_18]
.text:000000018000A1D1                 add     rsp, 40h
.text:000000018000A1D5                 pop     rdi
.text:000000018000A1D6                 retn
.text:000000018000A1D7 ; ---------------------------------------------------------------------------
.text:000000018000A1D7
.text:000000018000A1D7 loc_18000A1D7:                          ; CODE XREF: sub_18000A0D0+AE↑j
.text:000000018000A1D7                 call    ?cancel_current_task@Concurrency@@YAXXZ_0 ; Concurrency::cancel_current_task(void)
.text:000000018000A1D7 ; ---------------------------------------------------------------------------
.text:000000018000A1DC                 db 90h
.text:000000018000A1DC ; } // starts at 18000A0D0
.text:000000018000A1DC sub_18000A0D0   endp
.text:000000018000A1DC
.text:000000018000A1DD algn_18000A1DD:                         ; DATA XREF: .pdata:000000018001C99C↓o
.text:000000018000A1DD                 align 20h
.text:000000018000A1E0
.text:000000018000A1E0 ; =============== S U B R O U T I N E =======================================
.text:000000018000A1E0
.text:000000018000A1E0
.text:000000018000A1E0 ; __int64 __fastcall sub_18000A1E0(void *Src)
.text:000000018000A1E0 sub_18000A1E0   proc near               ; CODE XREF: sub_180008D10+130↑p
.text:000000018000A1E0                                         ; DATA XREF: .rdata:0000000180015BF8↓o ...
.text:000000018000A1E0
.text:000000018000A1E0 var_28          = qword ptr -28h
.text:000000018000A1E0 arg_8           = qword ptr  10h
.text:000000018000A1E0 arg_10          = qword ptr  18h
.text:000000018000A1E0
.text:000000018000A1E0                 push    rbx
.text:000000018000A1E2                 push    rbp
.text:000000018000A1E3                 push    rsi
.text:000000018000A1E4                 push    r15
.text:000000018000A1E6                 sub     rsp, 28h
.text:000000018000A1EA                 mov     rbp, [rcx+10h]
.text:000000018000A1EE                 mov     rbx, 7FFFFFFFFFFFFFFFh
.text:000000018000A1F8                 mov     rax, rbx
.text:000000018000A1FB                 movzx   r15d, r9b
.text:000000018000A1FF                 sub     rax, rbp
.text:000000018000A202                 mov     rsi, rcx
.text:000000018000A205                 cmp     rax, 1
.text:000000018000A209                 jb      loc_18000A339
.text:000000018000A20F
.text:000000018000A20F loc_18000A20F:                          ; DATA XREF: .rdata:0000000180015BF8↓o
.text:000000018000A20F                                         ; .rdata:0000000180015C14↓o ...
.text:000000018000A20F                 mov     [rsp+48h+arg_10], r12
.text:000000018000A214                 lea     r12, [rbp+1]
.text:000000018000A218                 mov     rdx, r12
.text:000000018000A21B                 mov     [rsp+48h+var_28], r14
.text:000000018000A220                 mov     r14, [rcx+18h]
.text:000000018000A224                 or      rdx, 0Fh
.text:000000018000A228                 cmp     rdx, rbx
.text:000000018000A22B                 ja      short loc_18000A24C
.text:000000018000A22D                 mov     rcx, r14
.text:000000018000A230                 mov     rax, rbx
.text:000000018000A233                 shr     rcx, 1
.text:000000018000A236                 sub     rax, rcx
.text:000000018000A239                 cmp     r14, rax
.text:000000018000A23C                 ja      short loc_18000A24C
.text:000000018000A23E                 lea     rax, [rcx+r14]
.text:000000018000A242                 mov     rbx, rdx
.text:000000018000A245                 cmp     rdx, rax
.text:000000018000A248                 cmovb   rbx, rax
.text:000000018000A24C
.text:000000018000A24C loc_18000A24C:                          ; CODE XREF: sub_18000A1E0+4B↑j
.text:000000018000A24C                                         ; sub_18000A1E0+5C↑j
.text:000000018000A24C                 mov     rcx, rbx
.text:000000018000A24F                 mov     [rsp+48h+arg_8], rdi
.text:000000018000A254                 add     rcx, 1
.text:000000018000A258                 mov     rax, 0FFFFFFFFFFFFFFFFh
.text:000000018000A25F                 cmovb   rcx, rax        ; Size
.text:000000018000A263                 cmp     rcx, 1000h
.text:000000018000A26A                 jb      short loc_18000A294
.text:000000018000A26C                 lea     rax, [rcx+27h]
.text:000000018000A270                 cmp     rax, rcx
.text:000000018000A273                 jbe     loc_18000A333
.text:000000018000A279                 mov     rcx, rax        ; Size
.text:000000018000A27C                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000A281                 test    rax, rax
.text:000000018000A284                 jz      short loc_18000A2FC
.text:000000018000A286                 lea     rdi, [rax+27h]
.text:000000018000A28A                 and     rdi, 0FFFFFFFFFFFFFFE0h
.text:000000018000A28E                 mov     [rdi-8], rax
.text:000000018000A292                 jmp     short loc_18000A2A5
.text:000000018000A294 ; ---------------------------------------------------------------------------
.text:000000018000A294
.text:000000018000A294 loc_18000A294:                          ; CODE XREF: sub_18000A1E0+8A↑j
.text:000000018000A294                 test    rcx, rcx
.text:000000018000A297                 jz      short loc_18000A2A3
.text:000000018000A299                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000A29E                 mov     rdi, rax
.text:000000018000A2A1                 jmp     short loc_18000A2A5
.text:000000018000A2A3 ; ---------------------------------------------------------------------------
.text:000000018000A2A3
.text:000000018000A2A3 loc_18000A2A3:                          ; CODE XREF: sub_18000A1E0+B7↑j
.text:000000018000A2A3                 xor     edi, edi
.text:000000018000A2A5
.text:000000018000A2A5 loc_18000A2A5:                          ; CODE XREF: sub_18000A1E0+B2↑j
.text:000000018000A2A5                                         ; sub_18000A1E0+C1↑j
.text:000000018000A2A5                 mov     [rsi+10h], r12
.text:000000018000A2A9                 mov     r8, rbp         ; Size
.text:000000018000A2AC                 mov     [rsi+18h], rbx
.text:000000018000A2B0                 mov     rcx, rdi        ; void *
.text:000000018000A2B3                 cmp     r14, 10h
.text:000000018000A2B7                 jb      short loc_18000A303
.text:000000018000A2B9                 mov     rbx, [rsi]
.text:000000018000A2BC                 mov     rdx, rbx        ; Src
.text:000000018000A2BF                 call    memcpy
.text:000000018000A2C4                 lea     rdx, [r14+1]
.text:000000018000A2C8                 mov     [rdi+rbp], r15b
.text:000000018000A2CC                 mov     byte ptr [rdi+rbp+1], 0
.text:000000018000A2D1                 cmp     rdx, 1000h
.text:000000018000A2D8                 jb      short loc_18000A2F2
.text:000000018000A2DA                 mov     rcx, [rbx-8]
.text:000000018000A2DE                 add     rdx, 27h ; '''
.text:000000018000A2E2                 sub     rbx, rcx
.text:000000018000A2E5                 lea     rax, [rbx-8]
.text:000000018000A2E9                 cmp     rax, 1Fh
.text:000000018000A2ED                 ja      short loc_18000A2FC
.text:000000018000A2EF                 mov     rbx, rcx
.text:000000018000A2F2
.text:000000018000A2F2 loc_18000A2F2:                          ; CODE XREF: sub_18000A1E0+F8↑j
.text:000000018000A2F2                 mov     rcx, rbx        ; Block
.text:000000018000A2F5                 call    j_j_free
.text:000000018000A2FA                 jmp     short loc_18000A314
.text:000000018000A2FC ; ---------------------------------------------------------------------------
.text:000000018000A2FC
.text:000000018000A2FC loc_18000A2FC:                          ; CODE XREF: sub_18000A1E0+A4↑j
.text:000000018000A2FC                                         ; sub_18000A1E0+10D↑j
.text:000000018000A2FC                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000A302                 int     3               ; Trap to Debugger
.text:000000018000A303 ; ---------------------------------------------------------------------------
.text:000000018000A303
.text:000000018000A303 loc_18000A303:                          ; CODE XREF: sub_18000A1E0+D7↑j
.text:000000018000A303                 mov     rdx, rsi        ; Src
.text:000000018000A306                 call    memcpy
.text:000000018000A30B                 mov     [rdi+rbp], r15b
.text:000000018000A30F                 mov     byte ptr [rdi+rbp+1], 0
.text:000000018000A314
.text:000000018000A314 loc_18000A314:                          ; CODE XREF: sub_18000A1E0+11A↑j
.text:000000018000A314                 mov     [rsi], rdi
.text:000000018000A317                 mov     rax, rsi
.text:000000018000A31A                 mov     rdi, [rsp+48h+arg_8]
.text:000000018000A31F                 mov     r12, [rsp+48h+arg_10]
.text:000000018000A324                 mov     r14, [rsp+48h+var_28]
.text:000000018000A329                 add     rsp, 28h
.text:000000018000A32D                 pop     r15
.text:000000018000A32F                 pop     rsi
.text:000000018000A330                 pop     rbp
.text:000000018000A331                 pop     rbx
.text:000000018000A332                 retn
.text:000000018000A333 ; ---------------------------------------------------------------------------
.text:000000018000A333
.text:000000018000A333 loc_18000A333:                          ; CODE XREF: sub_18000A1E0+93↑j
.text:000000018000A333                                         ; DATA XREF: .pdata:000000018001C9B4↓o ...
.text:000000018000A333                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:000000018000A333 ; ---------------------------------------------------------------------------
.text:000000018000A338                 db 0CCh
.text:000000018000A339 ; ---------------------------------------------------------------------------
.text:000000018000A339
.text:000000018000A339 loc_18000A339:                          ; CODE XREF: sub_18000A1E0+29↑j
.text:000000018000A339                                         ; DATA XREF: .pdata:000000018001C9C0↓o ...
.text:000000018000A339                 call    sub_180002AC0
.text:000000018000A339 ; ---------------------------------------------------------------------------
.text:000000018000A33E                 db 0CCh
.text:000000018000A33E sub_18000A1E0   endp
.text:000000018000A33E
.text:000000018000A33F algn_18000A33F:                         ; DATA XREF: .pdata:000000018001C9CC↓o
.text:000000018000A33F                 align 20h
.text:000000018000A340
.text:000000018000A340 ; =============== S U B R O U T I N E =======================================
.text:000000018000A340
.text:000000018000A340
.text:000000018000A340 ; __int64 __usercall sub_18000A340@<rax>(void *Src@<rcx>, size_t Size)
.text:000000018000A340 sub_18000A340   proc near               ; CODE XREF: sub_180007030+E8↑p
.text:000000018000A340                                         ; sub_180007030+281↑p ...
.text:000000018000A340
.text:000000018000A340 var_38          = qword ptr -38h
.text:000000018000A340 var_30          = qword ptr -30h
.text:000000018000A340 var_28          = qword ptr -28h
.text:000000018000A340 arg_10          = qword ptr  18h
.text:000000018000A340 Size            = qword ptr  28h
.text:000000018000A340
.text:000000018000A340                 push    rbx
.text:000000018000A342                 push    rsi
.text:000000018000A343                 push    r12
.text:000000018000A345                 push    r13
.text:000000018000A347                 sub     rsp, 38h
.text:000000018000A34B                 mov     r12, [rcx+10h]
.text:000000018000A34F                 mov     rbx, 7FFFFFFFFFFFFFFFh
.text:000000018000A359                 mov     rax, rbx
.text:000000018000A35C                 mov     r13, r9
.text:000000018000A35F                 sub     rax, r12
.text:000000018000A362                 mov     rsi, rcx
.text:000000018000A365                 cmp     rax, rdx
.text:000000018000A368                 jb      loc_18000A4C7
.text:000000018000A36E
.text:000000018000A36E loc_18000A36E:                          ; DATA XREF: .rdata:0000000180015C54↓o
.text:000000018000A36E                                         ; .rdata:0000000180015C74↓o ...
.text:000000018000A36E                 mov     [rsp+58h+arg_10], rbp
.text:000000018000A373                 lea     rbp, [rdx+r12]
.text:000000018000A377                 mov     rdx, rbp
.text:000000018000A37A                 mov     [rsp+58h+var_38], r15
.text:000000018000A37F                 mov     r15, [rcx+18h]
.text:000000018000A383                 or      rdx, 0Fh
.text:000000018000A387                 cmp     rdx, rbx
.text:000000018000A38A                 ja      short loc_18000A3AB
.text:000000018000A38C                 mov     rcx, r15
.text:000000018000A38F                 mov     rax, rbx
.text:000000018000A392                 shr     rcx, 1
.text:000000018000A395                 sub     rax, rcx
.text:000000018000A398                 cmp     r15, rax
.text:000000018000A39B                 ja      short loc_18000A3AB
.text:000000018000A39D                 lea     rax, [rcx+r15]
.text:000000018000A3A1                 mov     rbx, rdx
.text:000000018000A3A4                 cmp     rdx, rax
.text:000000018000A3A7                 cmovb   rbx, rax
.text:000000018000A3AB
.text:000000018000A3AB loc_18000A3AB:                          ; CODE XREF: sub_18000A340+4A↑j
.text:000000018000A3AB                                         ; sub_18000A340+5B↑j
.text:000000018000A3AB                 mov     rcx, rbx
.text:000000018000A3AE                 mov     [rsp+58h+var_28], rdi
.text:000000018000A3B3                 add     rcx, 1
.text:000000018000A3B7                 mov     [rsp+58h+var_30], r14
.text:000000018000A3BC                 mov     rax, 0FFFFFFFFFFFFFFFFh
.text:000000018000A3C3                 cmovb   rcx, rax        ; Size
.text:000000018000A3C7                 cmp     rcx, 1000h
.text:000000018000A3CE                 jb      short loc_18000A3FC
.text:000000018000A3D0                 lea     rax, [rcx+27h]
.text:000000018000A3D4                 cmp     rax, rcx
.text:000000018000A3D7                 jbe     loc_18000A4C1
.text:000000018000A3DD                 mov     rcx, rax        ; Size
.text:000000018000A3E0                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000A3E5                 test    rax, rax
.text:000000018000A3E8                 jz      loc_18000A47A
.text:000000018000A3EE                 lea     rdi, [rax+27h]
.text:000000018000A3F2                 and     rdi, 0FFFFFFFFFFFFFFE0h
.text:000000018000A3F6                 mov     [rdi-8], rax
.text:000000018000A3FA                 jmp     short loc_18000A40D
.text:000000018000A3FC ; ---------------------------------------------------------------------------
.text:000000018000A3FC
.text:000000018000A3FC loc_18000A3FC:                          ; CODE XREF: sub_18000A340+8E↑j
.text:000000018000A3FC                 test    rcx, rcx
.text:000000018000A3FF                 jz      short loc_18000A40B
.text:000000018000A401                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000A406                 mov     rdi, rax
.text:000000018000A409                 jmp     short loc_18000A40D
.text:000000018000A40B ; ---------------------------------------------------------------------------
.text:000000018000A40B
.text:000000018000A40B loc_18000A40B:                          ; CODE XREF: sub_18000A340+BF↑j
.text:000000018000A40B                 xor     edi, edi
.text:000000018000A40D
.text:000000018000A40D loc_18000A40D:                          ; CODE XREF: sub_18000A340+BA↑j
.text:000000018000A40D                                         ; sub_18000A340+C9↑j
.text:000000018000A40D                 mov     [rsi+10h], rbp
.text:000000018000A411                 lea     r14, [rdi+r12]
.text:000000018000A415                 mov     rbp, [rsp+58h+Size]
.text:000000018000A41D                 mov     r8, r12         ; Size
.text:000000018000A420                 mov     [rsi+18h], rbx
.text:000000018000A424                 mov     rcx, rdi        ; void *
.text:000000018000A427                 cmp     r15, 10h
.text:000000018000A42B                 jb      short loc_18000A481
.text:000000018000A42D                 mov     rbx, [rsi]
.text:000000018000A430                 mov     rdx, rbx        ; Src
.text:000000018000A433                 call    memcpy
.text:000000018000A438                 mov     r8, rbp         ; Size
.text:000000018000A43B                 mov     rdx, r13        ; Src
.text:000000018000A43E                 mov     rcx, r14        ; void *
.text:000000018000A441                 call    memcpy
.text:000000018000A446                 lea     rdx, [r15+1]
.text:000000018000A44A                 mov     byte ptr [r14+rbp], 0
.text:000000018000A44F                 cmp     rdx, 1000h
.text:000000018000A456                 jb      short loc_18000A470
.text:000000018000A458                 mov     rcx, [rbx-8]
.text:000000018000A45C                 add     rdx, 27h ; '''
.text:000000018000A460                 sub     rbx, rcx
.text:000000018000A463                 lea     rax, [rbx-8]
.text:000000018000A467                 cmp     rax, 1Fh
.text:000000018000A46B                 ja      short loc_18000A47A
.text:000000018000A46D                 mov     rbx, rcx
.text:000000018000A470
.text:000000018000A470 loc_18000A470:                          ; CODE XREF: sub_18000A340+116↑j
.text:000000018000A470                 mov     rcx, rbx        ; Block
.text:000000018000A473                 call    j_j_free
.text:000000018000A478                 jmp     short loc_18000A49C
.text:000000018000A47A ; ---------------------------------------------------------------------------
.text:000000018000A47A
.text:000000018000A47A loc_18000A47A:                          ; CODE XREF: sub_18000A340+A8↑j
.text:000000018000A47A                                         ; sub_18000A340+12B↑j
.text:000000018000A47A                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000A480                 int     3               ; Trap to Debugger
.text:000000018000A481 ; ---------------------------------------------------------------------------
.text:000000018000A481
.text:000000018000A481 loc_18000A481:                          ; CODE XREF: sub_18000A340+EB↑j
.text:000000018000A481                 mov     rdx, rsi        ; Src
.text:000000018000A484                 call    memcpy
.text:000000018000A489                 mov     r8, rbp         ; Size
.text:000000018000A48C                 mov     rdx, r13        ; Src
.text:000000018000A48F                 mov     rcx, r14        ; void *
.text:000000018000A492                 call    memcpy
.text:000000018000A497                 mov     byte ptr [r14+rbp], 0
.text:000000018000A49C
.text:000000018000A49C loc_18000A49C:                          ; CODE XREF: sub_18000A340+138↑j
.text:000000018000A49C                 mov     [rsi], rdi
.text:000000018000A49F                 mov     rax, rsi
.text:000000018000A4A2                 mov     r14, [rsp+58h+var_30]
.text:000000018000A4A7                 mov     rdi, [rsp+58h+var_28]
.text:000000018000A4AC                 mov     rbp, [rsp+58h+arg_10]
.text:000000018000A4B1                 mov     r15, [rsp+58h+var_38]
.text:000000018000A4B6                 add     rsp, 38h
.text:000000018000A4BA                 pop     r13
.text:000000018000A4BC                 pop     r12
.text:000000018000A4BE                 pop     rsi
.text:000000018000A4BF                 pop     rbx
.text:000000018000A4C0                 retn
.text:000000018000A4C1 ; ---------------------------------------------------------------------------
.text:000000018000A4C1
.text:000000018000A4C1 loc_18000A4C1:                          ; CODE XREF: sub_18000A340+97↑j
.text:000000018000A4C1                                         ; DATA XREF: .pdata:000000018001C9E4↓o ...
.text:000000018000A4C1                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:000000018000A4C1 ; ---------------------------------------------------------------------------
.text:000000018000A4C6                 db 0CCh
.text:000000018000A4C7 ; ---------------------------------------------------------------------------
.text:000000018000A4C7
.text:000000018000A4C7 loc_18000A4C7:                          ; CODE XREF: sub_18000A340+28↑j
.text:000000018000A4C7                                         ; DATA XREF: .pdata:000000018001C9F0↓o ...
.text:000000018000A4C7                 call    sub_180002AC0
.text:000000018000A4C7 ; ---------------------------------------------------------------------------
.text:000000018000A4CC                 db 0CCh
.text:000000018000A4CC sub_18000A340   endp
.text:000000018000A4CC
.text:000000018000A4CD algn_18000A4CD:                         ; DATA XREF: .pdata:000000018001C9FC↓o
.text:000000018000A4CD                 align 10h
.text:000000018000A4D0
.text:000000018000A4D0 loc_18000A4D0:                          ; CODE XREF: .text:0000000180011609↓j
.text:000000018000A4D0                                         ; .text:00000001800116C5↓j
.text:000000018000A4D0                                         ; DATA XREF: ...
.text:000000018000A4D0                 mov     rcx, [rcx]
.text:000000018000A4D3                 test    rcx, rcx
.text:000000018000A4D6                 jz      short locret_18000A4E3
.text:000000018000A4D8                 mov     rax, [rcx]
.text:000000018000A4DB                 mov     edx, 1
.text:000000018000A4E0                 jmp     qword ptr [rax]
.text:000000018000A4E3 ; ---------------------------------------------------------------------------
.text:000000018000A4E3
.text:000000018000A4E3 locret_18000A4E3:                       ; CODE XREF: .text:000000018000A4D6↑j
.text:000000018000A4E3                 retn
.text:000000018000A4E3 ; ---------------------------------------------------------------------------
.text:000000018000A4E4                 align 10h
.text:000000018000A4F0
.text:000000018000A4F0 ; =============== S U B R O U T I N E =======================================
.text:000000018000A4F0
.text:000000018000A4F0
.text:000000018000A4F0 sub_18000A4F0   proc near               ; CODE XREF: sub_1800074F0+70↑p
.text:000000018000A4F0                                         ; sub_1800074F0+91↑p ...
.text:000000018000A4F0
.text:000000018000A4F0 var_48          = qword ptr -48h
.text:000000018000A4F0 var_38          = qword ptr -38h
.text:000000018000A4F0 var_30          = byte ptr -30h
.text:000000018000A4F0 arg_0           = qword ptr  8
.text:000000018000A4F0 arg_8           = qword ptr  10h
.text:000000018000A4F0 arg_18          = dword ptr  20h
.text:000000018000A4F0
.text:000000018000A4F0 ; FUNCTION CHUNK AT .text:00000001800111E6 SIZE 00000006 BYTES
.text:000000018000A4F0 ; FUNCTION CHUNK AT .text:0000000180011668 SIZE 0000003B BYTES
.text:000000018000A4F0
.text:000000018000A4F0 ; __unwind { // __CxxFrameHandler4
.text:000000018000A4F0                 mov     [rsp+arg_8], rbx
.text:000000018000A4F5                 mov     [rsp+arg_0], rcx
.text:000000018000A4FA                 push    rsi
.text:000000018000A4FB                 push    rdi
.text:000000018000A4FC                 push    r12
.text:000000018000A4FE                 push    r14
.text:000000018000A500                 push    r15
.text:000000018000A502                 sub     rsp, 30h
.text:000000018000A506                 mov     r15, r8
.text:000000018000A509                 mov     r12, rdx
.text:000000018000A50C                 mov     rsi, rcx
.text:000000018000A50F                 xor     ebx, ebx
.text:000000018000A511                 mov     [rsp+58h+arg_18], ebx
.text:000000018000A515                 mov     rax, [rcx]
.text:000000018000A518                 movsxd  r9, dword ptr [rax+4]
.text:000000018000A51C                 mov     rdi, [r9+rcx+28h]
.text:000000018000A521                 test    rdi, rdi
.text:000000018000A524                 jle     short loc_18000A530
.text:000000018000A526                 cmp     rdi, r8
.text:000000018000A529                 jbe     short loc_18000A530
.text:000000018000A52B                 sub     rdi, r8
.text:000000018000A52E                 jmp     short loc_18000A532
.text:000000018000A530 ; ---------------------------------------------------------------------------
.text:000000018000A530
.text:000000018000A530 loc_18000A530:                          ; CODE XREF: sub_18000A4F0+34↑j
.text:000000018000A530                                         ; sub_18000A4F0+39↑j
.text:000000018000A530                 xor     edi, edi
.text:000000018000A532
.text:000000018000A532 loc_18000A532:                          ; CODE XREF: sub_18000A4F0+3E↑j
.text:000000018000A532                 mov     r14, rsi
.text:000000018000A535                 mov     [rsp+58h+var_38], rsi
.text:000000018000A53A                 mov     rcx, [r9+rcx+48h]
.text:000000018000A53F                 test    rcx, rcx
.text:000000018000A542                 jz      short loc_18000A54B
.text:000000018000A544                 mov     rax, [rcx]
.text:000000018000A547                 call    qword ptr [rax+8]
.text:000000018000A54A                 nop
.text:000000018000A54B
.text:000000018000A54B loc_18000A54B:                          ; CODE XREF: sub_18000A4F0+52↑j
.text:000000018000A54B                 mov     rcx, [rsi]
.text:000000018000A54E                 movsxd  rax, dword ptr [rcx+4]
.text:000000018000A552                 cmp     dword ptr [rax+rsi+10h], 0
.text:000000018000A557                 jz      short loc_18000A55D
.text:000000018000A559                 xor     al, al
.text:000000018000A55B                 jmp     short loc_18000A588
.text:000000018000A55D ; ---------------------------------------------------------------------------
.text:000000018000A55D
.text:000000018000A55D loc_18000A55D:                          ; CODE XREF: sub_18000A4F0+67↑j
.text:000000018000A55D                 mov     rax, [rax+rsi+50h]
.text:000000018000A562                 test    rax, rax
.text:000000018000A565                 jz      short loc_18000A586
.text:000000018000A567                 cmp     rax, rsi
.text:000000018000A56A                 jz      short loc_18000A586
.text:000000018000A56C                 mov     rcx, rax
.text:000000018000A56F                 call    cs:?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ ; std::basic_ostream<char,std::char_traits<char>>::flush(void)
.text:000000018000A575                 mov     rcx, [rsi]
.text:000000018000A578                 movsxd  rax, dword ptr [rcx+4]
.text:000000018000A57C                 cmp     dword ptr [rax+rsi+10h], 0
.text:000000018000A581                 setz    al
.text:000000018000A584                 jmp     short loc_18000A588
.text:000000018000A586 ; ---------------------------------------------------------------------------
.text:000000018000A586
.text:000000018000A586 loc_18000A586:                          ; CODE XREF: sub_18000A4F0+75↑j
.text:000000018000A586                                         ; sub_18000A4F0+7A↑j
.text:000000018000A586                 mov     al, 1
.text:000000018000A588
.text:000000018000A588 loc_18000A588:                          ; CODE XREF: sub_18000A4F0+6B↑j
.text:000000018000A588                                         ; sub_18000A4F0+94↑j
.text:000000018000A588                 mov     [rsp+58h+var_30], al
.text:000000018000A58C                 test    al, al
.text:000000018000A58E                 jnz     short loc_18000A59A
.text:000000018000A590                 mov     ebx, 4
.text:000000018000A595                 jmp     loc_18000A64D
.text:000000018000A59A ; ---------------------------------------------------------------------------
.text:000000018000A59A
.text:000000018000A59A loc_18000A59A:                          ; CODE XREF: sub_18000A4F0+9E↑j
.text:000000018000A59A                 movsxd  rax, dword ptr [rcx+4]
.text:000000018000A59E                 mov     ecx, [rax+rsi+18h]
.text:000000018000A5A2                 and     ecx, 1C0h
.text:000000018000A5A8                 cmp     ecx, 40h ; '@'
.text:000000018000A5AB                 jz      short loc_18000A5E1
.text:000000018000A5AD                 nop     dword ptr [rax]
.text:000000018000A5B0
.text:000000018000A5B0 loc_18000A5B0:                          ; CODE XREF: sub_18000A4F0+EF↓j
.text:000000018000A5B0                 test    rdi, rdi
.text:000000018000A5B3                 jz      short loc_18000A5E1
.text:000000018000A5B5                 mov     rax, [rsi]
.text:000000018000A5B8                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A5BC                 movzx   edx, byte ptr [rcx+rsi+58h]
.text:000000018000A5C1                 mov     rcx, [rcx+rsi+48h]
.text:000000018000A5C6 ;   try {
.text:000000018000A5C6                 call    cs:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
.text:000000018000A5CC                 cmp     eax, 0FFFFFFFFh
.text:000000018000A5CF                 jnz     short loc_18000A5DC
.text:000000018000A5D1                 mov     ebx, 4
.text:000000018000A5D6                 mov     [rsp+58h+arg_18], ebx
.text:000000018000A5DA                 jmp     short loc_18000A600
.text:000000018000A5DC ; ---------------------------------------------------------------------------
.text:000000018000A5DC
.text:000000018000A5DC loc_18000A5DC:                          ; CODE XREF: sub_18000A4F0+DF↑j
.text:000000018000A5DC                 dec     rdi
.text:000000018000A5DF                 jmp     short loc_18000A5B0
.text:000000018000A5E1 ; ---------------------------------------------------------------------------
.text:000000018000A5E1
.text:000000018000A5E1 loc_18000A5E1:                          ; CODE XREF: sub_18000A4F0+BB↑j
.text:000000018000A5E1                                         ; sub_18000A4F0+C3↑j
.text:000000018000A5E1                 mov     rax, [rsi]
.text:000000018000A5E4                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A5E8                 mov     r8, r15
.text:000000018000A5EB                 mov     rdx, r12
.text:000000018000A5EE                 mov     rcx, [rcx+rsi+48h]
.text:000000018000A5F3                 call    cs:?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputn(char const *,__int64)
.text:000000018000A5F9                 cmp     rax, r15
.text:000000018000A5FC                 jnz     short loc_18000A626
.text:000000018000A5FE                 xchg    ax, ax
.text:000000018000A600
.text:000000018000A600 loc_18000A600:                          ; CODE XREF: sub_18000A4F0+EA↑j
.text:000000018000A600                                         ; sub_18000A4F0+134↓j
.text:000000018000A600                 test    rdi, rdi
.text:000000018000A603                 jz      short loc_18000A62D
.text:000000018000A605                 mov     rax, [rsi]
.text:000000018000A608                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A60C                 movzx   edx, byte ptr [rcx+rsi+58h]
.text:000000018000A611                 mov     rcx, [rcx+rsi+48h]
.text:000000018000A616                 call    cs:?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z ; std::basic_streambuf<char,std::char_traits<char>>::sputc(char)
.text:000000018000A61C                 cmp     eax, 0FFFFFFFFh
.text:000000018000A61F                 jz      short loc_18000A626
.text:000000018000A621                 dec     rdi
.text:000000018000A624                 jmp     short loc_18000A600
.text:000000018000A626 ; ---------------------------------------------------------------------------
.text:000000018000A626
.text:000000018000A626 loc_18000A626:                          ; CODE XREF: sub_18000A4F0+10C↑j
.text:000000018000A626                                         ; sub_18000A4F0+12F↑j
.text:000000018000A626                 or      ebx, 4
.text:000000018000A629                 mov     [rsp+58h+arg_18], ebx
.text:000000018000A62D
.text:000000018000A62D loc_18000A62D:                          ; CODE XREF: sub_18000A4F0+113↑j
.text:000000018000A62D                 mov     rax, [rsi]
.text:000000018000A630                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A634                 mov     qword ptr [rcx+rsi+28h], 0
.text:000000018000A634 ;   } // starts at 18000A5C6
.text:000000018000A63D                 jmp     short loc_18000A64D
.text:000000018000A63F ; ---------------------------------------------------------------------------
.text:000000018000A63F                 mov     rsi, [rsp+58h+arg_0]
.text:000000018000A644                 mov     ebx, [rsp+58h+arg_18]
.text:000000018000A648                 mov     r14, [rsp+58h+var_38]
.text:000000018000A64D
.text:000000018000A64D loc_18000A64D:                          ; CODE XREF: sub_18000A4F0+A5↑j
.text:000000018000A64D                                         ; sub_18000A4F0+14D↑j
.text:000000018000A64D                 mov     rax, [rsi]
.text:000000018000A650                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A654                 add     rcx, rsi
.text:000000018000A657                 xor     r8d, r8d
.text:000000018000A65A                 mov     edx, ebx
.text:000000018000A65C                 call    cs:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
.text:000000018000A662                 nop
.text:000000018000A663                 call    cs:?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception(void)
.text:000000018000A669                 test    al, al
.text:000000018000A66B                 jnz     short loc_18000A677
.text:000000018000A66D                 mov     rcx, r14
.text:000000018000A670                 call    cs:?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)
.text:000000018000A676                 nop
.text:000000018000A677
.text:000000018000A677 loc_18000A677:                          ; CODE XREF: sub_18000A4F0+17B↑j
.text:000000018000A677 ;   try {
.text:000000018000A677                 mov     rax, [r14]
.text:000000018000A67A                 movsxd  rcx, dword ptr [rax+4]
.text:000000018000A67E                 mov     rcx, [rcx+r14+48h]
.text:000000018000A683                 test    rcx, rcx
.text:000000018000A686                 jz      short loc_18000A68F
.text:000000018000A688                 mov     rax, [rcx]
.text:000000018000A68B                 call    qword ptr [rax+10h]
.text:000000018000A68E                 nop
.text:000000018000A68E ;   } // starts at 18000A677
.text:000000018000A68F
.text:000000018000A68F loc_18000A68F:                          ; CODE XREF: sub_18000A4F0+196↑j
.text:000000018000A68F                 mov     rax, rsi
.text:000000018000A692                 mov     rbx, [rsp+58h+arg_8]
.text:000000018000A697                 add     rsp, 30h
.text:000000018000A69B                 pop     r15
.text:000000018000A69D                 pop     r14
.text:000000018000A69F                 pop     r12
.text:000000018000A6A1                 pop     rdi
.text:000000018000A6A2                 pop     rsi
.text:000000018000A6A3                 retn
.text:000000018000A6A3 ; } // starts at 18000A4F0
.text:000000018000A6A3 sub_18000A4F0   endp ; sp-analysis failed
.text:000000018000A6A3
.text:000000018000A6A4
.text:000000018000A6A4 ; =============== S U B R O U T I N E =======================================
.text:000000018000A6A4
.text:000000018000A6A4
.text:000000018000A6A4 sub_18000A6A4   proc near               ; DATA XREF: .rdata:off_180013B48↓o
.text:000000018000A6A4                                         ; .pdata:000000018001CA08↓o
.text:000000018000A6A4                 movsxd  rax, dword ptr [rcx-4]
.text:000000018000A6A8                 sub     rcx, rax
.text:000000018000A6AB                 jmp     sub_180009590
.text:000000018000A6AB sub_18000A6A4   endp
.text:000000018000A6AB
.text:000000018000A6B0 ; ---------------------------------------------------------------------------
.text:000000018000A6B0
.text:000000018000A6B0 loc_18000A6B0:                          ; DATA XREF: .rdata:off_180013A98↓o
.text:000000018000A6B0                 movsxd  rax, dword ptr [rcx-4]
.text:000000018000A6B4                 sub     rcx, rax
.text:000000018000A6B7                 jmp     sub_1800096C0
.text:000000018000A6B7 ; ---------------------------------------------------------------------------
.text:000000018000A6BC                 align 20h
.text:000000018000A6C0
.text:000000018000A6C0 ; =============== S U B R O U T I N E =======================================
.text:000000018000A6C0
.text:000000018000A6C0
.text:000000018000A6C0 sub_18000A6C0   proc near               ; CODE XREF: sub_180002E20+E528↓j
.text:000000018000A6C0                                         ; DATA XREF: .pdata:000000018001CA14↓o
.text:000000018000A6C0                 push    rbx
.text:000000018000A6C2                 sub     rsp, 20h
.text:000000018000A6C6                 mov     r8, [rcx]
.text:000000018000A6C9                 mov     rdx, rcx
.text:000000018000A6CC                 mov     rbx, rcx
.text:000000018000A6CF                 mov     r8, [r8+8]
.text:000000018000A6D3                 call    sub_1800028A0
.text:000000018000A6D8                 mov     rcx, [rbx]      ; Block
.text:000000018000A6DB                 mov     edx, 48h ; 'H'
.text:000000018000A6E0                 add     rsp, 20h
.text:000000018000A6E4                 pop     rbx
.text:000000018000A6E5                 jmp     j_j_free
.text:000000018000A6E5 sub_18000A6C0   endp
.text:000000018000A6E5
.text:000000018000A6E5 ; ---------------------------------------------------------------------------
.text:000000018000A6EA algn_18000A6EA:                         ; DATA XREF: .pdata:000000018001CA14↓o
.text:000000018000A6EA                 align 10h
.text:000000018000A6F0
.text:000000018000A6F0 ; =============== S U B R O U T I N E =======================================
.text:000000018000A6F0
.text:000000018000A6F0 ; Attributes: bp-based frame fpd=200h
.text:000000018000A6F0
.text:000000018000A6F0 sub_18000A6F0   proc near               ; CODE XREF: sub_1800034B0+4C8↑p
.text:000000018000A6F0                                         ; DATA XREF: .pdata:000000018001CA20↓o
.text:000000018000A6F0
.text:000000018000A6F0 var_2E0         = dword ptr -2E0h
.text:000000018000A6F0 var_2D8         = dword ptr -2D8h
.text:000000018000A6F0 var_2D0         = dword ptr -2D0h
.text:000000018000A6F0 var_2C8         = qword ptr -2C8h
.text:000000018000A6F0 var_2C0         = qword ptr -2C0h
.text:000000018000A6F0 var_2B0         = qword ptr -2B0h
.text:000000018000A6F0 var_2A8         = qword ptr -2A8h
.text:000000018000A6F0 var_2A0         = dword ptr -2A0h
.text:000000018000A6F0 Block           = qword ptr -298h
.text:000000018000A6F0 var_280         = qword ptr -280h
.text:000000018000A6F0 var_278         = dword ptr -278h
.text:000000018000A6F0 var_274         = dword ptr -274h
.text:000000018000A6F0 var_270         = qword ptr -270h
.text:000000018000A6F0 var_258         = qword ptr -258h
.text:000000018000A6F0 Buffer          = byte ptr -250h
.text:000000018000A6F0 var_1D0         = dword ptr -1D0h
.text:000000018000A6F0 var_1B0         = qword ptr -1B0h
.text:000000018000A6F0 var_50          = qword ptr -50h
.text:000000018000A6F0
.text:000000018000A6F0 ; FUNCTION CHUNK AT .text:00000001800116DC SIZE 00000026 BYTES
.text:000000018000A6F0
.text:000000018000A6F0 ; __unwind { // __GSHandlerCheck_EH4
.text:000000018000A6F0                 push    rbp
.text:000000018000A6F2                 push    rbx
.text:000000018000A6F3                 push    rsi
.text:000000018000A6F4                 push    rdi
.text:000000018000A6F5                 push    r12
.text:000000018000A6F7                 push    r13
.text:000000018000A6F9                 push    r14
.text:000000018000A6FB                 push    r15
.text:000000018000A6FD                 lea     rbp, [rsp-1C8h]
.text:000000018000A705                 sub     rsp, 2C8h
.text:000000018000A70C                 mov     rax, cs:__security_cookie
.text:000000018000A713                 xor     rax, rsp
.text:000000018000A716                 mov     [rbp+200h+var_50], rax
.text:000000018000A71D                 mov     rsi, r9
.text:000000018000A720                 mov     [rsp+300h+var_2A0], r8d
.text:000000018000A725                 mov     r12, rdx
.text:000000018000A728                 mov     [rsp+300h+var_2C0], rdx
.text:000000018000A72D                 mov     r13, rcx
.text:000000018000A730                 mov     [rsp+300h+var_2B0], rdx
.text:000000018000A735                 mov     [rsp+300h+var_2A8], r9
.text:000000018000A73A                 mov     [rsp+300h+var_2D0], 1
.text:000000018000A742                 xorps   xmm0, xmm0
.text:000000018000A745                 movups  xmmword ptr [rdx], xmm0
.text:000000018000A748                 xor     eax, eax
.text:000000018000A74A                 mov     [rdx+10h], rax
.text:000000018000A74E                 mov     qword ptr [rdx+18h], 0Fh
.text:000000018000A756                 mov     [rdx], al
.text:000000018000A758                 mov     [rdx+20h], eax
.text:000000018000A75B                 mov     [rsp+300h+var_2D0], 1
.text:000000018000A763                 mov     r15, [rcx+8]
.text:000000018000A767                 mov     [rsp+300h+var_2C8], r15
.text:000000018000A76C                 mov     rdi, [r15+8]
.text:000000018000A770                 mov     rbx, r15
.text:000000018000A773                 cmp     [rdi+19h], al
.text:000000018000A776                 jnz     short loc_18000A7E9
.text:000000018000A778                 mov     r12, [r9+18h]
.text:000000018000A77C                 mov     r15, [r9+10h]
.text:000000018000A780
.text:000000018000A780 loc_18000A780:                          ; CODE XREF: sub_18000A6F0+ED↓j
.text:000000018000A780                 mov     rdx, rsi
.text:000000018000A783                 cmp     r12, 10h
.text:000000018000A787                 jb      short loc_18000A78C
.text:000000018000A789                 mov     rdx, [rsi]      ; Buf2
.text:000000018000A78C
.text:000000018000A78C loc_18000A78C:                          ; CODE XREF: sub_18000A6F0+97↑j
.text:000000018000A78C                 lea     rcx, [rdi+20h]
.text:000000018000A790                 cmp     qword ptr [rdi+38h], 10h
.text:000000018000A795                 jb      short loc_18000A79B
.text:000000018000A797                 mov     rcx, [rdi+20h]  ; Buf1
.text:000000018000A79B
.text:000000018000A79B loc_18000A79B:                          ; CODE XREF: sub_18000A6F0+A5↑j
.text:000000018000A79B                 mov     r14, [rdi+30h]
.text:000000018000A79F                 mov     r8, r14
.text:000000018000A7A2                 cmp     r15, r14
.text:000000018000A7A5                 cmovb   r8, r15         ; Size
.text:000000018000A7A9                 call    memcmp
.text:000000018000A7AE                 test    eax, eax
.text:000000018000A7B0                 jnz     short loc_18000A7C6
.text:000000018000A7B2                 cmp     r14, r15
.text:000000018000A7B5                 jnb     short loc_18000A7BE
.text:000000018000A7B7                 mov     eax, 0FFFFFFFFh
.text:000000018000A7BC                 jmp     short loc_18000A7C6
.text:000000018000A7BE ; ---------------------------------------------------------------------------
.text:000000018000A7BE
.text:000000018000A7BE loc_18000A7BE:                          ; CODE XREF: sub_18000A6F0+C5↑j
.text:000000018000A7BE                 xor     eax, eax
.text:000000018000A7C0                 cmp     r14, r15
.text:000000018000A7C3                 setnbe  al
.text:000000018000A7C6
.text:000000018000A7C6 loc_18000A7C6:                          ; CODE XREF: sub_18000A6F0+C0↑j
.text:000000018000A7C6                                         ; sub_18000A6F0+CC↑j
.text:000000018000A7C6                 shr     eax, 1Fh
.text:000000018000A7C9                 test    al, al
.text:000000018000A7CB                 jz      short loc_18000A7D3
.text:000000018000A7CD                 mov     rdi, [rdi+10h]
.text:000000018000A7D1                 jmp     short loc_18000A7D9
.text:000000018000A7D3 ; ---------------------------------------------------------------------------
.text:000000018000A7D3
.text:000000018000A7D3 loc_18000A7D3:                          ; CODE XREF: sub_18000A6F0+DB↑j
.text:000000018000A7D3                 mov     rbx, rdi
.text:000000018000A7D6                 mov     rdi, [rdi]
.text:000000018000A7D9
.text:000000018000A7D9 loc_18000A7D9:                          ; CODE XREF: sub_18000A6F0+E1↑j
.text:000000018000A7D9                 cmp     byte ptr [rdi+19h], 0
.text:000000018000A7DD                 jz      short loc_18000A780
.text:000000018000A7DF                 mov     r15, [rsp+300h+var_2C8]
.text:000000018000A7E4                 mov     r12, [rsp+300h+var_2C0]
.text:000000018000A7E9
.text:000000018000A7E9 loc_18000A7E9:                          ; CODE XREF: sub_18000A6F0+86↑j
.text:000000018000A7E9                 cmp     byte ptr [rbx+19h], 0
.text:000000018000A7ED                 jnz     loc_18000AAD6
.text:000000018000A7F3                 lea     rdx, [rbx+20h]
.text:000000018000A7F7                 cmp     qword ptr [rbx+38h], 10h
.text:000000018000A7FC                 jb      short loc_18000A802
.text:000000018000A7FE                 mov     rdx, [rbx+20h]  ; Buf2
.text:000000018000A802
.text:000000018000A802 loc_18000A802:                          ; CODE XREF: sub_18000A6F0+10C↑j
.text:000000018000A802                 mov     rcx, rsi
.text:000000018000A805                 cmp     qword ptr [rsi+18h], 10h
.text:000000018000A80A                 jb      short loc_18000A80F
.text:000000018000A80C                 mov     rcx, [rsi]      ; Buf1
.text:000000018000A80F
.text:000000018000A80F loc_18000A80F:                          ; CODE XREF: sub_18000A6F0+11A↑j
.text:000000018000A80F                 mov     r14, [rbx+30h]
.text:000000018000A813                 mov     rdi, [rsi+10h]
.text:000000018000A817                 mov     r8, rdi
.text:000000018000A81A                 cmp     r14, rdi
.text:000000018000A81D                 cmovb   r8, r14         ; Size
.text:000000018000A821                 call    memcmp
.text:000000018000A826                 test    eax, eax
.text:000000018000A828                 jnz     short loc_18000A83E
.text:000000018000A82A                 cmp     rdi, r14
.text:000000018000A82D                 jnb     short loc_18000A836
.text:000000018000A82F                 mov     eax, 0FFFFFFFFh
.text:000000018000A834                 jmp     short loc_18000A83E
.text:000000018000A836 ; ---------------------------------------------------------------------------
.text:000000018000A836
.text:000000018000A836 loc_18000A836:                          ; CODE XREF: sub_18000A6F0+13D↑j
.text:000000018000A836                 xor     eax, eax
.text:000000018000A838                 cmp     rdi, r14
.text:000000018000A83B                 setnbe  al
.text:000000018000A83E
.text:000000018000A83E loc_18000A83E:                          ; CODE XREF: sub_18000A6F0+138↑j
.text:000000018000A83E                                         ; sub_18000A6F0+144↑j
.text:000000018000A83E                 shr     eax, 1Fh
.text:000000018000A841                 mov     edi, [rsp+300h+var_2A0]
.text:000000018000A845                 test    al, al
.text:000000018000A847                 jnz     loc_18000AADA
.text:000000018000A84D                 cmp     rbx, r15
.text:000000018000A850                 jz      loc_18000AADA
.text:000000018000A856                 lea     rdx, [rbx+20h]
.text:000000018000A85A                 cmp     edi, [rdx+20h]
.text:000000018000A85D                 jnz     loc_18000AA27
.text:000000018000A863                 lea     rcx, [rsp+300h+Block]
.text:000000018000A868                 call    sub_180005770
.text:000000018000A86D                 mov     eax, [rbx+44h]
.text:000000018000A870                 mov     [rbp+200h+var_278], eax
.text:000000018000A873                 mov     [rsp+300h+var_2D0], 9
.text:000000018000A87B                 lea     rdx, [rsp+300h+Block]
.text:000000018000A880                 mov     rcx, r12
.text:000000018000A883                 call    sub_180006E20
.text:000000018000A888                 mov     eax, [rbp+200h+var_278]
.text:000000018000A88B                 mov     [r12+20h], eax
.text:000000018000A890                 mov     rdx, [rbp+200h+var_280]
.text:000000018000A894                 cmp     rdx, 10h
.text:000000018000A898                 jb      short loc_18000A8CC
.text:000000018000A89A                 inc     rdx
.text:000000018000A89D                 mov     rcx, [rsp+300h+Block]
.text:000000018000A8A2                 mov     rax, rcx
.text:000000018000A8A5                 cmp     rdx, 1000h
.text:000000018000A8AC                 jb      short loc_18000A8C7
.text:000000018000A8AE                 add     rdx, 27h ; '''
.text:000000018000A8B2                 mov     rcx, [rcx-8]    ; Block
.text:000000018000A8B6                 sub     rax, rcx
.text:000000018000A8B9                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000A8BD                 cmp     rax, 1Fh
.text:000000018000A8C1                 ja      loc_18000AD3B
.text:000000018000A8C7
.text:000000018000A8C7 loc_18000A8C7:                          ; CODE XREF: sub_18000A6F0+1BC↑j
.text:000000018000A8C7                 call    j_j_free
.text:000000018000A8CC
.text:000000018000A8CC loc_18000A8CC:                          ; CODE XREF: sub_18000A6F0+1A8↑j
.text:000000018000A8CC                 mov     rcx, [rbx+10h]
.text:000000018000A8D0                 mov     rdx, rbx
.text:000000018000A8D3                 cmp     byte ptr [rcx+19h], 0
.text:000000018000A8D7                 jz      short loc_18000A8F8
.text:000000018000A8D9                 mov     rax, [rbx+8]
.text:000000018000A8DD                 cmp     byte ptr [rax+19h], 0
.text:000000018000A8E1                 jnz     short loc_18000A90D
.text:000000018000A8E3
.text:000000018000A8E3 loc_18000A8E3:                          ; CODE XREF: sub_18000A6F0+204↓j
.text:000000018000A8E3                 cmp     rbx, [rax+10h]
.text:000000018000A8E7                 jnz     short loc_18000A90D
.text:000000018000A8E9                 mov     rbx, rax
.text:000000018000A8EC                 mov     rax, [rax+8]
.text:000000018000A8F0                 cmp     byte ptr [rax+19h], 0
.text:000000018000A8F4                 jz      short loc_18000A8E3
.text:000000018000A8F6                 jmp     short loc_18000A90D
.text:000000018000A8F8 ; ---------------------------------------------------------------------------
.text:000000018000A8F8
.text:000000018000A8F8 loc_18000A8F8:                          ; CODE XREF: sub_18000A6F0+1E7↑j
.text:000000018000A8F8                 mov     rcx, [rcx]
.text:000000018000A8FB                 cmp     byte ptr [rcx+19h], 0
.text:000000018000A8FF                 jnz     short loc_18000A90D
.text:000000018000A901
.text:000000018000A901 loc_18000A901:                          ; CODE XREF: sub_18000A6F0+21B↓j
.text:000000018000A901                 mov     rax, [rcx]
.text:000000018000A904                 mov     rcx, rax
.text:000000018000A907                 cmp     byte ptr [rax+19h], 0
.text:000000018000A90B                 jz      short loc_18000A901
.text:000000018000A90D
.text:000000018000A90D loc_18000A90D:                          ; CODE XREF: sub_18000A6F0+1F1↑j
.text:000000018000A90D                                         ; sub_18000A6F0+1F7↑j ...
.text:000000018000A90D                 lea     rcx, [r13+8]
.text:000000018000A911                 call    sub_18000B280
.text:000000018000A916                 mov     rbx, rax
.text:000000018000A919                 mov     rdx, [rax+38h]
.text:000000018000A91D                 cmp     rdx, 10h
.text:000000018000A921                 jb      short loc_18000A954
.text:000000018000A923                 mov     rcx, [rax+20h]
.text:000000018000A927                 inc     rdx
.text:000000018000A92A                 cmp     rdx, 1000h
.text:000000018000A931                 jb      short loc_18000A94F
.text:000000018000A933                 add     rdx, 27h ; '''
.text:000000018000A937                 mov     r8, [rcx-8]
.text:000000018000A93B                 sub     rcx, r8
.text:000000018000A93E                 lea     rax, [rcx-8]
.text:000000018000A942                 cmp     rax, 1Fh
.text:000000018000A946                 ja      loc_18000AD3B
.text:000000018000A94C                 mov     rcx, r8         ; Block
.text:000000018000A94F
.text:000000018000A94F loc_18000A94F:                          ; CODE XREF: sub_18000A6F0+241↑j
.text:000000018000A94F                 call    j_j_free
.text:000000018000A954
.text:000000018000A954 loc_18000A954:                          ; CODE XREF: sub_18000A6F0+231↑j
.text:000000018000A954                 xor     r14d, r14d
.text:000000018000A957                 mov     [rbx+30h], r14
.text:000000018000A95B                 mov     qword ptr [rbx+38h], 0Fh
.text:000000018000A963                 mov     [rbx+20h], r14b
.text:000000018000A967                 lea     edx, [r14+48h]
.text:000000018000A96B                 mov     rcx, rbx        ; Block
.text:000000018000A96E                 call    j_j_free
.text:000000018000A973                 mov     ebx, [r12+20h]
.text:000000018000A978                 mov     rdx, r12
.text:000000018000A97B                 lea     rcx, [rsp+300h+Block]
.text:000000018000A980                 call    sub_180005770
.text:000000018000A985                 mov     [rbp+200h+var_278], ebx
.text:000000018000A988                 mov     [rbp+200h+var_274], edi
.text:000000018000A98B                 mov     [rsp+300h+var_2D0], 19h
.text:000000018000A993 ;   try {
.text:000000018000A993                 lea     rcx, [r13+18h]
.text:000000018000A997                 lea     r8, [rsp+300h+Block]
.text:000000018000A99C                 lea     rdx, [rsp+300h+var_2C0]
.text:000000018000A9A1                 call    sub_18000B760
.text:000000018000A9A6                 nop
.text:000000018000A9A6 ;   } // starts at 18000A993
.text:000000018000A9A7                 mov     rdx, [rbp+200h+var_280]
.text:000000018000A9AB                 cmp     rdx, 10h
.text:000000018000A9AF                 jb      short loc_18000A9E4
.text:000000018000A9B1                 inc     rdx
.text:000000018000A9B4                 mov     rcx, [rsp+300h+Block]
.text:000000018000A9B9                 mov     rax, rcx
.text:000000018000A9BC                 cmp     rdx, 1000h
.text:000000018000A9C3                 jb      short loc_18000A9DE
.text:000000018000A9C5                 add     rdx, 27h ; '''
.text:000000018000A9C9                 mov     rcx, [rcx-8]    ; Block
.text:000000018000A9CD                 sub     rax, rcx
.text:000000018000A9D0                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000A9D4                 cmp     rax, 1Fh
.text:000000018000A9D8                 ja      loc_18000AD3B
.text:000000018000A9DE
.text:000000018000A9DE loc_18000A9DE:                          ; CODE XREF: sub_18000A6F0+2D3↑j
.text:000000018000A9DE                 call    j_j_free
.text:000000018000A9E3                 nop
.text:000000018000A9E4
.text:000000018000A9E4 loc_18000A9E4:                          ; CODE XREF: sub_18000A6F0+2BF↑j
.text:000000018000A9E4                 mov     rdx, [rsi+18h]
.text:000000018000A9E8                 cmp     rdx, 10h
.text:000000018000A9EC                 jb      short loc_18000AA1E
.text:000000018000A9EE                 inc     rdx
.text:000000018000A9F1                 mov     rcx, [rsi]
.text:000000018000A9F4                 cmp     rdx, 1000h
.text:000000018000A9FB                 jb      short loc_18000AA19
.text:000000018000A9FD                 add     rdx, 27h ; '''
.text:000000018000AA01                 mov     r8, [rcx-8]
.text:000000018000AA05                 sub     rcx, r8
.text:000000018000AA08                 add     rcx, 0FFFFFFFFFFFFFFF8h
.text:000000018000AA0C                 cmp     rcx, 1Fh
.text:000000018000AA10                 ja      loc_18000ADC7
.text:000000018000AA16                 mov     rcx, r8         ; Block
.text:000000018000AA19
.text:000000018000AA19 loc_18000AA19:                          ; CODE XREF: sub_18000A6F0+30B↑j
.text:000000018000AA19                 call    j_j_free
.text:000000018000AA1E
.text:000000018000AA1E loc_18000AA1E:                          ; CODE XREF: sub_18000A6F0+2FC↑j
.text:000000018000AA1E                 mov     [rsi+10h], r14
.text:000000018000AA22                 jmp     loc_18000AD96
.text:000000018000AA27 ; ---------------------------------------------------------------------------
.text:000000018000AA27
.text:000000018000AA27 loc_18000AA27:                          ; CODE XREF: sub_18000A6F0+16D↑j
.text:000000018000AA27                 mov     r8, [rbx+10h]
.text:000000018000AA2B                 mov     rdx, rbx
.text:000000018000AA2E                 cmp     byte ptr [r8+19h], 0
.text:000000018000AA33                 jz      short loc_18000AA55
.text:000000018000AA35                 mov     rax, [rbx+8]
.text:000000018000AA39                 cmp     byte ptr [rax+19h], 0
.text:000000018000AA3D                 jnz     short loc_18000AA6C
.text:000000018000AA3F                 nop
.text:000000018000AA40
.text:000000018000AA40 loc_18000AA40:                          ; CODE XREF: sub_18000A6F0+361↓j
.text:000000018000AA40                 cmp     rbx, [rax+10h]
.text:000000018000AA44                 jnz     short loc_18000AA6C
.text:000000018000AA46                 mov     rbx, rax
.text:000000018000AA49                 mov     rax, [rax+8]
.text:000000018000AA4D                 cmp     byte ptr [rax+19h], 0
.text:000000018000AA51                 jz      short loc_18000AA40
.text:000000018000AA53                 jmp     short loc_18000AA6C
.text:000000018000AA55 ; ---------------------------------------------------------------------------
.text:000000018000AA55
.text:000000018000AA55 loc_18000AA55:                          ; CODE XREF: sub_18000A6F0+343↑j
.text:000000018000AA55                 mov     r8, [r8]
.text:000000018000AA58                 cmp     byte ptr [r8+19h], 0
.text:000000018000AA5D                 jnz     short loc_18000AA6C
.text:000000018000AA5F                 nop
.text:000000018000AA60
.text:000000018000AA60 loc_18000AA60:                          ; CODE XREF: sub_18000A6F0+37A↓j
.text:000000018000AA60                 mov     rax, [r8]
.text:000000018000AA63                 mov     r8, rax
.text:000000018000AA66                 cmp     byte ptr [rax+19h], 0
.text:000000018000AA6A                 jz      short loc_18000AA60
.text:000000018000AA6C
.text:000000018000AA6C loc_18000AA6C:                          ; CODE XREF: sub_18000A6F0+34D↑j
.text:000000018000AA6C                                         ; sub_18000A6F0+354↑j ...
.text:000000018000AA6C                 lea     rcx, [r13+8]
.text:000000018000AA70                 call    sub_18000B280
.text:000000018000AA75                 mov     rbx, rax
.text:000000018000AA78                 mov     rdx, [rax+38h]
.text:000000018000AA7C                 cmp     rdx, 10h
.text:000000018000AA80                 jb      short loc_18000AAB3
.text:000000018000AA82                 mov     rcx, [rax+20h]
.text:000000018000AA86                 inc     rdx
.text:000000018000AA89                 cmp     rdx, 1000h
.text:000000018000AA90                 jb      short loc_18000AAAE
.text:000000018000AA92                 add     rdx, 27h ; '''
.text:000000018000AA96                 mov     r8, [rcx-8]
.text:000000018000AA9A                 sub     rcx, r8
.text:000000018000AA9D                 lea     rax, [rcx-8]
.text:000000018000AAA1                 cmp     rax, 1Fh
.text:000000018000AAA5                 ja      loc_18000AD3B
.text:000000018000AAAB                 mov     rcx, r8         ; Block
.text:000000018000AAAE
.text:000000018000AAAE loc_18000AAAE:                          ; CODE XREF: sub_18000A6F0+3A0↑j
.text:000000018000AAAE                 call    j_j_free
.text:000000018000AAB3
.text:000000018000AAB3 loc_18000AAB3:                          ; CODE XREF: sub_18000A6F0+390↑j
.text:000000018000AAB3                 mov     qword ptr [rbx+30h], 0
.text:000000018000AABB                 mov     qword ptr [rbx+38h], 0Fh
.text:000000018000AAC3                 mov     byte ptr [rbx+20h], 0
.text:000000018000AAC7                 mov     edx, 48h ; 'H'
.text:000000018000AACC                 mov     rcx, rbx        ; Block
.text:000000018000AACF                 call    j_j_free
.text:000000018000AAD4                 jmp     short loc_18000AADA
.text:000000018000AAD6 ; ---------------------------------------------------------------------------
.text:000000018000AAD6
.text:000000018000AAD6 loc_18000AAD6:                          ; CODE XREF: sub_18000A6F0+FD↑j
.text:000000018000AAD6                 mov     edi, [rsp+300h+var_2A0]
.text:000000018000AADA
.text:000000018000AADA loc_18000AADA:                          ; CODE XREF: sub_18000A6F0+157↑j
.text:000000018000AADA                                         ; sub_18000A6F0+160↑j ...
.text:000000018000AADA                 mov     rdx, rsi
.text:000000018000AADD                 lea     rcx, [rbp+200h+var_270]
.text:000000018000AAE1                 call    sub_180005770
.text:000000018000AAE6                 nop
.text:000000018000AAE7 ;   try {
.text:000000018000AAE7                 lea     rdx, [rbp+200h+var_270]
.text:000000018000AAEB                 lea     rcx, [rsp+300h+Block]
.text:000000018000AAF0                 call    sub_180005770
.text:000000018000AAF5                 mov     eax, [r13+0]
.text:000000018000AAF9                 mov     [rbp+200h+var_278], eax
.text:000000018000AAFC                 mov     [rsp+300h+var_2D0], 5
.text:000000018000AB04                 lea     rdx, [rsp+300h+Block]
.text:000000018000AB09                 mov     rcx, r12
.text:000000018000AB0C                 call    sub_180006E20
.text:000000018000AB11                 mov     eax, [rbp+200h+var_278]
.text:000000018000AB14                 mov     [r12+20h], eax
.text:000000018000AB19                 mov     rdx, [rbp+200h+var_280]
.text:000000018000AB1D                 cmp     rdx, 10h
.text:000000018000AB21                 jb      short loc_18000AB55
.text:000000018000AB23                 inc     rdx
.text:000000018000AB26                 mov     rcx, [rsp+300h+Block]
.text:000000018000AB2B                 mov     rax, rcx
.text:000000018000AB2E                 cmp     rdx, 1000h
.text:000000018000AB35                 jb      short loc_18000AB50
.text:000000018000AB37                 add     rdx, 27h ; '''
.text:000000018000AB3B                 mov     rcx, [rcx-8]    ; Block
.text:000000018000AB3F                 sub     rax, rcx
.text:000000018000AB42                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000AB46                 cmp     rax, 1Fh
.text:000000018000AB4A                 ja      loc_18000ACFC
.text:000000018000AB50
.text:000000018000AB50 loc_18000AB50:                          ; CODE XREF: sub_18000A6F0+445↑j
.text:000000018000AB50                 call    j_j_free
.text:000000018000AB55
.text:000000018000AB55 loc_18000AB55:                          ; CODE XREF: sub_18000A6F0+431↑j
.text:000000018000AB55                 mov     ebx, [r13+0]
.text:000000018000AB59                 lea     rdx, [rbp+200h+var_270]
.text:000000018000AB5D                 lea     rcx, [rsp+300h+Block]
.text:000000018000AB62                 call    sub_180005770
.text:000000018000AB67                 mov     [rbp+200h+var_278], ebx
.text:000000018000AB6A                 mov     [rbp+200h+var_274], edi
.text:000000018000AB6D                 mov     [rsp+300h+var_2D0], 7
.text:000000018000AB6D ;   } // starts at 18000AAE7
.text:000000018000AB75 ;   try {
.text:000000018000AB75                 lea     rcx, [r13+18h]
.text:000000018000AB79                 lea     r8, [rsp+300h+Block]
.text:000000018000AB7E                 lea     rdx, [rsp+300h+var_2C0]
.text:000000018000AB83                 call    sub_18000B760
.text:000000018000AB88                 lea     rdx, [rbp+200h+var_270]
.text:000000018000AB8C                 cmp     [rbp+200h+var_258], 10h
.text:000000018000AB91                 cmovnb  rdx, [rbp+200h+var_270]
.text:000000018000AB96                 mov     r8d, [r13+0]
.text:000000018000AB9A                 mov     rcx, [r13+28h]
.text:000000018000AB9E                 call    sub_18000BD90
.text:000000018000ABA3                 test    eax, eax
.text:000000018000ABA5                 jns     short loc_18000ABE5
.text:000000018000ABA7                 lea     r9, [rbp+200h+var_270]
.text:000000018000ABAB                 cmp     [rbp+200h+var_258], 10h
.text:000000018000ABB0                 cmovnb  r9, [rbp+200h+var_270]
.text:000000018000ABB5                 mov     eax, [r13+0]
.text:000000018000ABB9                 mov     [rsp+300h+var_2E0], eax
.text:000000018000ABBD                 lea     r8, aErrorMappingCd ; "Error mapping CDA name %s to ID %d"
.text:000000018000ABC4                 mov     edx, 200h       ; BufferCount
.text:000000018000ABC9                 lea     rcx, [rbp+200h+Buffer] ; Buffer
.text:000000018000ABCD                 call    sub_1800029E0
.text:000000018000ABD2                 call    sub_180007430
.text:000000018000ABD7                 mov     rcx, rax
.text:000000018000ABDA                 lea     rdx, [rbp+200h+Buffer]
.text:000000018000ABDE                 call    sub_180007930
.text:000000018000ABE3                 jmp     short loc_18000AC37
.text:000000018000ABE5 ; ---------------------------------------------------------------------------
.text:000000018000ABE5
.text:000000018000ABE5 loc_18000ABE5:                          ; CODE XREF: sub_18000A6F0+4B5↑j
.text:000000018000ABE5                 lea     rdx, [rsp+300h+var_2A0]
.text:000000018000ABEA                 mov     rcx, [r13+28h]
.text:000000018000ABEE                 call    sub_18000BD50
.text:000000018000ABF3                 lea     r9, [rbp+200h+var_270]
.text:000000018000ABF7                 cmp     [rbp+200h+var_258], 10h
.text:000000018000ABFC                 cmovnb  r9, [rbp+200h+var_270]
.text:000000018000AC01                 mov     eax, [rsp+300h+var_2A0]
.text:000000018000AC05                 mov     [rsp+300h+var_2D8], eax
.text:000000018000AC09                 mov     eax, [r13+0]
.text:000000018000AC0D                 mov     [rsp+300h+var_2E0], eax
.text:000000018000AC11                 lea     r8, aCdaNameSMapped ; "CDA name %s mapped to ID %d [requestId="...
.text:000000018000AC18                 mov     edx, 200h       ; BufferCount
.text:000000018000AC1D                 lea     rcx, [rbp+200h+Buffer] ; Buffer
.text:000000018000AC21                 call    sub_1800029E0
.text:000000018000AC26                 call    sub_180007430
.text:000000018000AC2B                 mov     rcx, rax
.text:000000018000AC2E                 lea     rdx, [rbp+200h+Buffer]
.text:000000018000AC32                 call    sub_180007F50
.text:000000018000AC37
.text:000000018000AC37 loc_18000AC37:                          ; CODE XREF: sub_18000A6F0+4F3↑j
.text:000000018000AC37                 mov     r9d, 1
.text:000000018000AC3D                 mov     r8d, edi
.text:000000018000AC40                 mov     edx, [r13+0]
.text:000000018000AC44                 mov     rcx, [r13+28h]
.text:000000018000AC48                 call    sub_18000BC60
.text:000000018000AC4D                 test    eax, eax
.text:000000018000AC4F                 jns     short loc_18000AC81
.text:000000018000AC51                 mov     [rsp+300h+var_2E0], edi
.text:000000018000AC55                 mov     r9d, [r13+0]
.text:000000018000AC59                 lea     r8, aErrorCreatingC ; "Error creating client data area with id"...
.text:000000018000AC60                 mov     edx, 200h       ; BufferCount
.text:000000018000AC65                 lea     rcx, [rbp+200h+Buffer] ; Buffer
.text:000000018000AC69                 call    sub_1800029E0
.text:000000018000AC6E                 call    sub_180007430
.text:000000018000AC73                 mov     rcx, rax
.text:000000018000AC76                 lea     rdx, [rbp+200h+Buffer]
.text:000000018000AC7A                 call    sub_180007930
.text:000000018000AC7F                 jmp     short loc_18000ACC5
.text:000000018000AC81 ; ---------------------------------------------------------------------------
.text:000000018000AC81
.text:000000018000AC81 loc_18000AC81:                          ; CODE XREF: sub_18000A6F0+55F↑j
.text:000000018000AC81                 lea     rdx, [rsp+300h+var_2A0]
.text:000000018000AC86                 mov     rcx, [r13+28h]
.text:000000018000AC8A                 call    sub_18000BD50
.text:000000018000AC8F                 mov     eax, [rsp+300h+var_2A0]
.text:000000018000AC93                 mov     [rsp+300h+var_2D8], eax
.text:000000018000AC97                 mov     [rsp+300h+var_2E0], edi
.text:000000018000AC9B                 mov     r9d, [r13+0]
.text:000000018000AC9F                 lea     r8, aClientDataArea ; "Client data area created with id=%d (si"...
.text:000000018000ACA6                 mov     edx, 200h       ; BufferCount
.text:000000018000ACAB                 lea     rcx, [rbp+200h+Buffer] ; Buffer
.text:000000018000ACAF                 call    sub_1800029E0
.text:000000018000ACB4                 call    sub_180007430
.text:000000018000ACB9                 mov     rcx, rax
.text:000000018000ACBC                 lea     rdx, [rbp+200h+Buffer]
.text:000000018000ACC0                 call    sub_180007F50
.text:000000018000ACC5
.text:000000018000ACC5 loc_18000ACC5:                          ; CODE XREF: sub_18000A6F0+58F↑j
.text:000000018000ACC5                 inc     dword ptr [r13+0]
.text:000000018000ACC5 ;   } // starts at 18000AB75
.text:000000018000ACC9 ;   try {
.text:000000018000ACC9                 mov     rdx, [rbp+200h+var_280]
.text:000000018000ACCD                 cmp     rdx, 10h
.text:000000018000ACD1                 jb      short loc_18000AD09
.text:000000018000ACD3                 inc     rdx
.text:000000018000ACD6                 mov     rcx, [rsp+300h+Block] ; Block
.text:000000018000ACDB                 mov     rax, rcx
.text:000000018000ACDE                 cmp     rdx, 1000h
.text:000000018000ACE5                 jb      short loc_18000AD03
.text:000000018000ACE7                 add     rdx, 27h ; '''
.text:000000018000ACEB                 mov     rcx, [rcx-8]
.text:000000018000ACEF                 sub     rax, rcx
.text:000000018000ACF2                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000ACF6                 cmp     rax, 1Fh
.text:000000018000ACFA                 jbe     short loc_18000AD03
.text:000000018000ACFC
.text:000000018000ACFC loc_18000ACFC:                          ; CODE XREF: sub_18000A6F0+45A↑j
.text:000000018000ACFC                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000AD02                 int     3               ; Trap to Debugger
.text:000000018000AD03 ; ---------------------------------------------------------------------------
.text:000000018000AD03
.text:000000018000AD03 loc_18000AD03:                          ; CODE XREF: sub_18000A6F0+5F5↑j
.text:000000018000AD03                                         ; sub_18000A6F0+60A↑j
.text:000000018000AD03                 call    j_j_free
.text:000000018000AD08                 nop
.text:000000018000AD09
.text:000000018000AD09 loc_18000AD09:                          ; CODE XREF: sub_18000A6F0+5E1↑j
.text:000000018000AD09                 mov     rdx, [rbp+200h+var_258]
.text:000000018000AD0D                 cmp     rdx, 10h
.text:000000018000AD11                 jb      short loc_18000AD47
.text:000000018000AD13                 inc     rdx
.text:000000018000AD16                 mov     rcx, [rbp+200h+var_270] ; Block
.text:000000018000AD1A                 mov     rax, rcx
.text:000000018000AD1D                 cmp     rdx, 1000h
.text:000000018000AD24                 jb      short loc_18000AD42
.text:000000018000AD26                 add     rdx, 27h ; '''
.text:000000018000AD2A                 mov     rcx, [rcx-8]
.text:000000018000AD2E                 sub     rax, rcx
.text:000000018000AD31                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000AD35                 cmp     rax, 1Fh
.text:000000018000AD39                 jbe     short loc_18000AD42
.text:000000018000AD3B
.text:000000018000AD3B loc_18000AD3B:                          ; CODE XREF: sub_18000A6F0+1D1↑j
.text:000000018000AD3B                                         ; sub_18000A6F0+256↑j ...
.text:000000018000AD3B                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000AD41                 int     3               ; Trap to Debugger
.text:000000018000AD42 ; ---------------------------------------------------------------------------
.text:000000018000AD42
.text:000000018000AD42 loc_18000AD42:                          ; CODE XREF: sub_18000A6F0+634↑j
.text:000000018000AD42                                         ; sub_18000A6F0+649↑j
.text:000000018000AD42                 call    j_j_free
.text:000000018000AD47
.text:000000018000AD47 loc_18000AD47:                          ; CODE XREF: sub_18000A6F0+621↑j
.text:000000018000AD47                 movdqa  xmm0, cs:xmmword_180013C70
.text:000000018000AD4F                 movdqu  xmmword ptr [rbp-60h], xmm0
.text:000000018000AD54                 mov     byte ptr [rbp+200h+var_270], 0
.text:000000018000AD58                 mov     rdx, [rsi+18h]
.text:000000018000AD5C                 cmp     rdx, 10h
.text:000000018000AD60                 jb      short loc_18000AD8E
.text:000000018000AD62                 inc     rdx
.text:000000018000AD65                 mov     rcx, [rsi]
.text:000000018000AD68                 cmp     rdx, 1000h
.text:000000018000AD6F                 jb      short loc_18000AD89
.text:000000018000AD71                 add     rdx, 27h ; '''
.text:000000018000AD75                 mov     r8, [rcx-8]
.text:000000018000AD79                 sub     rcx, r8
.text:000000018000AD7C                 lea     rax, [rcx-8]
.text:000000018000AD80                 cmp     rax, 1Fh
.text:000000018000AD84                 ja      short loc_18000ADC7
.text:000000018000AD86                 mov     rcx, r8         ; Block
.text:000000018000AD89
.text:000000018000AD89 loc_18000AD89:                          ; CODE XREF: sub_18000A6F0+67F↑j
.text:000000018000AD89                 call    j_j_free
.text:000000018000AD8E
.text:000000018000AD8E loc_18000AD8E:                          ; CODE XREF: sub_18000A6F0+670↑j
.text:000000018000AD8E                 mov     qword ptr [rsi+10h], 0
.text:000000018000AD96
.text:000000018000AD96 loc_18000AD96:                          ; CODE XREF: sub_18000A6F0+332↑j
.text:000000018000AD96                 mov     rax, r12
.text:000000018000AD99                 mov     byte ptr [rsi], 0
.text:000000018000AD9C                 mov     qword ptr [rsi+18h], 0Fh
.text:000000018000ADA4                 mov     rcx, [rbp+200h+var_50]
.text:000000018000ADAB                 xor     rcx, rsp        ; StackCookie
.text:000000018000ADAB ;   } // starts at 18000ACC9
.text:000000018000ADAE                 call    __security_check_cookie
.text:000000018000ADB3                 add     rsp, 2C8h
.text:000000018000ADBA                 pop     r15
.text:000000018000ADBC                 pop     r14
.text:000000018000ADBE                 pop     r13
.text:000000018000ADC0                 pop     r12
.text:000000018000ADC2                 pop     rdi
.text:000000018000ADC3                 pop     rsi
.text:000000018000ADC4                 pop     rbx
.text:000000018000ADC5                 pop     rbp
.text:000000018000ADC6                 retn
.text:000000018000ADC7 ; ---------------------------------------------------------------------------
.text:000000018000ADC7
.text:000000018000ADC7 loc_18000ADC7:                          ; CODE XREF: sub_18000A6F0+320↑j
.text:000000018000ADC7                                         ; sub_18000A6F0+694↑j
.text:000000018000ADC7                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000ADC7 ; ---------------------------------------------------------------------------
.text:000000018000ADCD                 db 0CCh
.text:000000018000ADCD ; } // starts at 18000A6F0
.text:000000018000ADCD sub_18000A6F0   endp
.text:000000018000ADCD
.text:000000018000ADCE algn_18000ADCE:                         ; DATA XREF: .pdata:000000018001CA20↓o
.text:000000018000ADCE                 align 10h
.text:000000018000ADD0
.text:000000018000ADD0 ; =============== S U B R O U T I N E =======================================
.text:000000018000ADD0
.text:000000018000ADD0
.text:000000018000ADD0 sub_18000ADD0   proc near               ; CODE XREF: sub_1800034B0+215↑p
.text:000000018000ADD0                                         ; sub_1800034B0+C9F↑p ...
.text:000000018000ADD0
.text:000000018000ADD0 var_A8          = xmmword ptr -0A8h
.text:000000018000ADD0 var_98          = qword ptr -98h
.text:000000018000ADD0 var_88          = xmmword ptr -88h
.text:000000018000ADD0 var_70          = qword ptr -70h
.text:000000018000ADD0 Block           = qword ptr -68h
.text:000000018000ADD0 var_50          = qword ptr -50h
.text:000000018000ADD0 var_48          = qword ptr -48h
.text:000000018000ADD0 var_40          = qword ptr -40h
.text:000000018000ADD0 arg_10          = qword ptr  18h
.text:000000018000ADD0
.text:000000018000ADD0 ; __unwind { // __GSHandlerCheck_EH4
.text:000000018000ADD0                 mov     [rsp+arg_10], rbx
.text:000000018000ADD5                 push    rbp
.text:000000018000ADD6                 push    rsi
.text:000000018000ADD7                 push    rdi
.text:000000018000ADD8                 push    r12
.text:000000018000ADDA                 push    r13
.text:000000018000ADDC                 push    r14
.text:000000018000ADDE                 push    r15
.text:000000018000ADE0                 sub     rsp, 90h
.text:000000018000ADE7                 mov     rax, cs:__security_cookie
.text:000000018000ADEE                 xor     rax, rsp
.text:000000018000ADF1                 mov     [rsp+0C8h+var_40], rax
.text:000000018000ADF9                 mov     rsi, rdx
.text:000000018000ADFC                 mov     r13, rcx
.text:000000018000ADFF                 mov     [rsp+0C8h+var_70], rdx
.text:000000018000AE04                 xor     r12d, r12d
.text:000000018000AE07                 mov     r8, rdx
.text:000000018000AE0A                 lea     rdx, [rsp+0C8h+var_A8]
.text:000000018000AE0F                 add     rcx, 18h
.text:000000018000AE13                 call    sub_18000B1C0
.text:000000018000AE18                 mov     rdi, [rsp+0C8h+var_98]
.text:000000018000AE1D                 cmp     [rdi+19h], r12b
.text:000000018000AE21                 jnz     loc_18000B12E
.text:000000018000AE27                 lea     rdx, [rdi+20h]
.text:000000018000AE2B                 cmp     qword ptr [rdi+38h], 10h
.text:000000018000AE30                 jb      short loc_18000AE36
.text:000000018000AE32                 mov     rdx, [rdi+20h]  ; Buf2
.text:000000018000AE36
.text:000000018000AE36 loc_18000AE36:                          ; CODE XREF: sub_18000ADD0+60↑j
.text:000000018000AE36                 mov     rcx, rsi
.text:000000018000AE39                 cmp     qword ptr [rsi+18h], 10h
.text:000000018000AE3E                 jb      short loc_18000AE43
.text:000000018000AE40                 mov     rcx, [rsi]      ; Buf1
.text:000000018000AE43
.text:000000018000AE43 loc_18000AE43:                          ; CODE XREF: sub_18000ADD0+6E↑j
.text:000000018000AE43                 mov     rbp, [rdi+30h]
.text:000000018000AE47                 mov     rbx, [rsi+10h]
.text:000000018000AE4B                 mov     r8, rbx
.text:000000018000AE4E                 cmp     rbp, rbx
.text:000000018000AE51                 cmovb   r8, rbp         ; Size
.text:000000018000AE55                 call    memcmp
.text:000000018000AE5A                 test    eax, eax
.text:000000018000AE5C                 jnz     short loc_18000AE70
.text:000000018000AE5E                 cmp     rbx, rbp
.text:000000018000AE61                 jnb     short loc_18000AE6A
.text:000000018000AE63                 mov     eax, 0FFFFFFFFh
.text:000000018000AE68                 jmp     short loc_18000AE70
.text:000000018000AE6A ; ---------------------------------------------------------------------------
.text:000000018000AE6A
.text:000000018000AE6A loc_18000AE6A:                          ; CODE XREF: sub_18000ADD0+91↑j
.text:000000018000AE6A                 mov     eax, r12d
.text:000000018000AE6D                 setnbe  al
.text:000000018000AE70
.text:000000018000AE70 loc_18000AE70:                          ; CODE XREF: sub_18000ADD0+8C↑j
.text:000000018000AE70                                         ; sub_18000ADD0+98↑j
.text:000000018000AE70                 shr     eax, 1Fh
.text:000000018000AE73                 test    al, al
.text:000000018000AE75                 jnz     loc_18000B12E
.text:000000018000AE7B                 cmp     rdi, [r13+18h]
.text:000000018000AE7F                 jz      loc_18000B12E
.text:000000018000AE85                 mov     r8, rsi
.text:000000018000AE88                 lea     rdx, [rsp+0C8h+var_A8]
.text:000000018000AE8D                 lea     rcx, [r13+18h]
.text:000000018000AE91                 call    sub_18000B1C0
.text:000000018000AE96                 mov     r14, [rsp+0C8h+var_98]
.text:000000018000AE9B                 cmp     byte ptr [r14+19h], 0
.text:000000018000AEA0                 jnz     loc_18000B19E
.text:000000018000AEA6                 lea     rdx, [r14+20h]
.text:000000018000AEAA                 cmp     qword ptr [r14+38h], 10h
.text:000000018000AEAF                 jb      short loc_18000AEB5
.text:000000018000AEB1                 mov     rdx, [r14+20h]  ; Buf2
.text:000000018000AEB5
.text:000000018000AEB5 loc_18000AEB5:                          ; CODE XREF: sub_18000ADD0+DF↑j
.text:000000018000AEB5                 mov     rcx, rsi
.text:000000018000AEB8                 cmp     qword ptr [rsi+18h], 10h
.text:000000018000AEBD                 jb      short loc_18000AEC2
.text:000000018000AEBF                 mov     rcx, [rsi]      ; Buf1
.text:000000018000AEC2
.text:000000018000AEC2 loc_18000AEC2:                          ; CODE XREF: sub_18000ADD0+ED↑j
.text:000000018000AEC2                 mov     rbp, [r14+30h]
.text:000000018000AEC6                 mov     rbx, [rsi+10h]
.text:000000018000AECA                 mov     r8, rbx
.text:000000018000AECD                 cmp     rbp, rbx
.text:000000018000AED0                 cmovb   r8, rbp         ; Size
.text:000000018000AED4                 call    memcmp
.text:000000018000AED9                 test    eax, eax
.text:000000018000AEDB                 jnz     short loc_18000AEEF
.text:000000018000AEDD                 cmp     rbx, rbp
.text:000000018000AEE0                 jnb     short loc_18000AEE9
.text:000000018000AEE2                 mov     eax, 0FFFFFFFFh
.text:000000018000AEE7                 jmp     short loc_18000AEEF
.text:000000018000AEE9 ; ---------------------------------------------------------------------------
.text:000000018000AEE9
.text:000000018000AEE9 loc_18000AEE9:                          ; CODE XREF: sub_18000ADD0+110↑j
.text:000000018000AEE9                 mov     eax, r12d
.text:000000018000AEEC                 setnbe  al
.text:000000018000AEEF
.text:000000018000AEEF loc_18000AEEF:                          ; CODE XREF: sub_18000ADD0+10B↑j
.text:000000018000AEEF                                         ; sub_18000ADD0+117↑j
.text:000000018000AEEF                 shr     eax, 1Fh
.text:000000018000AEF2                 test    al, al
.text:000000018000AEF4                 jnz     loc_18000B19E
.text:000000018000AEFA                 mov     rbx, [r14+40h]
.text:000000018000AEFE                 mov     rdx, rsi
.text:000000018000AF01                 lea     rcx, [rsp+0C8h+Block]
.text:000000018000AF06                 call    sub_180005770
.text:000000018000AF0B                 mov     [rsp+0C8h+var_48], rbx
.text:000000018000AF13                 mov     r8, [rdi+10h]
.text:000000018000AF17                 mov     rdx, rdi
.text:000000018000AF1A                 cmp     byte ptr [r8+19h], 0
.text:000000018000AF1F                 jz      short loc_18000AF45
.text:000000018000AF21                 mov     rax, [rdi+8]
.text:000000018000AF25                 cmp     byte ptr [rax+19h], 0
.text:000000018000AF29                 jnz     short loc_18000AF5E
.text:000000018000AF2B                 nop     dword ptr [rax+rax+00h]
.text:000000018000AF30
.text:000000018000AF30 loc_18000AF30:                          ; CODE XREF: sub_18000ADD0+171↓j
.text:000000018000AF30                 cmp     rdi, [rax+10h]
.text:000000018000AF34                 jnz     short loc_18000AF5E
.text:000000018000AF36                 mov     rdi, rax
.text:000000018000AF39                 mov     rax, [rax+8]
.text:000000018000AF3D                 cmp     byte ptr [rax+19h], 0
.text:000000018000AF41                 jz      short loc_18000AF30
.text:000000018000AF43                 jmp     short loc_18000AF5E
.text:000000018000AF45 ; ---------------------------------------------------------------------------
.text:000000018000AF45
.text:000000018000AF45 loc_18000AF45:                          ; CODE XREF: sub_18000ADD0+14F↑j
.text:000000018000AF45                 mov     r8, [r8]
.text:000000018000AF48                 cmp     byte ptr [r8+19h], 0
.text:000000018000AF4D                 jnz     short loc_18000AF5E
.text:000000018000AF4F                 mov     rdx, rdi
.text:000000018000AF52
.text:000000018000AF52 loc_18000AF52:                          ; CODE XREF: sub_18000ADD0+18C↓j
.text:000000018000AF52                 mov     rax, [r8]
.text:000000018000AF55                 mov     r8, rax
.text:000000018000AF58                 cmp     byte ptr [rax+19h], 0
.text:000000018000AF5C                 jz      short loc_18000AF52
.text:000000018000AF5E
.text:000000018000AF5E loc_18000AF5E:                          ; CODE XREF: sub_18000ADD0+159↑j
.text:000000018000AF5E                                         ; sub_18000ADD0+164↑j ...
.text:000000018000AF5E                 lea     rcx, [r13+18h]
.text:000000018000AF62                 call    sub_18000B280
.text:000000018000AF67                 mov     rbx, rax
.text:000000018000AF6A                 mov     rdx, [rax+38h]
.text:000000018000AF6E                 cmp     rdx, 10h
.text:000000018000AF72                 jb      short loc_18000AFA5
.text:000000018000AF74                 mov     rcx, [rax+20h]
.text:000000018000AF78                 inc     rdx
.text:000000018000AF7B                 cmp     rdx, 1000h
.text:000000018000AF82                 jb      short loc_18000AFA0
.text:000000018000AF84                 add     rdx, 27h ; '''
.text:000000018000AF88                 mov     r8, [rcx-8]
.text:000000018000AF8C                 sub     rcx, r8
.text:000000018000AF8F                 lea     rax, [rcx-8]
.text:000000018000AF93                 cmp     rax, 1Fh
.text:000000018000AF97                 ja      loc_18000B087
.text:000000018000AF9D                 mov     rcx, r8         ; Block
.text:000000018000AFA0
.text:000000018000AFA0 loc_18000AFA0:                          ; CODE XREF: sub_18000ADD0+1B2↑j
.text:000000018000AFA0                 call    j_j_free
.text:000000018000AFA5
.text:000000018000AFA5 loc_18000AFA5:                          ; CODE XREF: sub_18000ADD0+1A2↑j
.text:000000018000AFA5                 mov     [rbx+30h], r12
.text:000000018000AFA9                 mov     qword ptr [rbx+38h], 0Fh
.text:000000018000AFB1                 mov     byte ptr [rbx+20h], 0
.text:000000018000AFB5                 mov     edx, 48h ; 'H'
.text:000000018000AFBA                 mov     rcx, rbx        ; Block
.text:000000018000AFBD                 call    j_j_free
.text:000000018000AFC2                 add     r13, 8
.text:000000018000AFC6                 mov     rbx, [r13+0]
.text:000000018000AFCA                 mov     qword ptr [rsp+0C8h+var_88], r13
.text:000000018000AFCF                 mov     qword ptr [rsp+0C8h+var_88+8], r12
.text:000000018000AFD4                 mov     ecx, 48h ; 'H'  ; Size
.text:000000018000AFD9                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000AFDE                 mov     r12, rax
.text:000000018000AFE1                 mov     qword ptr [rsp+0C8h+var_88+8], rax
.text:000000018000AFE6                 lea     rdx, [rsp+0C8h+Block]
.text:000000018000AFEB                 lea     rcx, [rax+20h]
.text:000000018000AFEF                 call    sub_180005770
.text:000000018000AFF4                 mov     rax, [rsp+0C8h+var_48]
.text:000000018000AFFC                 mov     [r12+40h], rax
.text:000000018000B001                 mov     [r12], rbx
.text:000000018000B005                 mov     [r12+8], rbx
.text:000000018000B00A                 mov     [r12+10h], rbx
.text:000000018000B00F                 mov     word ptr [r12+18h], 0
.text:000000018000B017                 mov     rax, [r13+0]
.text:000000018000B01B                 mov     rbx, [rax+8]
.text:000000018000B01F                 mov     qword ptr [rsp+0C8h+var_A8], rbx
.text:000000018000B024                 mov     dword ptr [rsp+0C8h+var_A8+8], 0
.text:000000018000B02C                 cmp     byte ptr [rbx+19h], 0
.text:000000018000B030                 jnz     loc_18000B0BC
.text:000000018000B036                 mov     r15, [r12+38h]
.text:000000018000B03B                 mov     rbp, [r12+30h]
.text:000000018000B040
.text:000000018000B040 loc_18000B040:                          ; CODE XREF: sub_18000ADD0+2EA↓j
.text:000000018000B040                 mov     qword ptr [rsp+0C8h+var_A8], rbx
.text:000000018000B045                 lea     rdx, [rbx+20h]
.text:000000018000B049                 cmp     qword ptr [rbx+38h], 10h
.text:000000018000B04E                 jb      short loc_18000B054
.text:000000018000B050                 mov     rdx, [rbx+20h]  ; Buf2
.text:000000018000B054
.text:000000018000B054 loc_18000B054:                          ; CODE XREF: sub_18000ADD0+27E↑j
.text:000000018000B054                 lea     rcx, [r12+20h]
.text:000000018000B059                 cmp     r15, 10h
.text:000000018000B05D                 jb      short loc_18000B064
.text:000000018000B05F                 mov     rcx, [r12+20h]  ; Buf1
.text:000000018000B064
.text:000000018000B064 loc_18000B064:                          ; CODE XREF: sub_18000ADD0+28D↑j
.text:000000018000B064                 mov     rdi, [rbx+30h]
.text:000000018000B068                 mov     r8, rbp
.text:000000018000B06B                 cmp     rdi, rbp
.text:000000018000B06E                 cmovb   r8, rdi         ; Size
.text:000000018000B072                 call    memcmp
.text:000000018000B077                 test    eax, eax
.text:000000018000B079                 jnz     short loc_18000B096
.text:000000018000B07B                 cmp     rbp, rdi
.text:000000018000B07E                 jnb     short loc_18000B08E
.text:000000018000B080                 mov     eax, 0FFFFFFFFh
.text:000000018000B085                 jmp     short loc_18000B096
.text:000000018000B087 ; ---------------------------------------------------------------------------
.text:000000018000B087
.text:000000018000B087 loc_18000B087:                          ; CODE XREF: sub_18000ADD0+1C7↑j
.text:000000018000B087                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000B08D                 nop
.text:000000018000B08E
.text:000000018000B08E loc_18000B08E:                          ; CODE XREF: sub_18000ADD0+2AE↑j
.text:000000018000B08E                 xor     eax, eax
.text:000000018000B090                 cmp     rbp, rdi
.text:000000018000B093                 setnbe  al
.text:000000018000B096
.text:000000018000B096 loc_18000B096:                          ; CODE XREF: sub_18000ADD0+2A9↑j
.text:000000018000B096                                         ; sub_18000ADD0+2B5↑j
.text:000000018000B096                 shr     eax, 1Fh
.text:000000018000B099                 test    al, al
.text:000000018000B09B                 jz      short loc_18000B0AA
.text:000000018000B09D                 mov     dword ptr [rsp+0C8h+var_A8+8], 1
.text:000000018000B0A5                 mov     rbx, [rbx]
.text:000000018000B0A8                 jmp     short loc_18000B0B6
.text:000000018000B0AA ; ---------------------------------------------------------------------------
.text:000000018000B0AA
.text:000000018000B0AA loc_18000B0AA:                          ; CODE XREF: sub_18000ADD0+2CB↑j
.text:000000018000B0AA                 mov     dword ptr [rsp+0C8h+var_A8+8], 0
.text:000000018000B0B2                 mov     rbx, [rbx+10h]
.text:000000018000B0B6
.text:000000018000B0B6 loc_18000B0B6:                          ; CODE XREF: sub_18000ADD0+2D8↑j
.text:000000018000B0B6                 cmp     byte ptr [rbx+19h], 0
.text:000000018000B0BA                 jz      short loc_18000B040
.text:000000018000B0BC
.text:000000018000B0BC loc_18000B0BC:                          ; CODE XREF: sub_18000ADD0+260↑j
.text:000000018000B0BC                 mov     rax, 38E38E38E38E38Eh
.text:000000018000B0C6                 cmp     [r13+8], rax
.text:000000018000B0CA                 jz      loc_18000B1B3
.text:000000018000B0D0                 movups  xmm0, [rsp+0C8h+var_A8]
.text:000000018000B0D5                 movaps  [rsp+0C8h+var_88], xmm0
.text:000000018000B0DA                 mov     r8, r12
.text:000000018000B0DD                 lea     rdx, [rsp+0C8h+var_88]
.text:000000018000B0E2                 mov     rcx, r13
.text:000000018000B0E5                 call    sub_180006BA0
.text:000000018000B0EA                 nop
.text:000000018000B0EB                 mov     rdx, [rsp+0C8h+var_50]
.text:000000018000B0F0                 cmp     rdx, 10h
.text:000000018000B0F4                 jb      short loc_18000B12B
.text:000000018000B0F6                 inc     rdx
.text:000000018000B0F9                 mov     rcx, [rsp+0C8h+Block] ; Block
.text:000000018000B0FE                 mov     rax, rcx
.text:000000018000B101                 cmp     rdx, 1000h
.text:000000018000B108                 jb      short loc_18000B126
.text:000000018000B10A                 add     rdx, 27h ; '''
.text:000000018000B10E                 mov     rcx, [rcx-8]
.text:000000018000B112                 sub     rax, rcx
.text:000000018000B115                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000B119                 cmp     rax, 1Fh
.text:000000018000B11D                 jbe     short loc_18000B126
.text:000000018000B11F                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000B125                 int     3               ; Trap to Debugger
.text:000000018000B126 ; ---------------------------------------------------------------------------
.text:000000018000B126
.text:000000018000B126 loc_18000B126:                          ; CODE XREF: sub_18000ADD0+338↑j
.text:000000018000B126                                         ; sub_18000ADD0+34D↑j
.text:000000018000B126                 call    j_j_free
.text:000000018000B12B
.text:000000018000B12B loc_18000B12B:                          ; CODE XREF: sub_18000ADD0+324↑j
.text:000000018000B12B                 xor     r12d, r12d
.text:000000018000B12E
.text:000000018000B12E loc_18000B12E:                          ; CODE XREF: sub_18000ADD0+51↑j
.text:000000018000B12E                                         ; sub_18000ADD0+A5↑j ...
.text:000000018000B12E                 mov     rdx, [rsi+18h]
.text:000000018000B132                 cmp     rdx, 10h
.text:000000018000B136                 jb      short loc_18000B164
.text:000000018000B138                 inc     rdx
.text:000000018000B13B                 mov     rcx, [rsi]
.text:000000018000B13E                 cmp     rdx, 1000h
.text:000000018000B145                 jb      short loc_18000B15F
.text:000000018000B147                 add     rdx, 27h ; '''
.text:000000018000B14B                 mov     r8, [rcx-8]
.text:000000018000B14F                 sub     rcx, r8
.text:000000018000B152                 lea     rax, [rcx-8]
.text:000000018000B156                 cmp     rax, 1Fh
.text:000000018000B15A                 ja      short loc_18000B1AC
.text:000000018000B15C                 mov     rcx, r8         ; Block
.text:000000018000B15F
.text:000000018000B15F loc_18000B15F:                          ; CODE XREF: sub_18000ADD0+375↑j
.text:000000018000B15F                 call    j_j_free
.text:000000018000B164
.text:000000018000B164 loc_18000B164:                          ; CODE XREF: sub_18000ADD0+366↑j
.text:000000018000B164                 mov     [rsi+10h], r12
.text:000000018000B168                 mov     qword ptr [rsi+18h], 0Fh
.text:000000018000B170                 mov     byte ptr [rsi], 0
.text:000000018000B173                 mov     rcx, [rsp+0C8h+var_40]
.text:000000018000B17B                 xor     rcx, rsp        ; StackCookie
.text:000000018000B17E                 call    __security_check_cookie
.text:000000018000B183                 mov     rbx, [rsp+0C8h+arg_10]
.text:000000018000B18B                 add     rsp, 90h
.text:000000018000B192                 pop     r15
.text:000000018000B194                 pop     r14
.text:000000018000B196                 pop     r13
.text:000000018000B198                 pop     r12
.text:000000018000B19A                 pop     rdi
.text:000000018000B19B                 pop     rsi
.text:000000018000B19C                 pop     rbp
.text:000000018000B19D                 retn
.text:000000018000B19E ; ---------------------------------------------------------------------------
.text:000000018000B19E
.text:000000018000B19E loc_18000B19E:                          ; CODE XREF: sub_18000ADD0+D0↑j
.text:000000018000B19E                                         ; sub_18000ADD0+124↑j
.text:000000018000B19E                 lea     rcx, aInvalidMapKTKe ; "invalid map<K, T> key"
.text:000000018000B1A5                 call    cs:?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range(char const *)
.text:000000018000B1AB                 nop
.text:000000018000B1AC
.text:000000018000B1AC loc_18000B1AC:                          ; CODE XREF: sub_18000ADD0+38A↑j
.text:000000018000B1AC                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000B1B2                 nop
.text:000000018000B1B3
.text:000000018000B1B3 loc_18000B1B3:                          ; CODE XREF: sub_18000ADD0+2FA↑j
.text:000000018000B1B3                 call    sub_180002AA0
.text:000000018000B1B3 ; ---------------------------------------------------------------------------
.text:000000018000B1B8                 db 0CCh
.text:000000018000B1B8 ; } // starts at 18000ADD0
.text:000000018000B1B8 sub_18000ADD0   endp
.text:000000018000B1B8
.text:000000018000B1B9 algn_18000B1B9:                         ; DATA XREF: .pdata:000000018001CA2C↓o
.text:000000018000B1B9                 align 20h
.text:000000018000B1C0
.text:000000018000B1C0 ; =============== S U B R O U T I N E =======================================
.text:000000018000B1C0
.text:000000018000B1C0
.text:000000018000B1C0 sub_18000B1C0   proc near               ; CODE XREF: sub_18000ADD0+43↑p
.text:000000018000B1C0                                         ; sub_18000ADD0+C1↑p
.text:000000018000B1C0                                         ; DATA XREF: ...
.text:000000018000B1C0
.text:000000018000B1C0 arg_0           = qword ptr  8
.text:000000018000B1C0 arg_10          = qword ptr  18h
.text:000000018000B1C0 arg_18          = qword ptr  20h
.text:000000018000B1C0
.text:000000018000B1C0                 mov     [rsp+arg_18], rbx
.text:000000018000B1C5                 push    rsi
.text:000000018000B1C6                 push    rdi
.text:000000018000B1C7                 push    r15
.text:000000018000B1C9                 sub     rsp, 20h
.text:000000018000B1CD                 mov     rbx, [rcx]
.text:000000018000B1D0                 xor     r15d, r15d
.text:000000018000B1D3                 mov     rsi, r8
.text:000000018000B1D6                 mov     rdi, rdx
.text:000000018000B1D9                 mov     rbx, [rbx+8]
.text:000000018000B1DD                 mov     [rdx], rbx
.text:000000018000B1E0                 mov     [rdx+8], r15d
.text:000000018000B1E4                 mov     rax, [rcx]
.text:000000018000B1E7                 mov     [rdx+10h], rax
.text:000000018000B1EB                 cmp     [rbx+19h], r15b
.text:000000018000B1EF                 jnz     short loc_18000B25A
.text:000000018000B1F1
.text:000000018000B1F1 loc_18000B1F1:                          ; DATA XREF: .rdata:0000000180015DBC↓o
.text:000000018000B1F1                                         ; .rdata:0000000180015DCC↓o ...
.text:000000018000B1F1                 mov     [rsp+38h+arg_0], rbp
.text:000000018000B1F6                 mov     [rsp+38h+arg_10], r14
.text:000000018000B1FB                 nop     dword ptr [rax+rax+00h]
.text:000000018000B200
.text:000000018000B200 loc_18000B200:                          ; CODE XREF: sub_18000B1C0+8E↓j
.text:000000018000B200                 mov     [rdi], rbx
.text:000000018000B203                 mov     rdx, rsi
.text:000000018000B206                 cmp     qword ptr [rsi+18h], 10h
.text:000000018000B20B                 jb      short loc_18000B210
.text:000000018000B20D                 mov     rdx, [rsi]      ; Buf2
.text:000000018000B210
.text:000000018000B210 loc_18000B210:                          ; CODE XREF: sub_18000B1C0+4B↑j
.text:000000018000B210                 cmp     qword ptr [rbx+38h], 10h
.text:000000018000B215                 lea     rcx, [rbx+20h]
.text:000000018000B219                 jb      short loc_18000B21F
.text:000000018000B21B                 mov     rcx, [rbx+20h]  ; Buf1
.text:000000018000B21F
.text:000000018000B21F loc_18000B21F:                          ; CODE XREF: sub_18000B1C0+59↑j
.text:000000018000B21F                 mov     r14, [rsi+10h]
.text:000000018000B223                 mov     rbp, [rbx+30h]
.text:000000018000B227                 cmp     r14, rbp
.text:000000018000B22A                 mov     r8, rbp
.text:000000018000B22D                 cmovb   r8, r14         ; Size
.text:000000018000B231                 call    memcmp
.text:000000018000B236                 test    eax, eax
.text:000000018000B238                 jz      short loc_18000B26B
.text:000000018000B23A                 js      short loc_18000B270
.text:000000018000B23C
.text:000000018000B23C loc_18000B23C:                          ; CODE XREF: sub_18000B1C0+AE↓j
.text:000000018000B23C                 mov     dword ptr [rdi+8], 1
.text:000000018000B243                 mov     [rdi+10h], rbx
.text:000000018000B247                 mov     rbx, [rbx]
.text:000000018000B24A
.text:000000018000B24A loc_18000B24A:                          ; CODE XREF: sub_18000B1C0+B8↓j
.text:000000018000B24A                 cmp     [rbx+19h], r15b
.text:000000018000B24E                 jz      short loc_18000B200
.text:000000018000B250                 mov     r14, [rsp+38h+arg_10]
.text:000000018000B255                 mov     rbp, [rsp+38h+arg_0]
.text:000000018000B25A
.text:000000018000B25A loc_18000B25A:                          ; CODE XREF: sub_18000B1C0+2F↑j
.text:000000018000B25A                                         ; DATA XREF: .pdata:000000018001CA44↓o ...
.text:000000018000B25A                 mov     rbx, [rsp+38h+arg_18]
.text:000000018000B25F                 mov     rax, rdi
.text:000000018000B262                 add     rsp, 20h
.text:000000018000B266                 pop     r15
.text:000000018000B268                 pop     rdi
.text:000000018000B269                 pop     rsi
.text:000000018000B26A                 retn
.text:000000018000B26B ; ---------------------------------------------------------------------------
.text:000000018000B26B
.text:000000018000B26B loc_18000B26B:                          ; CODE XREF: sub_18000B1C0+78↑j
.text:000000018000B26B                                         ; DATA XREF: .pdata:000000018001CA50↓o ...
.text:000000018000B26B                 cmp     rbp, r14
.text:000000018000B26E                 jnb     short loc_18000B23C
.text:000000018000B270
.text:000000018000B270 loc_18000B270:                          ; CODE XREF: sub_18000B1C0+7A↑j
.text:000000018000B270                 mov     [rdi+8], r15d
.text:000000018000B274                 mov     rbx, [rbx+10h]
.text:000000018000B278                 jmp     short loc_18000B24A
.text:000000018000B278 sub_18000B1C0   endp
.text:000000018000B278
.text:000000018000B278 ; ---------------------------------------------------------------------------
.text:000000018000B27A algn_18000B27A:                         ; DATA XREF: .pdata:000000018001CA5C↓o
.text:000000018000B27A                 align 20h
.text:000000018000B280
.text:000000018000B280 ; =============== S U B R O U T I N E =======================================
.text:000000018000B280
.text:000000018000B280
.text:000000018000B280 sub_18000B280   proc near               ; CODE XREF: sub_18000A6F0+221↑p
.text:000000018000B280                                         ; sub_18000A6F0+380↑p ...
.text:000000018000B280
.text:000000018000B280 arg_8           = qword ptr  10h
.text:000000018000B280 arg_10          = qword ptr  18h
.text:000000018000B280
.text:000000018000B280                 mov     [rsp+arg_10], rsi
.text:000000018000B285                 push    rdi
.text:000000018000B286                 mov     rax, [rdx+10h]
.text:000000018000B28A                 lea     r11, [rdx+10h]
.text:000000018000B28E                 mov     rdi, rcx
.text:000000018000B291                 mov     rsi, rdx
.text:000000018000B294                 cmp     byte ptr [rax+19h], 0
.text:000000018000B298                 jz      short loc_18000B2BD
.text:000000018000B29A                 mov     rax, [rdx+8]
.text:000000018000B29E                 lea     r10, [rdx+8]
.text:000000018000B2A2                 cmp     byte ptr [rax+19h], 0
.text:000000018000B2A6                 jnz     short loc_18000B2E3
.text:000000018000B2A8
.text:000000018000B2A8 loc_18000B2A8:                          ; CODE XREF: sub_18000B280+39↓j
.text:000000018000B2A8                 cmp     rdx, [rax+10h]
.text:000000018000B2AC                 jnz     short loc_18000B2E3
.text:000000018000B2AE                 mov     rdx, rax
.text:000000018000B2B1                 mov     rax, [rax+8]
.text:000000018000B2B5                 cmp     byte ptr [rax+19h], 0
.text:000000018000B2B9                 jz      short loc_18000B2A8
.text:000000018000B2BB                 jmp     short loc_18000B2E3
.text:000000018000B2BD ; ---------------------------------------------------------------------------
.text:000000018000B2BD
.text:000000018000B2BD loc_18000B2BD:                          ; CODE XREF: sub_18000B280+18↑j
.text:000000018000B2BD                 mov     rdx, [rax]
.text:000000018000B2C0                 cmp     byte ptr [rdx+19h], 0
.text:000000018000B2C4                 jnz     short loc_18000B2DF
.text:000000018000B2C6                 db      66h, 66h
.text:000000018000B2C6                 nop     word ptr [rax+rax+00000000h]
.text:000000018000B2D0
.text:000000018000B2D0 loc_18000B2D0:                          ; CODE XREF: sub_18000B280+5D↓j
.text:000000018000B2D0                 mov     rcx, [rdx]
.text:000000018000B2D3                 mov     rax, rdx
.text:000000018000B2D6                 mov     rdx, rcx
.text:000000018000B2D9                 cmp     byte ptr [rcx+19h], 0
.text:000000018000B2DD                 jz      short loc_18000B2D0
.text:000000018000B2DF
.text:000000018000B2DF loc_18000B2DF:                          ; CODE XREF: sub_18000B280+44↑j
.text:000000018000B2DF                 lea     r10, [rsi+8]
.text:000000018000B2E3
.text:000000018000B2E3 loc_18000B2E3:                          ; CODE XREF: sub_18000B280+26↑j
.text:000000018000B2E3                                         ; sub_18000B280+2C↑j ...
.text:000000018000B2E3                 mov     rcx, [rsi]
.text:000000018000B2E6                 mov     r9, [r11]
.text:000000018000B2E9                 cmp     byte ptr [rcx+19h], 0
.text:000000018000B2ED                 jnz     short loc_18000B308
.text:000000018000B2EF                 cmp     byte ptr [r9+19h], 0
.text:000000018000B2F4                 jz      short loc_18000B2FB
.text:000000018000B2F6                 mov     r9, rcx
.text:000000018000B2F9                 jmp     short loc_18000B308
.text:000000018000B2FB ; ---------------------------------------------------------------------------
.text:000000018000B2FB
.text:000000018000B2FB loc_18000B2FB:                          ; CODE XREF: sub_18000B280+74↑j
.text:000000018000B2FB                 mov     r9, [rax+10h]
.text:000000018000B2FF                 cmp     rax, rsi
.text:000000018000B302                 jnz     loc_18000B3B3
.text:000000018000B308
.text:000000018000B308 loc_18000B308:                          ; CODE XREF: sub_18000B280+6D↑j
.text:000000018000B308                                         ; sub_18000B280+79↑j
.text:000000018000B308                 cmp     byte ptr [r9+19h], 0
.text:000000018000B30D                 mov     r8, [r10]
.text:000000018000B310                 jnz     short loc_18000B316
.text:000000018000B312                 mov     [r9+8], r8
.text:000000018000B316
.text:000000018000B316 loc_18000B316:                          ; CODE XREF: sub_18000B280+90↑j
.text:000000018000B316                 mov     rax, [rdi]
.text:000000018000B319                 cmp     [rax+8], rsi
.text:000000018000B31D                 jnz     short loc_18000B325
.text:000000018000B31F                 mov     [rax+8], r9
.text:000000018000B323                 jmp     short loc_18000B333
.text:000000018000B325 ; ---------------------------------------------------------------------------
.text:000000018000B325
.text:000000018000B325 loc_18000B325:                          ; CODE XREF: sub_18000B280+9D↑j
.text:000000018000B325                 cmp     [r8], rsi
.text:000000018000B328                 jnz     short loc_18000B32F
.text:000000018000B32A                 mov     [r8], r9
.text:000000018000B32D                 jmp     short loc_18000B333
.text:000000018000B32F ; ---------------------------------------------------------------------------
.text:000000018000B32F
.text:000000018000B32F loc_18000B32F:                          ; CODE XREF: sub_18000B280+A8↑j
.text:000000018000B32F                 mov     [r8+10h], r9
.text:000000018000B333
.text:000000018000B333 loc_18000B333:                          ; CODE XREF: sub_18000B280+A3↑j
.text:000000018000B333                                         ; sub_18000B280+AD↑j
.text:000000018000B333                 mov     r10, [rdi]
.text:000000018000B336                 cmp     [r10], rsi
.text:000000018000B339                 jnz     short loc_18000B372
.text:000000018000B33B                 cmp     byte ptr [r9+19h], 0
.text:000000018000B340                 jz      short loc_18000B347
.text:000000018000B342                 mov     rdx, r8
.text:000000018000B345                 jmp     short loc_18000B36F
.text:000000018000B347 ; ---------------------------------------------------------------------------
.text:000000018000B347
.text:000000018000B347 loc_18000B347:                          ; CODE XREF: sub_18000B280+C0↑j
.text:000000018000B347                 mov     rcx, [r9]
.text:000000018000B34A                 mov     rdx, r9
.text:000000018000B34D                 cmp     byte ptr [rcx+19h], 0
.text:000000018000B351                 jnz     short loc_18000B36F
.text:000000018000B353                 nop     dword ptr [rax+00h]
.text:000000018000B357                 nop     word ptr [rax+rax+00000000h]
.text:000000018000B360
.text:000000018000B360 loc_18000B360:                          ; CODE XREF: sub_18000B280+ED↓j
.text:000000018000B360                 mov     rax, [rcx]
.text:000000018000B363                 mov     rdx, rcx
.text:000000018000B366                 mov     rcx, rax
.text:000000018000B369                 cmp     byte ptr [rax+19h], 0
.text:000000018000B36D                 jz      short loc_18000B360
.text:000000018000B36F
.text:000000018000B36F loc_18000B36F:                          ; CODE XREF: sub_18000B280+C5↑j
.text:000000018000B36F                                         ; sub_18000B280+D1↑j
.text:000000018000B36F                 mov     [r10], rdx
.text:000000018000B372
.text:000000018000B372 loc_18000B372:                          ; CODE XREF: sub_18000B280+B9↑j
.text:000000018000B372                 mov     rdx, [rdi]
.text:000000018000B375                 cmp     [rdx+10h], rsi
.text:000000018000B379                 jnz     loc_18000B41C
.text:000000018000B37F                 cmp     byte ptr [r9+19h], 0
.text:000000018000B384                 jz      short loc_18000B392
.text:000000018000B386                 mov     rcx, r8
.text:000000018000B389                 mov     [rdx+10h], rcx
.text:000000018000B38D                 jmp     loc_18000B41C
.text:000000018000B392 ; ---------------------------------------------------------------------------
.text:000000018000B392
.text:000000018000B392 loc_18000B392:                          ; CODE XREF: sub_18000B280+104↑j
.text:000000018000B392                 mov     rax, [r9+10h]
.text:000000018000B396                 mov     rcx, r9
.text:000000018000B399                 cmp     byte ptr [rax+19h], 0
.text:000000018000B39D                 jnz     short loc_18000B3AD
.text:000000018000B39F                 nop
.text:000000018000B3A0
.text:000000018000B3A0 loc_18000B3A0:                          ; CODE XREF: sub_18000B280+12B↓j
.text:000000018000B3A0                 mov     rcx, rax
.text:000000018000B3A3                 mov     rax, [rax+10h]
.text:000000018000B3A7                 cmp     byte ptr [rax+19h], 0
.text:000000018000B3AB                 jz      short loc_18000B3A0
.text:000000018000B3AD
.text:000000018000B3AD loc_18000B3AD:                          ; CODE XREF: sub_18000B280+11D↑j
.text:000000018000B3AD                 mov     [rdx+10h], rcx
.text:000000018000B3B1                 jmp     short loc_18000B41C
.text:000000018000B3B3 ; ---------------------------------------------------------------------------
.text:000000018000B3B3
.text:000000018000B3B3 loc_18000B3B3:                          ; CODE XREF: sub_18000B280+82↑j
.text:000000018000B3B3                 mov     [rcx+8], rax
.text:000000018000B3B7                 mov     rcx, [rsi]
.text:000000018000B3BA                 mov     [rax], rcx
.text:000000018000B3BD                 cmp     rax, [r11]
.text:000000018000B3C0                 jnz     short loc_18000B3C7
.text:000000018000B3C2                 mov     r8, rax
.text:000000018000B3C5                 jmp     short loc_18000B3E7
.text:000000018000B3C7 ; ---------------------------------------------------------------------------
.text:000000018000B3C7
.text:000000018000B3C7 loc_18000B3C7:                          ; CODE XREF: sub_18000B280+140↑j
.text:000000018000B3C7                 cmp     byte ptr [r9+19h], 0
.text:000000018000B3CC                 mov     r8, [rax+8]
.text:000000018000B3D0                 jnz     short loc_18000B3D6
.text:000000018000B3D2                 mov     [r9+8], r8
.text:000000018000B3D6
.text:000000018000B3D6 loc_18000B3D6:                          ; CODE XREF: sub_18000B280+150↑j
.text:000000018000B3D6                 mov     [r8], r9
.text:000000018000B3D9                 mov     rcx, [r11]
.text:000000018000B3DC                 mov     [rax+10h], rcx
.text:000000018000B3E0                 mov     rcx, [r11]
.text:000000018000B3E3                 mov     [rcx+8], rax
.text:000000018000B3E7
.text:000000018000B3E7 loc_18000B3E7:                          ; CODE XREF: sub_18000B280+145↑j
.text:000000018000B3E7                 mov     rcx, [rdi]
.text:000000018000B3EA                 cmp     [rcx+8], rsi
.text:000000018000B3EE                 jnz     short loc_18000B3F6
.text:000000018000B3F0                 mov     [rcx+8], rax
.text:000000018000B3F4                 jmp     short loc_18000B407
.text:000000018000B3F6 ; ---------------------------------------------------------------------------
.text:000000018000B3F6
.text:000000018000B3F6 loc_18000B3F6:                          ; CODE XREF: sub_18000B280+16E↑j
.text:000000018000B3F6                 mov     rcx, [r10]
.text:000000018000B3F9                 cmp     [rcx], rsi
.text:000000018000B3FC                 jnz     short loc_18000B403
.text:000000018000B3FE                 mov     [rcx], rax
.text:000000018000B401                 jmp     short loc_18000B407
.text:000000018000B403 ; ---------------------------------------------------------------------------
.text:000000018000B403
.text:000000018000B403 loc_18000B403:                          ; CODE XREF: sub_18000B280+17C↑j
.text:000000018000B403                 mov     [rcx+10h], rax
.text:000000018000B407
.text:000000018000B407 loc_18000B407:                          ; CODE XREF: sub_18000B280+174↑j
.text:000000018000B407                                         ; sub_18000B280+181↑j
.text:000000018000B407                 mov     rcx, [r10]
.text:000000018000B40A                 movzx   edx, byte ptr [rax+18h]
.text:000000018000B40E                 mov     [rax+8], rcx
.text:000000018000B412                 movzx   ecx, byte ptr [rsi+18h]
.text:000000018000B416                 mov     [rax+18h], cl
.text:000000018000B419                 mov     [rsi+18h], dl
.text:000000018000B41C
.text:000000018000B41C loc_18000B41C:                          ; CODE XREF: sub_18000B280+F9↑j
.text:000000018000B41C                                         ; sub_18000B280+10D↑j ...
.text:000000018000B41C                 cmp     byte ptr [rsi+18h], 1
.text:000000018000B420                 jnz     loc_18000B743
.text:000000018000B426                 mov     rax, [rdi]
.text:000000018000B429                 cmp     r9, [rax+8]
.text:000000018000B42D                 jz      loc_18000B73E
.text:000000018000B433
.text:000000018000B433 loc_18000B433:                          ; DATA XREF: .rdata:0000000180015E04↓o
.text:000000018000B433                                         ; .rdata:0000000180015E14↓o ...
.text:000000018000B433                 mov     [rsp+8+arg_8], rbx
.text:000000018000B438                 nop     dword ptr [rax+rax+00000000h]
.text:000000018000B440
.text:000000018000B440 loc_18000B440:                          ; CODE XREF: sub_18000B280+36F↓j
.text:000000018000B440                 cmp     byte ptr [r9+18h], 1
.text:000000018000B445                 mov     rbx, r8
.text:000000018000B448                 jnz     loc_18000B739
.text:000000018000B44E                 mov     rcx, [r8]
.text:000000018000B451                 cmp     r9, rcx
.text:000000018000B454                 jnz     loc_18000B544
.text:000000018000B45A                 mov     rcx, [r8+10h]
.text:000000018000B45E                 cmp     byte ptr [rcx+18h], 0
.text:000000018000B462                 jnz     short loc_18000B4D1
.text:000000018000B464                 mov     byte ptr [rcx+18h], 1
.text:000000018000B468                 mov     rcx, [r8+10h]
.text:000000018000B46C                 mov     byte ptr [r8+18h], 0
.text:000000018000B471                 mov     rax, [rcx]
.text:000000018000B474                 mov     [r8+10h], rax
.text:000000018000B478                 mov     rax, [rcx]
.text:000000018000B47B                 cmp     byte ptr [rax+19h], 0
.text:000000018000B47F                 jnz     short loc_18000B485
.text:000000018000B481                 mov     [rax+8], r8
.text:000000018000B485
.text:000000018000B485 loc_18000B485:                          ; CODE XREF: sub_18000B280+1FF↑j
.text:000000018000B485                 mov     rax, [r8+8]
.text:000000018000B489                 lea     rdx, [r8+8]
.text:000000018000B48D                 mov     [rcx+8], rax
.text:000000018000B491                 mov     rax, [rdi]
.text:000000018000B494                 cmp     r8, [rax+8]
.text:000000018000B498                 jnz     short loc_18000B4AA
.text:000000018000B49A                 mov     [rax+8], rcx
.text:000000018000B49E                 mov     [rcx], r8
.text:000000018000B4A1                 mov     [rdx], rcx
.text:000000018000B4A4                 mov     rcx, [r8+10h]
.text:000000018000B4A8                 jmp     short loc_18000B4D5
.text:000000018000B4AA ; ---------------------------------------------------------------------------
.text:000000018000B4AA
.text:000000018000B4AA loc_18000B4AA:                          ; CODE XREF: sub_18000B280+218↑j
.text:000000018000B4AA                 mov     rax, [rdx]
.text:000000018000B4AD                 cmp     r8, [rax]
.text:000000018000B4B0                 jnz     short loc_18000B4C1
.text:000000018000B4B2                 mov     [rax], rcx
.text:000000018000B4B5                 mov     [rcx], r8
.text:000000018000B4B8                 mov     [rdx], rcx
.text:000000018000B4BB                 mov     rcx, [r8+10h]
.text:000000018000B4BF                 jmp     short loc_18000B4D5
.text:000000018000B4C1 ; ---------------------------------------------------------------------------
.text:000000018000B4C1
.text:000000018000B4C1 loc_18000B4C1:                          ; CODE XREF: sub_18000B280+230↑j
.text:000000018000B4C1                 mov     [rax+10h], rcx
.text:000000018000B4C5                 mov     [rcx], r8
.text:000000018000B4C8                 mov     [rdx], rcx
.text:000000018000B4CB                 mov     rcx, [r8+10h]
.text:000000018000B4CF                 jmp     short loc_18000B4D5
.text:000000018000B4D1 ; ---------------------------------------------------------------------------
.text:000000018000B4D1
.text:000000018000B4D1 loc_18000B4D1:                          ; CODE XREF: sub_18000B280+1E2↑j
.text:000000018000B4D1                 lea     rdx, [r8+8]
.text:000000018000B4D5
.text:000000018000B4D5 loc_18000B4D5:                          ; CODE XREF: sub_18000B280+228↑j
.text:000000018000B4D5                                         ; sub_18000B280+23F↑j ...
.text:000000018000B4D5                 cmp     byte ptr [rcx+19h], 0
.text:000000018000B4D9                 jnz     loc_18000B5E2
.text:000000018000B4DF                 mov     r11, [rcx]
.text:000000018000B4E2                 cmp     byte ptr [r11+18h], 1
.text:000000018000B4E7                 jnz     short loc_18000B4F7
.text:000000018000B4E9                 mov     rax, [rcx+10h]
.text:000000018000B4ED                 cmp     byte ptr [rax+18h], 1
.text:000000018000B4F1                 jz      loc_18000B5DE
.text:000000018000B4F7
.text:000000018000B4F7 loc_18000B4F7:                          ; CODE XREF: sub_18000B280+267↑j
.text:000000018000B4F7                 mov     rax, [rcx+10h]
.text:000000018000B4FB                 cmp     byte ptr [rax+18h], 1
.text:000000018000B4FF                 jnz     loc_18000B619
.text:000000018000B505                 mov     byte ptr [r11+18h], 1
.text:000000018000B50A                 mov     r10, [rcx]
.text:000000018000B50D                 mov     byte ptr [rcx+18h], 0
.text:000000018000B511                 mov     rax, [r10+10h]
.text:000000018000B515                 mov     [rcx], rax
.text:000000018000B518                 mov     rax, [r10+10h]
.text:000000018000B51C                 cmp     byte ptr [rax+19h], 0
.text:000000018000B520                 jnz     short loc_18000B526
.text:000000018000B522                 mov     [rax+8], rcx
.text:000000018000B526
.text:000000018000B526 loc_18000B526:                          ; CODE XREF: sub_18000B280+2A0↑j
.text:000000018000B526                 mov     rax, [rcx+8]
.text:000000018000B52A                 mov     [r10+8], rax
.text:000000018000B52E                 mov     rax, [rdi]
.text:000000018000B531                 cmp     rcx, [rax+8]
.text:000000018000B535                 jnz     loc_18000B5FA
.text:000000018000B53B                 mov     [rax+8], r10
.text:000000018000B53F                 jmp     loc_18000B60D
.text:000000018000B544 ; ---------------------------------------------------------------------------
.text:000000018000B544
.text:000000018000B544 loc_18000B544:                          ; CODE XREF: sub_18000B280+1D4↑j
.text:000000018000B544                 cmp     byte ptr [rcx+18h], 0
.text:000000018000B548                 jnz     short loc_18000B5B8
.text:000000018000B54A                 mov     byte ptr [rcx+18h], 1
.text:000000018000B54E                 mov     rcx, [r8]
.text:000000018000B551                 mov     byte ptr [r8+18h], 0
.text:000000018000B556                 mov     rax, [rcx+10h]
.text:000000018000B55A                 mov     [r8], rax
.text:000000018000B55D                 mov     rax, [rcx+10h]
.text:000000018000B561                 cmp     byte ptr [rax+19h], 0
.text:000000018000B565                 jnz     short loc_18000B56B
.text:000000018000B567                 mov     [rax+8], r8
.text:000000018000B56B
.text:000000018000B56B loc_18000B56B:                          ; CODE XREF: sub_18000B280+2E5↑j
.text:000000018000B56B                 mov     rax, [r8+8]
.text:000000018000B56F                 lea     rdx, [r8+8]
.text:000000018000B573                 mov     [rcx+8], rax
.text:000000018000B577                 mov     rax, [rdi]
.text:000000018000B57A                 cmp     r8, [rax+8]
.text:000000018000B57E                 jnz     short loc_18000B590
.text:000000018000B580                 mov     [rax+8], rcx
.text:000000018000B584                 mov     [rcx+10h], r8
.text:000000018000B588                 mov     [rdx], rcx
.text:000000018000B58B                 mov     rcx, [r8]
.text:000000018000B58E                 jmp     short loc_18000B5BC
.text:000000018000B590 ; ---------------------------------------------------------------------------
.text:000000018000B590
.text:000000018000B590 loc_18000B590:                          ; CODE XREF: sub_18000B280+2FE↑j
.text:000000018000B590                 mov     rax, [rdx]
.text:000000018000B593                 cmp     r8, [rax+10h]
.text:000000018000B597                 jnz     short loc_18000B5A9
.text:000000018000B599                 mov     [rax+10h], rcx
.text:000000018000B59D                 mov     [rcx+10h], r8
.text:000000018000B5A1                 mov     [rdx], rcx
.text:000000018000B5A4                 mov     rcx, [r8]
.text:000000018000B5A7                 jmp     short loc_18000B5BC
.text:000000018000B5A9 ; ---------------------------------------------------------------------------
.text:000000018000B5A9
.text:000000018000B5A9 loc_18000B5A9:                          ; CODE XREF: sub_18000B280+317↑j
.text:000000018000B5A9                 mov     [rax], rcx
.text:000000018000B5AC                 mov     [rcx+10h], r8
.text:000000018000B5B0                 mov     [rdx], rcx
.text:000000018000B5B3                 mov     rcx, [r8]
.text:000000018000B5B6                 jmp     short loc_18000B5BC
.text:000000018000B5B8 ; ---------------------------------------------------------------------------
.text:000000018000B5B8
.text:000000018000B5B8 loc_18000B5B8:                          ; CODE XREF: sub_18000B280+2C8↑j
.text:000000018000B5B8                 lea     rdx, [r8+8]
.text:000000018000B5BC
.text:000000018000B5BC loc_18000B5BC:                          ; CODE XREF: sub_18000B280+30E↑j
.text:000000018000B5BC                                         ; sub_18000B280+327↑j ...
.text:000000018000B5BC                 cmp     byte ptr [rcx+19h], 0
.text:000000018000B5C0                 jnz     short loc_18000B5E2
.text:000000018000B5C2                 mov     r10, [rcx+10h]
.text:000000018000B5C6                 cmp     byte ptr [r10+18h], 1
.text:000000018000B5CB                 jnz     loc_18000B681
.text:000000018000B5D1                 mov     rax, [rcx]
.text:000000018000B5D4                 cmp     byte ptr [rax+18h], 1
.text:000000018000B5D8                 jnz     loc_18000B681
.text:000000018000B5DE
.text:000000018000B5DE loc_18000B5DE:                          ; CODE XREF: sub_18000B280+271↑j
.text:000000018000B5DE                 mov     byte ptr [rcx+18h], 0
.text:000000018000B5E2
.text:000000018000B5E2 loc_18000B5E2:                          ; CODE XREF: sub_18000B280+259↑j
.text:000000018000B5E2                                         ; sub_18000B280+340↑j
.text:000000018000B5E2                 mov     rax, [rdi]
.text:000000018000B5E5                 mov     r9, rbx
.text:000000018000B5E8                 mov     r8, [rdx]
.text:000000018000B5EB                 cmp     rbx, [rax+8]
.text:000000018000B5EF                 jnz     loc_18000B440
.text:000000018000B5F5                 jmp     loc_18000B739
.text:000000018000B5FA ; ---------------------------------------------------------------------------
.text:000000018000B5FA
.text:000000018000B5FA loc_18000B5FA:                          ; CODE XREF: sub_18000B280+2B5↑j
.text:000000018000B5FA                 mov     rax, [rcx+8]
.text:000000018000B5FE                 cmp     rcx, [rax+10h]
.text:000000018000B602                 jnz     short loc_18000B60A
.text:000000018000B604                 mov     [rax+10h], r10
.text:000000018000B608                 jmp     short loc_18000B60D
.text:000000018000B60A ; ---------------------------------------------------------------------------
.text:000000018000B60A
.text:000000018000B60A loc_18000B60A:                          ; CODE XREF: sub_18000B280+382↑j
.text:000000018000B60A                 mov     [rax], r10
.text:000000018000B60D
.text:000000018000B60D loc_18000B60D:                          ; CODE XREF: sub_18000B280+2BF↑j
.text:000000018000B60D                                         ; sub_18000B280+388↑j
.text:000000018000B60D                 mov     [r10+10h], rcx
.text:000000018000B611                 mov     [rcx+8], r10
.text:000000018000B615                 mov     rcx, [r8+10h]
.text:000000018000B619
.text:000000018000B619 loc_18000B619:                          ; CODE XREF: sub_18000B280+27F↑j
.text:000000018000B619                 movzx   eax, byte ptr [r8+18h]
.text:000000018000B61E                 mov     [rcx+18h], al
.text:000000018000B621                 mov     byte ptr [r8+18h], 1
.text:000000018000B626                 mov     rax, [rcx+10h]
.text:000000018000B62A                 mov     byte ptr [rax+18h], 1
.text:000000018000B62E                 mov     rcx, [r8+10h]
.text:000000018000B632                 mov     rax, [rcx]
.text:000000018000B635                 mov     [r8+10h], rax
.text:000000018000B639                 mov     rax, [rcx]
.text:000000018000B63C                 cmp     byte ptr [rax+19h], 0
.text:000000018000B640                 jnz     short loc_18000B646
.text:000000018000B642                 mov     [rax+8], r8
.text:000000018000B646
.text:000000018000B646 loc_18000B646:                          ; CODE XREF: sub_18000B280+3C0↑j
.text:000000018000B646                 mov     rax, [rdx]
.text:000000018000B649                 mov     [rcx+8], rax
.text:000000018000B64D                 mov     rax, [rdi]
.text:000000018000B650                 cmp     r8, [rax+8]
.text:000000018000B654                 jnz     short loc_18000B662
.text:000000018000B656                 mov     [rax+8], rcx
.text:000000018000B65A                 mov     [rcx], r8
.text:000000018000B65D                 jmp     loc_18000B736
.text:000000018000B662 ; ---------------------------------------------------------------------------
.text:000000018000B662
.text:000000018000B662 loc_18000B662:                          ; CODE XREF: sub_18000B280+3D4↑j
.text:000000018000B662                 mov     rax, [rdx]
.text:000000018000B665                 cmp     r8, [rax]
.text:000000018000B668                 jnz     short loc_18000B675
.text:000000018000B66A                 mov     [rax], rcx
.text:000000018000B66D                 mov     [rcx], r8
.text:000000018000B670                 jmp     loc_18000B736
.text:000000018000B675 ; ---------------------------------------------------------------------------
.text:000000018000B675
.text:000000018000B675 loc_18000B675:                          ; CODE XREF: sub_18000B280+3E8↑j
.text:000000018000B675                 mov     [rax+10h], rcx
.text:000000018000B679                 mov     [rcx], r8
.text:000000018000B67C                 jmp     loc_18000B736
.text:000000018000B681 ; ---------------------------------------------------------------------------
.text:000000018000B681
.text:000000018000B681 loc_18000B681:                          ; CODE XREF: sub_18000B280+34B↑j
.text:000000018000B681                                         ; sub_18000B280+358↑j
.text:000000018000B681                 mov     rax, [rcx]
.text:000000018000B684                 cmp     byte ptr [rax+18h], 1
.text:000000018000B688                 jnz     short loc_18000B6DE
.text:000000018000B68A                 mov     byte ptr [r10+18h], 1
.text:000000018000B68F                 mov     r10, [rcx+10h]
.text:000000018000B693                 mov     byte ptr [rcx+18h], 0
.text:000000018000B697                 mov     rax, [r10]
.text:000000018000B69A                 mov     [rcx+10h], rax
.text:000000018000B69E                 mov     rax, [r10]
.text:000000018000B6A1                 cmp     byte ptr [rax+19h], 0
.text:000000018000B6A5                 jnz     short loc_18000B6AB
.text:000000018000B6A7                 mov     [rax+8], rcx
.text:000000018000B6AB
.text:000000018000B6AB loc_18000B6AB:                          ; CODE XREF: sub_18000B280+425↑j
.text:000000018000B6AB                 mov     rax, [rcx+8]
.text:000000018000B6AF                 mov     [r10+8], rax
.text:000000018000B6B3                 mov     rax, [rdi]
.text:000000018000B6B6                 cmp     rcx, [rax+8]
.text:000000018000B6BA                 jnz     short loc_18000B6C2
.text:000000018000B6BC                 mov     [rax+8], r10
.text:000000018000B6C0                 jmp     short loc_18000B6D4
.text:000000018000B6C2 ; ---------------------------------------------------------------------------
.text:000000018000B6C2
.text:000000018000B6C2 loc_18000B6C2:                          ; CODE XREF: sub_18000B280+43A↑j
.text:000000018000B6C2                 mov     rax, [rcx+8]
.text:000000018000B6C6                 cmp     rcx, [rax]
.text:000000018000B6C9                 jnz     short loc_18000B6D0
.text:000000018000B6CB                 mov     [rax], r10
.text:000000018000B6CE                 jmp     short loc_18000B6D4
.text:000000018000B6D0 ; ---------------------------------------------------------------------------
.text:000000018000B6D0
.text:000000018000B6D0 loc_18000B6D0:                          ; CODE XREF: sub_18000B280+449↑j
.text:000000018000B6D0                 mov     [rax+10h], r10
.text:000000018000B6D4
.text:000000018000B6D4 loc_18000B6D4:                          ; CODE XREF: sub_18000B280+440↑j
.text:000000018000B6D4                                         ; sub_18000B280+44E↑j
.text:000000018000B6D4                 mov     [r10], rcx
.text:000000018000B6D7                 mov     [rcx+8], r10
.text:000000018000B6DB                 mov     rcx, [r8]
.text:000000018000B6DE
.text:000000018000B6DE loc_18000B6DE:                          ; CODE XREF: sub_18000B280+408↑j
.text:000000018000B6DE                 movzx   eax, byte ptr [r8+18h]
.text:000000018000B6E3                 mov     [rcx+18h], al
.text:000000018000B6E6                 mov     byte ptr [r8+18h], 1
.text:000000018000B6EB                 mov     rax, [rcx]
.text:000000018000B6EE                 mov     byte ptr [rax+18h], 1
.text:000000018000B6F2                 mov     rcx, [r8]
.text:000000018000B6F5                 mov     rax, [rcx+10h]
.text:000000018000B6F9                 mov     [r8], rax
.text:000000018000B6FC                 mov     rax, [rcx+10h]
.text:000000018000B700                 cmp     byte ptr [rax+19h], 0
.text:000000018000B704                 jnz     short loc_18000B70A
.text:000000018000B706                 mov     [rax+8], r8
.text:000000018000B70A
.text:000000018000B70A loc_18000B70A:                          ; CODE XREF: sub_18000B280+484↑j
.text:000000018000B70A                 mov     rax, [rdx]
.text:000000018000B70D                 mov     [rcx+8], rax
.text:000000018000B711                 mov     rax, [rdi]
.text:000000018000B714                 cmp     r8, [rax+8]
.text:000000018000B718                 jnz     short loc_18000B720
.text:000000018000B71A                 mov     [rax+8], rcx
.text:000000018000B71E                 jmp     short loc_18000B732
.text:000000018000B720 ; ---------------------------------------------------------------------------
.text:000000018000B720
.text:000000018000B720 loc_18000B720:                          ; CODE XREF: sub_18000B280+498↑j
.text:000000018000B720                 mov     rax, [rdx]
.text:000000018000B723                 cmp     r8, [rax+10h]
.text:000000018000B727                 jnz     short loc_18000B72F
.text:000000018000B729                 mov     [rax+10h], rcx
.text:000000018000B72D                 jmp     short loc_18000B732
.text:000000018000B72F ; ---------------------------------------------------------------------------
.text:000000018000B72F
.text:000000018000B72F loc_18000B72F:                          ; CODE XREF: sub_18000B280+4A7↑j
.text:000000018000B72F                 mov     [rax], rcx
.text:000000018000B732
.text:000000018000B732 loc_18000B732:                          ; CODE XREF: sub_18000B280+49E↑j
.text:000000018000B732                                         ; sub_18000B280+4AD↑j
.text:000000018000B732                 mov     [rcx+10h], r8
.text:000000018000B736
.text:000000018000B736 loc_18000B736:                          ; CODE XREF: sub_18000B280+3DD↑j
.text:000000018000B736                                         ; sub_18000B280+3F0↑j ...
.text:000000018000B736                 mov     [rdx], rcx
.text:000000018000B739
.text:000000018000B739 loc_18000B739:                          ; CODE XREF: sub_18000B280+1C8↑j
.text:000000018000B739                                         ; sub_18000B280+375↑j
.text:000000018000B739                 mov     rbx, [rsp+8+arg_8]
.text:000000018000B73E
.text:000000018000B73E loc_18000B73E:                          ; CODE XREF: sub_18000B280+1AD↑j
.text:000000018000B73E                                         ; DATA XREF: .pdata:000000018001CA74↓o ...
.text:000000018000B73E                 mov     byte ptr [r9+18h], 1
.text:000000018000B743
.text:000000018000B743 loc_18000B743:                          ; CODE XREF: sub_18000B280+1A0↑j
.text:000000018000B743                 mov     rcx, [rdi+8]
.text:000000018000B747                 mov     rax, rsi
.text:000000018000B74A                 test    rcx, rcx
.text:000000018000B74D                 jz      short loc_18000B756
.text:000000018000B74F                 dec     rcx
.text:000000018000B752                 mov     [rdi+8], rcx
.text:000000018000B756
.text:000000018000B756 loc_18000B756:                          ; CODE XREF: sub_18000B280+4CD↑j
.text:000000018000B756                 mov     rsi, [rsp+8+arg_10]
.text:000000018000B75B                 pop     rdi
.text:000000018000B75C                 retn
.text:000000018000B75C sub_18000B280   endp
.text:000000018000B75C
.text:000000018000B75C ; ---------------------------------------------------------------------------
.text:000000018000B75D algn_18000B75D:                         ; DATA XREF: .pdata:000000018001CA80↓o
.text:000000018000B75D                 align 20h
.text:000000018000B760
.text:000000018000B760 ; =============== S U B R O U T I N E =======================================
.text:000000018000B760
.text:000000018000B760
.text:000000018000B760 sub_18000B760   proc near               ; CODE XREF: sub_18000A6F0+2B1↑p
.text:000000018000B760                                         ; sub_18000A6F0+493↑p
.text:000000018000B760                                         ; DATA XREF: ...
.text:000000018000B760
.text:000000018000B760 var_68          = xmmword ptr -68h
.text:000000018000B760 var_58          = qword ptr -58h
.text:000000018000B760 var_50          = xmmword ptr -50h
.text:000000018000B760 arg_18          = qword ptr  20h
.text:000000018000B760
.text:000000018000B760 ; __unwind { // __CxxFrameHandler4
.text:000000018000B760                 mov     [rsp+arg_18], rbx
.text:000000018000B765                 push    rbp
.text:000000018000B766                 push    rsi
.text:000000018000B767                 push    rdi
.text:000000018000B768                 push    r12
.text:000000018000B76A                 push    r13
.text:000000018000B76C                 push    r14
.text:000000018000B76E                 push    r15
.text:000000018000B770                 sub     rsp, 50h
.text:000000018000B774                 mov     rsi, r8
.text:000000018000B777                 mov     r15, rdx
.text:000000018000B77A                 mov     rbp, rcx
.text:000000018000B77D                 mov     [rsp+88h+var_58], rcx
.text:000000018000B782                 mov     r12, [rcx]
.text:000000018000B785                 mov     qword ptr [rsp+88h+var_68], r12
.text:000000018000B78A                 mov     rbx, [r12+8]
.text:000000018000B78F                 mov     qword ptr [rsp+88h+var_50], rbx
.text:000000018000B794                 mov     dword ptr [rsp+88h+var_50+8], 0
.text:000000018000B79C                 mov     r14, r12
.text:000000018000B79F                 cmp     byte ptr [rbx+19h], 0
.text:000000018000B7A3                 jnz     loc_18000B82F
.text:000000018000B7A9                 mov     r12, [r8+18h]
.text:000000018000B7AD                 mov     rbp, [r8+10h]
.text:000000018000B7B1
.text:000000018000B7B1 loc_18000B7B1:                          ; CODE XREF: sub_18000B760+C3↓j
.text:000000018000B7B1                 mov     qword ptr [rsp+88h+var_50], rbx
.text:000000018000B7B6                 mov     rdx, rsi
.text:000000018000B7B9                 cmp     r12, 10h
.text:000000018000B7BD                 jb      short loc_18000B7C2
.text:000000018000B7BF                 mov     rdx, [rsi]      ; Buf2
.text:000000018000B7C2
.text:000000018000B7C2 loc_18000B7C2:                          ; CODE XREF: sub_18000B760+5D↑j
.text:000000018000B7C2                 lea     rcx, [rbx+20h]
.text:000000018000B7C6                 cmp     qword ptr [rbx+38h], 10h
.text:000000018000B7CB                 jb      short loc_18000B7D1
.text:000000018000B7CD                 mov     rcx, [rbx+20h]  ; Buf1
.text:000000018000B7D1
.text:000000018000B7D1 loc_18000B7D1:                          ; CODE XREF: sub_18000B760+6B↑j
.text:000000018000B7D1                 mov     rdi, [rbx+30h]
.text:000000018000B7D5                 mov     r8, rdi
.text:000000018000B7D8                 cmp     rbp, rdi
.text:000000018000B7DB                 cmovb   r8, rbp         ; Size
.text:000000018000B7DF                 call    memcmp
.text:000000018000B7E4                 test    eax, eax
.text:000000018000B7E6                 jnz     short loc_18000B7FC
.text:000000018000B7E8                 cmp     rdi, rbp
.text:000000018000B7EB                 jnb     short loc_18000B7F4
.text:000000018000B7ED                 mov     eax, 0FFFFFFFFh
.text:000000018000B7F2                 jmp     short loc_18000B7FC
.text:000000018000B7F4 ; ---------------------------------------------------------------------------
.text:000000018000B7F4
.text:000000018000B7F4 loc_18000B7F4:                          ; CODE XREF: sub_18000B760+8B↑j
.text:000000018000B7F4                 xor     eax, eax
.text:000000018000B7F6                 cmp     rdi, rbp
.text:000000018000B7F9                 setnbe  al
.text:000000018000B7FC
.text:000000018000B7FC loc_18000B7FC:                          ; CODE XREF: sub_18000B760+86↑j
.text:000000018000B7FC                                         ; sub_18000B760+92↑j
.text:000000018000B7FC                 shr     eax, 1Fh
.text:000000018000B7FF                 test    al, al
.text:000000018000B801                 jz      short loc_18000B811
.text:000000018000B803                 mov     dword ptr [rsp+88h+var_50+8], 0
.text:000000018000B80B                 mov     rbx, [rbx+10h]
.text:000000018000B80F                 jmp     short loc_18000B81F
.text:000000018000B811 ; ---------------------------------------------------------------------------
.text:000000018000B811
.text:000000018000B811 loc_18000B811:                          ; CODE XREF: sub_18000B760+A1↑j
.text:000000018000B811                 mov     dword ptr [rsp+88h+var_50+8], 1
.text:000000018000B819                 mov     r14, rbx
.text:000000018000B81C                 mov     rbx, [rbx]
.text:000000018000B81F
.text:000000018000B81F loc_18000B81F:                          ; CODE XREF: sub_18000B760+AF↑j
.text:000000018000B81F                 cmp     byte ptr [rbx+19h], 0
.text:000000018000B823                 jz      short loc_18000B7B1
.text:000000018000B825                 mov     rbp, [rsp+88h+var_58]
.text:000000018000B82A                 mov     r12, qword ptr [rsp+88h+var_68]
.text:000000018000B82F
.text:000000018000B82F loc_18000B82F:                          ; CODE XREF: sub_18000B760+43↑j
.text:000000018000B82F                 cmp     byte ptr [r14+19h], 0
.text:000000018000B834                 jnz     short loc_18000B891
.text:000000018000B836                 lea     rdx, [r14+20h]
.text:000000018000B83A                 cmp     qword ptr [r14+38h], 10h
.text:000000018000B83F                 jb      short loc_18000B845
.text:000000018000B841                 mov     rdx, [r14+20h]  ; Buf2
.text:000000018000B845
.text:000000018000B845 loc_18000B845:                          ; CODE XREF: sub_18000B760+DF↑j
.text:000000018000B845                 mov     rcx, rsi
.text:000000018000B848                 cmp     qword ptr [rsi+18h], 10h
.text:000000018000B84D                 jb      short loc_18000B852
.text:000000018000B84F                 mov     rcx, [rsi]      ; Buf1
.text:000000018000B852
.text:000000018000B852 loc_18000B852:                          ; CODE XREF: sub_18000B760+ED↑j
.text:000000018000B852                 mov     rdi, [r14+30h]
.text:000000018000B856                 mov     rbx, [rsi+10h]
.text:000000018000B85A                 mov     r8, rbx
.text:000000018000B85D                 cmp     rdi, rbx
.text:000000018000B860                 cmovb   r8, rdi         ; Size
.text:000000018000B864                 call    memcmp
.text:000000018000B869                 test    eax, eax
.text:000000018000B86B                 jnz     short loc_18000B881
.text:000000018000B86D                 cmp     rbx, rdi
.text:000000018000B870                 jnb     short loc_18000B879
.text:000000018000B872                 mov     eax, 0FFFFFFFFh
.text:000000018000B877                 jmp     short loc_18000B881
.text:000000018000B879 ; ---------------------------------------------------------------------------
.text:000000018000B879
.text:000000018000B879 loc_18000B879:                          ; CODE XREF: sub_18000B760+110↑j
.text:000000018000B879                 xor     eax, eax
.text:000000018000B87B                 cmp     rbx, rdi
.text:000000018000B87E                 setnbe  al
.text:000000018000B881
.text:000000018000B881 loc_18000B881:                          ; CODE XREF: sub_18000B760+10B↑j
.text:000000018000B881                                         ; sub_18000B760+117↑j
.text:000000018000B881                 shr     eax, 1Fh
.text:000000018000B884                 test    al, al
.text:000000018000B886                 jnz     short loc_18000B891
.text:000000018000B888                 mov     [r15], r14
.text:000000018000B88B                 mov     [r15+8], al
.text:000000018000B88F                 jmp     short loc_18000B90C
.text:000000018000B891 ; ---------------------------------------------------------------------------
.text:000000018000B891
.text:000000018000B891 loc_18000B891:                          ; CODE XREF: sub_18000B760+D4↑j
.text:000000018000B891                                         ; sub_18000B760+126↑j
.text:000000018000B891                 mov     rax, 38E38E38E38E38Eh
.text:000000018000B89B                 cmp     [rbp+8], rax
.text:000000018000B89F                 jz      loc_18000B927
.text:000000018000B8A5                 mov     qword ptr [rsp+88h+var_68], rbp
.text:000000018000B8AA                 mov     qword ptr [rsp+88h+var_68+8], 0
.text:000000018000B8B3                 mov     ecx, 48h ; 'H'  ; Size
.text:000000018000B8B8                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000B8BD                 mov     rdi, rax
.text:000000018000B8C0                 mov     qword ptr [rsp+88h+var_68+8], rax
.text:000000018000B8C5                 mov     rdx, rsi
.text:000000018000B8C8                 lea     rcx, [rax+20h]
.text:000000018000B8CC                 call    sub_180005770
.text:000000018000B8D1                 mov     rax, [rsi+20h]
.text:000000018000B8D5                 mov     [rdi+40h], rax
.text:000000018000B8D9                 mov     [rdi], r12
.text:000000018000B8DC                 mov     [rdi+8], r12
.text:000000018000B8E0                 mov     [rdi+10h], r12
.text:000000018000B8E4                 mov     word ptr [rdi+18h], 0
.text:000000018000B8EA                 movups  xmm0, [rsp+88h+var_50]
.text:000000018000B8EF                 movaps  [rsp+88h+var_68], xmm0
.text:000000018000B8F4                 mov     r8, rdi
.text:000000018000B8F7                 lea     rdx, [rsp+88h+var_68]
.text:000000018000B8FC                 mov     rcx, rbp
.text:000000018000B8FF                 call    sub_180006BA0
.text:000000018000B904                 mov     [r15], rax
.text:000000018000B907                 mov     byte ptr [r15+8], 1
.text:000000018000B90C
.text:000000018000B90C loc_18000B90C:                          ; CODE XREF: sub_18000B760+12F↑j
.text:000000018000B90C                 mov     rax, r15
.text:000000018000B90F                 mov     rbx, [rsp+88h+arg_18]
.text:000000018000B917                 add     rsp, 50h
.text:000000018000B91B                 pop     r15
.text:000000018000B91D                 pop     r14
.text:000000018000B91F                 pop     r13
.text:000000018000B921                 pop     r12
.text:000000018000B923                 pop     rdi
.text:000000018000B924                 pop     rsi
.text:000000018000B925                 pop     rbp
.text:000000018000B926                 retn
.text:000000018000B927 ; ---------------------------------------------------------------------------
.text:000000018000B927
.text:000000018000B927 loc_18000B927:                          ; CODE XREF: sub_18000B760+13F↑j
.text:000000018000B927                 call    sub_180002AA0
.text:000000018000B927 ; ---------------------------------------------------------------------------
.text:000000018000B92C                 db 0CCh
.text:000000018000B92C ; } // starts at 18000B760
.text:000000018000B92C sub_18000B760   endp
.text:000000018000B92C
.text:000000018000B92D algn_18000B92D:                         ; DATA XREF: .pdata:000000018001CA8C↓o
.text:000000018000B92D                 align 10h
.text:000000018000B930
.text:000000018000B930 ; =============== S U B R O U T I N E =======================================
.text:000000018000B930
.text:000000018000B930
.text:000000018000B930 sub_18000B930   proc near               ; CODE XREF: sub_180011760+7↓j
.text:000000018000B930                                         ; DATA XREF: .rdata:0000000180015D8B↓o ...
.text:000000018000B930
.text:000000018000B930 arg_8           = qword ptr  10h
.text:000000018000B930
.text:000000018000B930                 mov     [rsp+arg_8], rbx
.text:000000018000B935                 push    rdi
.text:000000018000B936                 sub     rsp, 20h
.text:000000018000B93A                 mov     rbx, [rcx+8]
.text:000000018000B93E                 mov     rdi, rcx
.text:000000018000B941                 test    rbx, rbx
.text:000000018000B944                 jz      short loc_18000B991
.text:000000018000B946                 mov     rdx, [rbx+38h]
.text:000000018000B94A                 cmp     rdx, 10h
.text:000000018000B94E                 jb      short loc_18000B97D
.text:000000018000B950                 mov     rcx, [rbx+20h]
.text:000000018000B954                 inc     rdx
.text:000000018000B957                 cmp     rdx, 1000h
.text:000000018000B95E                 jb      short loc_18000B978
.text:000000018000B960                 mov     r8, [rcx-8]
.text:000000018000B964                 add     rdx, 27h ; '''
.text:000000018000B968                 sub     rcx, r8
.text:000000018000B96B                 lea     rax, [rcx-8]
.text:000000018000B96F                 cmp     rax, 1Fh
.text:000000018000B973                 ja      short loc_18000B9AF
.text:000000018000B975                 mov     rcx, r8         ; Block
.text:000000018000B978
.text:000000018000B978 loc_18000B978:                          ; CODE XREF: sub_18000B930+2E↑j
.text:000000018000B978                 call    j_j_free
.text:000000018000B97D
.text:000000018000B97D loc_18000B97D:                          ; CODE XREF: sub_18000B930+1E↑j
.text:000000018000B97D                 mov     qword ptr [rbx+30h], 0
.text:000000018000B985                 mov     qword ptr [rbx+38h], 0Fh
.text:000000018000B98D                 mov     byte ptr [rbx+20h], 0
.text:000000018000B991
.text:000000018000B991 loc_18000B991:                          ; CODE XREF: sub_18000B930+14↑j
.text:000000018000B991                 mov     rcx, [rdi+8]    ; Block
.text:000000018000B995                 test    rcx, rcx
.text:000000018000B998                 jz      short loc_18000B9A4
.text:000000018000B99A                 mov     edx, 48h ; 'H'
.text:000000018000B99F                 call    j_j_free
.text:000000018000B9A4
.text:000000018000B9A4 loc_18000B9A4:                          ; CODE XREF: sub_18000B930+68↑j
.text:000000018000B9A4                 mov     rbx, [rsp+28h+arg_8]
.text:000000018000B9A9                 add     rsp, 20h
.text:000000018000B9AD                 pop     rdi
.text:000000018000B9AE                 retn
.text:000000018000B9AF ; ---------------------------------------------------------------------------
.text:000000018000B9AF
.text:000000018000B9AF loc_18000B9AF:                          ; CODE XREF: sub_18000B930+43↑j
.text:000000018000B9AF                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000B9AF ; ---------------------------------------------------------------------------
.text:000000018000B9B5                 db 0CCh
.text:000000018000B9B5 sub_18000B930   endp
.text:000000018000B9B5
.text:000000018000B9B6 algn_18000B9B6:                         ; DATA XREF: .pdata:000000018001CA98↓o
.text:000000018000B9B6                 align 20h
.text:000000018000B9C0
.text:000000018000B9C0 ; =============== S U B R O U T I N E =======================================
.text:000000018000B9C0
.text:000000018000B9C0
.text:000000018000B9C0 sub_18000B9C0   proc near               ; CODE XREF: sub_180002E20+106↑p
.text:000000018000B9C0                                         ; sub_180002E20+178↑p ...
.text:000000018000B9C0
.text:000000018000B9C0 var_18          = dword ptr -18h
.text:000000018000B9C0 var_14          = byte ptr -14h
.text:000000018000B9C0 var_10          = qword ptr -10h
.text:000000018000B9C0 arg_0           = qword ptr  8
.text:000000018000B9C0 arg_8           = qword ptr  10h
.text:000000018000B9C0 arg_10          = qword ptr  18h
.text:000000018000B9C0 arg_18          = qword ptr  20h
.text:000000018000B9C0 arg_20          = dword ptr  28h
.text:000000018000B9C0 arg_28          = dword ptr  30h
.text:000000018000B9C0
.text:000000018000B9C0                 mov     [rsp+arg_0], rbx
.text:000000018000B9C5                 mov     [rsp+arg_8], rbp
.text:000000018000B9CA                 mov     [rsp+arg_10], rsi
.text:000000018000B9CF                 mov     [rsp+arg_18], rdi
.text:000000018000B9D4                 push    r14
.text:000000018000B9D6                 sub     rsp, 30h
.text:000000018000B9DA                 mov     ebp, r8d
.text:000000018000B9DD                 mov     [rsp+38h+var_10], 0
.text:000000018000B9E6                 mov     r14d, edx
.text:000000018000B9E9                 mov     r8d, 24h ; '$'
.text:000000018000B9EF                 lea     rdx, [rsp+38h+var_10]
.text:000000018000B9F4                 mov     esi, r9d
.text:000000018000B9F7                 mov     rdi, rcx
.text:000000018000B9FA                 mov     ebx, 80004005h
.text:000000018000B9FF                 call    sub_18000DCA0
.text:000000018000BA04                 test    eax, eax
.text:000000018000BA06                 jnz     short loc_18000BA2F
.text:000000018000BA08                 mov     rax, [rsp+38h+var_10]
.text:000000018000BA0D                 xor     ebx, ebx
.text:000000018000BA0F                 mov     dword ptr [rax], 24h ; '$'
.text:000000018000BA15                 mov     rax, [rsp+38h+var_10]
.text:000000018000BA1A                 mov     dword ptr [rax+8], 0F0000039h
.text:000000018000BA21                 mov     rax, [rsp+38h+var_10]
.text:000000018000BA26                 mov     dword ptr [rax+4], 5
.text:000000018000BA2D                 jmp     short loc_18000BA4E
.text:000000018000BA2F ; ---------------------------------------------------------------------------
.text:000000018000BA2F
.text:000000018000BA2F loc_18000BA2F:                          ; CODE XREF: sub_18000B9C0+46↑j
.text:000000018000BA2F                 cmp     eax, 2
.text:000000018000BA32                 jnz     short loc_18000BA8D
.text:000000018000BA34                 lea     r8, [rsp+38h+var_18]
.text:000000018000BA39                 mov     rcx, rdi
.text:000000018000BA3C                 lea     rdx, [rsp+38h+var_14]
.text:000000018000BA41                 call    sub_18000CF90
.text:000000018000BA46                 mov     ebx, [rsp+38h+var_18]
.text:000000018000BA4A                 test    ebx, ebx
.text:000000018000BA4C                 js      short loc_18000BA8D
.text:000000018000BA4E
.text:000000018000BA4E loc_18000BA4E:                          ; CODE XREF: sub_18000B9C0+6D↑j
.text:000000018000BA4E                 mov     rcx, [rsp+38h+var_10]
.text:000000018000BA53                 movss   xmm0, [rsp+38h+arg_20]
.text:000000018000BA59                 mov     edx, [rsp+38h+arg_28]
.text:000000018000BA5D                 mov     [rcx+10h], r14d
.text:000000018000BA61                 mov     rcx, [rsp+38h+var_10]
.text:000000018000BA66                 mov     [rcx+14h], ebp
.text:000000018000BA69                 mov     rcx, [rsp+38h+var_10]
.text:000000018000BA6E                 mov     [rcx+18h], esi
.text:000000018000BA71                 mov     rcx, [rsp+38h+var_10]
.text:000000018000BA76                 movss   dword ptr [rcx+1Ch], xmm0
.text:000000018000BA7B                 mov     rcx, [rsp+38h+var_10]
.text:000000018000BA80                 mov     [rcx+20h], edx
.text:000000018000BA83                 mov     rcx, rdi
.text:000000018000BA86                 call    sub_18000CCB0
.text:000000018000BA8B                 jmp     short loc_18000BAA5
.text:000000018000BA8D ; ---------------------------------------------------------------------------
.text:000000018000BA8D
.text:000000018000BA8D loc_18000BA8D:                          ; CODE XREF: sub_18000B9C0+72↑j
.text:000000018000BA8D                                         ; sub_18000B9C0+8C↑j
.text:000000018000BA8D                 mov     rdx, [rsp+38h+var_10]
.text:000000018000BA92                 test    rdx, rdx
.text:000000018000BA95                 jz      short loc_18000BAA5
.text:000000018000BA97                 mov     r8d, 24h ; '$'
.text:000000018000BA9D                 mov     rcx, rdi
.text:000000018000BAA0                 call    sub_18000DBE0
.text:000000018000BAA5
.text:000000018000BAA5 loc_18000BAA5:                          ; CODE XREF: sub_18000B9C0+CB↑j
.text:000000018000BAA5                                         ; sub_18000B9C0+D5↑j
.text:000000018000BAA5                 mov     rbp, [rsp+38h+arg_8]
.text:000000018000BAAA                 mov     eax, ebx
.text:000000018000BAAC                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000BAB1                 mov     rsi, [rsp+38h+arg_10]
.text:000000018000BAB6                 mov     rdi, [rsp+38h+arg_18]
.text:000000018000BABB                 add     rsp, 30h
.text:000000018000BABF                 pop     r14
.text:000000018000BAC1                 retn
.text:000000018000BAC1 sub_18000B9C0   endp
.text:000000018000BAC1
.text:000000018000BAC1 ; ---------------------------------------------------------------------------
.text:000000018000BAC2 algn_18000BAC2:                         ; DATA XREF: .pdata:000000018001CAA4↓o
.text:000000018000BAC2                 align 10h
.text:000000018000BAD0
.text:000000018000BAD0 ; =============== S U B R O U T I N E =======================================
.text:000000018000BAD0
.text:000000018000BAD0
.text:000000018000BAD0 sub_18000BAD0   proc near               ; CODE XREF: sub_180002E20+363↑p
.text:000000018000BAD0                                         ; DATA XREF: .pdata:000000018001CAB0↓o
.text:000000018000BAD0
.text:000000018000BAD0 var_18          = byte ptr -18h
.text:000000018000BAD0 arg_18          = dword ptr  20h
.text:000000018000BAD0
.text:000000018000BAD0                 push    rbx
.text:000000018000BAD2                 sub     rsp, 30h
.text:000000018000BAD6                 mov     rbx, rcx
.text:000000018000BAD9                 call    sub_18000DA20
.text:000000018000BADE                 test    eax, eax
.text:000000018000BAE0                 jnz     short loc_18000BAE8
.text:000000018000BAE2                 add     rsp, 30h
.text:000000018000BAE6                 pop     rbx
.text:000000018000BAE7                 retn
.text:000000018000BAE8 ; ---------------------------------------------------------------------------
.text:000000018000BAE8
.text:000000018000BAE8 loc_18000BAE8:                          ; CODE XREF: sub_18000BAD0+10↑j
.text:000000018000BAE8                 cmp     eax, 2
.text:000000018000BAEB                 jnz     short loc_18000BB09
.text:000000018000BAED                 lea     r8, [rsp+38h+arg_18]
.text:000000018000BAF2                 mov     rcx, rbx
.text:000000018000BAF5                 lea     rdx, [rsp+38h+var_18]
.text:000000018000BAFA                 call    sub_18000CF90
.text:000000018000BAFF                 mov     eax, [rsp+38h+arg_18]
.text:000000018000BB03                 add     rsp, 30h
.text:000000018000BB07                 pop     rbx
.text:000000018000BB08                 retn
.text:000000018000BB09 ; ---------------------------------------------------------------------------
.text:000000018000BB09
.text:000000018000BB09 loc_18000BB09:                          ; CODE XREF: sub_18000BAD0+1B↑j
.text:000000018000BB09                 mov     eax, 80004005h
.text:000000018000BB0E                 add     rsp, 30h
.text:000000018000BB12                 pop     rbx
.text:000000018000BB13                 retn
.text:000000018000BB13 sub_18000BAD0   endp
.text:000000018000BB13
.text:000000018000BB13 ; ---------------------------------------------------------------------------
.text:000000018000BB14 algn_18000BB14:                         ; DATA XREF: .pdata:000000018001CAB0↓o
.text:000000018000BB14                 align 20h
.text:000000018000BB20
.text:000000018000BB20 ; =============== S U B R O U T I N E =======================================
.text:000000018000BB20
.text:000000018000BB20
.text:000000018000BB20 sub_18000BB20   proc near               ; CODE XREF: sub_180003260+82↑p
.text:000000018000BB20                                         ; sub_180003260+195↑p ...
.text:000000018000BB20
.text:000000018000BB20 var_18          = qword ptr -18h
.text:000000018000BB20 arg_0           = qword ptr  8
.text:000000018000BB20 arg_8           = qword ptr  10h
.text:000000018000BB20 arg_10          = dword ptr  18h
.text:000000018000BB20 arg_18          = byte ptr  20h
.text:000000018000BB20
.text:000000018000BB20                 mov     [rsp+arg_0], rbx
.text:000000018000BB25                 mov     [rsp+arg_8], rsi
.text:000000018000BB2A                 push    rdi
.text:000000018000BB2B                 sub     rsp, 30h
.text:000000018000BB2F                 mov     esi, edx
.text:000000018000BB31                 mov     [rsp+38h+var_18], 0
.text:000000018000BB3A                 lea     rdx, [rsp+38h+var_18]
.text:000000018000BB3F                 mov     r8d, 14h
.text:000000018000BB45                 mov     rdi, rcx
.text:000000018000BB48                 mov     ebx, 80004005h
.text:000000018000BB4D                 call    sub_18000DCA0
.text:000000018000BB52                 test    eax, eax
.text:000000018000BB54                 jnz     short loc_18000BB9D
.text:000000018000BB56                 mov     rax, [rsp+38h+var_18]
.text:000000018000BB5B                 xor     ebx, ebx
.text:000000018000BB5D                 mov     dword ptr [rax], 14h
.text:000000018000BB63                 mov     rax, [rsp+38h+var_18]
.text:000000018000BB68                 mov     dword ptr [rax+8], 0F000003Ah
.text:000000018000BB6F                 mov     rax, [rsp+38h+var_18]
.text:000000018000BB74                 mov     dword ptr [rax+4], 5
.text:000000018000BB7B                 mov     rcx, [rsp+38h+var_18]
.text:000000018000BB80                 mov     [rcx+10h], esi
.text:000000018000BB83                 mov     rcx, rdi
.text:000000018000BB86                 call    sub_18000CCB0
.text:000000018000BB8B                 mov     eax, ebx
.text:000000018000BB8D                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000BB92                 mov     rsi, [rsp+38h+arg_8]
.text:000000018000BB97                 add     rsp, 30h
.text:000000018000BB9B                 pop     rdi
.text:000000018000BB9C                 retn
.text:000000018000BB9D ; ---------------------------------------------------------------------------
.text:000000018000BB9D
.text:000000018000BB9D loc_18000BB9D:                          ; CODE XREF: sub_18000BB20+34↑j
.text:000000018000BB9D                 cmp     eax, 2
.text:000000018000BBA0                 jnz     short loc_18000BBDE
.text:000000018000BBA2                 lea     r8, [rsp+38h+arg_10]
.text:000000018000BBA7                 mov     rcx, rdi
.text:000000018000BBAA                 lea     rdx, [rsp+38h+arg_18]
.text:000000018000BBAF                 call    sub_18000CF90
.text:000000018000BBB4                 mov     ebx, [rsp+38h+arg_10]
.text:000000018000BBB8                 test    ebx, ebx
.text:000000018000BBBA                 js      short loc_18000BBDE
.text:000000018000BBBC                 mov     rcx, [rsp+38h+var_18]
.text:000000018000BBC1                 mov     [rcx+10h], esi
.text:000000018000BBC4                 mov     rcx, rdi
.text:000000018000BBC7                 call    sub_18000CCB0
.text:000000018000BBCC                 mov     eax, ebx
.text:000000018000BBCE                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000BBD3                 mov     rsi, [rsp+38h+arg_8]
.text:000000018000BBD8                 add     rsp, 30h
.text:000000018000BBDC                 pop     rdi
.text:000000018000BBDD                 retn
.text:000000018000BBDE ; ---------------------------------------------------------------------------
.text:000000018000BBDE
.text:000000018000BBDE loc_18000BBDE:                          ; CODE XREF: sub_18000BB20+80↑j
.text:000000018000BBDE                                         ; sub_18000BB20+9A↑j
.text:000000018000BBDE                 mov     rdx, [rsp+38h+var_18]
.text:000000018000BBE3                 test    rdx, rdx
.text:000000018000BBE6                 jz      short loc_18000BBF6
.text:000000018000BBE8                 mov     r8d, 14h
.text:000000018000BBEE                 mov     rcx, rdi
.text:000000018000BBF1                 call    sub_18000DBE0
.text:000000018000BBF6
.text:000000018000BBF6 loc_18000BBF6:                          ; CODE XREF: sub_18000BB20+C6↑j
.text:000000018000BBF6                 mov     rsi, [rsp+38h+arg_8]
.text:000000018000BBFB                 mov     eax, ebx
.text:000000018000BBFD                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000BC02                 add     rsp, 30h
.text:000000018000BC06                 pop     rdi
.text:000000018000BC07                 retn
.text:000000018000BC07 sub_18000BB20   endp
.text:000000018000BC07
.text:000000018000BC07 ; ---------------------------------------------------------------------------
.text:000000018000BC08 algn_18000BC08:                         ; DATA XREF: .pdata:000000018001CABC↓o
.text:000000018000BC08                 align 10h
.text:000000018000BC10
.text:000000018000BC10 ; =============== S U B R O U T I N E =======================================
.text:000000018000BC10
.text:000000018000BC10
.text:000000018000BC10 sub_18000BC10   proc near               ; CODE XREF: sub_180003260+1C9↑p
.text:000000018000BC10                                         ; DATA XREF: .pdata:000000018001CAC8↓o
.text:000000018000BC10
.text:000000018000BC10 arg_0           = qword ptr  8
.text:000000018000BC10 arg_8           = qword ptr  10h
.text:000000018000BC10
.text:000000018000BC10                 mov     [rsp+arg_0], rbx
.text:000000018000BC15                 mov     [rsp+arg_8], rsi
.text:000000018000BC1A                 push    rdi
.text:000000018000BC1B                 sub     rsp, 20h
.text:000000018000BC1F                 mov     rbx, rcx
.text:000000018000BC22                 mov     edi, 80004005h
.text:000000018000BC27                 call    sub_18000DDF0
.text:000000018000BC2C                 xor     esi, esi
.text:000000018000BC2E                 mov     rcx, rbx
.text:000000018000BC31                 test    eax, eax
.text:000000018000BC33                 cmovz   edi, esi
.text:000000018000BC36                 call    sub_18000CE00
.text:000000018000BC3B                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000BC40                 test    eax, eax
.text:000000018000BC42                 cmovz   edi, esi
.text:000000018000BC45                 mov     rsi, [rsp+28h+arg_8]
.text:000000018000BC4A                 mov     eax, edi
.text:000000018000BC4C                 add     rsp, 20h
.text:000000018000BC50                 pop     rdi
.text:000000018000BC51                 retn
.text:000000018000BC51 sub_18000BC10   endp
.text:000000018000BC51
.text:000000018000BC51 ; ---------------------------------------------------------------------------
.text:000000018000BC52 algn_18000BC52:                         ; DATA XREF: .pdata:000000018001CAC8↓o
.text:000000018000BC52                 align 20h
.text:000000018000BC60
.text:000000018000BC60 ; =============== S U B R O U T I N E =======================================
.text:000000018000BC60
.text:000000018000BC60
.text:000000018000BC60 sub_18000BC60   proc near               ; CODE XREF: sub_18000A6F0+558↑p
.text:000000018000BC60                                         ; DATA XREF: .pdata:000000018001CAD4↓o
.text:000000018000BC60
.text:000000018000BC60 var_18          = dword ptr -18h
.text:000000018000BC60 var_14          = byte ptr -14h
.text:000000018000BC60 var_10          = qword ptr -10h
.text:000000018000BC60 arg_0           = qword ptr  8
.text:000000018000BC60 arg_8           = qword ptr  10h
.text:000000018000BC60 arg_10          = qword ptr  18h
.text:000000018000BC60 arg_18          = qword ptr  20h
.text:000000018000BC60
.text:000000018000BC60                 mov     [rsp+arg_0], rbx
.text:000000018000BC65                 mov     [rsp+arg_8], rbp
.text:000000018000BC6A                 mov     [rsp+arg_10], rsi
.text:000000018000BC6F                 mov     [rsp+arg_18], rdi
.text:000000018000BC74                 push    r14
.text:000000018000BC76                 sub     rsp, 30h
.text:000000018000BC7A                 mov     ebp, r8d
.text:000000018000BC7D                 mov     [rsp+38h+var_10], 0
.text:000000018000BC86                 mov     r14d, edx
.text:000000018000BC89                 mov     r8d, 1Ch
.text:000000018000BC8F                 lea     rdx, [rsp+38h+var_10]
.text:000000018000BC94                 mov     esi, r9d
.text:000000018000BC97                 mov     rdi, rcx
.text:000000018000BC9A                 mov     ebx, 80004005h
.text:000000018000BC9F                 call    sub_18000DCA0
.text:000000018000BCA4                 test    eax, eax
.text:000000018000BCA6                 jnz     short loc_18000BCCF
.text:000000018000BCA8                 mov     rax, [rsp+38h+var_10]
.text:000000018000BCAD                 xor     ebx, ebx
.text:000000018000BCAF                 mov     dword ptr [rax], 1Ch
.text:000000018000BCB5                 mov     rax, [rsp+38h+var_10]
.text:000000018000BCBA                 mov     dword ptr [rax+8], 0F0000038h
.text:000000018000BCC1                 mov     rax, [rsp+38h+var_10]
.text:000000018000BCC6                 mov     dword ptr [rax+4], 5
.text:000000018000BCCD                 jmp     short loc_18000BCEE
.text:000000018000BCCF ; ---------------------------------------------------------------------------
.text:000000018000BCCF
.text:000000018000BCCF loc_18000BCCF:                          ; CODE XREF: sub_18000BC60+46↑j
.text:000000018000BCCF                 cmp     eax, 2
.text:000000018000BCD2                 jnz     short loc_18000BD11
.text:000000018000BCD4                 lea     r8, [rsp+38h+var_18]
.text:000000018000BCD9                 mov     rcx, rdi
.text:000000018000BCDC                 lea     rdx, [rsp+38h+var_14]
.text:000000018000BCE1                 call    sub_18000CF90
.text:000000018000BCE6                 mov     ebx, [rsp+38h+var_18]
.text:000000018000BCEA                 test    ebx, ebx
.text:000000018000BCEC                 js      short loc_18000BD11
.text:000000018000BCEE
.text:000000018000BCEE loc_18000BCEE:                          ; CODE XREF: sub_18000BC60+6D↑j
.text:000000018000BCEE                 mov     rcx, [rsp+38h+var_10]
.text:000000018000BCF3                 mov     [rcx+10h], r14d
.text:000000018000BCF7                 mov     rcx, [rsp+38h+var_10]
.text:000000018000BCFC                 mov     [rcx+14h], ebp
.text:000000018000BCFF                 mov     rcx, [rsp+38h+var_10]
.text:000000018000BD04                 mov     [rcx+18h], esi
.text:000000018000BD07                 mov     rcx, rdi
.text:000000018000BD0A                 call    sub_18000CCB0
.text:000000018000BD0F                 jmp     short loc_18000BD29
.text:000000018000BD11 ; ---------------------------------------------------------------------------
.text:000000018000BD11
.text:000000018000BD11 loc_18000BD11:                          ; CODE XREF: sub_18000BC60+72↑j
.text:000000018000BD11                                         ; sub_18000BC60+8C↑j
.text:000000018000BD11                 mov     rdx, [rsp+38h+var_10]
.text:000000018000BD16                 test    rdx, rdx
.text:000000018000BD19                 jz      short loc_18000BD29
.text:000000018000BD1B                 mov     r8d, 1Ch
.text:000000018000BD21                 mov     rcx, rdi
.text:000000018000BD24                 call    sub_18000DBE0
.text:000000018000BD29
.text:000000018000BD29 loc_18000BD29:                          ; CODE XREF: sub_18000BC60+AF↑j
.text:000000018000BD29                                         ; sub_18000BC60+B9↑j
.text:000000018000BD29                 mov     rbp, [rsp+38h+arg_8]
.text:000000018000BD2E                 mov     eax, ebx
.text:000000018000BD30                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000BD35                 mov     rsi, [rsp+38h+arg_10]
.text:000000018000BD3A                 mov     rdi, [rsp+38h+arg_18]
.text:000000018000BD3F                 add     rsp, 30h
.text:000000018000BD43                 pop     r14
.text:000000018000BD45                 retn
.text:000000018000BD45 sub_18000BC60   endp
.text:000000018000BD45
.text:000000018000BD45 ; ---------------------------------------------------------------------------
.text:000000018000BD46 algn_18000BD46:                         ; DATA XREF: .pdata:000000018001CAD4↓o
.text:000000018000BD46                 align 10h
.text:000000018000BD50
.text:000000018000BD50 ; =============== S U B R O U T I N E =======================================
.text:000000018000BD50
.text:000000018000BD50
.text:000000018000BD50 sub_18000BD50   proc near               ; CODE XREF: sub_180004ED0+9F↑p
.text:000000018000BD50                                         ; sub_1800051C0+DE↑p ...
.text:000000018000BD50
.text:000000018000BD50 arg_8           = dword ptr  10h
.text:000000018000BD50
.text:000000018000BD50                 push    rbx
.text:000000018000BD52                 sub     rsp, 20h
.text:000000018000BD56                 mov     [rsp+28h+arg_8], 0
.text:000000018000BD5E                 mov     rbx, rdx
.text:000000018000BD61                 test    rdx, rdx
.text:000000018000BD64                 jz      short loc_18000BD82
.text:000000018000BD66                 lea     rdx, [rsp+28h+arg_8]
.text:000000018000BD6B                 call    sub_18000CFB0
.text:000000018000BD70                 test    eax, eax
.text:000000018000BD72                 jnz     short loc_18000BD82
.text:000000018000BD74                 mov     eax, [rsp+28h+arg_8]
.text:000000018000BD78                 mov     [rbx], eax
.text:000000018000BD7A                 xor     eax, eax
.text:000000018000BD7C                 add     rsp, 20h
.text:000000018000BD80                 pop     rbx
.text:000000018000BD81                 retn
.text:000000018000BD82 ; ---------------------------------------------------------------------------
.text:000000018000BD82
.text:000000018000BD82 loc_18000BD82:                          ; CODE XREF: sub_18000BD50+14↑j
.text:000000018000BD82                                         ; sub_18000BD50+22↑j
.text:000000018000BD82                 mov     eax, 80004005h
.text:000000018000BD87                 add     rsp, 20h
.text:000000018000BD8B                 pop     rbx
.text:000000018000BD8C                 retn
.text:000000018000BD8C sub_18000BD50   endp
.text:000000018000BD8C
.text:000000018000BD8C ; ---------------------------------------------------------------------------
.text:000000018000BD8D algn_18000BD8D:                         ; DATA XREF: .pdata:000000018001CAE0↓o
.text:000000018000BD8D                 align 10h
.text:000000018000BD90
.text:000000018000BD90 ; =============== S U B R O U T I N E =======================================
.text:000000018000BD90
.text:000000018000BD90
.text:000000018000BD90 sub_18000BD90   proc near               ; CODE XREF: sub_180002E20+BC↑p
.text:000000018000BD90                                         ; sub_180002E20+133↑p ...
.text:000000018000BD90
.text:000000018000BD90 var_28          = byte ptr -28h
.text:000000018000BD90 var_20          = qword ptr -20h
.text:000000018000BD90 arg_0           = qword ptr  8
.text:000000018000BD90 arg_8           = qword ptr  10h
.text:000000018000BD90 arg_18          = dword ptr  20h
.text:000000018000BD90
.text:000000018000BD90                 mov     [rsp+arg_0], rbx
.text:000000018000BD95                 mov     [rsp+arg_8], rbp
.text:000000018000BD9A                 push    rsi
.text:000000018000BD9B                 push    rdi
.text:000000018000BD9C                 push    r14
.text:000000018000BD9E                 sub     rsp, 30h
.text:000000018000BDA2                 mov     ebp, r8d
.text:000000018000BDA5                 mov     rdi, rdx
.text:000000018000BDA8                 xor     r14d, r14d
.text:000000018000BDAB                 lea     rdx, [rsp+48h+var_20]
.text:000000018000BDB0                 mov     r8d, 114h
.text:000000018000BDB6                 mov     [rsp+48h+var_20], r14
.text:000000018000BDBB                 mov     rsi, rcx
.text:000000018000BDBE                 mov     ebx, 80004005h
.text:000000018000BDC3                 call    sub_18000DCA0
.text:000000018000BDC8                 test    eax, eax
.text:000000018000BDCA                 jnz     short loc_18000BDF4
.text:000000018000BDCC                 mov     rax, [rsp+48h+var_20]
.text:000000018000BDD1                 mov     ebx, r14d
.text:000000018000BDD4                 mov     dword ptr [rax], 114h
.text:000000018000BDDA                 mov     rax, [rsp+48h+var_20]
.text:000000018000BDDF                 mov     dword ptr [rax+8], 0F0000037h
.text:000000018000BDE6                 mov     rax, [rsp+48h+var_20]
.text:000000018000BDEB                 mov     dword ptr [rax+4], 5
.text:000000018000BDF2                 jmp     short loc_18000BE13
.text:000000018000BDF4 ; ---------------------------------------------------------------------------
.text:000000018000BDF4
.text:000000018000BDF4 loc_18000BDF4:                          ; CODE XREF: sub_18000BD90+3A↑j
.text:000000018000BDF4                 cmp     eax, 2
.text:000000018000BDF7                 jnz     short loc_18000BE0F
.text:000000018000BDF9                 lea     r8, [rsp+48h+arg_18]
.text:000000018000BDFE                 mov     rcx, rsi
.text:000000018000BE01                 lea     rdx, [rsp+48h+var_28]
.text:000000018000BE06                 call    sub_18000CF90
.text:000000018000BE0B                 mov     ebx, [rsp+48h+arg_18]
.text:000000018000BE0F
.text:000000018000BE0F loc_18000BE0F:                          ; CODE XREF: sub_18000BD90+67↑j
.text:000000018000BE0F                 test    ebx, ebx
.text:000000018000BE11                 js      short loc_18000BE68
.text:000000018000BE13
.text:000000018000BE13 loc_18000BE13:                          ; CODE XREF: sub_18000BD90+62↑j
.text:000000018000BE13                 mov     rcx, [rsp+48h+var_20]
.text:000000018000BE18                 test    rdi, rdi
.text:000000018000BE1B                 jz      short loc_18000BE95
.text:000000018000BE1D                 add     rcx, 10h
.text:000000018000BE21                 mov     edx, 100h
.text:000000018000BE26                 sub     rdi, rcx
.text:000000018000BE29                 nop     dword ptr [rax+00000000h]
.text:000000018000BE30
.text:000000018000BE30 loc_18000BE30:                          ; CODE XREF: sub_18000BD90+BD↓j
.text:000000018000BE30                 lea     rax, [rdx+7FFFFEFEh]
.text:000000018000BE37                 test    rax, rax
.text:000000018000BE3A                 jz      short loc_18000BE4F
.text:000000018000BE3C                 movzx   eax, byte ptr [rdi+rcx]
.text:000000018000BE40                 test    al, al
.text:000000018000BE42                 jz      short loc_18000BE4F
.text:000000018000BE44                 mov     [rcx], al
.text:000000018000BE46                 inc     rcx
.text:000000018000BE49                 sub     rdx, 1
.text:000000018000BE4D                 jnz     short loc_18000BE30
.text:000000018000BE4F
.text:000000018000BE4F loc_18000BE4F:                          ; CODE XREF: sub_18000BD90+AA↑j
.text:000000018000BE4F                                         ; sub_18000BD90+B2↑j
.text:000000018000BE4F                 test    rdx, rdx
.text:000000018000BE52                 lea     rax, [rcx-1]
.text:000000018000BE56                 mov     ebx, 8007007Ah
.text:000000018000BE5B                 cmovnz  rax, rcx
.text:000000018000BE5F                 cmovnz  ebx, r14d
.text:000000018000BE63                 mov     [rax], r14b
.text:000000018000BE66                 jnz     short loc_18000BE99
.text:000000018000BE68
.text:000000018000BE68 loc_18000BE68:                          ; CODE XREF: sub_18000BD90+81↑j
.text:000000018000BE68                 mov     rdx, [rsp+48h+var_20]
.text:000000018000BE6D                 test    rdx, rdx
.text:000000018000BE70                 jz      short loc_18000BE80
.text:000000018000BE72                 mov     r8d, 114h
.text:000000018000BE78                 mov     rcx, rsi
.text:000000018000BE7B                 call    sub_18000DBE0
.text:000000018000BE80
.text:000000018000BE80 loc_18000BE80:                          ; CODE XREF: sub_18000BD90+E0↑j
.text:000000018000BE80                                         ; sub_18000BD90+11C↓j
.text:000000018000BE80                 mov     rbp, [rsp+48h+arg_8]
.text:000000018000BE85                 mov     eax, ebx
.text:000000018000BE87                 mov     rbx, [rsp+48h+arg_0]
.text:000000018000BE8C                 add     rsp, 30h
.text:000000018000BE90                 pop     r14
.text:000000018000BE92                 pop     rdi
.text:000000018000BE93                 pop     rsi
.text:000000018000BE94                 retn
.text:000000018000BE95 ; ---------------------------------------------------------------------------
.text:000000018000BE95
.text:000000018000BE95 loc_18000BE95:                          ; CODE XREF: sub_18000BD90+8B↑j
.text:000000018000BE95                 mov     [rcx+10h], r14b
.text:000000018000BE99
.text:000000018000BE99 loc_18000BE99:                          ; CODE XREF: sub_18000BD90+D6↑j
.text:000000018000BE99                 mov     rcx, [rsp+48h+var_20]
.text:000000018000BE9E                 mov     [rcx+110h], ebp
.text:000000018000BEA4                 mov     rcx, rsi
.text:000000018000BEA7                 call    sub_18000CCB0
.text:000000018000BEAC                 jmp     short loc_18000BE80
.text:000000018000BEAC sub_18000BD90   endp
.text:000000018000BEAC
.text:000000018000BEAC ; ---------------------------------------------------------------------------
.text:000000018000BEAE algn_18000BEAE:                         ; DATA XREF: .pdata:000000018001CAEC↓o
.text:000000018000BEAE                 align 10h
.text:000000018000BEB0
.text:000000018000BEB0 ; =============== S U B R O U T I N E =======================================
.text:000000018000BEB0
.text:000000018000BEB0
.text:000000018000BEB0 sub_18000BEB0   proc near               ; CODE XREF: sub_180002E20+33↑p
.text:000000018000BEB0                                         ; sub_180002E20+47↑p ...
.text:000000018000BEB0
.text:000000018000BEB0 var_28          = byte ptr -28h
.text:000000018000BEB0 var_20          = qword ptr -20h
.text:000000018000BEB0 arg_0           = qword ptr  8
.text:000000018000BEB0 arg_8           = qword ptr  10h
.text:000000018000BEB0 arg_18          = dword ptr  20h
.text:000000018000BEB0
.text:000000018000BEB0                 mov     [rsp+arg_0], rbx
.text:000000018000BEB5                 mov     [rsp+arg_8], rbp
.text:000000018000BEBA                 push    rsi
.text:000000018000BEBB                 push    rdi
.text:000000018000BEBC                 push    r14
.text:000000018000BEBE                 sub     rsp, 30h
.text:000000018000BEC2                 mov     rdi, r8
.text:000000018000BEC5                 mov     ebp, edx
.text:000000018000BEC7                 xor     r14d, r14d
.text:000000018000BECA                 lea     rdx, [rsp+48h+var_20]
.text:000000018000BECF                 mov     r8d, 114h
.text:000000018000BED5                 mov     [rsp+48h+var_20], r14
.text:000000018000BEDA                 mov     rsi, rcx
.text:000000018000BEDD                 mov     ebx, 80004005h
.text:000000018000BEE2                 call    sub_18000DCA0
.text:000000018000BEE7                 test    eax, eax
.text:000000018000BEE9                 jnz     short loc_18000BF13
.text:000000018000BEEB                 mov     rax, [rsp+48h+var_20]
.text:000000018000BEF0                 mov     ebx, r14d
.text:000000018000BEF3                 mov     dword ptr [rax], 114h
.text:000000018000BEF9                 mov     rax, [rsp+48h+var_20]
.text:000000018000BEFE                 mov     dword ptr [rax+8], 0F0000004h
.text:000000018000BF05                 mov     rax, [rsp+48h+var_20]
.text:000000018000BF0A                 mov     dword ptr [rax+4], 5
.text:000000018000BF11                 jmp     short loc_18000BF32
.text:000000018000BF13 ; ---------------------------------------------------------------------------
.text:000000018000BF13
.text:000000018000BF13 loc_18000BF13:                          ; CODE XREF: sub_18000BEB0+39↑j
.text:000000018000BF13                 cmp     eax, 2
.text:000000018000BF16                 jnz     short loc_18000BF2E
.text:000000018000BF18                 lea     r8, [rsp+48h+arg_18]
.text:000000018000BF1D                 mov     rcx, rsi
.text:000000018000BF20                 lea     rdx, [rsp+48h+var_28]
.text:000000018000BF25                 call    sub_18000CF90
.text:000000018000BF2A                 mov     ebx, [rsp+48h+arg_18]
.text:000000018000BF2E
.text:000000018000BF2E loc_18000BF2E:                          ; CODE XREF: sub_18000BEB0+66↑j
.text:000000018000BF2E                 test    ebx, ebx
.text:000000018000BF30                 js      short loc_18000BF88
.text:000000018000BF32
.text:000000018000BF32 loc_18000BF32:                          ; CODE XREF: sub_18000BEB0+61↑j
.text:000000018000BF32                 mov     rax, [rsp+48h+var_20]
.text:000000018000BF37                 mov     [rax+10h], ebp
.text:000000018000BF3A                 mov     rcx, [rsp+48h+var_20]
.text:000000018000BF3F                 test    rdi, rdi
.text:000000018000BF42                 jz      short loc_18000BFB5
.text:000000018000BF44                 add     rcx, 14h
.text:000000018000BF48                 mov     edx, 100h
.text:000000018000BF4D                 sub     rdi, rcx
.text:000000018000BF50
.text:000000018000BF50 loc_18000BF50:                          ; CODE XREF: sub_18000BEB0+BD↓j
.text:000000018000BF50                 lea     rax, [rdx+7FFFFEFEh]
.text:000000018000BF57                 test    rax, rax
.text:000000018000BF5A                 jz      short loc_18000BF6F
.text:000000018000BF5C                 movzx   eax, byte ptr [rdi+rcx]
.text:000000018000BF60                 test    al, al
.text:000000018000BF62                 jz      short loc_18000BF6F
.text:000000018000BF64                 mov     [rcx], al
.text:000000018000BF66                 inc     rcx
.text:000000018000BF69                 sub     rdx, 1
.text:000000018000BF6D                 jnz     short loc_18000BF50
.text:000000018000BF6F
.text:000000018000BF6F loc_18000BF6F:                          ; CODE XREF: sub_18000BEB0+AA↑j
.text:000000018000BF6F                                         ; sub_18000BEB0+B2↑j
.text:000000018000BF6F                 test    rdx, rdx
.text:000000018000BF72                 lea     rax, [rcx-1]
.text:000000018000BF76                 mov     ebx, 8007007Ah
.text:000000018000BF7B                 cmovnz  rax, rcx
.text:000000018000BF7F                 cmovnz  ebx, r14d
.text:000000018000BF83                 mov     [rax], r14b
.text:000000018000BF86                 jnz     short loc_18000BFB9
.text:000000018000BF88
.text:000000018000BF88 loc_18000BF88:                          ; CODE XREF: sub_18000BEB0+80↑j
.text:000000018000BF88                 mov     rdx, [rsp+48h+var_20]
.text:000000018000BF8D                 test    rdx, rdx
.text:000000018000BF90                 jz      short loc_18000BFA0
.text:000000018000BF92                 mov     r8d, 114h
.text:000000018000BF98                 mov     rcx, rsi
.text:000000018000BF9B                 call    sub_18000DBE0
.text:000000018000BFA0
.text:000000018000BFA0 loc_18000BFA0:                          ; CODE XREF: sub_18000BEB0+E0↑j
.text:000000018000BFA0                                         ; sub_18000BEB0+111↓j
.text:000000018000BFA0                 mov     rbp, [rsp+48h+arg_8]
.text:000000018000BFA5                 mov     eax, ebx
.text:000000018000BFA7                 mov     rbx, [rsp+48h+arg_0]
.text:000000018000BFAC                 add     rsp, 30h
.text:000000018000BFB0                 pop     r14
.text:000000018000BFB2                 pop     rdi
.text:000000018000BFB3                 pop     rsi
.text:000000018000BFB4                 retn
.text:000000018000BFB5 ; ---------------------------------------------------------------------------
.text:000000018000BFB5
.text:000000018000BFB5 loc_18000BFB5:                          ; CODE XREF: sub_18000BEB0+92↑j
.text:000000018000BFB5                 mov     [rcx+14h], r14b
.text:000000018000BFB9
.text:000000018000BFB9 loc_18000BFB9:                          ; CODE XREF: sub_18000BEB0+D6↑j
.text:000000018000BFB9                 mov     rcx, rsi
.text:000000018000BFBC                 call    sub_18000CCB0
.text:000000018000BFC1                 jmp     short loc_18000BFA0
.text:000000018000BFC1 sub_18000BEB0   endp
.text:000000018000BFC1
.text:000000018000BFC1 ; ---------------------------------------------------------------------------
.text:000000018000BFC3 algn_18000BFC3:                         ; DATA XREF: .pdata:000000018001CAF8↓o
.text:000000018000BFC3                 align 10h
.text:000000018000BFD0
.text:000000018000BFD0 ; =============== S U B R O U T I N E =======================================
.text:000000018000BFD0
.text:000000018000BFD0
.text:000000018000BFD0 sub_18000BFD0   proc near               ; CODE XREF: fsuipcw_start+D5↑p
.text:000000018000BFD0                                         ; DATA XREF: .pdata:000000018001CB04↓o
.text:000000018000BFD0
.text:000000018000BFD0 var_28          = qword ptr -28h
.text:000000018000BFD0 var_18          = dword ptr -18h
.text:000000018000BFD0 var_14          = byte ptr -14h
.text:000000018000BFD0 var_10          = qword ptr -10h
.text:000000018000BFD0 arg_0           = qword ptr  8
.text:000000018000BFD0 arg_8           = qword ptr  10h
.text:000000018000BFD0 arg_10          = qword ptr  18h
.text:000000018000BFD0 arg_18          = qword ptr  20h
.text:000000018000BFD0 arg_20          = qword ptr  28h
.text:000000018000BFD0 arg_28          = dword ptr  30h
.text:000000018000BFD0
.text:000000018000BFD0                 mov     [rsp+arg_0], rbx
.text:000000018000BFD5                 mov     [rsp+arg_8], rbp
.text:000000018000BFDA                 mov     [rsp+arg_10], rsi
.text:000000018000BFDF                 mov     [rsp+arg_18], rdi
.text:000000018000BFE4                 push    r14
.text:000000018000BFE6                 sub     rsp, 40h
.text:000000018000BFEA                 mov     rdi, rdx
.text:000000018000BFED                 mov     ebp, r9d
.text:000000018000BFF0                 mov     edx, [rsp+48h+arg_28]
.text:000000018000BFF4                 mov     r14, r8
.text:000000018000BFF7                 mov     rsi, rcx
.text:000000018000BFFA                 mov     ebx, 80004005h
.text:000000018000BFFF                 call    sub_18000CFD0
.text:000000018000C004                 test    eax, eax
.text:000000018000C006                 jnz     loc_18000C14D
.text:000000018000C00C                 mov     rax, [rsp+48h+arg_20]
.text:000000018000C011                 mov     r9d, ebp
.text:000000018000C014                 mov     rcx, [rsi]
.text:000000018000C017                 mov     r8, r14
.text:000000018000C01A                 xor     edx, edx
.text:000000018000C01C                 mov     [rsp+48h+var_28], rax
.text:000000018000C021                 call    sub_18000DF30
.text:000000018000C026                 mov     rbp, [rsi]
.text:000000018000C029                 lea     rdx, [rsp+48h+var_10]
.text:000000018000C02E                 mov     rcx, rbp
.text:000000018000C031                 mov     r8d, 128h
.text:000000018000C037                 call    sub_18000DCA0
.text:000000018000C03C                 test    eax, eax
.text:000000018000C03E                 jnz     short loc_18000C065
.text:000000018000C040                 mov     rax, [rsp+48h+var_10]
.text:000000018000C045                 mov     dword ptr [rax], 128h
.text:000000018000C04B                 mov     rax, [rsp+48h+var_10]
.text:000000018000C050                 mov     dword ptr [rax+8], 0F0000001h
.text:000000018000C057                 mov     rax, [rsp+48h+var_10]
.text:000000018000C05C                 mov     dword ptr [rax+4], 5
.text:000000018000C063                 jmp     short loc_18000C088
.text:000000018000C065 ; ---------------------------------------------------------------------------
.text:000000018000C065
.text:000000018000C065 loc_18000C065:                          ; CODE XREF: sub_18000BFD0+6E↑j
.text:000000018000C065                 cmp     eax, 2
.text:000000018000C068                 jnz     short loc_18000C080
.text:000000018000C06A                 lea     r8, [rsp+48h+var_18]
.text:000000018000C06F                 mov     rcx, rbp
.text:000000018000C072                 lea     rdx, [rsp+48h+var_14]
.text:000000018000C077                 call    sub_18000CF90
.text:000000018000C07C                 mov     ebx, [rsp+48h+var_18]
.text:000000018000C080
.text:000000018000C080 loc_18000C080:                          ; CODE XREF: sub_18000BFD0+98↑j
.text:000000018000C080                 test    ebx, ebx
.text:000000018000C082                 js      loc_18000C143
.text:000000018000C088
.text:000000018000C088 loc_18000C088:                          ; CODE XREF: sub_18000BFD0+93↑j
.text:000000018000C088                 mov     rax, [rsp+48h+var_10]
.text:000000018000C08D                 mov     edx, 100h
.text:000000018000C092                 add     rax, 10h
.text:000000018000C096                 sub     rdi, rax
.text:000000018000C099                 nop     dword ptr [rax+00000000h]
.text:000000018000C0A0
.text:000000018000C0A0 loc_18000C0A0:                          ; CODE XREF: sub_18000BFD0+ED↓j
.text:000000018000C0A0                 lea     rcx, [rdx+7FFFFEFEh]
.text:000000018000C0A7                 test    rcx, rcx
.text:000000018000C0AA                 jz      short loc_18000C0BF
.text:000000018000C0AC                 movzx   ecx, byte ptr [rdi+rax]
.text:000000018000C0B0                 test    cl, cl
.text:000000018000C0B2                 jz      short loc_18000C0BF
.text:000000018000C0B4                 mov     [rax], cl
.text:000000018000C0B6                 inc     rax
.text:000000018000C0B9                 sub     rdx, 1
.text:000000018000C0BD                 jnz     short loc_18000C0A0
.text:000000018000C0BF
.text:000000018000C0BF loc_18000C0BF:                          ; CODE XREF: sub_18000BFD0+DA↑j
.text:000000018000C0BF                                         ; sub_18000BFD0+E2↑j
.text:000000018000C0BF                 test    rdx, rdx
.text:000000018000C0C2                 lea     rcx, [rax-1]
.text:000000018000C0C6                 mov     ebx, 8007007Ah
.text:000000018000C0CB                 cmovnz  rcx, rax
.text:000000018000C0CF                 xor     edi, edi
.text:000000018000C0D1                 test    rdx, rdx
.text:000000018000C0D4                 cmovnz  ebx, edi
.text:000000018000C0D7                 mov     byte ptr [rcx], 0
.text:000000018000C0DA                 jz      short loc_18000C143
.text:000000018000C0DC                 mov     rax, [rsp+48h+var_10]
.text:000000018000C0E1                 mov     [rax+110h], edi
.text:000000018000C0E7                 mov     rax, [rsp+48h+var_10]
.text:000000018000C0EC                 mov     dword ptr [rax+114h], 4B4800h
.text:000000018000C0F6                 mov     rax, [rsp+48h+var_10]
.text:000000018000C0FB                 mov     dword ptr [rax+118h], 0Bh
.text:000000018000C105                 mov     rax, [rsp+48h+var_10]
.text:000000018000C10A                 mov     [rax+11Ch], edi
.text:000000018000C110                 mov     rax, [rsp+48h+var_10]
.text:000000018000C115                 mov     dword ptr [rax+120h], 0F4BBh
.text:000000018000C11F                 mov     rax, [rsp+48h+var_10]
.text:000000018000C124                 mov     dword ptr [rax+124h], 3
.text:000000018000C12E                 mov     rcx, [rsi]
.text:000000018000C131                 call    sub_18000DDF0
.text:000000018000C136                 test    eax, eax
.text:000000018000C138                 jnz     short loc_18000C13E
.text:000000018000C13A                 mov     ebx, edi
.text:000000018000C13C                 jmp     short loc_18000C157
.text:000000018000C13E ; ---------------------------------------------------------------------------
.text:000000018000C13E
.text:000000018000C13E loc_18000C13E:                          ; CODE XREF: sub_18000BFD0+168↑j
.text:000000018000C13E                 mov     ebx, 80004005h
.text:000000018000C143
.text:000000018000C143 loc_18000C143:                          ; CODE XREF: sub_18000BFD0+B2↑j
.text:000000018000C143                                         ; sub_18000BFD0+10A↑j
.text:000000018000C143                 mov     rcx, [rsi]
.text:000000018000C146                 call    sub_18000CE00
.text:000000018000C14B                 jmp     short loc_18000C157
.text:000000018000C14D ; ---------------------------------------------------------------------------
.text:000000018000C14D
.text:000000018000C14D loc_18000C14D:                          ; CODE XREF: sub_18000BFD0+36↑j
.text:000000018000C14D                 cmp     eax, 3
.text:000000018000C150                 mov     eax, 80070057h
.text:000000018000C155                 jz      short loc_18000C159
.text:000000018000C157
.text:000000018000C157 loc_18000C157:                          ; CODE XREF: sub_18000BFD0+16C↑j
.text:000000018000C157                                         ; sub_18000BFD0+17B↑j
.text:000000018000C157                 mov     eax, ebx
.text:000000018000C159
.text:000000018000C159 loc_18000C159:                          ; CODE XREF: sub_18000BFD0+185↑j
.text:000000018000C159                 mov     rbx, [rsp+48h+arg_0]
.text:000000018000C15E                 mov     rbp, [rsp+48h+arg_8]
.text:000000018000C163                 mov     rsi, [rsp+48h+arg_10]
.text:000000018000C168                 mov     rdi, [rsp+48h+arg_18]
.text:000000018000C16D                 add     rsp, 40h
.text:000000018000C171                 pop     r14
.text:000000018000C173                 retn
.text:000000018000C173 sub_18000BFD0   endp
.text:000000018000C173
.text:000000018000C173 ; ---------------------------------------------------------------------------
.text:000000018000C174 algn_18000C174:                         ; DATA XREF: .pdata:000000018001CB04↓o
.text:000000018000C174                 align 20h
.text:000000018000C180
.text:000000018000C180 ; =============== S U B R O U T I N E =======================================
.text:000000018000C180
.text:000000018000C180
.text:000000018000C180 sub_18000C180   proc near               ; CODE XREF: Callback+2D↑p
.text:000000018000C180                                         ; sub_1800034B0+748↑p ...
.text:000000018000C180
.text:000000018000C180 var_18          = dword ptr -18h
.text:000000018000C180 var_14          = byte ptr -14h
.text:000000018000C180 var_10          = qword ptr -10h
.text:000000018000C180 arg_0           = qword ptr  8
.text:000000018000C180 arg_8           = qword ptr  10h
.text:000000018000C180 arg_10          = qword ptr  18h
.text:000000018000C180 arg_18          = qword ptr  20h
.text:000000018000C180 arg_20          = dword ptr  28h
.text:000000018000C180 arg_28          = dword ptr  30h
.text:000000018000C180 arg_30          = dword ptr  38h
.text:000000018000C180 arg_38          = dword ptr  40h
.text:000000018000C180 arg_40          = dword ptr  48h
.text:000000018000C180
.text:000000018000C180                 mov     [rsp+arg_0], rbx
.text:000000018000C185                 mov     [rsp+arg_8], rbp
.text:000000018000C18A                 mov     [rsp+arg_10], rsi
.text:000000018000C18F                 mov     [rsp+arg_18], rdi
.text:000000018000C194                 push    r14
.text:000000018000C196                 sub     rsp, 30h
.text:000000018000C19A                 mov     ebp, r8d
.text:000000018000C19D                 mov     [rsp+38h+var_10], 0
.text:000000018000C1A6                 mov     r14d, edx
.text:000000018000C1A9                 mov     r8d, 30h ; '0'
.text:000000018000C1AF                 lea     rdx, [rsp+38h+var_10]
.text:000000018000C1B4                 mov     esi, r9d
.text:000000018000C1B7                 mov     rdi, rcx
.text:000000018000C1BA                 mov     ebx, 80004005h
.text:000000018000C1BF                 call    sub_18000DCA0
.text:000000018000C1C4                 test    eax, eax
.text:000000018000C1C6                 jnz     short loc_18000C1EF
.text:000000018000C1C8                 mov     rax, [rsp+38h+var_10]
.text:000000018000C1CD                 xor     ebx, ebx
.text:000000018000C1CF                 mov     dword ptr [rax], 30h ; '0'
.text:000000018000C1D5                 mov     rax, [rsp+38h+var_10]
.text:000000018000C1DA                 mov     dword ptr [rax+8], 0F000003Bh
.text:000000018000C1E1                 mov     rax, [rsp+38h+var_10]
.text:000000018000C1E6                 mov     dword ptr [rax+4], 5
.text:000000018000C1ED                 jmp     short loc_18000C20E
.text:000000018000C1EF ; ---------------------------------------------------------------------------
.text:000000018000C1EF
.text:000000018000C1EF loc_18000C1EF:                          ; CODE XREF: sub_18000C180+46↑j
.text:000000018000C1EF                 cmp     eax, 2
.text:000000018000C1F2                 jnz     short loc_18000C270
.text:000000018000C1F4                 lea     r8, [rsp+38h+var_18]
.text:000000018000C1F9                 mov     rcx, rdi
.text:000000018000C1FC                 lea     rdx, [rsp+38h+var_14]
.text:000000018000C201                 call    sub_18000CF90
.text:000000018000C206                 mov     ebx, [rsp+38h+var_18]
.text:000000018000C20A                 test    ebx, ebx
.text:000000018000C20C                 js      short loc_18000C270
.text:000000018000C20E
.text:000000018000C20E loc_18000C20E:                          ; CODE XREF: sub_18000C180+6D↑j
.text:000000018000C20E                 mov     rax, [rsp+38h+var_10]
.text:000000018000C213                 mov     ecx, [rsp+38h+arg_20]
.text:000000018000C217                 mov     edx, [rsp+38h+arg_28]
.text:000000018000C21B                 mov     [rax+10h], r14d
.text:000000018000C21F                 mov     rax, [rsp+38h+var_10]
.text:000000018000C224                 mov     [rax+14h], ebp
.text:000000018000C227                 mov     rax, [rsp+38h+var_10]
.text:000000018000C22C                 mov     [rax+18h], esi
.text:000000018000C22F                 mov     rax, [rsp+38h+var_10]
.text:000000018000C234                 mov     [rax+1Ch], ecx
.text:000000018000C237                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C23C                 mov     [rcx+20h], edx
.text:000000018000C23F                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C244                 mov     edx, [rsp+38h+arg_30]
.text:000000018000C248                 mov     [rcx+24h], edx
.text:000000018000C24B                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C250                 mov     edx, [rsp+38h+arg_38]
.text:000000018000C254                 mov     [rcx+28h], edx
.text:000000018000C257                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C25C                 mov     edx, [rsp+38h+arg_40]
.text:000000018000C263                 mov     [rcx+2Ch], edx
.text:000000018000C266                 mov     rcx, rdi
.text:000000018000C269                 call    sub_18000CCB0
.text:000000018000C26E                 jmp     short loc_18000C288
.text:000000018000C270 ; ---------------------------------------------------------------------------
.text:000000018000C270
.text:000000018000C270 loc_18000C270:                          ; CODE XREF: sub_18000C180+72↑j
.text:000000018000C270                                         ; sub_18000C180+8C↑j
.text:000000018000C270                 mov     rdx, [rsp+38h+var_10]
.text:000000018000C275                 test    rdx, rdx
.text:000000018000C278                 jz      short loc_18000C288
.text:000000018000C27A                 mov     r8d, 30h ; '0'
.text:000000018000C280                 mov     rcx, rdi
.text:000000018000C283                 call    sub_18000DBE0
.text:000000018000C288
.text:000000018000C288 loc_18000C288:                          ; CODE XREF: sub_18000C180+EE↑j
.text:000000018000C288                                         ; sub_18000C180+F8↑j
.text:000000018000C288                 mov     rbp, [rsp+38h+arg_8]
.text:000000018000C28D                 mov     eax, ebx
.text:000000018000C28F                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000C294                 mov     rsi, [rsp+38h+arg_10]
.text:000000018000C299                 mov     rdi, [rsp+38h+arg_18]
.text:000000018000C29E                 add     rsp, 30h
.text:000000018000C2A2                 pop     r14
.text:000000018000C2A4                 retn
.text:000000018000C2A4 sub_18000C180   endp
.text:000000018000C2A4
.text:000000018000C2A4 ; ---------------------------------------------------------------------------
.text:000000018000C2A5 algn_18000C2A5:                         ; DATA XREF: .pdata:000000018001CB10↓o
.text:000000018000C2A5                 align 10h
.text:000000018000C2B0
.text:000000018000C2B0 ; =============== S U B R O U T I N E =======================================
.text:000000018000C2B0
.text:000000018000C2B0
.text:000000018000C2B0 ; __int64 __fastcall sub_18000C2B0(int, int, int, int, int, size_t Size, void *Src)
.text:000000018000C2B0 sub_18000C2B0   proc near               ; CODE XREF: sub_180004ED0+53↑p
.text:000000018000C2B0                                         ; sub_180004ED0+10A↑p ...
.text:000000018000C2B0
.text:000000018000C2B0 var_38          = byte ptr -38h
.text:000000018000C2B0 var_30          = qword ptr -30h
.text:000000018000C2B0 arg_0           = qword ptr  8
.text:000000018000C2B0 arg_8           = qword ptr  10h
.text:000000018000C2B0 arg_10          = qword ptr  18h
.text:000000018000C2B0 arg_20          = dword ptr  28h
.text:000000018000C2B0 Size            = qword ptr  30h
.text:000000018000C2B0 Src             = qword ptr  38h
.text:000000018000C2B0
.text:000000018000C2B0                 mov     [rsp+arg_0], rbx
.text:000000018000C2B5                 mov     [rsp+arg_8], rbp
.text:000000018000C2BA                 mov     [rsp+arg_10], rsi
.text:000000018000C2BF                 push    rdi
.text:000000018000C2C0                 push    r12
.text:000000018000C2C2                 push    r13
.text:000000018000C2C4                 push    r14
.text:000000018000C2C6                 push    r15
.text:000000018000C2C8                 sub     rsp, 30h
.text:000000018000C2CC                 mov     ebp, dword ptr [rsp+58h+Size]
.text:000000018000C2D3                 mov     r15d, r8d
.text:000000018000C2D6                 mov     r12d, edx
.text:000000018000C2D9                 mov     [rsp+58h+var_30], 0
.text:000000018000C2E2                 lea     rdx, [rsp+58h+var_30]
.text:000000018000C2E7                 mov     r14d, r9d
.text:000000018000C2EA                 mov     rdi, rcx
.text:000000018000C2ED                 mov     ebx, 80004005h
.text:000000018000C2F2                 lea     esi, [rbp+24h]
.text:000000018000C2F5                 mov     r8d, esi
.text:000000018000C2F8                 call    sub_18000DCA0
.text:000000018000C2FD                 test    eax, eax
.text:000000018000C2FF                 jnz     short loc_18000C324
.text:000000018000C301                 mov     rax, [rsp+58h+var_30]
.text:000000018000C306                 xor     ebx, ebx
.text:000000018000C308                 mov     [rax], esi
.text:000000018000C30A                 mov     rax, [rsp+58h+var_30]
.text:000000018000C30F                 mov     dword ptr [rax+8], 0F000003Ch
.text:000000018000C316                 mov     rax, [rsp+58h+var_30]
.text:000000018000C31B                 mov     dword ptr [rax+4], 5
.text:000000018000C322                 jmp     short loc_18000C349
.text:000000018000C324 ; ---------------------------------------------------------------------------
.text:000000018000C324
.text:000000018000C324 loc_18000C324:                          ; CODE XREF: sub_18000C2B0+4F↑j
.text:000000018000C324                 cmp     eax, 2
.text:000000018000C327                 jnz     short loc_18000C39E
.text:000000018000C329                 lea     r8, [rsp+58h+Size]
.text:000000018000C331                 mov     rcx, rdi
.text:000000018000C334                 lea     rdx, [rsp+58h+var_38]
.text:000000018000C339                 call    sub_18000CF90
.text:000000018000C33E                 mov     ebx, dword ptr [rsp+58h+Size]
.text:000000018000C345                 test    ebx, ebx
.text:000000018000C347                 js      short loc_18000C39E
.text:000000018000C349
.text:000000018000C349 loc_18000C349:                          ; CODE XREF: sub_18000C2B0+72↑j
.text:000000018000C349                 mov     rcx, [rsp+58h+var_30]
.text:000000018000C34E                 mov     r8, rbp         ; Size
.text:000000018000C351                 mov     rdx, [rsp+58h+Src] ; Src
.text:000000018000C359                 add     rcx, 24h ; '$'  ; void *
.text:000000018000C35D                 call    memcpy
.text:000000018000C362                 mov     rcx, [rsp+58h+var_30]
.text:000000018000C367                 mov     edx, [rsp+58h+arg_20]
.text:000000018000C36E                 mov     [rcx+10h], r12d
.text:000000018000C372                 mov     rcx, [rsp+58h+var_30]
.text:000000018000C377                 mov     [rcx+14h], r15d
.text:000000018000C37B                 mov     rcx, [rsp+58h+var_30]
.text:000000018000C380                 mov     [rcx+18h], r14d
.text:000000018000C384                 mov     rcx, [rsp+58h+var_30]
.text:000000018000C389                 mov     [rcx+1Ch], edx
.text:000000018000C38C                 mov     rcx, [rsp+58h+var_30]
.text:000000018000C391                 mov     [rcx+20h], ebp
.text:000000018000C394                 mov     rcx, rdi
.text:000000018000C397                 call    sub_18000CCB0
.text:000000018000C39C                 jmp     short loc_18000C3B3
.text:000000018000C39E ; ---------------------------------------------------------------------------
.text:000000018000C39E
.text:000000018000C39E loc_18000C39E:                          ; CODE XREF: sub_18000C2B0+77↑j
.text:000000018000C39E                                         ; sub_18000C2B0+97↑j
.text:000000018000C39E                 mov     rdx, [rsp+58h+var_30]
.text:000000018000C3A3                 test    rdx, rdx
.text:000000018000C3A6                 jz      short loc_18000C3B3
.text:000000018000C3A8                 mov     r8d, esi
.text:000000018000C3AB                 mov     rcx, rdi
.text:000000018000C3AE                 call    sub_18000DBE0
.text:000000018000C3B3
.text:000000018000C3B3 loc_18000C3B3:                          ; CODE XREF: sub_18000C2B0+EC↑j
.text:000000018000C3B3                                         ; sub_18000C2B0+F6↑j
.text:000000018000C3B3                 mov     rbp, [rsp+58h+arg_8]
.text:000000018000C3B8                 mov     eax, ebx
.text:000000018000C3BA                 mov     rbx, [rsp+58h+arg_0]
.text:000000018000C3BF                 mov     rsi, [rsp+58h+arg_10]
.text:000000018000C3C4                 add     rsp, 30h
.text:000000018000C3C8                 pop     r15
.text:000000018000C3CA                 pop     r14
.text:000000018000C3CC                 pop     r13
.text:000000018000C3CE                 pop     r12
.text:000000018000C3D0                 pop     rdi
.text:000000018000C3D1                 retn
.text:000000018000C3D1 sub_18000C2B0   endp
.text:000000018000C3D1
.text:000000018000C3D1 ; ---------------------------------------------------------------------------
.text:000000018000C3D2 algn_18000C3D2:                         ; DATA XREF: .pdata:000000018001CB1C↓o
.text:000000018000C3D2                 align 20h
.text:000000018000C3E0
.text:000000018000C3E0 ; =============== S U B R O U T I N E =======================================
.text:000000018000C3E0
.text:000000018000C3E0
.text:000000018000C3E0 sub_18000C3E0   proc near               ; CODE XREF: sub_180002E20+A7↑p
.text:000000018000C3E0                                         ; DATA XREF: .pdata:000000018001CB28↓o
.text:000000018000C3E0
.text:000000018000C3E0 var_18          = byte ptr -18h
.text:000000018000C3E0 var_10          = qword ptr -10h
.text:000000018000C3E0 arg_0           = qword ptr  8
.text:000000018000C3E0 arg_8           = qword ptr  10h
.text:000000018000C3E0 arg_10          = qword ptr  18h
.text:000000018000C3E0 arg_18          = dword ptr  20h
.text:000000018000C3E0
.text:000000018000C3E0                 mov     [rsp+arg_0], rbx
.text:000000018000C3E5                 mov     [rsp+arg_8], rbp
.text:000000018000C3EA                 mov     [rsp+arg_10], rsi
.text:000000018000C3EF                 push    rdi
.text:000000018000C3F0                 sub     rsp, 30h
.text:000000018000C3F4                 mov     esi, r8d
.text:000000018000C3F7                 mov     [rsp+38h+var_10], 0
.text:000000018000C400                 mov     ebp, edx
.text:000000018000C402                 mov     r8d, 18h
.text:000000018000C408                 lea     rdx, [rsp+38h+var_10]
.text:000000018000C40D                 mov     rdi, rcx
.text:000000018000C410                 mov     ebx, 80004005h
.text:000000018000C415                 call    sub_18000DCA0
.text:000000018000C41A                 test    eax, eax
.text:000000018000C41C                 jnz     short loc_18000C445
.text:000000018000C41E                 mov     rax, [rsp+38h+var_10]
.text:000000018000C423                 xor     ebx, ebx
.text:000000018000C425                 mov     dword ptr [rax], 18h
.text:000000018000C42B                 mov     rax, [rsp+38h+var_10]
.text:000000018000C430                 mov     dword ptr [rax+8], 0F0000009h
.text:000000018000C437                 mov     rax, [rsp+38h+var_10]
.text:000000018000C43C                 mov     dword ptr [rax+4], 5
.text:000000018000C443                 jmp     short loc_18000C464
.text:000000018000C445 ; ---------------------------------------------------------------------------
.text:000000018000C445
.text:000000018000C445 loc_18000C445:                          ; CODE XREF: sub_18000C3E0+3C↑j
.text:000000018000C445                 cmp     eax, 2
.text:000000018000C448                 jnz     short loc_18000C47E
.text:000000018000C44A                 lea     r8, [rsp+38h+arg_18]
.text:000000018000C44F                 mov     rcx, rdi
.text:000000018000C452                 lea     rdx, [rsp+38h+var_18]
.text:000000018000C457                 call    sub_18000CF90
.text:000000018000C45C                 mov     ebx, [rsp+38h+arg_18]
.text:000000018000C460                 test    ebx, ebx
.text:000000018000C462                 js      short loc_18000C47E
.text:000000018000C464
.text:000000018000C464 loc_18000C464:                          ; CODE XREF: sub_18000C3E0+63↑j
.text:000000018000C464                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C469                 mov     [rcx+10h], ebp
.text:000000018000C46C                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C471                 mov     [rcx+14h], esi
.text:000000018000C474                 mov     rcx, rdi
.text:000000018000C477                 call    sub_18000CCB0
.text:000000018000C47C                 jmp     short loc_18000C496
.text:000000018000C47E ; ---------------------------------------------------------------------------
.text:000000018000C47E
.text:000000018000C47E loc_18000C47E:                          ; CODE XREF: sub_18000C3E0+68↑j
.text:000000018000C47E                                         ; sub_18000C3E0+82↑j
.text:000000018000C47E                 mov     rdx, [rsp+38h+var_10]
.text:000000018000C483                 test    rdx, rdx
.text:000000018000C486                 jz      short loc_18000C496
.text:000000018000C488                 mov     r8d, 18h
.text:000000018000C48E                 mov     rcx, rdi
.text:000000018000C491                 call    sub_18000DBE0
.text:000000018000C496
.text:000000018000C496 loc_18000C496:                          ; CODE XREF: sub_18000C3E0+9C↑j
.text:000000018000C496                                         ; sub_18000C3E0+A6↑j
.text:000000018000C496                 mov     rbp, [rsp+38h+arg_8]
.text:000000018000C49B                 mov     eax, ebx
.text:000000018000C49D                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000C4A2                 mov     rsi, [rsp+38h+arg_10]
.text:000000018000C4A7                 add     rsp, 30h
.text:000000018000C4AB                 pop     rdi
.text:000000018000C4AC                 retn
.text:000000018000C4AC sub_18000C3E0   endp
.text:000000018000C4AC
.text:000000018000C4AC ; ---------------------------------------------------------------------------
.text:000000018000C4AD algn_18000C4AD:                         ; DATA XREF: .pdata:000000018001CB28↓o
.text:000000018000C4AD                 align 10h
.text:000000018000C4B0
.text:000000018000C4B0 ; =============== S U B R O U T I N E =======================================
.text:000000018000C4B0
.text:000000018000C4B0
.text:000000018000C4B0 sub_18000C4B0   proc near               ; CODE XREF: fsuipcw_createAircraftLvarFile+2C↑p
.text:000000018000C4B0                                         ; fsuipcw_reload+2C↑p ...
.text:000000018000C4B0
.text:000000018000C4B0 var_18          = dword ptr -18h
.text:000000018000C4B0 var_14          = byte ptr -14h
.text:000000018000C4B0 var_10          = qword ptr -10h
.text:000000018000C4B0 arg_0           = qword ptr  8
.text:000000018000C4B0 arg_8           = qword ptr  10h
.text:000000018000C4B0 arg_10          = qword ptr  18h
.text:000000018000C4B0 arg_18          = qword ptr  20h
.text:000000018000C4B0 arg_20          = dword ptr  28h
.text:000000018000C4B0 arg_28          = dword ptr  30h
.text:000000018000C4B0
.text:000000018000C4B0                 mov     [rsp+arg_0], rbx
.text:000000018000C4B5                 mov     [rsp+arg_8], rbp
.text:000000018000C4BA                 mov     [rsp+arg_10], rsi
.text:000000018000C4BF                 mov     [rsp+arg_18], rdi
.text:000000018000C4C4                 push    r14
.text:000000018000C4C6                 sub     rsp, 30h
.text:000000018000C4CA                 mov     ebp, r8d
.text:000000018000C4CD                 mov     [rsp+38h+var_10], 0
.text:000000018000C4D6                 mov     r14d, edx
.text:000000018000C4D9                 mov     r8d, 24h ; '$'
.text:000000018000C4DF                 lea     rdx, [rsp+38h+var_10]
.text:000000018000C4E4                 mov     esi, r9d
.text:000000018000C4E7                 mov     rdi, rcx
.text:000000018000C4EA                 mov     ebx, 80004005h
.text:000000018000C4EF                 call    sub_18000DCA0
.text:000000018000C4F4                 test    eax, eax
.text:000000018000C4F6                 jnz     short loc_18000C51F
.text:000000018000C4F8                 mov     rax, [rsp+38h+var_10]
.text:000000018000C4FD                 xor     ebx, ebx
.text:000000018000C4FF                 mov     dword ptr [rax], 24h ; '$'
.text:000000018000C505                 mov     rax, [rsp+38h+var_10]
.text:000000018000C50A                 mov     dword ptr [rax+8], 0F0000005h
.text:000000018000C511                 mov     rax, [rsp+38h+var_10]
.text:000000018000C516                 mov     dword ptr [rax+4], 5
.text:000000018000C51D                 jmp     short loc_18000C53E
.text:000000018000C51F ; ---------------------------------------------------------------------------
.text:000000018000C51F
.text:000000018000C51F loc_18000C51F:                          ; CODE XREF: sub_18000C4B0+46↑j
.text:000000018000C51F                 cmp     eax, 2
.text:000000018000C522                 jnz     short loc_18000C579
.text:000000018000C524                 lea     r8, [rsp+38h+var_18]
.text:000000018000C529                 mov     rcx, rdi
.text:000000018000C52C                 lea     rdx, [rsp+38h+var_14]
.text:000000018000C531                 call    sub_18000CF90
.text:000000018000C536                 mov     ebx, [rsp+38h+var_18]
.text:000000018000C53A                 test    ebx, ebx
.text:000000018000C53C                 js      short loc_18000C579
.text:000000018000C53E
.text:000000018000C53E loc_18000C53E:                          ; CODE XREF: sub_18000C4B0+6D↑j
.text:000000018000C53E                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C543                 mov     edx, [rsp+38h+arg_20]
.text:000000018000C547                 mov     [rcx+10h], r14d
.text:000000018000C54B                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C550                 mov     [rcx+14h], ebp
.text:000000018000C553                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C558                 mov     [rcx+18h], esi
.text:000000018000C55B                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C560                 mov     [rcx+1Ch], edx
.text:000000018000C563                 mov     rcx, [rsp+38h+var_10]
.text:000000018000C568                 mov     edx, [rsp+38h+arg_28]
.text:000000018000C56C                 mov     [rcx+20h], edx
.text:000000018000C56F                 mov     rcx, rdi
.text:000000018000C572                 call    sub_18000CCB0
.text:000000018000C577                 jmp     short loc_18000C591
.text:000000018000C579 ; ---------------------------------------------------------------------------
.text:000000018000C579
.text:000000018000C579 loc_18000C579:                          ; CODE XREF: sub_18000C4B0+72↑j
.text:000000018000C579                                         ; sub_18000C4B0+8C↑j
.text:000000018000C579                 mov     rdx, [rsp+38h+var_10]
.text:000000018000C57E                 test    rdx, rdx
.text:000000018000C581                 jz      short loc_18000C591
.text:000000018000C583                 mov     r8d, 24h ; '$'
.text:000000018000C589                 mov     rcx, rdi
.text:000000018000C58C                 call    sub_18000DBE0
.text:000000018000C591
.text:000000018000C591 loc_18000C591:                          ; CODE XREF: sub_18000C4B0+C7↑j
.text:000000018000C591                                         ; sub_18000C4B0+D1↑j
.text:000000018000C591                 mov     rbp, [rsp+38h+arg_8]
.text:000000018000C596                 mov     eax, ebx
.text:000000018000C598                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000C59D                 mov     rsi, [rsp+38h+arg_10]
.text:000000018000C5A2                 mov     rdi, [rsp+38h+arg_18]
.text:000000018000C5A7                 add     rsp, 30h
.text:000000018000C5AB                 pop     r14
.text:000000018000C5AD                 retn
.text:000000018000C5AD sub_18000C4B0   endp
.text:000000018000C5AD
.text:000000018000C5AD ; ---------------------------------------------------------------------------
.text:000000018000C5AE algn_18000C5AE:                         ; DATA XREF: .pdata:000000018001CB34↓o
.text:000000018000C5AE                 align 10h
.text:000000018000C5B0
.text:000000018000C5B0 ; =============== S U B R O U T I N E =======================================
.text:000000018000C5B0
.text:000000018000C5B0
.text:000000018000C5B0 sub_18000C5B0   proc near               ; CODE XREF: sub_18000DCA0+E4↓p
.text:000000018000C5B0                                         ; DATA XREF: .pdata:000000018001CB40↓o
.text:000000018000C5B0
.text:000000018000C5B0 var_48          = qword ptr -48h
.text:000000018000C5B0 arg_0           = qword ptr  8
.text:000000018000C5B0 arg_8           = qword ptr  10h
.text:000000018000C5B0 arg_10          = qword ptr  18h
.text:000000018000C5B0 arg_18          = qword ptr  20h
.text:000000018000C5B0
.text:000000018000C5B0 ; FUNCTION CHUNK AT .text:0000000180011790 SIZE 00000027 BYTES
.text:000000018000C5B0
.text:000000018000C5B0 ; __unwind { // __CxxFrameHandler4
.text:000000018000C5B0                 mov     [rsp+arg_10], r8
.text:000000018000C5B5                 mov     [rsp+arg_0], rcx
.text:000000018000C5BA                 push    rbx
.text:000000018000C5BB                 push    rsi
.text:000000018000C5BC                 push    rdi
.text:000000018000C5BD                 push    r12
.text:000000018000C5BF                 push    r13
.text:000000018000C5C1                 push    r14
.text:000000018000C5C3                 push    r15
.text:000000018000C5C5                 sub     rsp, 20h
.text:000000018000C5C9                 mov     r13, rdx
.text:000000018000C5CC                 mov     rdi, rcx
.text:000000018000C5CF                 mov     rax, [rcx]
.text:000000018000C5D2                 mov     r12, rdx
.text:000000018000C5D5                 sub     r12, rax
.text:000000018000C5D8                 mov     r15, [rcx+8]
.text:000000018000C5DC                 sub     r15, rax
.text:000000018000C5DF                 sar     r15, 4
.text:000000018000C5E3                 mov     r8, 0FFFFFFFFFFFFFFFh
.text:000000018000C5ED                 cmp     r15, r8
.text:000000018000C5F0                 jz      loc_18000C74C
.text:000000018000C5F6                 inc     r15
.text:000000018000C5F9                 mov     rcx, [rcx+10h]
.text:000000018000C5FD                 sub     rcx, rax
.text:000000018000C600                 sar     rcx, 4
.text:000000018000C604                 mov     rdx, rcx
.text:000000018000C607                 shr     rdx, 1
.text:000000018000C60A                 mov     rax, r8
.text:000000018000C60D                 sub     rax, rdx
.text:000000018000C610                 cmp     rcx, rax
.text:000000018000C613                 ja      loc_18000C746
.text:000000018000C619                 lea     rax, [rdx+rcx]
.text:000000018000C61D                 mov     r14, r15
.text:000000018000C620                 cmp     rax, r15
.text:000000018000C623                 cmovnb  r14, rax
.text:000000018000C627                 cmp     r14, r8
.text:000000018000C62A                 ja      loc_18000C746
.text:000000018000C630                 mov     rsi, r14
.text:000000018000C633                 shl     rsi, 4
.text:000000018000C637                 mov     [rsp+58h+arg_8], r14
.text:000000018000C63C                 cmp     rsi, 1000h
.text:000000018000C643                 jb      short loc_18000C66E
.text:000000018000C645                 lea     rcx, [rsi+27h]  ; Size
.text:000000018000C649                 cmp     rcx, rsi
.text:000000018000C64C                 jbe     loc_18000C746
.text:000000018000C652                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000C657                 test    rax, rax
.text:000000018000C65A                 jz      loc_18000C73F
.text:000000018000C660                 lea     rbx, [rax+27h]
.text:000000018000C664                 and     rbx, 0FFFFFFFFFFFFFFE0h
.text:000000018000C668                 mov     [rbx-8], rax
.text:000000018000C66C                 jmp     short loc_18000C691
.text:000000018000C66E ; ---------------------------------------------------------------------------
.text:000000018000C66E
.text:000000018000C66E loc_18000C66E:                          ; CODE XREF: sub_18000C5B0+93↑j
.text:000000018000C66E                 test    rsi, rsi
.text:000000018000C671                 jz      short loc_18000C68A
.text:000000018000C673                 mov     rcx, rsi        ; Size
.text:000000018000C676                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000C67B                 mov     rbx, rax
.text:000000018000C67E                 mov     [rsp+58h+arg_18], rax
.text:000000018000C683                 mov     [rsp+58h+arg_8], r14
.text:000000018000C688                 jmp     short loc_18000C696
.text:000000018000C68A ; ---------------------------------------------------------------------------
.text:000000018000C68A
.text:000000018000C68A loc_18000C68A:                          ; CODE XREF: sub_18000C5B0+C1↑j
.text:000000018000C68A                 xor     ebx, ebx
.text:000000018000C68C                 mov     [rsp+58h+arg_8], r14
.text:000000018000C691
.text:000000018000C691 loc_18000C691:                          ; CODE XREF: sub_18000C5B0+BC↑j
.text:000000018000C691                 mov     [rsp+58h+arg_18], rbx
.text:000000018000C696
.text:000000018000C696 loc_18000C696:                          ; CODE XREF: sub_18000C5B0+D8↑j
.text:000000018000C696 ;   try {
.text:000000018000C696                 and     r12, 0FFFFFFFFFFFFFFF0h
.text:000000018000C69A                 lea     r14, [r12+rbx]
.text:000000018000C69E                 mov     rax, [rsp+58h+arg_10]
.text:000000018000C6A3                 movups  xmm0, xmmword ptr [rax]
.text:000000018000C6A6                 movups  xmmword ptr [r14], xmm0
.text:000000018000C6AA                 mov     r8, [rdi+8]
.text:000000018000C6AE                 mov     rdx, [rdi]      ; Src
.text:000000018000C6B1                 mov     rcx, rbx        ; void *
.text:000000018000C6B4                 cmp     r13, r8
.text:000000018000C6B7                 jnz     short loc_18000C6BE
.text:000000018000C6B9                 sub     r8, rdx
.text:000000018000C6BC                 jmp     short loc_18000C6D7
.text:000000018000C6BE ; ---------------------------------------------------------------------------
.text:000000018000C6BE
.text:000000018000C6BE loc_18000C6BE:                          ; CODE XREF: sub_18000C5B0+107↑j
.text:000000018000C6BE                 mov     r8, r13
.text:000000018000C6C1                 sub     r8, rdx         ; Size
.text:000000018000C6C4                 call    memmove
.text:000000018000C6C9                 lea     rcx, [r14+10h]  ; void *
.text:000000018000C6CD                 mov     r8, [rdi+8]
.text:000000018000C6D1                 sub     r8, r13         ; Size
.text:000000018000C6D4                 mov     rdx, r13        ; Src
.text:000000018000C6D7
.text:000000018000C6D7 loc_18000C6D7:                          ; CODE XREF: sub_18000C5B0+10C↑j
.text:000000018000C6D7                 call    memmove
.text:000000018000C6DC                 nop
.text:000000018000C6DD                 mov     rcx, [rdi]
.text:000000018000C6E0                 test    rcx, rcx
.text:000000018000C6E3                 jz      short loc_18000C716
.text:000000018000C6E5                 mov     rdx, [rdi+10h]
.text:000000018000C6E9                 sub     rdx, rcx
.text:000000018000C6EC                 and     rdx, 0FFFFFFFFFFFFFFF0h
.text:000000018000C6F0                 cmp     rdx, 1000h
.text:000000018000C6F7                 jb      short loc_18000C711
.text:000000018000C6F9                 add     rdx, 27h ; '''
.text:000000018000C6FD                 mov     r8, [rcx-8]
.text:000000018000C701                 sub     rcx, r8
.text:000000018000C704                 lea     rax, [rcx-8]
.text:000000018000C708                 cmp     rax, 1Fh
.text:000000018000C70C                 ja      short loc_18000C73F
.text:000000018000C70E                 mov     rcx, r8         ; Block
.text:000000018000C711
.text:000000018000C711 loc_18000C711:                          ; CODE XREF: sub_18000C5B0+147↑j
.text:000000018000C711                 call    j_j_free
.text:000000018000C716
.text:000000018000C716 loc_18000C716:                          ; CODE XREF: sub_18000C5B0+133↑j
.text:000000018000C716                 mov     [rdi], rbx
.text:000000018000C719                 shl     r15, 4
.text:000000018000C71D                 add     r15, rbx
.text:000000018000C720                 mov     [rdi+8], r15
.text:000000018000C724                 lea     rcx, [rsi+rbx]
.text:000000018000C728                 mov     [rdi+10h], rcx
.text:000000018000C72C                 mov     rax, r14
.text:000000018000C72F                 add     rsp, 20h
.text:000000018000C733                 pop     r15
.text:000000018000C735                 pop     r14
.text:000000018000C737                 pop     r13
.text:000000018000C739                 pop     r12
.text:000000018000C73B                 pop     rdi
.text:000000018000C73C                 pop     rsi
.text:000000018000C73D                 pop     rbx
.text:000000018000C73E                 retn
.text:000000018000C73F ; ---------------------------------------------------------------------------
.text:000000018000C73F
.text:000000018000C73F loc_18000C73F:                          ; CODE XREF: sub_18000C5B0+AA↑j
.text:000000018000C73F                                         ; sub_18000C5B0+15C↑j
.text:000000018000C73F                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000C745                 int     3               ; Trap to Debugger
.text:000000018000C745 ;   } // starts at 18000C696
.text:000000018000C746 ; ---------------------------------------------------------------------------
.text:000000018000C746
.text:000000018000C746 loc_18000C746:                          ; CODE XREF: sub_18000C5B0+63↑j
.text:000000018000C746                                         ; sub_18000C5B0+7A↑j ...
.text:000000018000C746                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:000000018000C746 ; ---------------------------------------------------------------------------
.text:000000018000C74B                 align 4
.text:000000018000C74C
.text:000000018000C74C loc_18000C74C:                          ; CODE XREF: sub_18000C5B0+40↑j
.text:000000018000C74C                 call    ?_Xlen@?$vector@PEAXV?$allocator@PEAX@std@@@std@@IEBAXXZ ; std::vector<void *,std::allocator<void *>>::_Xlen(void)
.text:000000018000C74C ; ---------------------------------------------------------------------------
.text:000000018000C751                 db 0CCh
.text:000000018000C751 ; } // starts at 18000C5B0
.text:000000018000C751 sub_18000C5B0   endp
.text:000000018000C751
.text:000000018000C752 algn_18000C752:                         ; DATA XREF: .pdata:000000018001CB40↓o
.text:000000018000C752                 align 20h
.text:000000018000C760
.text:000000018000C760 ; =============== S U B R O U T I N E =======================================
.text:000000018000C760
.text:000000018000C760
.text:000000018000C760 ; __int64 __fastcall sub_18000C760(void *Src)
.text:000000018000C760 sub_18000C760   proc near               ; CODE XREF: sub_18000DF60+126↓p
.text:000000018000C760                                         ; sub_18000EFE0+2B↓p
.text:000000018000C760                                         ; DATA XREF: ...
.text:000000018000C760
.text:000000018000C760 arg_0           = qword ptr  8
.text:000000018000C760 arg_8           = qword ptr  10h
.text:000000018000C760 arg_10          = qword ptr  18h
.text:000000018000C760
.text:000000018000C760                 push    rbx
.text:000000018000C762                 push    rdi
.text:000000018000C763                 push    r14
.text:000000018000C765                 sub     rsp, 20h
.text:000000018000C769                 mov     r14, [rcx+10h]
.text:000000018000C76D                 mov     rbx, 7FFFFFFFFFFFFFFFh
.text:000000018000C777                 mov     rax, rbx
.text:000000018000C77A                 mov     rdi, rcx
.text:000000018000C77D                 sub     rax, r14
.text:000000018000C780                 cmp     rax, rdx
.text:000000018000C783                 jb      loc_18000C898
.text:000000018000C789
.text:000000018000C789 loc_18000C789:                          ; DATA XREF: .rdata:00000001800162DC↓o
.text:000000018000C789                                         ; .rdata:00000001800162EC↓o ...
.text:000000018000C789                 mov     [rsp+38h+arg_0], rbp
.text:000000018000C78E                 mov     rbp, [rcx+18h]
.text:000000018000C792                 mov     [rsp+38h+arg_8], rsi
.text:000000018000C797                 mov     [rsp+38h+arg_10], r15
.text:000000018000C79C                 lea     r15, [r14+rdx]
.text:000000018000C7A0                 mov     rdx, r15
.text:000000018000C7A3                 or      rdx, 0Fh
.text:000000018000C7A7                 cmp     rdx, rbx
.text:000000018000C7AA                 ja      short loc_18000C7E6
.text:000000018000C7AC                 mov     rcx, rbp
.text:000000018000C7AF                 mov     rax, rbx
.text:000000018000C7B2                 shr     rcx, 1
.text:000000018000C7B5                 sub     rax, rcx
.text:000000018000C7B8                 cmp     rbp, rax
.text:000000018000C7BB                 ja      short loc_18000C7E6
.text:000000018000C7BD                 lea     rax, [rcx+rbp]
.text:000000018000C7C1                 mov     rbx, rdx
.text:000000018000C7C4                 cmp     rdx, rax
.text:000000018000C7C7                 cmovb   rbx, rax
.text:000000018000C7CB                 lea     rax, [rbx+1]
.text:000000018000C7CF                 cmp     rax, 1000h
.text:000000018000C7D5                 jb      short loc_18000C808
.text:000000018000C7D7                 lea     rcx, [rax+27h]
.text:000000018000C7DB                 cmp     rcx, rax
.text:000000018000C7DE                 jbe     loc_18000C89E
.text:000000018000C7E4                 jmp     short loc_18000C7F0
.text:000000018000C7E6 ; ---------------------------------------------------------------------------
.text:000000018000C7E6
.text:000000018000C7E6 loc_18000C7E6:                          ; CODE XREF: sub_18000C760+4A↑j
.text:000000018000C7E6                                         ; sub_18000C760+5B↑j
.text:000000018000C7E6                 mov     rcx, 8000000000000027h ; Size
.text:000000018000C7F0
.text:000000018000C7F0 loc_18000C7F0:                          ; CODE XREF: sub_18000C760+84↑j
.text:000000018000C7F0                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000C7F5                 test    rax, rax
.text:000000018000C7F8                 jz      short loc_18000C86B
.text:000000018000C7FA                 lea     rsi, [rax+27h]
.text:000000018000C7FE                 and     rsi, 0FFFFFFFFFFFFFFE0h
.text:000000018000C802                 mov     [rsi-8], rax
.text:000000018000C806                 jmp     short loc_18000C81C
.text:000000018000C808 ; ---------------------------------------------------------------------------
.text:000000018000C808
.text:000000018000C808 loc_18000C808:                          ; CODE XREF: sub_18000C760+75↑j
.text:000000018000C808                 test    rax, rax
.text:000000018000C80B                 jz      short loc_18000C81A
.text:000000018000C80D                 mov     rcx, rax        ; Size
.text:000000018000C810                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000C815                 mov     rsi, rax
.text:000000018000C818                 jmp     short loc_18000C81C
.text:000000018000C81A ; ---------------------------------------------------------------------------
.text:000000018000C81A
.text:000000018000C81A loc_18000C81A:                          ; CODE XREF: sub_18000C760+AB↑j
.text:000000018000C81A                 xor     esi, esi
.text:000000018000C81C
.text:000000018000C81C loc_18000C81C:                          ; CODE XREF: sub_18000C760+A6↑j
.text:000000018000C81C                                         ; sub_18000C760+B8↑j
.text:000000018000C81C                 mov     [rdi+10h], r15
.text:000000018000C820                 lea     r8, [r14+1]     ; Size
.text:000000018000C824                 mov     [rdi+18h], rbx
.text:000000018000C828                 mov     rcx, rsi        ; void *
.text:000000018000C82B                 cmp     rbp, 10h
.text:000000018000C82F                 jb      short loc_18000C872
.text:000000018000C831                 mov     rbx, [rdi]
.text:000000018000C834                 mov     rdx, rbx        ; Src
.text:000000018000C837                 call    memcpy
.text:000000018000C83C                 lea     rdx, [rbp+1]
.text:000000018000C840                 cmp     rdx, 1000h
.text:000000018000C847                 jb      short loc_18000C861
.text:000000018000C849                 mov     rcx, [rbx-8]
.text:000000018000C84D                 add     rdx, 27h ; '''
.text:000000018000C851                 sub     rbx, rcx
.text:000000018000C854                 lea     rax, [rbx-8]
.text:000000018000C858                 cmp     rax, 1Fh
.text:000000018000C85C                 ja      short loc_18000C86B
.text:000000018000C85E                 mov     rbx, rcx
.text:000000018000C861
.text:000000018000C861 loc_18000C861:                          ; CODE XREF: sub_18000C760+E7↑j
.text:000000018000C861                 mov     rcx, rbx        ; Block
.text:000000018000C864                 call    j_j_free
.text:000000018000C869                 jmp     short loc_18000C87A
.text:000000018000C86B ; ---------------------------------------------------------------------------
.text:000000018000C86B
.text:000000018000C86B loc_18000C86B:                          ; CODE XREF: sub_18000C760+98↑j
.text:000000018000C86B                                         ; sub_18000C760+FC↑j
.text:000000018000C86B                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000C871                 int     3               ; Trap to Debugger
.text:000000018000C872 ; ---------------------------------------------------------------------------
.text:000000018000C872
.text:000000018000C872 loc_18000C872:                          ; CODE XREF: sub_18000C760+CF↑j
.text:000000018000C872                 mov     rdx, rdi        ; Src
.text:000000018000C875                 call    memcpy
.text:000000018000C87A
.text:000000018000C87A loc_18000C87A:                          ; CODE XREF: sub_18000C760+109↑j
.text:000000018000C87A                 mov     [rdi], rsi
.text:000000018000C87D                 mov     rax, rdi
.text:000000018000C880                 mov     rsi, [rsp+38h+arg_8]
.text:000000018000C885                 mov     rbp, [rsp+38h+arg_0]
.text:000000018000C88A                 mov     r15, [rsp+38h+arg_10]
.text:000000018000C88F                 add     rsp, 20h
.text:000000018000C893                 pop     r14
.text:000000018000C895                 pop     rdi
.text:000000018000C896                 pop     rbx
.text:000000018000C897                 retn
.text:000000018000C898 ; ---------------------------------------------------------------------------
.text:000000018000C898
.text:000000018000C898 loc_18000C898:                          ; CODE XREF: sub_18000C760+23↑j
.text:000000018000C898                                         ; DATA XREF: .pdata:000000018001CB58↓o ...
.text:000000018000C898                 call    sub_180002AC0
.text:000000018000C898 ; ---------------------------------------------------------------------------
.text:000000018000C89D                 align 2
.text:000000018000C89E
.text:000000018000C89E loc_18000C89E:                          ; CODE XREF: sub_18000C760+7E↑j
.text:000000018000C89E                                         ; DATA XREF: .pdata:000000018001CB64↓o ...
.text:000000018000C89E                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:000000018000C89E ; ---------------------------------------------------------------------------
.text:000000018000C8A3                 db 0CCh
.text:000000018000C8A3 sub_18000C760   endp
.text:000000018000C8A3
.text:000000018000C8A4 algn_18000C8A4:                         ; DATA XREF: .pdata:000000018001CB70↓o
.text:000000018000C8A4                 align 10h
.text:000000018000C8B0
.text:000000018000C8B0 ; =============== S U B R O U T I N E =======================================
.text:000000018000C8B0
.text:000000018000C8B0
.text:000000018000C8B0 sub_18000C8B0   proc near               ; CODE XREF: sub_18000CFD0+335↓p
.text:000000018000C8B0                                         ; sub_18000CFD0+533↓p ...
.text:000000018000C8B0
.text:000000018000C8B0 arg_0           = qword ptr  8
.text:000000018000C8B0 arg_8           = qword ptr  10h
.text:000000018000C8B0 arg_10          = qword ptr  18h
.text:000000018000C8B0
.text:000000018000C8B0 ; __unwind { // __CxxFrameHandler4
.text:000000018000C8B0                 mov     [rsp+arg_8], rbx
.text:000000018000C8B5                 mov     [rsp+arg_10], rsi
.text:000000018000C8BA                 mov     [rsp+arg_0], rcx
.text:000000018000C8BF                 push    rdi
.text:000000018000C8C0                 sub     rsp, 20h
.text:000000018000C8C4                 mov     rbx, rcx
.text:000000018000C8C7                 call    sub_18000F180
.text:000000018000C8CC                 nop
.text:000000018000C8CD                 lea     rax, off_180012760
.text:000000018000C8D4                 mov     [rbx], rax
.text:000000018000C8D7                 mov     byte ptr [rbx+278h], 1
.text:000000018000C8DE                 xor     esi, esi
.text:000000018000C8E0                 mov     [rbx+288h], rsi
.text:000000018000C8E7                 mov     [rbx+290h], rsi
.text:000000018000C8EE                 mov     [rbx+298h], rsi
.text:000000018000C8F5                 lea     ecx, [rsi+28h]  ; Size
.text:000000018000C8F8                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000C8FD                 mov     rdi, rax
.text:000000018000C900                 mov     [rsp+28h+arg_0], rax
.text:000000018000C905                 test    rax, rax
.text:000000018000C908                 jz      short loc_18000C915
.text:000000018000C90A                 mov     rcx, rax        ; lpCriticalSection
.text:000000018000C90D                 call    cs:InitializeCriticalSection
.text:000000018000C913                 jmp     short loc_18000C918
.text:000000018000C915 ; ---------------------------------------------------------------------------
.text:000000018000C915
.text:000000018000C915 loc_18000C915:                          ; CODE XREF: sub_18000C8B0+58↑j
.text:000000018000C915                 mov     rdi, rsi
.text:000000018000C918
.text:000000018000C918 loc_18000C918:                          ; CODE XREF: sub_18000C8B0+63↑j
.text:000000018000C918                 mov     [rbx+280h], rdi
.text:000000018000C91F                 mov     [rbx+2A0h], rsi
.text:000000018000C926                 mov     [rbx+2A8h], esi
.text:000000018000C92C                 mov     [rbx+2B0h], rsi
.text:000000018000C933                 mov     [rbx+2B8h], rsi
.text:000000018000C93A                 mov     [rbx+2C0h], rsi
.text:000000018000C941                 mov     dword ptr [rbx+2C8h], 0A080h
.text:000000018000C94B                 lea     rcx, [rbx+2CCh] ; void *
.text:000000018000C952                 mov     [rbx+0A350h], rcx
.text:000000018000C959                 mov     [rbx+0A358h], rcx
.text:000000018000C960                 mov     [rbx+0A360h], esi
.text:000000018000C966                 mov     [rbx+0A368h], rsi
.text:000000018000C96D                 mov     [rbx+0A370h], rsi
.text:000000018000C974                 mov     [rbx+0A378h], rsi
.text:000000018000C97B                 mov     [rbx+0A380h], rsi
.text:000000018000C982                 mov     [rbx+0A388h], rsi
.text:000000018000C989                 mov     [rbx+0A390h], rsi
.text:000000018000C990                 mov     [rbx+0A3B8h], rsi
.text:000000018000C997                 mov     [rbx+0A3C0h], rsi
.text:000000018000C99E                 mov     [rbx+0A3C8h], rsi
.text:000000018000C9A5                 mov     [rbx+0A3D0h], rsi
.text:000000018000C9AC                 mov     [rbx+0A3D8h], sil
.text:000000018000C9B3                 mov     [rbx+0A3E0h], rsi
.text:000000018000C9BA                 mov     [rbx+0A3E8h], rsi
.text:000000018000C9C1                 mov     [rbx+0A3F0h], rsi
.text:000000018000C9C8                 xor     edx, edx        ; Val
.text:000000018000C9CA                 mov     r8d, 0A080h     ; Size
.text:000000018000C9D0                 call    memset
.text:000000018000C9D5                 lock inc cs:dword_1800194A8
.text:000000018000C9DC                 cmp     cs:qword_1800194B0, rsi
.text:000000018000C9E3                 jnz     short loc_18000C9EE
.text:000000018000C9E5                 mov     cs:qword_1800194B0, rbx
.text:000000018000C9EC                 jmp     short loc_18000CA0A
.text:000000018000C9EE ; ---------------------------------------------------------------------------
.text:000000018000C9EE
.text:000000018000C9EE loc_18000C9EE:                          ; CODE XREF: sub_18000C8B0+133↑j
.text:000000018000C9EE                 mov     rax, cs:qword_1800194B8
.text:000000018000C9F5                 mov     [rax+0A380h], rbx
.text:000000018000C9FC                 mov     rax, cs:qword_1800194B8
.text:000000018000CA03                 mov     [rbx+0A378h], rax
.text:000000018000CA0A
.text:000000018000CA0A loc_18000CA0A:                          ; CODE XREF: sub_18000C8B0+13C↑j
.text:000000018000CA0A                 mov     cs:qword_1800194B8, rbx
.text:000000018000CA11                 mov     rax, rbx
.text:000000018000CA14                 mov     rbx, [rsp+28h+arg_8]
.text:000000018000CA19                 mov     rsi, [rsp+28h+arg_10]
.text:000000018000CA1E                 add     rsp, 20h
.text:000000018000CA22                 pop     rdi
.text:000000018000CA23                 retn
.text:000000018000CA23 ; } // starts at 18000C8B0
.text:000000018000CA23 sub_18000C8B0   endp
.text:000000018000CA23
.text:000000018000CA23 ; ---------------------------------------------------------------------------
.text:000000018000CA24 algn_18000CA24:                         ; DATA XREF: .pdata:000000018001CB7C↓o
.text:000000018000CA24                 align 10h
.text:000000018000CA30
.text:000000018000CA30 ; =============== S U B R O U T I N E =======================================
.text:000000018000CA30
.text:000000018000CA30
.text:000000018000CA30 ; __int64 __fastcall sub_18000CA30(void *Block)
.text:000000018000CA30 sub_18000CA30   proc near               ; DATA XREF: .rdata:off_180012760↓o
.text:000000018000CA30                                         ; .rdata:00000001800161AC↓o ...
.text:000000018000CA30
.text:000000018000CA30 arg_0           = qword ptr  8
.text:000000018000CA30 arg_8           = qword ptr  10h
.text:000000018000CA30 arg_10          = qword ptr  18h
.text:000000018000CA30
.text:000000018000CA30                 mov     [rsp+arg_8], rbx
.text:000000018000CA35                 mov     [rsp+arg_10], rbp
.text:000000018000CA3A                 push    rsi
.text:000000018000CA3B                 sub     rsp, 20h
.text:000000018000CA3F                 lea     rax, off_180012760
.text:000000018000CA46                 mov     rbx, rcx
.text:000000018000CA49                 mov     [rcx], rax
.text:000000018000CA4C                 xor     ebp, ebp
.text:000000018000CA4E                 lock dec cs:dword_1800194A8
.text:000000018000CA55                 mov     esi, edx
.text:000000018000CA57                 mov     rcx, [rcx+0A3E0h]
.text:000000018000CA5E                 test    rcx, rcx
.text:000000018000CA61                 jz      short loc_18000CAB0
.text:000000018000CA63                 mov     rdx, [rbx+0A3F0h]
.text:000000018000CA6A                 sub     rdx, rcx
.text:000000018000CA6D                 and     rdx, 0FFFFFFFFFFFFFFF0h
.text:000000018000CA71                 cmp     rdx, 1000h
.text:000000018000CA78                 jb      short loc_18000CA96
.text:000000018000CA7A                 mov     r8, [rcx-8]
.text:000000018000CA7E                 add     rdx, 27h ; '''
.text:000000018000CA82                 sub     rcx, r8
.text:000000018000CA85                 lea     rax, [rcx-8]
.text:000000018000CA89                 cmp     rax, 1Fh
.text:000000018000CA8D                 ja      loc_18000CB18
.text:000000018000CA93                 mov     rcx, r8         ; Block
.text:000000018000CA96
.text:000000018000CA96 loc_18000CA96:                          ; CODE XREF: sub_18000CA30+48↑j
.text:000000018000CA96                 call    j_j_free
.text:000000018000CA9B                 mov     [rbx+0A3E0h], rbp
.text:000000018000CAA2                 mov     [rbx+0A3E8h], rbp
.text:000000018000CAA9                 mov     [rbx+0A3F0h], rbp
.text:000000018000CAB0
.text:000000018000CAB0 loc_18000CAB0:                          ; CODE XREF: sub_18000CA30+31↑j
.text:000000018000CAB0                                         ; DATA XREF: .rdata:00000001800161AC↓o ...
.text:000000018000CAB0                 mov     [rsp+28h+arg_0], rdi
.text:000000018000CAB5                 mov     rdi, [rbx+280h]
.text:000000018000CABC                 test    rdi, rdi
.text:000000018000CABF                 jz      short loc_18000CAD7
.text:000000018000CAC1                 mov     rcx, rdi        ; lpCriticalSection
.text:000000018000CAC4                 call    cs:DeleteCriticalSection
.text:000000018000CACA                 mov     edx, 28h ; '('
.text:000000018000CACF                 mov     rcx, rdi        ; Block
.text:000000018000CAD2                 call    j_j_free
.text:000000018000CAD7
.text:000000018000CAD7 loc_18000CAD7:                          ; CODE XREF: sub_18000CA30+8F↑j
.text:000000018000CAD7                 mov     rcx, rbx
.text:000000018000CADA                 mov     [rbx+280h], rbp
.text:000000018000CAE1                 mov     [rbx+298h], rbp
.text:000000018000CAE8                 call    sub_18000F280
.text:000000018000CAED                 mov     rdi, [rsp+28h+arg_0]
.text:000000018000CAF2                 test    sil, 1
.text:000000018000CAF6                 jz      short loc_18000CB05
.text:000000018000CAF8
.text:000000018000CAF8 loc_18000CAF8:                          ; DATA XREF: .pdata:000000018001CB94↓o
.text:000000018000CAF8                                         ; .pdata:000000018001CBA0↓o
.text:000000018000CAF8                 mov     edx, 0A3F8h
.text:000000018000CAFD                 mov     rcx, rbx        ; Block
.text:000000018000CB00                 call    j_j_free
.text:000000018000CB05
.text:000000018000CB05 loc_18000CB05:                          ; CODE XREF: sub_18000CA30+C6↑j
.text:000000018000CB05                 mov     rbp, [rsp+28h+arg_10]
.text:000000018000CB0A                 mov     rax, rbx
.text:000000018000CB0D                 mov     rbx, [rsp+28h+arg_8]
.text:000000018000CB12                 add     rsp, 20h
.text:000000018000CB16                 pop     rsi
.text:000000018000CB17                 retn
.text:000000018000CB18 ; ---------------------------------------------------------------------------
.text:000000018000CB18
.text:000000018000CB18 loc_18000CB18:                          ; CODE XREF: sub_18000CA30+5D↑j
.text:000000018000CB18                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000CB18 ; ---------------------------------------------------------------------------
.text:000000018000CB1E                 db 0CCh
.text:000000018000CB1E sub_18000CA30   endp
.text:000000018000CB1E
.text:000000018000CB1F algn_18000CB1F:                         ; DATA XREF: .pdata:000000018001CBA0↓o
.text:000000018000CB1F                 align 20h
.text:000000018000CB20
.text:000000018000CB20 ; =============== S U B R O U T I N E =======================================
.text:000000018000CB20
.text:000000018000CB20
.text:000000018000CB20 sub_18000CB20   proc near               ; DATA XREF: sub_18000E600+87↓o
.text:000000018000CB20                 mov     rdx, rcx
.text:000000018000CB23                 test    rcx, rcx
.text:000000018000CB26                 jz      short loc_18000CB63
.text:000000018000CB28                 cmp     dword ptr [rcx], 30h ; '0'
.text:000000018000CB2B                 jnz     short loc_18000CB63
.text:000000018000CB2D                 cmp     dword ptr [rcx+4], 2
.text:000000018000CB31                 jnz     short loc_18000CB63
.text:000000018000CB33                 mov     rax, cs:qword_1800194B0
.text:000000018000CB3A                 test    rax, rax
.text:000000018000CB3D                 jz      short loc_18000CB63
.text:000000018000CB3F                 mov     r8d, [rcx+0Ch]
.text:000000018000CB43
.text:000000018000CB43 loc_18000CB43:                          ; CODE XREF: sub_18000CB20+41↓j
.text:000000018000CB43                 cmp     [rax+258h], r8d
.text:000000018000CB4A                 jnz     short loc_18000CB57
.text:000000018000CB4C                 mov     ecx, [rax+0A388h]
.text:000000018000CB52                 cmp     [rdx+8], ecx
.text:000000018000CB55                 jz      short loc_18000CB66
.text:000000018000CB57
.text:000000018000CB57 loc_18000CB57:                          ; CODE XREF: sub_18000CB20+2A↑j
.text:000000018000CB57                 mov     rax, [rax+0A380h]
.text:000000018000CB5E                 test    rax, rax
.text:000000018000CB61                 jnz     short loc_18000CB43
.text:000000018000CB63
.text:000000018000CB63 loc_18000CB63:                          ; CODE XREF: sub_18000CB20+6↑j
.text:000000018000CB63                                         ; sub_18000CB20+B↑j ...
.text:000000018000CB63                 xor     eax, eax
.text:000000018000CB65                 retn
.text:000000018000CB66 ; ---------------------------------------------------------------------------
.text:000000018000CB66
.text:000000018000CB66 loc_18000CB66:                          ; CODE XREF: sub_18000CB20+35↑j
.text:000000018000CB66                 test    rax, rax
.text:000000018000CB69                 jz      short loc_18000CB63
.text:000000018000CB6B                 cmp     byte ptr [rax+0A3D8h], 0
.text:000000018000CB72                 jnz     short loc_18000CB63
.text:000000018000CB74                 mov     rcx, [rdx+10h]
.text:000000018000CB78                 mov     [rax+0A3B8h], rcx
.text:000000018000CB7F                 mov     rcx, [rdx+18h]
.text:000000018000CB83                 mov     [rax+0A3C0h], rcx
.text:000000018000CB8A                 mov     rcx, [rdx+20h]
.text:000000018000CB8E                 mov     [rax+0A3C8h], rcx
.text:000000018000CB95                 mov     rcx, [rdx+28h]
.text:000000018000CB99                 mov     [rax+0A3D0h], rcx
.text:000000018000CBA0                 mov     byte ptr [rax+0A3D8h], 1
.text:000000018000CBA7                 mov     eax, 1
.text:000000018000CBAC                 retn
.text:000000018000CBAC sub_18000CB20   endp
.text:000000018000CBAC
.text:000000018000CBAC ; ---------------------------------------------------------------------------
.text:000000018000CBAD                 align 10h
.text:000000018000CBB0
.text:000000018000CBB0 ; =============== S U B R O U T I N E =======================================
.text:000000018000CBB0
.text:000000018000CBB0
.text:000000018000CBB0 sub_18000CBB0   proc near               ; DATA XREF: sub_18000E600+92↓o
.text:000000018000CBB0                                         ; .pdata:000000018001CBAC↓o
.text:000000018000CBB0
.text:000000018000CBB0 var_18          = qword ptr -18h
.text:000000018000CBB0 arg_0           = qword ptr  8
.text:000000018000CBB0 arg_8           = qword ptr  10h
.text:000000018000CBB0 arg_10          = qword ptr  18h
.text:000000018000CBB0
.text:000000018000CBB0                 mov     [rsp+arg_0], rbx
.text:000000018000CBB5                 mov     [rsp+arg_8], rbp
.text:000000018000CBBA                 mov     [rsp+arg_10], rsi
.text:000000018000CBBF                 push    rdi
.text:000000018000CBC0                 sub     rsp, 30h
.text:000000018000CBC4                 mov     rbx, cs:qword_1800194B0
.text:000000018000CBCB                 mov     rsi, r9
.text:000000018000CBCE                 mov     ebp, r8d
.text:000000018000CBD1                 mov     edi, edx
.text:000000018000CBD3                 test    rbx, rbx
.text:000000018000CBD6                 jz      short loc_18000CC32
.text:000000018000CBD8
.text:000000018000CBD8 loc_18000CBD8:                          ; CODE XREF: sub_18000CBB0+42↓j
.text:000000018000CBD8                 cmp     [rbx+258h], edi
.text:000000018000CBDE                 jnz     short loc_18000CBE8
.text:000000018000CBE0                 cmp     ecx, [rbx+0A388h]
.text:000000018000CBE6                 jz      short loc_18000CBF6
.text:000000018000CBE8
.text:000000018000CBE8 loc_18000CBE8:                          ; CODE XREF: sub_18000CBB0+2E↑j
.text:000000018000CBE8                 mov     rbx, [rbx+0A380h]
.text:000000018000CBEF                 test    rbx, rbx
.text:000000018000CBF2                 jnz     short loc_18000CBD8
.text:000000018000CBF4                 jmp     short loc_18000CC32
.text:000000018000CBF6 ; ---------------------------------------------------------------------------
.text:000000018000CBF6
.text:000000018000CBF6 loc_18000CBF6:                          ; CODE XREF: sub_18000CBB0+36↑j
.text:000000018000CBF6                 test    rbx, rbx
.text:000000018000CBF9                 jz      short loc_18000CC32
.text:000000018000CBFB                 mov     ecx, 20h ; ' '  ; Size
.text:000000018000CC00                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000CC05                 mov     [rsp+38h+var_18], rax
.text:000000018000CC0A                 test    rax, rax
.text:000000018000CC0D                 jz      short loc_18000CC27
.text:000000018000CC0F                 mov     qword ptr [rax], 0
.text:000000018000CC16                 mov     [rax+8], rsi
.text:000000018000CC1A                 mov     [rax+10h], ebp
.text:000000018000CC1D                 mov     [rax+14h], edi
.text:000000018000CC20                 mov     dword ptr [rax+18h], 1
.text:000000018000CC27
.text:000000018000CC27 loc_18000CC27:                          ; CODE XREF: sub_18000CBB0+5D↑j
.text:000000018000CC27                 mov     rdx, rax
.text:000000018000CC2A                 mov     rcx, rbx
.text:000000018000CC2D                 call    sub_18000E4F0
.text:000000018000CC32
.text:000000018000CC32 loc_18000CC32:                          ; CODE XREF: sub_18000CBB0+26↑j
.text:000000018000CC32                                         ; sub_18000CBB0+44↑j ...
.text:000000018000CC32                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000CC37                 mov     rbp, [rsp+38h+arg_8]
.text:000000018000CC3C                 mov     rsi, [rsp+38h+arg_10]
.text:000000018000CC41                 add     rsp, 30h
.text:000000018000CC45                 pop     rdi
.text:000000018000CC46                 retn
.text:000000018000CC46 sub_18000CBB0   endp
.text:000000018000CC46
.text:000000018000CC46 ; ---------------------------------------------------------------------------
.text:000000018000CC47 algn_18000CC47:                         ; DATA XREF: .pdata:000000018001CBAC↓o
.text:000000018000CC47                 align 10h
.text:000000018000CC50
.text:000000018000CC50 ; =============== S U B R O U T I N E =======================================
.text:000000018000CC50
.text:000000018000CC50
.text:000000018000CC50 sub_18000CC50   proc near               ; DATA XREF: .rdata:0000000180012770↓o
.text:000000018000CC50                                         ; .pdata:000000018001CBB8↓o
.text:000000018000CC50
.text:000000018000CC50 arg_0           = qword ptr  8
.text:000000018000CC50
.text:000000018000CC50                 mov     [rsp+arg_0], rbx
.text:000000018000CC55                 push    rdi
.text:000000018000CC56                 sub     rsp, 20h
.text:000000018000CC5A                 mov     ebx, edx
.text:000000018000CC5C                 mov     rdi, rcx
.text:000000018000CC5F                 call    sub_18000F360
.text:000000018000CC64                 test    ebx, ebx
.text:000000018000CC66                 jz      short loc_18000CC9C
.text:000000018000CC68                 mov     rcx, [rdi+2A0h] ; hWnd
.text:000000018000CC6F                 test    rcx, rcx
.text:000000018000CC72                 jz      short loc_18000CC8A
.text:000000018000CC74                 mov     edx, [rdi+2A8h] ; Msg
.text:000000018000CC7A                 test    edx, edx
.text:000000018000CC7C                 jz      short loc_18000CC8A
.text:000000018000CC7E                 xor     r9d, r9d        ; lParam
.text:000000018000CC81                 xor     r8d, r8d        ; wParam
.text:000000018000CC84                 call    cs:PostMessageA
.text:000000018000CC8A
.text:000000018000CC8A loc_18000CC8A:                          ; CODE XREF: sub_18000CC50+22↑j
.text:000000018000CC8A                                         ; sub_18000CC50+2C↑j
.text:000000018000CC8A                 mov     rcx, [rdi+0A368h] ; hEvent
.text:000000018000CC91                 test    rcx, rcx
.text:000000018000CC94                 jz      short loc_18000CC9C
.text:000000018000CC96                 call    cs:SetEvent
.text:000000018000CC9C
.text:000000018000CC9C loc_18000CC9C:                          ; CODE XREF: sub_18000CC50+16↑j
.text:000000018000CC9C                                         ; sub_18000CC50+44↑j
.text:000000018000CC9C                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000CCA1                 add     rsp, 20h
.text:000000018000CCA5                 pop     rdi
.text:000000018000CCA6                 retn
.text:000000018000CCA6 sub_18000CC50   endp
.text:000000018000CCA6
.text:000000018000CCA6 ; ---------------------------------------------------------------------------
.text:000000018000CCA7 algn_18000CCA7:                         ; DATA XREF: .pdata:000000018001CBB8↓o
.text:000000018000CCA7                 align 10h
.text:000000018000CCB0
.text:000000018000CCB0 ; =============== S U B R O U T I N E =======================================
.text:000000018000CCB0
.text:000000018000CCB0
.text:000000018000CCB0 sub_18000CCB0   proc near               ; CODE XREF: sub_18000B9C0+C6↑p
.text:000000018000CCB0                                         ; sub_18000BB20+66↑p ...
.text:000000018000CCB0
.text:000000018000CCB0 var_18          = qword ptr -18h
.text:000000018000CCB0 arg_0           = qword ptr  8
.text:000000018000CCB0 arg_8           = qword ptr  10h
.text:000000018000CCB0 arg_10          = qword ptr  18h
.text:000000018000CCB0
.text:000000018000CCB0                 push    rbx
.text:000000018000CCB2                 push    rsi
.text:000000018000CCB3                 sub     rsp, 28h
.text:000000018000CCB7                 mov     rbx, rcx
.text:000000018000CCBA                 mov     esi, 1
.text:000000018000CCBF                 test    rcx, rcx
.text:000000018000CCC2                 jz      loc_18000CDF6
.text:000000018000CCC8                 cmp     byte ptr [rcx+278h], 0
.text:000000018000CCCF                 jz      loc_18000CDF4
.text:000000018000CCD5                 cmp     byte ptr [rcx+0A3D8h], 0
.text:000000018000CCDC
.text:000000018000CCDC loc_18000CCDC:                          ; DATA XREF: .rdata:0000000180015FE8↓o
.text:000000018000CCDC                                         ; .rdata:0000000180016004↓o ...
.text:000000018000CCDC                 mov     [rsp+38h+arg_10], rdi
.text:000000018000CCE1                 jz      short loc_18000CD27
.text:000000018000CCE3                 mov     rdi, [rcx+0A3E0h]
.text:000000018000CCEA                 cmp     rdi, [rcx+0A3E8h]
.text:000000018000CCF1                 jz      short loc_18000CD20
.text:000000018000CCF3
.text:000000018000CCF3 loc_18000CCF3:                          ; CODE XREF: sub_18000CCB0+67↓j
.text:000000018000CCF3                 mov     r9, [rdi]
.text:000000018000CCF6                 mov     r8d, [rdi+8]
.text:000000018000CCFA                 mov     edx, [rbx+258h]
.text:000000018000CD00                 mov     ecx, [rbx+0A388h]
.text:000000018000CD06                 call    qword ptr [rbx+0A3C8h]
.text:000000018000CD0C                 add     rdi, 10h
.text:000000018000CD10                 cmp     rdi, [rbx+0A3E8h]
.text:000000018000CD17                 jnz     short loc_18000CCF3
.text:000000018000CD19                 mov     rdi, [rbx+0A3E0h]
.text:000000018000CD20
.text:000000018000CD20 loc_18000CD20:                          ; CODE XREF: sub_18000CCB0+41↑j
.text:000000018000CD20                 mov     [rbx+0A3E8h], rdi
.text:000000018000CD27
.text:000000018000CD27 loc_18000CD27:                          ; CODE XREF: sub_18000CCB0+31↑j
.text:000000018000CD27                 mov     edi, [rbx+0A358h]
.text:000000018000CD2D                 sub     edi, [rbx+0A350h]
.text:000000018000CD33                 jz      loc_18000CDE6
.text:000000018000CD39                 mov     [rsp+38h+arg_8], rbp
.text:000000018000CD3E                 mov     [rsp+38h+var_18], r14
.text:000000018000CD43                 mov     ecx, edi        ; Size
.text:000000018000CD45                 mov     r14d, edi
.text:000000018000CD48                 call    cs:__imp_malloc
.text:000000018000CD4E                 mov     rbp, rax
.text:000000018000CD51                 test    rax, rax
.text:000000018000CD54                 jz      loc_18000CDDC
.text:000000018000CD5A                 mov     rdx, [rbx+0A350h] ; Src
.text:000000018000CD61                 mov     r8d, r14d       ; Size
.text:000000018000CD64                 mov     rcx, rax        ; void *
.text:000000018000CD67                 call    memcpy
.text:000000018000CD6C                 mov     ecx, 20h ; ' '  ; Size
.text:000000018000CD71                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000CD76                 mov     [rsp+38h+arg_0], rax
.text:000000018000CD7B                 test    rax, rax
.text:000000018000CD7E                 jz      short loc_18000CDD3
.text:000000018000CD80                 mov     ecx, [rbx+258h]
.text:000000018000CD86                 xor     esi, esi
.text:000000018000CD88                 mov     [rax+14h], ecx
.text:000000018000CD8B                 mov     rdx, rax
.text:000000018000CD8E                 mov     rcx, rbx
.text:000000018000CD91                 mov     [rax], rsi
.text:000000018000CD94                 mov     [rax+8], rbp
.text:000000018000CD98                 mov     [rax+10h], edi
.text:000000018000CD9B                 mov     [rax+18h], esi
.text:000000018000CD9E                 call    sub_180010140
.text:000000018000CDA3                 mov     rcx, [rbx+0A350h] ; void *
.text:000000018000CDAA                 mov     r8d, r14d       ; Size
.text:000000018000CDAD                 xor     edx, edx        ; Val
.text:000000018000CDAF                 mov     [rbx+0A358h], rcx
.text:000000018000CDB6                 call    memset
.text:000000018000CDBB                 mov     rbp, [rsp+38h+arg_8]
.text:000000018000CDC0                 mov     eax, esi
.text:000000018000CDC2                 mov     r14, [rsp+38h+var_18]
.text:000000018000CDC7                 mov     rdi, [rsp+38h+arg_10]
.text:000000018000CDCC                 add     rsp, 28h
.text:000000018000CDD0                 pop     rsi
.text:000000018000CDD1                 pop     rbx
.text:000000018000CDD2                 retn
.text:000000018000CDD3 ; ---------------------------------------------------------------------------
.text:000000018000CDD3
.text:000000018000CDD3 loc_18000CDD3:                          ; CODE XREF: sub_18000CCB0+CE↑j
.text:000000018000CDD3                                         ; DATA XREF: .pdata:000000018001CBD0↓o ...
.text:000000018000CDD3                 mov     rcx, rbp        ; Block
.text:000000018000CDD6                 call    cs:__imp_free
.text:000000018000CDDC
.text:000000018000CDDC loc_18000CDDC:                          ; CODE XREF: sub_18000CCB0+A4↑j
.text:000000018000CDDC                 mov     rbp, [rsp+38h+arg_8]
.text:000000018000CDE1                 mov     r14, [rsp+38h+var_18]
.text:000000018000CDE6
.text:000000018000CDE6 loc_18000CDE6:                          ; CODE XREF: sub_18000CCB0+83↑j
.text:000000018000CDE6                                         ; DATA XREF: .pdata:000000018001CBDC↓o ...
.text:000000018000CDE6                 mov     rdi, [rsp+38h+arg_10]
.text:000000018000CDEB                 mov     eax, esi
.text:000000018000CDED                 add     rsp, 28h
.text:000000018000CDF1                 pop     rsi
.text:000000018000CDF2                 pop     rbx
.text:000000018000CDF3                 retn
.text:000000018000CDF4 ; ---------------------------------------------------------------------------
.text:000000018000CDF4
.text:000000018000CDF4 loc_18000CDF4:                          ; CODE XREF: sub_18000CCB0+1F↑j
.text:000000018000CDF4                                         ; DATA XREF: .pdata:000000018001CBE8↓o ...
.text:000000018000CDF4                 xor     esi, esi
.text:000000018000CDF6
.text:000000018000CDF6 loc_18000CDF6:                          ; CODE XREF: sub_18000CCB0+12↑j
.text:000000018000CDF6                 mov     eax, esi
.text:000000018000CDF8                 add     rsp, 28h
.text:000000018000CDFC                 pop     rsi
.text:000000018000CDFD                 pop     rbx
.text:000000018000CDFE                 retn
.text:000000018000CDFE sub_18000CCB0   endp
.text:000000018000CDFE
.text:000000018000CDFE ; ---------------------------------------------------------------------------
.text:000000018000CDFF algn_18000CDFF:                         ; DATA XREF: .pdata:000000018001CBF4↓o
.text:000000018000CDFF                 align 20h
.text:000000018000CE00
.text:000000018000CE00 ; =============== S U B R O U T I N E =======================================
.text:000000018000CE00
.text:000000018000CE00
.text:000000018000CE00 sub_18000CE00   proc near               ; CODE XREF: sub_18000BC10+26↑p
.text:000000018000CE00                                         ; sub_18000BFD0+176↑p ...
.text:000000018000CE00
.text:000000018000CE00 arg_0           = qword ptr  8
.text:000000018000CE00
.text:000000018000CE00                 push    rbx
.text:000000018000CE02                 sub     rsp, 20h
.text:000000018000CE06                 mov     rbx, rcx
.text:000000018000CE09                 test    rcx, rcx
.text:000000018000CE0C                 jz      loc_18000CF77
.text:000000018000CE12                 mov     ecx, 64h ; 'd'  ; dwMilliseconds
.text:000000018000CE17
.text:000000018000CE17 loc_18000CE17:                          ; DATA XREF: .rdata:0000000180015FB0↓o
.text:000000018000CE17                                         ; .rdata:0000000180015FC0↓o ...
.text:000000018000CE17                 mov     [rsp+28h+arg_0], rdi
.text:000000018000CE1C                 call    cs:Sleep
.text:000000018000CE22                 mov     rdi, [rbx+0A370h]
.text:000000018000CE29                 test    rdi, rdi
.text:000000018000CE2C                 jz      short loc_18000CE87
.text:000000018000CE2E                 cmp     dword ptr [rdi+18h], 0
.text:000000018000CE32                 jz      short loc_18000CE65
.text:000000018000CE34                 mov     r8, [rdi+8]
.text:000000018000CE38                 mov     edx, [rbx+258h]
.text:000000018000CE3E                 mov     ecx, [rbx+0A388h]
.text:000000018000CE44                 call    qword ptr [rbx+0A3D0h]
.text:000000018000CE4A                 mov     rax, [rbx+0A370h]
.text:000000018000CE51                 mov     qword ptr [rax+8], 0
.text:000000018000CE59                 mov     rdi, [rbx+0A370h]
.text:000000018000CE60                 test    rdi, rdi
.text:000000018000CE63                 jz      short loc_18000CE7C
.text:000000018000CE65
.text:000000018000CE65 loc_18000CE65:                          ; CODE XREF: sub_18000CE00+32↑j
.text:000000018000CE65                 mov     rcx, [rdi+8]    ; Block
.text:000000018000CE69                 call    cs:__imp_free
.text:000000018000CE6F                 mov     edx, 20h ; ' '
.text:000000018000CE74                 mov     rcx, rdi        ; Block
.text:000000018000CE77                 call    j_j_free
.text:000000018000CE7C
.text:000000018000CE7C loc_18000CE7C:                          ; CODE XREF: sub_18000CE00+63↑j
.text:000000018000CE7C                 mov     qword ptr [rbx+0A370h], 0
.text:000000018000CE87
.text:000000018000CE87 loc_18000CE87:                          ; CODE XREF: sub_18000CE00+2C↑j
.text:000000018000CE87                 cmp     rbx, cs:qword_1800194B0
.text:000000018000CE8E                 mov     rdi, [rsp+28h+arg_0]
.text:000000018000CE93                 jnz     short loc_18000CEA3
.text:000000018000CE95
.text:000000018000CE95 loc_18000CE95:                          ; DATA XREF: .pdata:000000018001CC0C↓o
.text:000000018000CE95                                         ; .pdata:000000018001CC18↓o
.text:000000018000CE95                 mov     rax, [rbx+0A380h]
.text:000000018000CE9C                 mov     cs:qword_1800194B0, rax
.text:000000018000CEA3
.text:000000018000CEA3 loc_18000CEA3:                          ; CODE XREF: sub_18000CE00+93↑j
.text:000000018000CEA3                 cmp     rbx, cs:qword_1800194B8
.text:000000018000CEAA                 jnz     short loc_18000CEBA
.text:000000018000CEAC                 mov     rax, [rbx+0A378h]
.text:000000018000CEB3                 mov     cs:qword_1800194B8, rax
.text:000000018000CEBA
.text:000000018000CEBA loc_18000CEBA:                          ; CODE XREF: sub_18000CE00+AA↑j
.text:000000018000CEBA                 mov     rcx, [rbx+0A378h]
.text:000000018000CEC1                 test    rcx, rcx
.text:000000018000CEC4                 jz      short loc_18000CED4
.text:000000018000CEC6                 mov     rax, [rbx+0A380h]
.text:000000018000CECD                 mov     [rcx+0A380h], rax
.text:000000018000CED4
.text:000000018000CED4 loc_18000CED4:                          ; CODE XREF: sub_18000CE00+C4↑j
.text:000000018000CED4                 mov     rcx, [rbx+0A380h]
.text:000000018000CEDB                 test    rcx, rcx
.text:000000018000CEDE                 jz      short loc_18000CEEE
.text:000000018000CEE0                 mov     rax, [rbx+0A378h]
.text:000000018000CEE7                 mov     [rcx+0A378h], rax
.text:000000018000CEEE
.text:000000018000CEEE loc_18000CEEE:                          ; CODE XREF: sub_18000CE00+DE↑j
.text:000000018000CEEE                 mov     rax, [rbx]
.text:000000018000CEF1                 xor     r8d, r8d
.text:000000018000CEF4                 xor     edx, edx
.text:000000018000CEF6                 mov     rcx, rbx
.text:000000018000CEF9                 call    qword ptr [rax+10h]
.text:000000018000CEFC                 mov     rax, [rbx]
.text:000000018000CEFF                 mov     rcx, rbx
.text:000000018000CF02                 call    qword ptr [rax+8]
.text:000000018000CF05                 mov     eax, 0FFFFFFFFh
.text:000000018000CF0A                 lock xadd [rbx+260h], eax
.text:000000018000CF12                 cmp     eax, 1
.text:000000018000CF15                 jnz     short loc_18000CF2C
.text:000000018000CF17                 mov     rcx, rbx
.text:000000018000CF1A                 call    sub_18000F4C0
.text:000000018000CF1F                 mov     rax, [rbx]
.text:000000018000CF22                 mov     edx, 1
.text:000000018000CF27                 mov     rcx, rbx
.text:000000018000CF2A                 call    qword ptr [rax]
.text:000000018000CF2C
.text:000000018000CF2C loc_18000CF2C:                          ; CODE XREF: sub_18000CE00+115↑j
.text:000000018000CF2C                 cmp     cs:dword_1800194A8, 0
.text:000000018000CF33                 jnz     short loc_18000CF6F
.text:000000018000CF35                 xor     ebx, ebx
.text:000000018000CF37
.text:000000018000CF37 loc_18000CF37:                          ; CODE XREF: sub_18000CE00+150↓j
.text:000000018000CF37                 cmp     cs:dword_1800194C8, 0
.text:000000018000CF3E                 jz      short loc_18000CF52
.text:000000018000CF40                 mov     ecx, 0FAh       ; dwMilliseconds
.text:000000018000CF45                 call    cs:Sleep
.text:000000018000CF4B                 inc     ebx
.text:000000018000CF4D                 cmp     ebx, 14h
.text:000000018000CF50                 jb      short loc_18000CF37
.text:000000018000CF52
.text:000000018000CF52 loc_18000CF52:                          ; CODE XREF: sub_18000CE00+13E↑j
.text:000000018000CF52                 cmp     cs:byte_1800194AC, 0
.text:000000018000CF59                 jz      short loc_18000CF6F
.text:000000018000CF5B                 call    cs:WSACleanup
.text:000000018000CF61                 mov     cs:byte_1800194AC, 0
.text:000000018000CF68                 mov     cs:byte_1800194AD, 0
.text:000000018000CF6F
.text:000000018000CF6F loc_18000CF6F:                          ; CODE XREF: sub_18000CE00+133↑j
.text:000000018000CF6F                                         ; sub_18000CE00+159↑j
.text:000000018000CF6F                 xor     eax, eax
.text:000000018000CF71                 add     rsp, 20h
.text:000000018000CF75                 pop     rbx
.text:000000018000CF76                 retn
.text:000000018000CF77 ; ---------------------------------------------------------------------------
.text:000000018000CF77
.text:000000018000CF77 loc_18000CF77:                          ; CODE XREF: sub_18000CE00+C↑j
.text:000000018000CF77                 mov     eax, 1
.text:000000018000CF7C                 add     rsp, 20h
.text:000000018000CF80                 pop     rbx
.text:000000018000CF81                 retn
.text:000000018000CF81 sub_18000CE00   endp
.text:000000018000CF81
.text:000000018000CF81 ; ---------------------------------------------------------------------------
.text:000000018000CF82 algn_18000CF82:                         ; DATA XREF: .pdata:000000018001CC18↓o
.text:000000018000CF82                 align 10h
.text:000000018000CF90
.text:000000018000CF90 ; =============== S U B R O U T I N E =======================================
.text:000000018000CF90
.text:000000018000CF90
.text:000000018000CF90 sub_18000CF90   proc near               ; CODE XREF: sub_18000B9C0+81↑p
.text:000000018000CF90                                         ; sub_18000BAD0+2A↑p ...
.text:000000018000CF90                 test    rcx, rcx
.text:000000018000CF93                 jz      short loc_18000CFA0
.text:000000018000CF95                 mov     eax, [rcx+1Ch]
.text:000000018000CF98                 mov     [rdx], eax
.text:000000018000CF9A                 mov     eax, [rcx+20h]
.text:000000018000CF9D                 mov     [r8], eax
.text:000000018000CFA0
.text:000000018000CFA0 loc_18000CFA0:                          ; CODE XREF: sub_18000CF90+3↑j
.text:000000018000CFA0                 mov     eax, 1
.text:000000018000CFA5                 retn
.text:000000018000CFA5 sub_18000CF90   endp
.text:000000018000CFA5
.text:000000018000CFA5 ; ---------------------------------------------------------------------------
.text:000000018000CFA6                 align 10h
.text:000000018000CFB0
.text:000000018000CFB0 ; =============== S U B R O U T I N E =======================================
.text:000000018000CFB0
.text:000000018000CFB0
.text:000000018000CFB0 sub_18000CFB0   proc near               ; CODE XREF: sub_18000BD50+1B↑p
.text:000000018000CFB0                 test    rcx, rcx
.text:000000018000CFB3                 jz      short loc_18000CFC0
.text:000000018000CFB5                 mov     eax, [rcx+0A360h]
.text:000000018000CFBB                 mov     [rdx], eax
.text:000000018000CFBD                 xor     eax, eax
.text:000000018000CFBF                 retn
.text:000000018000CFC0 ; ---------------------------------------------------------------------------
.text:000000018000CFC0
.text:000000018000CFC0 loc_18000CFC0:                          ; CODE XREF: sub_18000CFB0+3↑j
.text:000000018000CFC0                 mov     dword ptr [rdx], 0
.text:000000018000CFC6                 mov     eax, 1
.text:000000018000CFCB                 retn
.text:000000018000CFCB sub_18000CFB0   endp
.text:000000018000CFCB
.text:000000018000CFCB ; ---------------------------------------------------------------------------
.text:000000018000CFCC                 align 10h
.text:000000018000CFD0
.text:000000018000CFD0 ; =============== S U B R O U T I N E =======================================
.text:000000018000CFD0
.text:000000018000CFD0 ; Attributes: bp-based frame fpd=220h
.text:000000018000CFD0
.text:000000018000CFD0 sub_18000CFD0   proc near               ; CODE XREF: sub_18000BFD0+2F↑p
.text:000000018000CFD0                                         ; DATA XREF: sub_18000CFD0+257↓o ...
.text:000000018000CFD0
.text:000000018000CFD0 pszPath         = qword ptr -300h
.text:000000018000CFD0 var_2F8         = qword ptr -2F8h
.text:000000018000CFD0 var_2F0         = byte ptr -2F0h
.text:000000018000CFD0 phModule        = qword ptr -2E8h
.text:000000018000CFD0 var_2E0         = dword ptr -2E0h
.text:000000018000CFD0 var_2D8         = qword ptr -2D8h
.text:000000018000CFD0 var_2D0         = byte ptr -2D0h
.text:000000018000CFD0 var_2C0         = qword ptr -2C0h
.text:000000018000CFD0 var_2B8         = qword ptr -2B8h
.text:000000018000CFD0 var_2B0         = qword ptr -2B0h
.text:000000018000CFD0 Buf1            = qword ptr -2A8h
.text:000000018000CFD0 var_298         = qword ptr -298h
.text:000000018000CFD0 var_290         = qword ptr -290h
.text:000000018000CFD0 Block           = qword ptr -288h
.text:000000018000CFD0 var_278         = qword ptr -278h
.text:000000018000CFD0 var_270         = qword ptr -270h
.text:000000018000CFD0 pszDest         = byte ptr -260h
.text:000000018000CFD0 var_1E8         = qword ptr -1E8h
.text:000000018000CFD0 pszDir          = byte ptr -150h
.text:000000018000CFD0 var_40          = qword ptr -40h
.text:000000018000CFD0 arg_10          = qword ptr  20h
.text:000000018000CFD0
.text:000000018000CFD0 ; FUNCTION CHUNK AT .text:00000001800117F0 SIZE 0000001D BYTES
.text:000000018000CFD0
.text:000000018000CFD0 ; __unwind { // __GSHandlerCheck_EH4
.text:000000018000CFD0                 mov     [rsp-8+arg_10], rbx
.text:000000018000CFD5                 push    rbp
.text:000000018000CFD6                 push    rsi
.text:000000018000CFD7                 push    rdi
.text:000000018000CFD8                 push    r12
.text:000000018000CFDA                 push    r13
.text:000000018000CFDC                 push    r14
.text:000000018000CFDE                 push    r15
.text:000000018000CFE0                 lea     rbp, [rsp-1F0h]
.text:000000018000CFE8                 sub     rsp, 2F0h
.text:000000018000CFEF                 mov     rax, cs:__security_cookie
.text:000000018000CFF6                 xor     rax, rsp
.text:000000018000CFF9                 mov     [rbp+220h+var_40], rax
.text:000000018000D000                 mov     r14d, edx
.text:000000018000D003                 mov     [rsp+320h+var_2B0], rcx
.text:000000018000D008                 xor     esi, esi
.text:000000018000D00A                 mov     [rcx], rsi
.text:000000018000D00D                 mov     r12d, 1
.text:000000018000D013                 mov     r13d, r12d
.text:000000018000D016                 lea     eax, [rdx-1]
.text:000000018000D019                 cmp     eax, 0FFFFFFFDh
.text:000000018000D01C                 ja      loc_18000D1C1
.text:000000018000D022                 lea     edi, [rsi+3]
.text:000000018000D025                 lea     rax, [rbp+220h+pszDir]
.text:000000018000D02C                 mov     [rsp+320h+pszPath], rax ; pszPath
.text:000000018000D031                 xor     r9d, r9d        ; dwFlags
.text:000000018000D034                 xor     r8d, r8d        ; hToken
.text:000000018000D037                 lea     edx, [rsi+2Eh]  ; csidl
.text:000000018000D03A                 xor     ecx, ecx        ; hwnd
.text:000000018000D03C                 call    cs:SHGetFolderPathA
.text:000000018000D042                 lea     rbx, [rsi-1]
.text:000000018000D046                 test    eax, eax
.text:000000018000D048                 js      short loc_18000D0AF
.text:000000018000D04A                 lea     r8, pszFile     ; "SimConnect.cfg"
.text:000000018000D051                 lea     rdx, [rbp+220h+pszDir] ; pszDir
.text:000000018000D058                 lea     rcx, [rbp+220h+pszDest] ; pszDest
.text:000000018000D05C                 call    cs:PathCombineA
.text:000000018000D062                 test    rax, rax
.text:000000018000D065                 jz      short loc_18000D0AF
.text:000000018000D067                 mov     [rsp+320h+var_2C0], rsi
.text:000000018000D06C                 mov     [rsp+320h+var_2B8], 0Fh
.text:000000018000D075                 mov     [rsp+320h+var_2D0], sil
.text:000000018000D07A                 lea     rax, [rbp+220h+pszDest]
.text:000000018000D07E                 mov     r8, rbx
.text:000000018000D081
.text:000000018000D081 loc_18000D081:                          ; CODE XREF: sub_18000CFD0+B8↓j
.text:000000018000D081                 inc     r8              ; Size
.text:000000018000D084                 cmp     [rax+r8], sil
.text:000000018000D088                 jnz     short loc_18000D081
.text:000000018000D08A                 lea     rdx, [rbp+220h+pszDest] ; Src
.text:000000018000D08E                 lea     rcx, [rsp+320h+var_2D0] ; void *
.text:000000018000D093                 call    sub_180009910
.text:000000018000D098                 mov     edx, r14d
.text:000000018000D09B                 lea     rcx, [rsp+320h+var_2D0]
.text:000000018000D0A0                 call    sub_18000F090
.text:000000018000D0A5                 mov     edi, eax
.text:000000018000D0A7                 test    eax, eax
.text:000000018000D0A9                 jz      loc_18000D1C1
.text:000000018000D0AF
.text:000000018000D0AF loc_18000D0AF:                          ; CODE XREF: sub_18000CFD0+78↑j
.text:000000018000D0AF                                         ; sub_18000CFD0+95↑j
.text:000000018000D0AF                 lea     rax, [rbp+220h+pszDir]
.text:000000018000D0B6                 mov     [rsp+320h+pszPath], rax ; pszPath
.text:000000018000D0BB                 xor     r9d, r9d        ; dwFlags
.text:000000018000D0BE                 xor     r8d, r8d        ; hToken
.text:000000018000D0C1                 lea     edx, [r9+5]     ; csidl
.text:000000018000D0C5                 xor     ecx, ecx        ; hwnd
.text:000000018000D0C7                 call    cs:SHGetFolderPathA
.text:000000018000D0CD                 test    eax, eax
.text:000000018000D0CF                 js      short loc_18000D13E
.text:000000018000D0D1                 lea     r8, pszFile     ; "SimConnect.cfg"
.text:000000018000D0D8                 lea     rdx, [rbp+220h+pszDir] ; pszDir
.text:000000018000D0DF                 lea     rcx, [rbp+220h+pszDest] ; pszDest
.text:000000018000D0E3                 call    cs:PathCombineA
.text:000000018000D0E9                 test    rax, rax
.text:000000018000D0EC                 jz      short loc_18000D13E
.text:000000018000D0EE                 mov     [rsp+320h+var_2C0], rsi
.text:000000018000D0F3                 mov     [rsp+320h+var_2B8], 0Fh
.text:000000018000D0FC                 mov     [rsp+320h+var_2D0], sil
.text:000000018000D101                 lea     rax, [rbp+220h+pszDest]
.text:000000018000D105                 mov     r8, rbx
.text:000000018000D108                 nop     dword ptr [rax+rax+00000000h]
.text:000000018000D110
.text:000000018000D110 loc_18000D110:                          ; CODE XREF: sub_18000CFD0+147↓j
.text:000000018000D110                 inc     r8              ; Size
.text:000000018000D113                 cmp     [rax+r8], sil
.text:000000018000D117                 jnz     short loc_18000D110
.text:000000018000D119                 lea     rdx, [rbp+220h+pszDest] ; Src
.text:000000018000D11D                 lea     rcx, [rsp+320h+var_2D0] ; void *
.text:000000018000D122                 call    sub_180009910
.text:000000018000D127                 mov     edx, r14d
.text:000000018000D12A                 lea     rcx, [rsp+320h+var_2D0]
.text:000000018000D12F                 call    sub_18000F090
.text:000000018000D134                 mov     edi, eax
.text:000000018000D136                 test    eax, eax
.text:000000018000D138                 jz      loc_18000D1C1
.text:000000018000D13E
.text:000000018000D13E loc_18000D13E:                          ; CODE XREF: sub_18000CFD0+FF↑j
.text:000000018000D13E                                         ; sub_18000CFD0+11C↑j
.text:000000018000D13E                 lea     rdx, [rbp+220h+pszDir] ; lpBuffer
.text:000000018000D145                 mov     ecx, 104h       ; nBufferLength
.text:000000018000D14A                 call    cs:GetCurrentDirectoryA
.text:000000018000D150                 test    eax, eax
.text:000000018000D152                 jz      loc_18000D30F
.text:000000018000D158                 lea     r8, pszFile     ; "SimConnect.cfg"
.text:000000018000D15F                 lea     rdx, [rbp+220h+pszDir] ; pszDir
.text:000000018000D166                 lea     rcx, [rbp+220h+pszDest] ; pszDest
.text:000000018000D16A                 call    cs:PathCombineA
.text:000000018000D170                 test    rax, rax
.text:000000018000D173                 jz      loc_18000D30F
.text:000000018000D179                 mov     [rsp+320h+var_2C0], rsi
.text:000000018000D17E                 mov     [rsp+320h+var_2B8], 0Fh
.text:000000018000D187                 mov     [rsp+320h+var_2D0], sil
.text:000000018000D18C                 lea     rax, [rbp+220h+pszDest]
.text:000000018000D190
.text:000000018000D190 loc_18000D190:                          ; CODE XREF: sub_18000CFD0+1C7↓j
.text:000000018000D190                 inc     rbx
.text:000000018000D193                 cmp     [rax+rbx], sil
.text:000000018000D197                 jnz     short loc_18000D190
.text:000000018000D199                 mov     r8, rbx         ; Size
.text:000000018000D19C                 lea     rdx, [rbp+220h+pszDest] ; Src
.text:000000018000D1A0                 lea     rcx, [rsp+320h+var_2D0] ; void *
.text:000000018000D1A5                 call    sub_180009910
.text:000000018000D1AA                 mov     edx, r14d
.text:000000018000D1AD                 lea     rcx, [rsp+320h+var_2D0]
.text:000000018000D1B2                 call    sub_18000F090
.text:000000018000D1B7                 mov     edi, eax
.text:000000018000D1B9                 test    eax, eax
.text:000000018000D1BB                 jnz     loc_18000D317
.text:000000018000D1C1
.text:000000018000D1C1 loc_18000D1C1:                          ; CODE XREF: sub_18000CFD0+4C↑j
.text:000000018000D1C1                                         ; sub_18000CFD0+D9↑j ...
.text:000000018000D1C1                 mov     [rsp+320h+var_2D8], rsi
.text:000000018000D1C6                 mov     rbx, rsi
.text:000000018000D1C9                 xor     ecx, ecx        ; lpModuleName
.text:000000018000D1CB                 call    cs:GetModuleHandleA
.text:000000018000D1D1                 mov     rcx, rax        ; hModule
.text:000000018000D1D4                 lea     rdx, ProcName   ; "FlightSimGetMainHwnd"
.text:000000018000D1DB                 call    cs:GetProcAddress
.text:000000018000D1E1                 mov     r15, rax
.text:000000018000D1E4                 xor     ecx, ecx        ; lpModuleName
.text:000000018000D1E6                 call    cs:GetModuleHandleA
.text:000000018000D1EC                 mov     rcx, rax        ; hModule
.text:000000018000D1EF                 lea     rdx, aFlightsimgetpr ; "FlightSimGetProcessId"
.text:000000018000D1F6                 call    cs:GetProcAddress
.text:000000018000D1FC                 mov     rdi, rax
.text:000000018000D1FF                 test    r15, r15
.text:000000018000D202                 jz      short loc_18000D20A
.text:000000018000D204                 call    r15
.text:000000018000D207                 mov     rbx, rax
.text:000000018000D20A
.text:000000018000D20A loc_18000D20A:                          ; CODE XREF: sub_18000CFD0+232↑j
.text:000000018000D20A                 test    rdi, rdi
.text:000000018000D20D                 jz      short loc_18000D213
.text:000000018000D20F                 call    rdi
.text:000000018000D211                 mov     esi, eax
.text:000000018000D213
.text:000000018000D213 loc_18000D213:                          ; CODE XREF: sub_18000CFD0+23D↑j
.text:000000018000D213                 test    rbx, rbx
.text:000000018000D216                 jz      short loc_18000D25B
.text:000000018000D218                 call    cs:GetCurrentProcessId
.text:000000018000D21E                 cmp     esi, eax
.text:000000018000D220                 jnz     short loc_18000D25B
.text:000000018000D222                 lea     r8, [rsp+320h+phModule] ; phModule
.text:000000018000D227                 lea     rdx, sub_18000CFD0 ; lpModuleName
.text:000000018000D22E                 mov     ecx, 4          ; dwFlags
.text:000000018000D233                 call    cs:GetModuleHandleExA
.text:000000018000D239                 test    eax, eax
.text:000000018000D23B                 jz      short loc_18000D25B
.text:000000018000D23D                 mov     r9, [rsp+320h+phModule] ; lParam
.text:000000018000D242                 mov     edx, 111h       ; Msg
.text:000000018000D247                 mov     r8d, 2002Ah     ; wParam
.text:000000018000D24D                 mov     rcx, rbx        ; hWnd
.text:000000018000D250                 call    cs:PostMessageA
.text:000000018000D256                 mov     [rsp+320h+var_2D8], rbx
.text:000000018000D25B
.text:000000018000D25B loc_18000D25B:                          ; CODE XREF: sub_18000CFD0+246↑j
.text:000000018000D25B                                         ; sub_18000CFD0+250↑j ...
.text:000000018000D25B                 movzx   ecx, r12b
.text:000000018000D25F                 call    sub_18000F960
.text:000000018000D264                 mov     cs:byte_1800194AD, al
.text:000000018000D26A                 mov     [rbp+220h+var_298], 0
.text:000000018000D272                 mov     [rbp+220h+var_290], 0Fh
.text:000000018000D27A                 mov     byte ptr [rsp+320h+Buf1], 0
.text:000000018000D27F                 mov     [rbp+220h+var_270], 0Fh
.text:000000018000D287                 mov     [rbp+220h+var_278], 0
.text:000000018000D28F                 mov     byte ptr [rbp+220h+Block], 0
.text:000000018000D293                 mov     [rsp+320h+var_2E0], 0A080h
.text:000000018000D29B                 mov     [rsp+320h+var_2F0], 0
.text:000000018000D2A0                 lea     rax, [rsp+320h+var_2F0]
.text:000000018000D2A5                 mov     [rsp+320h+var_2F8], rax
.text:000000018000D2AA                 lea     rax, [rsp+320h+var_2E0]
.text:000000018000D2AF                 mov     [rsp+320h+pszPath], rax
.text:000000018000D2B4                 lea     r9, [rbp+220h+Block]
.text:000000018000D2B8                 lea     r8, [rsp+320h+Buf1]
.text:000000018000D2BD                 lea     rdx, [rsp+320h+phModule]
.text:000000018000D2C2                 mov     ecx, r14d
.text:000000018000D2C5                 call    sub_18000E860
.text:000000018000D2CA                 mov     r14, 7FFFFFFFFFFFFFFFh
.text:000000018000D2D4                 mov     r15, 8000000000000027h
.text:000000018000D2DE                 mov     eax, dword ptr [rsp+320h+phModule]
.text:000000018000D2E2                 cmp     eax, 1
.text:000000018000D2E5                 jnz     loc_18000D4D4
.text:000000018000D2EB                 mov     ecx, 0A3F8h     ; Size
.text:000000018000D2F0                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D2F5                 mov     [rsp+320h+phModule], rax
.text:000000018000D2FA                 test    rax, rax
.text:000000018000D2FD                 jz      short loc_18000D31E
.text:000000018000D2FF                 mov     edx, r12d
.text:000000018000D302                 mov     rcx, rax
.text:000000018000D305                 call    sub_18000C8B0
.text:000000018000D30A                 mov     rbx, rax
.text:000000018000D30D                 jmp     short loc_18000D320
.text:000000018000D30F ; ---------------------------------------------------------------------------
.text:000000018000D30F
.text:000000018000D30F loc_18000D30F:                          ; CODE XREF: sub_18000CFD0+182↑j
.text:000000018000D30F                                         ; sub_18000CFD0+1A3↑j
.text:000000018000D30F                 test    edi, edi
.text:000000018000D311                 jz      loc_18000D1C1
.text:000000018000D317
.text:000000018000D317 loc_18000D317:                          ; CODE XREF: sub_18000CFD0+1EB↑j
.text:000000018000D317                 mov     eax, edi
.text:000000018000D319                 jmp     loc_18000D9F0
.text:000000018000D31E ; ---------------------------------------------------------------------------
.text:000000018000D31E
.text:000000018000D31E loc_18000D31E:                          ; CODE XREF: sub_18000CFD0+32D↑j
.text:000000018000D31E                 xor     ebx, ebx
.text:000000018000D320
.text:000000018000D320 loc_18000D320:                          ; CODE XREF: sub_18000CFD0+33D↑j
.text:000000018000D320                 lea     r9, [rbp+220h+Block]
.text:000000018000D324                 cmp     [rbp+220h+var_270], 10h
.text:000000018000D329                 cmovnb  r9, [rbp+220h+Block]
.text:000000018000D32E                 lea     r8, [rsp+320h+Buf1]
.text:000000018000D333                 cmp     [rbp+220h+var_290], 10h
.text:000000018000D338                 cmovnb  r8, [rsp+320h+Buf1]
.text:000000018000D33E                 movzx   eax, [rsp+320h+var_2F0]
.text:000000018000D343                 mov     byte ptr [rsp+320h+var_2F8], al
.text:000000018000D347                 mov     eax, [rsp+320h+var_2E0]
.text:000000018000D34B                 mov     dword ptr [rsp+320h+pszPath], eax
.text:000000018000D34F                 xor     edx, edx
.text:000000018000D351                 mov     rcx, rbx
.text:000000018000D354                 call    sub_18000DF60
.text:000000018000D359                 test    al, al
.text:000000018000D35B                 jz      loc_18000D920
.text:000000018000D361                 mov     rcx, rbx
.text:000000018000D364                 call    sub_18000CE00
.text:000000018000D369                 mov     rsi, [rsp+320h+Buf1]
.text:000000018000D36E                 mov     rdi, [rbp+220h+var_290]
.text:000000018000D372                 mov     rcx, [rbp+220h+var_298]
.text:000000018000D376                 test    rcx, rcx
.text:000000018000D379                 jz      short loc_18000D3AE
.text:000000018000D37B                 lea     rax, [rsp+320h+Buf1]
.text:000000018000D380                 cmp     rdi, 10h
.text:000000018000D384                 cmovnb  rax, rsi
.text:000000018000D388                 cmp     rcx, 1
.text:000000018000D38C                 jnz     loc_18000D958
.text:000000018000D392                 movzx   eax, byte ptr [rax]
.text:000000018000D395                 cmp     al, cs:byte_1800126D0
.text:000000018000D39B                 jnz     short loc_18000D3A1
.text:000000018000D39D                 xor     eax, eax
.text:000000018000D39F                 jmp     short loc_18000D3A6
.text:000000018000D3A1 ; ---------------------------------------------------------------------------
.text:000000018000D3A1
.text:000000018000D3A1 loc_18000D3A1:                          ; CODE XREF: sub_18000CFD0+3CB↑j
.text:000000018000D3A1                 sbb     eax, eax
.text:000000018000D3A3                 or      eax, 1
.text:000000018000D3A6
.text:000000018000D3A6 loc_18000D3A6:                          ; CODE XREF: sub_18000CFD0+3CF↑j
.text:000000018000D3A6                 test    eax, eax
.text:000000018000D3A8                 jnz     loc_18000D958
.text:000000018000D3AE
.text:000000018000D3AE loc_18000D3AE:                          ; CODE XREF: sub_18000CFD0+3A9↑j
.text:000000018000D3AE                 cmp     rdi, 3
.text:000000018000D3B2                 jb      short loc_18000D3F2
.text:000000018000D3B4                 lea     rbx, [rsp+320h+Buf1]
.text:000000018000D3B9                 cmp     rdi, 10h
.text:000000018000D3BD                 cmovnb  rbx, rsi
.text:000000018000D3C1                 mov     [rbp+220h+var_298], 3
.text:000000018000D3C9                 mov     r8d, 3          ; Size
.text:000000018000D3CF                 lea     rdx, word_1800126CC ; Src
.text:000000018000D3D6                 mov     rcx, rbx        ; void *
.text:000000018000D3D9                 call    memmove
.text:000000018000D3DE                 mov     byte ptr [rbx+3], 0
.text:000000018000D3E2                 lea     rdx, [rbp+220h+Block]
.text:000000018000D3E6                 mov     cl, 1
.text:000000018000D3E8                 call    sub_18000E360
.text:000000018000D3ED                 jmp     loc_18000D4DD
.text:000000018000D3F2 ; ---------------------------------------------------------------------------
.text:000000018000D3F2
.text:000000018000D3F2 loc_18000D3F2:                          ; CODE XREF: sub_18000CFD0+3E2↑j
.text:000000018000D3F2                 mov     rcx, rdi
.text:000000018000D3F5                 shr     rcx, 1
.text:000000018000D3F8                 mov     rax, r14
.text:000000018000D3FB                 sub     rax, rcx
.text:000000018000D3FE                 cmp     rdi, rax
.text:000000018000D401                 jbe     short loc_18000D40B
.text:000000018000D403                 mov     rsi, r14
.text:000000018000D406                 mov     rax, r15
.text:000000018000D409                 jmp     short loc_18000D435
.text:000000018000D40B ; ---------------------------------------------------------------------------
.text:000000018000D40B
.text:000000018000D40B loc_18000D40B:                          ; CODE XREF: sub_18000CFD0+431↑j
.text:000000018000D40B                 lea     rax, [rdi+rcx]
.text:000000018000D40F                 mov     esi, 0Fh
.text:000000018000D414                 cmp     rax, rsi
.text:000000018000D417                 cmova   rsi, rax
.text:000000018000D41B                 lea     rcx, [rsi+1]    ; Size
.text:000000018000D41F                 cmp     rcx, 1000h
.text:000000018000D426                 jb      short loc_18000D454
.text:000000018000D428                 lea     rax, [rcx+27h]
.text:000000018000D42C                 cmp     rax, rcx
.text:000000018000D42F                 jbe     loc_18000DA1A
.text:000000018000D435
.text:000000018000D435 loc_18000D435:                          ; CODE XREF: sub_18000CFD0+439↑j
.text:000000018000D435                 mov     rcx, rax        ; Size
.text:000000018000D438                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D43D                 test    rax, rax
.text:000000018000D440                 jz      loc_18000D88C
.text:000000018000D446                 lea     rbx, [rax+27h]
.text:000000018000D44A                 and     rbx, 0FFFFFFFFFFFFFFE0h
.text:000000018000D44E                 mov     [rbx-8], rax
.text:000000018000D452                 jmp     short loc_18000D465
.text:000000018000D454 ; ---------------------------------------------------------------------------
.text:000000018000D454
.text:000000018000D454 loc_18000D454:                          ; CODE XREF: sub_18000CFD0+456↑j
.text:000000018000D454                 test    rcx, rcx
.text:000000018000D457                 jz      short loc_18000D463
.text:000000018000D459                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D45E                 mov     rbx, rax
.text:000000018000D461                 jmp     short loc_18000D465
.text:000000018000D463 ; ---------------------------------------------------------------------------
.text:000000018000D463
.text:000000018000D463 loc_18000D463:                          ; CODE XREF: sub_18000CFD0+487↑j
.text:000000018000D463                 xor     ebx, ebx
.text:000000018000D465
.text:000000018000D465 loc_18000D465:                          ; CODE XREF: sub_18000CFD0+482↑j
.text:000000018000D465                                         ; sub_18000CFD0+491↑j
.text:000000018000D465                 mov     [rbp+220h+var_298], 3
.text:000000018000D46D                 mov     [rbp+220h+var_290], rsi
.text:000000018000D471                 movzx   eax, cs:word_1800126CC
.text:000000018000D478                 mov     [rbx], ax
.text:000000018000D47B                 movzx   eax, cs:byte_1800126CE
.text:000000018000D482                 mov     [rbx+2], al
.text:000000018000D485                 mov     byte ptr [rbx+3], 0
.text:000000018000D489                 cmp     rdi, 10h
.text:000000018000D48D                 jb      short loc_18000D4C2
.text:000000018000D48F                 lea     rdx, [rdi+1]
.text:000000018000D493                 mov     rcx, [rsp+320h+Buf1]
.text:000000018000D498                 mov     rax, rcx
.text:000000018000D49B                 cmp     rdx, 1000h
.text:000000018000D4A2                 jb      short loc_18000D4BD
.text:000000018000D4A4                 add     rdx, 27h ; '''
.text:000000018000D4A8                 mov     rcx, [rcx-8]    ; Block
.text:000000018000D4AC                 sub     rax, rcx
.text:000000018000D4AF                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000D4B3                 cmp     rax, 1Fh
.text:000000018000D4B7                 ja      loc_18000D88C
.text:000000018000D4BD
.text:000000018000D4BD loc_18000D4BD:                          ; CODE XREF: sub_18000CFD0+4D2↑j
.text:000000018000D4BD                 call    j_j_free
.text:000000018000D4C2
.text:000000018000D4C2 loc_18000D4C2:                          ; CODE XREF: sub_18000CFD0+4BD↑j
.text:000000018000D4C2                 mov     [rsp+320h+Buf1], rbx
.text:000000018000D4C7                 lea     rdx, [rbp+220h+Block]
.text:000000018000D4CB                 mov     cl, 1
.text:000000018000D4CD                 call    sub_18000E360
.text:000000018000D4D2                 jmp     short loc_18000D4DD
.text:000000018000D4D4 ; ---------------------------------------------------------------------------
.text:000000018000D4D4
.text:000000018000D4D4 loc_18000D4D4:                          ; CODE XREF: sub_18000CFD0+315↑j
.text:000000018000D4D4                 cmp     eax, 17h
.text:000000018000D4D7                 jnz     loc_18000D6EC
.text:000000018000D4DD
.text:000000018000D4DD loc_18000D4DD:                          ; CODE XREF: sub_18000CFD0+41D↑j
.text:000000018000D4DD                                         ; sub_18000CFD0+502↑j
.text:000000018000D4DD                 call    sub_18000E770
.text:000000018000D4E2                 test    al, al
.text:000000018000D4E4                 jz      loc_18000D94C
.text:000000018000D4EA                 mov     ecx, 0A3F8h     ; Size
.text:000000018000D4EF                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D4F4                 mov     [rsp+320h+phModule], rax
.text:000000018000D4F9 ;   try {
.text:000000018000D4F9                 test    rax, rax
.text:000000018000D4FC                 jz      short loc_18000D50D
.text:000000018000D4FE                 xor     edx, edx
.text:000000018000D500                 mov     rcx, rax
.text:000000018000D503                 call    sub_18000C8B0
.text:000000018000D508                 mov     rbx, rax
.text:000000018000D50B                 jmp     short loc_18000D50F
.text:000000018000D50D ; ---------------------------------------------------------------------------
.text:000000018000D50D
.text:000000018000D50D loc_18000D50D:                          ; CODE XREF: sub_18000CFD0+52C↑j
.text:000000018000D50D                 xor     ebx, ebx
.text:000000018000D50D ;   } // starts at 18000D4F9
.text:000000018000D50F
.text:000000018000D50F loc_18000D50F:                          ; CODE XREF: sub_18000CFD0+53B↑j
.text:000000018000D50F                 test    rbx, rbx
.text:000000018000D512                 jz      loc_18000D94C
.text:000000018000D518                 mov     rcx, [rbp+220h+Block]
.text:000000018000D51C                 mov     rdx, [rbp+220h+var_270]
.text:000000018000D520                 cmp     [rbp+220h+var_278], 0
.text:000000018000D525                 jz      short loc_18000D569
.text:000000018000D527                 lea     r9, [rbp+220h+Block]
.text:000000018000D52B                 cmp     rdx, 10h
.text:000000018000D52F                 cmovnb  r9, rcx
.text:000000018000D533                 lea     r8, [rsp+320h+Buf1]
.text:000000018000D538                 cmp     [rbp+220h+var_290], 10h
.text:000000018000D53D                 cmovnb  r8, [rsp+320h+Buf1]
.text:000000018000D543                 movzx   eax, [rsp+320h+var_2F0]
.text:000000018000D548                 mov     byte ptr [rsp+320h+var_2F8], al
.text:000000018000D54C                 mov     eax, [rsp+320h+var_2E0]
.text:000000018000D550                 mov     dword ptr [rsp+320h+pszPath], eax
.text:000000018000D554                 mov     edx, 17h
.text:000000018000D559                 mov     rcx, rbx
.text:000000018000D55C                 call    sub_18000DF60
.text:000000018000D561                 test    al, al
.text:000000018000D563                 jz      loc_18000D920
.text:000000018000D569
.text:000000018000D569 loc_18000D569:                          ; CODE XREF: sub_18000CFD0+555↑j
.text:000000018000D569                 mov     rcx, rbx
.text:000000018000D56C                 call    sub_18000CE00
.text:000000018000D571                 lea     rcx, [rsp+320h+Buf1]
.text:000000018000D576                 mov     rsi, [rsp+320h+Buf1]
.text:000000018000D57B                 mov     rdi, [rbp+220h+var_290]
.text:000000018000D57F                 cmp     rdi, 10h
.text:000000018000D583                 cmovnb  rcx, rsi
.text:000000018000D587                 cmp     [rbp+220h+var_298], 3
.text:000000018000D58C                 jnz     loc_18000D958
.text:000000018000D592                 movzx   eax, byte ptr [rcx]
.text:000000018000D595                 cmp     al, byte ptr cs:word_1800126CC
.text:000000018000D59B                 jnz     short loc_18000D5B9
.text:000000018000D59D                 movzx   eax, byte ptr [rcx+1]
.text:000000018000D5A1                 cmp     al, byte ptr cs:word_1800126CC+1
.text:000000018000D5A7                 jnz     short loc_18000D5B9
.text:000000018000D5A9                 movzx   eax, byte ptr [rcx+2]
.text:000000018000D5AD                 cmp     al, cs:byte_1800126CE
.text:000000018000D5B3                 jnz     short loc_18000D5B9
.text:000000018000D5B5                 xor     eax, eax
.text:000000018000D5B7                 jmp     short loc_18000D5BE
.text:000000018000D5B9 ; ---------------------------------------------------------------------------
.text:000000018000D5B9
.text:000000018000D5B9 loc_18000D5B9:                          ; CODE XREF: sub_18000CFD0+5CB↑j
.text:000000018000D5B9                                         ; sub_18000CFD0+5D7↑j ...
.text:000000018000D5B9                 sbb     eax, eax
.text:000000018000D5BB                 or      eax, 1
.text:000000018000D5BE
.text:000000018000D5BE loc_18000D5BE:                          ; CODE XREF: sub_18000CFD0+5E7↑j
.text:000000018000D5BE                 test    eax, eax
.text:000000018000D5C0                 jnz     loc_18000D958
.text:000000018000D5C6                 cmp     rdi, 9
.text:000000018000D5CA                 jb      short loc_18000D608
.text:000000018000D5CC                 lea     rbx, [rsp+320h+Buf1]
.text:000000018000D5D1                 cmp     rdi, 10h
.text:000000018000D5D5                 cmovnb  rbx, rsi
.text:000000018000D5D9                 mov     [rbp+220h+var_298], 9
.text:000000018000D5E1                 lea     r8d, [rax+9]    ; Size
.text:000000018000D5E5                 lea     rdx, a127001    ; "127.0.0.1"
.text:000000018000D5EC                 mov     rcx, rbx        ; void *
.text:000000018000D5EF                 call    memmove
.text:000000018000D5F4                 mov     byte ptr [rbx+9], 0
.text:000000018000D5F8                 lea     rdx, [rbp+220h+Block]
.text:000000018000D5FC                 xor     ecx, ecx
.text:000000018000D5FE                 call    sub_18000E360
.text:000000018000D603                 jmp     loc_18000D6F5
.text:000000018000D608 ; ---------------------------------------------------------------------------
.text:000000018000D608
.text:000000018000D608 loc_18000D608:                          ; CODE XREF: sub_18000CFD0+5FA↑j
.text:000000018000D608                 mov     rcx, rdi
.text:000000018000D60B                 shr     rcx, 1
.text:000000018000D60E                 mov     rax, r14
.text:000000018000D611                 sub     rax, rcx
.text:000000018000D614                 cmp     rdi, rax
.text:000000018000D617                 jbe     short loc_18000D621
.text:000000018000D619                 mov     rsi, r14
.text:000000018000D61C                 mov     rax, r15
.text:000000018000D61F                 jmp     short loc_18000D64B
.text:000000018000D621 ; ---------------------------------------------------------------------------
.text:000000018000D621
.text:000000018000D621 loc_18000D621:                          ; CODE XREF: sub_18000CFD0+647↑j
.text:000000018000D621                 lea     rax, [rcx+rdi]
.text:000000018000D625                 mov     esi, 0Fh
.text:000000018000D62A                 cmp     rax, rsi
.text:000000018000D62D                 cmova   rsi, rax
.text:000000018000D631                 lea     rcx, [rsi+1]    ; Size
.text:000000018000D635                 cmp     rcx, 1000h
.text:000000018000D63C                 jb      short loc_18000D66A
.text:000000018000D63E                 lea     rax, [rcx+27h]
.text:000000018000D642                 cmp     rax, rcx
.text:000000018000D645                 jbe     loc_18000DA1A
.text:000000018000D64B
.text:000000018000D64B loc_18000D64B:                          ; CODE XREF: sub_18000CFD0+64F↑j
.text:000000018000D64B                 mov     rcx, rax        ; Size
.text:000000018000D64E                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D653                 test    rax, rax
.text:000000018000D656                 jz      loc_18000D88C
.text:000000018000D65C                 lea     rbx, [rax+27h]
.text:000000018000D660                 and     rbx, 0FFFFFFFFFFFFFFE0h
.text:000000018000D664                 mov     [rbx-8], rax
.text:000000018000D668                 jmp     short loc_18000D67B
.text:000000018000D66A ; ---------------------------------------------------------------------------
.text:000000018000D66A
.text:000000018000D66A loc_18000D66A:                          ; CODE XREF: sub_18000CFD0+66C↑j
.text:000000018000D66A                 test    rcx, rcx
.text:000000018000D66D                 jz      short loc_18000D679
.text:000000018000D66F                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D674                 mov     rbx, rax
.text:000000018000D677                 jmp     short loc_18000D67B
.text:000000018000D679 ; ---------------------------------------------------------------------------
.text:000000018000D679
.text:000000018000D679 loc_18000D679:                          ; CODE XREF: sub_18000CFD0+69D↑j
.text:000000018000D679                 xor     ebx, ebx
.text:000000018000D67B
.text:000000018000D67B loc_18000D67B:                          ; CODE XREF: sub_18000CFD0+698↑j
.text:000000018000D67B                                         ; sub_18000CFD0+6A7↑j
.text:000000018000D67B                 mov     [rbp+220h+var_298], 9
.text:000000018000D683                 mov     [rbp+220h+var_290], rsi
.text:000000018000D687                 movsd   xmm0, qword ptr cs:a127001 ; "127.0.0.1"
.text:000000018000D68F                 movsd   qword ptr [rbx], xmm0
.text:000000018000D693                 movzx   eax, byte ptr cs:a127001+8 ; "1"
.text:000000018000D69A                 mov     [rbx+8], al
.text:000000018000D69D                 mov     byte ptr [rbx+9], 0
.text:000000018000D6A1                 cmp     rdi, 10h
.text:000000018000D6A5                 jb      short loc_18000D6DA
.text:000000018000D6A7                 lea     rdx, [rdi+1]
.text:000000018000D6AB                 mov     rcx, [rsp+320h+Buf1]
.text:000000018000D6B0                 mov     rax, rcx
.text:000000018000D6B3                 cmp     rdx, 1000h
.text:000000018000D6BA                 jb      short loc_18000D6D5
.text:000000018000D6BC                 add     rdx, 27h ; '''
.text:000000018000D6C0                 mov     rcx, [rcx-8]    ; Block
.text:000000018000D6C4                 sub     rax, rcx
.text:000000018000D6C7                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000D6CB                 cmp     rax, 1Fh
.text:000000018000D6CF                 ja      loc_18000D88C
.text:000000018000D6D5
.text:000000018000D6D5 loc_18000D6D5:                          ; CODE XREF: sub_18000CFD0+6EA↑j
.text:000000018000D6D5                 call    j_j_free
.text:000000018000D6DA
.text:000000018000D6DA loc_18000D6DA:                          ; CODE XREF: sub_18000CFD0+6D5↑j
.text:000000018000D6DA                 mov     [rsp+320h+Buf1], rbx
.text:000000018000D6DF                 lea     rdx, [rbp+220h+Block]
.text:000000018000D6E3                 xor     ecx, ecx
.text:000000018000D6E5                 call    sub_18000E360
.text:000000018000D6EA                 jmp     short loc_18000D6F5
.text:000000018000D6EC ; ---------------------------------------------------------------------------
.text:000000018000D6EC
.text:000000018000D6EC loc_18000D6EC:                          ; CODE XREF: sub_18000CFD0+507↑j
.text:000000018000D6EC                 cmp     eax, 2
.text:000000018000D6EF                 jnz     loc_18000D94C
.text:000000018000D6F5
.text:000000018000D6F5 loc_18000D6F5:                          ; CODE XREF: sub_18000CFD0+633↑j
.text:000000018000D6F5                                         ; sub_18000CFD0+71A↑j
.text:000000018000D6F5                 call    sub_18000E770
.text:000000018000D6FA                 test    al, al
.text:000000018000D6FC                 jz      loc_18000D94C
.text:000000018000D702                 mov     ecx, 0A3F8h     ; Size
.text:000000018000D707                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D70C                 mov     [rsp+320h+phModule], rax
.text:000000018000D711 ;   try {
.text:000000018000D711                 test    rax, rax
.text:000000018000D714                 jz      short loc_18000D725
.text:000000018000D716                 xor     edx, edx
.text:000000018000D718                 mov     rcx, rax
.text:000000018000D71B                 call    sub_18000C8B0
.text:000000018000D720                 mov     rbx, rax
.text:000000018000D723                 jmp     short loc_18000D727
.text:000000018000D725 ; ---------------------------------------------------------------------------
.text:000000018000D725
.text:000000018000D725 loc_18000D725:                          ; CODE XREF: sub_18000CFD0+744↑j
.text:000000018000D725                 xor     ebx, ebx
.text:000000018000D725 ;   } // starts at 18000D711
.text:000000018000D727
.text:000000018000D727 loc_18000D727:                          ; CODE XREF: sub_18000CFD0+753↑j
.text:000000018000D727                 test    rbx, rbx
.text:000000018000D72A                 jz      loc_18000D94C
.text:000000018000D730                 mov     rcx, [rbp+220h+Block]
.text:000000018000D734                 mov     rdx, [rbp+220h+var_270]
.text:000000018000D738                 mov     r13d, [rsp+320h+var_2E0]
.text:000000018000D73D                 cmp     [rbp+220h+var_278], 0
.text:000000018000D742                 jz      short loc_18000D783
.text:000000018000D744                 lea     r9, [rbp+220h+Block]
.text:000000018000D748                 cmp     rdx, 10h
.text:000000018000D74C                 cmovnb  r9, rcx
.text:000000018000D750                 lea     r8, [rsp+320h+Buf1]
.text:000000018000D755                 cmp     [rbp+220h+var_290], 10h
.text:000000018000D75A                 cmovnb  r8, [rsp+320h+Buf1]
.text:000000018000D760                 movzx   eax, [rsp+320h+var_2F0]
.text:000000018000D765                 mov     byte ptr [rsp+320h+var_2F8], al
.text:000000018000D769                 mov     dword ptr [rsp+320h+pszPath], r13d
.text:000000018000D76E                 mov     edx, 2
.text:000000018000D773                 mov     rcx, rbx
.text:000000018000D776                 call    sub_18000DF60
.text:000000018000D77B                 test    al, al
.text:000000018000D77D                 jz      loc_18000D920
.text:000000018000D783
.text:000000018000D783 loc_18000D783:                          ; CODE XREF: sub_18000CFD0+772↑j
.text:000000018000D783                 mov     rcx, rbx
.text:000000018000D786                 call    sub_18000CE00
.text:000000018000D78B                 lea     rcx, [rsp+320h+Buf1]
.text:000000018000D790                 mov     rsi, [rsp+320h+Buf1]
.text:000000018000D795                 mov     rdi, [rbp+220h+var_290]
.text:000000018000D799                 cmp     rdi, 10h
.text:000000018000D79D                 cmovnb  rcx, rsi        ; Buf1
.text:000000018000D7A1                 cmp     [rbp+220h+var_298], 9
.text:000000018000D7A6                 jnz     loc_18000D958
.text:000000018000D7AC                 mov     r8d, 9          ; Size
.text:000000018000D7B2                 lea     rdx, a127001    ; "127.0.0.1"
.text:000000018000D7B9                 call    memcmp
.text:000000018000D7BE                 test    eax, eax
.text:000000018000D7C0                 jnz     loc_18000D958
.text:000000018000D7C6                 cmp     rdi, 1
.text:000000018000D7CA                 jb      short loc_18000D7E7
.text:000000018000D7CC                 lea     rax, [rsp+320h+Buf1]
.text:000000018000D7D1                 cmp     rdi, 10h
.text:000000018000D7D5                 cmovnb  rax, rsi
.text:000000018000D7D9                 mov     [rbp+220h+var_298], r12
.text:000000018000D7DD                 mov     word ptr [rax], 2Eh ; '.'
.text:000000018000D7E2                 jmp     loc_18000D89D
.text:000000018000D7E7 ; ---------------------------------------------------------------------------
.text:000000018000D7E7
.text:000000018000D7E7 loc_18000D7E7:                          ; CODE XREF: sub_18000CFD0+7FA↑j
.text:000000018000D7E7                 mov     rcx, rdi
.text:000000018000D7EA                 shr     rcx, 1
.text:000000018000D7ED                 mov     rax, r14
.text:000000018000D7F0                 sub     rax, rcx
.text:000000018000D7F3                 cmp     rdi, rax
.text:000000018000D7F6                 ja      short loc_18000D823
.text:000000018000D7F8                 lea     rax, [rdi+rcx]
.text:000000018000D7FC                 mov     r14d, 0Fh
.text:000000018000D802                 cmp     rax, r14
.text:000000018000D805                 cmova   r14, rax
.text:000000018000D809                 lea     rcx, [r14+1]    ; Size
.text:000000018000D80D                 cmp     rcx, 1000h
.text:000000018000D814                 jb      short loc_18000D83E
.text:000000018000D816                 lea     r15, [rcx+27h]
.text:000000018000D81A                 cmp     r15, rcx
.text:000000018000D81D                 jbe     loc_18000DA1A
.text:000000018000D823
.text:000000018000D823 loc_18000D823:                          ; CODE XREF: sub_18000CFD0+826↑j
.text:000000018000D823                 mov     rcx, r15        ; Size
.text:000000018000D826                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D82B                 test    rax, rax
.text:000000018000D82E                 jz      short loc_18000D88C
.text:000000018000D830                 lea     rbx, [rax+27h]
.text:000000018000D834                 and     rbx, 0FFFFFFFFFFFFFFE0h
.text:000000018000D838                 mov     [rbx-8], rax
.text:000000018000D83C                 jmp     short loc_18000D84F
.text:000000018000D83E ; ---------------------------------------------------------------------------
.text:000000018000D83E
.text:000000018000D83E loc_18000D83E:                          ; CODE XREF: sub_18000CFD0+844↑j
.text:000000018000D83E                 test    rcx, rcx
.text:000000018000D841                 jz      short loc_18000D84D
.text:000000018000D843                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D848                 mov     rbx, rax
.text:000000018000D84B                 jmp     short loc_18000D84F
.text:000000018000D84D ; ---------------------------------------------------------------------------
.text:000000018000D84D
.text:000000018000D84D loc_18000D84D:                          ; CODE XREF: sub_18000CFD0+871↑j
.text:000000018000D84D                 xor     ebx, ebx
.text:000000018000D84F
.text:000000018000D84F loc_18000D84F:                          ; CODE XREF: sub_18000CFD0+86C↑j
.text:000000018000D84F                                         ; sub_18000CFD0+87B↑j
.text:000000018000D84F                 mov     [rbp+220h+var_298], r12
.text:000000018000D853                 mov     [rbp+220h+var_290], r14
.text:000000018000D857                 mov     word ptr [rbx], 2Eh ; '.'
.text:000000018000D85C                 cmp     rdi, 10h
.text:000000018000D860                 jb      short loc_18000D898
.text:000000018000D862                 lea     rdx, [rdi+1]
.text:000000018000D866                 mov     rcx, [rsp+320h+Buf1] ; Block
.text:000000018000D86B                 mov     rax, rcx
.text:000000018000D86E                 cmp     rdx, 1000h
.text:000000018000D875                 jb      short loc_18000D893
.text:000000018000D877                 add     rdx, 27h ; '''
.text:000000018000D87B                 mov     rcx, [rcx-8]
.text:000000018000D87F                 sub     rax, rcx
.text:000000018000D882                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000D886                 cmp     rax, 1Fh
.text:000000018000D88A                 jbe     short loc_18000D893
.text:000000018000D88C
.text:000000018000D88C loc_18000D88C:                          ; CODE XREF: sub_18000CFD0+470↑j
.text:000000018000D88C                                         ; sub_18000CFD0+4E7↑j ...
.text:000000018000D88C                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000D892                 int     3               ; Trap to Debugger
.text:000000018000D893 ; ---------------------------------------------------------------------------
.text:000000018000D893
.text:000000018000D893 loc_18000D893:                          ; CODE XREF: sub_18000CFD0+8A5↑j
.text:000000018000D893                                         ; sub_18000CFD0+8BA↑j
.text:000000018000D893                 call    j_j_free
.text:000000018000D898
.text:000000018000D898 loc_18000D898:                          ; CODE XREF: sub_18000CFD0+890↑j
.text:000000018000D898                 mov     [rsp+320h+Buf1], rbx
.text:000000018000D89D
.text:000000018000D89D loc_18000D89D:                          ; CODE XREF: sub_18000CFD0+812↑j
.text:000000018000D89D                 lea     rax, [rbp+220h+Block]
.text:000000018000D8A1                 cmp     [rbp+220h+var_270], 10h
.text:000000018000D8A6                 cmovnb  rax, [rbp+220h+Block]
.text:000000018000D8AB                 mov     [rbp+220h+var_278], 0
.text:000000018000D8B3                 mov     byte ptr [rax], 0
.text:000000018000D8B6                 mov     ecx, 0A3F8h     ; Size
.text:000000018000D8BB                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000D8C0                 mov     [rsp+320h+phModule], rax
.text:000000018000D8C5 ;   try {
.text:000000018000D8C5                 test    rax, rax
.text:000000018000D8C8                 jz      short loc_18000D8DA
.text:000000018000D8CA                 mov     edx, r12d
.text:000000018000D8CD                 mov     rcx, rax
.text:000000018000D8D0                 call    sub_18000C8B0
.text:000000018000D8D5                 mov     rbx, rax
.text:000000018000D8D8                 jmp     short loc_18000D8DC
.text:000000018000D8DA ; ---------------------------------------------------------------------------
.text:000000018000D8DA
.text:000000018000D8DA loc_18000D8DA:                          ; CODE XREF: sub_18000CFD0+8F8↑j
.text:000000018000D8DA                 xor     ebx, ebx
.text:000000018000D8DA ;   } // starts at 18000D8C5
.text:000000018000D8DC
.text:000000018000D8DC loc_18000D8DC:                          ; CODE XREF: sub_18000CFD0+908↑j
.text:000000018000D8DC                 lea     r9, [rbp+220h+Block]
.text:000000018000D8E0                 cmp     [rbp+220h+var_270], 10h
.text:000000018000D8E5                 cmovnb  r9, [rbp+220h+Block]
.text:000000018000D8EA                 lea     r8, [rsp+320h+Buf1]
.text:000000018000D8EF                 cmp     [rbp+220h+var_290], 10h
.text:000000018000D8F4                 cmovnb  r8, [rsp+320h+Buf1]
.text:000000018000D8FA                 movzx   eax, [rsp+320h+var_2F0]
.text:000000018000D8FF                 mov     byte ptr [rsp+320h+var_2F8], al
.text:000000018000D903                 mov     dword ptr [rsp+320h+pszPath], r13d
.text:000000018000D908                 xor     edx, edx
.text:000000018000D90A                 mov     rcx, rbx
.text:000000018000D90D                 call    sub_18000DF60
.text:000000018000D912                 test    al, al
.text:000000018000D914                 jz      short loc_18000D920
.text:000000018000D916                 mov     rcx, rbx
.text:000000018000D919                 call    sub_18000CE00
.text:000000018000D91E                 jmp     short loc_18000D94F
.text:000000018000D920 ; ---------------------------------------------------------------------------
.text:000000018000D920
.text:000000018000D920 loc_18000D920:                          ; CODE XREF: sub_18000CFD0+38B↑j
.text:000000018000D920                                         ; sub_18000CFD0+593↑j ...
.text:000000018000D920                 mov     rax, [rsp+320h+var_2B0]
.text:000000018000D925                 mov     [rax], rbx
.text:000000018000D928                 xor     r13d, r13d
.text:000000018000D92B                 mov     rax, [rsp+320h+var_2D8]
.text:000000018000D930                 test    rax, rax
.text:000000018000D933                 jz      short loc_18000D94C
.text:000000018000D935                 cmp     [rbx+0A38Ch], r13d
.text:000000018000D93C                 jnz     short loc_18000D94C
.text:000000018000D93E                 mov     [rbx+0A38Ch], r12d
.text:000000018000D945                 mov     [rbx+0A390h], rax
.text:000000018000D94C
.text:000000018000D94C loc_18000D94C:                          ; CODE XREF: sub_18000CFD0+514↑j
.text:000000018000D94C                                         ; sub_18000CFD0+542↑j ...
.text:000000018000D94C                 mov     r12d, r13d
.text:000000018000D94F
.text:000000018000D94F loc_18000D94F:                          ; CODE XREF: sub_18000CFD0+94E↑j
.text:000000018000D94F                 mov     rsi, [rsp+320h+Buf1]
.text:000000018000D954                 mov     rdi, [rbp+220h+var_290]
.text:000000018000D958
.text:000000018000D958 loc_18000D958:                          ; CODE XREF: sub_18000CFD0+3BC↑j
.text:000000018000D958                                         ; sub_18000CFD0+3D8↑j ...
.text:000000018000D958                 mov     rdx, [rbp+220h+var_270]
.text:000000018000D95C                 cmp     rdx, 10h
.text:000000018000D960                 jb      short loc_18000D99F
.text:000000018000D962                 inc     rdx
.text:000000018000D965                 mov     rcx, [rbp+220h+Block] ; Block
.text:000000018000D969                 mov     rax, rcx
.text:000000018000D96C                 cmp     rdx, 1000h
.text:000000018000D973                 jb      short loc_18000D991
.text:000000018000D975                 add     rdx, 27h ; '''
.text:000000018000D979                 mov     rcx, [rcx-8]
.text:000000018000D97D                 sub     rax, rcx
.text:000000018000D980                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000D984                 cmp     rax, 1Fh
.text:000000018000D988                 jbe     short loc_18000D991
.text:000000018000D98A                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000D990                 int     3               ; Trap to Debugger
.text:000000018000D991 ; ---------------------------------------------------------------------------
.text:000000018000D991
.text:000000018000D991 loc_18000D991:                          ; CODE XREF: sub_18000CFD0+9A3↑j
.text:000000018000D991                                         ; sub_18000CFD0+9B8↑j
.text:000000018000D991                 call    j_j_free
.text:000000018000D996                 mov     rdi, [rbp+220h+var_290]
.text:000000018000D99A                 mov     rsi, [rsp+320h+Buf1]
.text:000000018000D99F
.text:000000018000D99F loc_18000D99F:                          ; CODE XREF: sub_18000CFD0+990↑j
.text:000000018000D99F                 mov     [rbp+220h+var_278], 0
.text:000000018000D9A7                 mov     [rbp+220h+var_270], 0Fh
.text:000000018000D9AF                 mov     byte ptr [rbp+220h+Block], 0
.text:000000018000D9B3                 cmp     rdi, 10h
.text:000000018000D9B7                 jb      short loc_18000D9ED
.text:000000018000D9B9                 lea     rdx, [rdi+1]
.text:000000018000D9BD                 mov     rax, rsi
.text:000000018000D9C0                 cmp     rdx, 1000h
.text:000000018000D9C7                 jb      short loc_18000D9E5
.text:000000018000D9C9                 add     rdx, 27h ; '''
.text:000000018000D9CD                 mov     rsi, [rsi-8]
.text:000000018000D9D1                 sub     rax, rsi
.text:000000018000D9D4                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000D9D8                 cmp     rax, 1Fh
.text:000000018000D9DC                 jbe     short loc_18000D9E5
.text:000000018000D9DE                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000D9E4                 int     3               ; Trap to Debugger
.text:000000018000D9E5 ; ---------------------------------------------------------------------------
.text:000000018000D9E5
.text:000000018000D9E5 loc_18000D9E5:                          ; CODE XREF: sub_18000CFD0+9F7↑j
.text:000000018000D9E5                                         ; sub_18000CFD0+A0C↑j
.text:000000018000D9E5                 mov     rcx, rsi        ; Block
.text:000000018000D9E8                 call    j_j_free
.text:000000018000D9ED
.text:000000018000D9ED loc_18000D9ED:                          ; CODE XREF: sub_18000CFD0+9E7↑j
.text:000000018000D9ED                 mov     eax, r12d
.text:000000018000D9F0
.text:000000018000D9F0 loc_18000D9F0:                          ; CODE XREF: sub_18000CFD0+349↑j
.text:000000018000D9F0                 mov     rcx, [rbp+220h+var_40]
.text:000000018000D9F7                 xor     rcx, rsp        ; StackCookie
.text:000000018000D9FA                 call    __security_check_cookie
.text:000000018000D9FF                 mov     rbx, [rsp+320h+arg_10]
.text:000000018000DA07                 add     rsp, 2F0h
.text:000000018000DA0E                 pop     r15
.text:000000018000DA10                 pop     r14
.text:000000018000DA12                 pop     r13
.text:000000018000DA14                 pop     r12
.text:000000018000DA16                 pop     rdi
.text:000000018000DA17                 pop     rsi
.text:000000018000DA18                 pop     rbp
.text:000000018000DA19                 retn
.text:000000018000DA1A ; ---------------------------------------------------------------------------
.text:000000018000DA1A
.text:000000018000DA1A loc_18000DA1A:                          ; CODE XREF: sub_18000CFD0+45F↑j
.text:000000018000DA1A                                         ; sub_18000CFD0+675↑j ...
.text:000000018000DA1A                 call    ?cancel_current_task@Concurrency@@YAXXZ ; Concurrency::cancel_current_task(void)
.text:000000018000DA1A ; ---------------------------------------------------------------------------
.text:000000018000DA1F                 align 20h
.text:000000018000DA1F ; } // starts at 18000CFD0
.text:000000018000DA1F sub_18000CFD0   endp
.text:000000018000DA1F
.text:000000018000DA20
.text:000000018000DA20 ; =============== S U B R O U T I N E =======================================
.text:000000018000DA20
.text:000000018000DA20
.text:000000018000DA20 sub_18000DA20   proc near               ; CODE XREF: sub_18000BAD0+9↑p
.text:000000018000DA20                                         ; sub_18000DA20+4A↓p
.text:000000018000DA20                                         ; DATA XREF: ...
.text:000000018000DA20
.text:000000018000DA20 arg_0           = qword ptr  8
.text:000000018000DA20 arg_8           = qword ptr  10h
.text:000000018000DA20 arg_10          = qword ptr  18h
.text:000000018000DA20 arg_18          = qword ptr  20h
.text:000000018000DA20
.text:000000018000DA20                 mov     [rsp+arg_18], rbx
.text:000000018000DA25                 push    rsi
.text:000000018000DA26                 push    r14
.text:000000018000DA28                 push    r15
.text:000000018000DA2A                 sub     rsp, 20h
.text:000000018000DA2E                 mov     r15, r8
.text:000000018000DA31                 mov     r14, rdx
.text:000000018000DA34                 mov     rsi, rcx
.text:000000018000DA37                 test    rcx, rcx
.text:000000018000DA3A                 jnz     short loc_18000DA8F
.text:000000018000DA3C                 cmp     rdx, 0FFFFFFFFFFFFFFFEh
.text:000000018000DA40                 jnz     short loc_18000DA7B
.text:000000018000DA42                 cmp     r8, 0FFFFFFFFFFFFFFFDh
.text:000000018000DA46                 jnz     short loc_18000DA7B
.text:000000018000DA48                 mov     rbx, cs:qword_1800194B0
.text:000000018000DA4F                 test    rbx, rbx
.text:000000018000DA52                 jz      short loc_18000DA7B
.text:000000018000DA54
.text:000000018000DA54 loc_18000DA54:                          ; CODE XREF: sub_18000DA20+59↓j
.text:000000018000DA54                 mov     rdx, [rbx+2B8h]
.text:000000018000DA5B                 test    rdx, rdx
.text:000000018000DA5E                 jz      short loc_18000DA6F
.text:000000018000DA60                 mov     r8, [rbx+2C0h]
.text:000000018000DA67                 mov     rcx, rbx
.text:000000018000DA6A                 call    sub_18000DA20
.text:000000018000DA6F
.text:000000018000DA6F loc_18000DA6F:                          ; CODE XREF: sub_18000DA20+3E↑j
.text:000000018000DA6F                 mov     rbx, [rbx+0A380h]
.text:000000018000DA76                 test    rbx, rbx
.text:000000018000DA79                 jnz     short loc_18000DA54
.text:000000018000DA7B
.text:000000018000DA7B loc_18000DA7B:                          ; CODE XREF: sub_18000DA20+20↑j
.text:000000018000DA7B                                         ; sub_18000DA20+26↑j ...
.text:000000018000DA7B                 mov     eax, 1
.text:000000018000DA80                 mov     rbx, [rsp+38h+arg_18]
.text:000000018000DA85                 add     rsp, 20h
.text:000000018000DA89                 pop     r15
.text:000000018000DA8B                 pop     r14
.text:000000018000DA8D                 pop     rsi
.text:000000018000DA8E                 retn
.text:000000018000DA8F ; ---------------------------------------------------------------------------
.text:000000018000DA8F
.text:000000018000DA8F loc_18000DA8F:                          ; CODE XREF: sub_18000DA20+1A↑j
.text:000000018000DA8F                 mov     rax, [rcx+2B0h]
.text:000000018000DA96                 test    rax, rax
.text:000000018000DA99                 jnz     short loc_18000DAB3
.text:000000018000DA9B                 test    r14, r14
.text:000000018000DA9E                 jnz     short loc_18000DAB8
.text:000000018000DAA0                 lea     eax, [r14+1]
.text:000000018000DAA4                 mov     rbx, [rsp+38h+arg_18]
.text:000000018000DAA9                 add     rsp, 20h
.text:000000018000DAAD                 pop     r15
.text:000000018000DAAF                 pop     r14
.text:000000018000DAB1                 pop     rsi
.text:000000018000DAB2                 retn
.text:000000018000DAB3 ; ---------------------------------------------------------------------------
.text:000000018000DAB3
.text:000000018000DAB3 loc_18000DAB3:                          ; CODE XREF: sub_18000DA20+79↑j
.text:000000018000DAB3                 test    r14, r14
.text:000000018000DAB6                 jz      short loc_18000DABB
.text:000000018000DAB8
.text:000000018000DAB8 loc_18000DAB8:                          ; CODE XREF: sub_18000DA20+7E↑j
.text:000000018000DAB8                 mov     rax, r14
.text:000000018000DABB
.text:000000018000DABB loc_18000DABB:                          ; CODE XREF: sub_18000DA20+96↑j
.text:000000018000DABB                 mov     [rsp+38h+arg_10], r12
.text:000000018000DAC0                 mov     [rcx+2B8h], rax
.text:000000018000DAC7                 mov     [rcx+2C0h], r15
.text:000000018000DACE                 mov     rcx, [rcx+280h] ; lpCriticalSection
.text:000000018000DAD5                 call    cs:EnterCriticalSection
.text:000000018000DADB                 mov     rbx, [rsi+288h]
.text:000000018000DAE2                 xor     r12d, r12d
.text:000000018000DAE5                 mov     rcx, [rsi+280h] ; lpCriticalSection
.text:000000018000DAEC                 mov     [rsi+290h], r12
.text:000000018000DAF3                 mov     [rsi+288h], r12
.text:000000018000DAFA                 mov     [rsi+298h], r12
.text:000000018000DB01                 call    cs:LeaveCriticalSection
.text:000000018000DB07                 test    rbx, rbx
.text:000000018000DB0A                 jz      loc_18000DBB7
.text:000000018000DB10
.text:000000018000DB10 loc_18000DB10:                          ; DATA XREF: .rdata:00000001800160B0↓o
.text:000000018000DB10                                         ; .rdata:00000001800160C0↓o ...
.text:000000018000DB10                 mov     [rsp+38h+arg_0], rbp
.text:000000018000DB15                 mov     [rsp+38h+arg_8], rdi
.text:000000018000DB1A                 nop     word ptr [rax+rax+00h]
.text:000000018000DB20
.text:000000018000DB20 loc_18000DB20:                          ; CODE XREF: sub_18000DA20+187↓j
.text:000000018000DB20                 mov     ebp, [rbx+10h]
.text:000000018000DB23                 mov     rdi, [rbx+8]
.text:000000018000DB27                 cmp     ebp, 0Ch
.text:000000018000DB2A                 jb      short loc_18000DB67
.text:000000018000DB2C                 test    rdi, rdi
.text:000000018000DB2F                 jz      short loc_18000DB67
.text:000000018000DB31                 mov     r8d, ebp
.text:000000018000DB34                 mov     rdx, rdi
.text:000000018000DB37                 mov     rcx, rsi
.text:000000018000DB3A                 call    sub_18000E600
.text:000000018000DB3F                 test    r14, r14
.text:000000018000DB42                 jz      short loc_18000DB51
.text:000000018000DB44                 mov     r8, r15
.text:000000018000DB47                 mov     edx, ebp
.text:000000018000DB49                 mov     rcx, rdi
.text:000000018000DB4C                 call    r14
.text:000000018000DB4F                 jmp     short loc_18000DB67
.text:000000018000DB51 ; ---------------------------------------------------------------------------
.text:000000018000DB51
.text:000000018000DB51 loc_18000DB51:                          ; CODE XREF: sub_18000DA20+122↑j
.text:000000018000DB51                 mov     rax, [rsi+2B0h]
.text:000000018000DB58                 test    rax, rax
.text:000000018000DB5B                 jz      short loc_18000DB67
.text:000000018000DB5D                 mov     r8, r15
.text:000000018000DB60                 mov     edx, ebp
.text:000000018000DB62                 mov     rcx, rdi
.text:000000018000DB65                 call    rax
.text:000000018000DB67
.text:000000018000DB67 loc_18000DB67:                          ; CODE XREF: sub_18000DA20+10A↑j
.text:000000018000DB67                                         ; sub_18000DA20+10F↑j ...
.text:000000018000DB67                 mov     rdi, rbx
.text:000000018000DB6A                 mov     rbx, [rbx]
.text:000000018000DB6D                 cmp     [rdi+18h], r12d
.text:000000018000DB71                 jz      short loc_18000DB8D
.text:000000018000DB73                 mov     r8, [rdi+8]
.text:000000018000DB77                 mov     edx, [rsi+258h]
.text:000000018000DB7D                 mov     ecx, [rsi+0A388h]
.text:000000018000DB83                 call    qword ptr [rsi+0A3D0h]
.text:000000018000DB89                 mov     [rdi+8], r12
.text:000000018000DB8D
.text:000000018000DB8D loc_18000DB8D:                          ; CODE XREF: sub_18000DA20+151↑j
.text:000000018000DB8D                 mov     rcx, [rdi+8]    ; Block
.text:000000018000DB91                 call    cs:__imp_free
.text:000000018000DB97                 mov     edx, 20h ; ' '
.text:000000018000DB9C                 mov     rcx, rdi        ; Block
.text:000000018000DB9F                 call    j_j_free
.text:000000018000DBA4                 test    rbx, rbx
.text:000000018000DBA7                 jnz     loc_18000DB20
.text:000000018000DBAD                 mov     rdi, [rsp+38h+arg_8]
.text:000000018000DBB2                 mov     rbp, [rsp+38h+arg_0]
.text:000000018000DBB7
.text:000000018000DBB7 loc_18000DBB7:                          ; CODE XREF: sub_18000DA20+EA↑j
.text:000000018000DBB7                                         ; DATA XREF: .pdata:000000018001CC3C↓o ...
.text:000000018000DBB7                 mov     rcx, rsi
.text:000000018000DBBA                 call    sub_18000FB70
.text:000000018000DBBF                 mov     r12, [rsp+38h+arg_10]
.text:000000018000DBC4                 neg     al
.text:000000018000DBC6                 mov     rbx, [rsp+38h+arg_18]
.text:000000018000DBCB                 sbb     eax, eax
.text:000000018000DBCD                 and     eax, 2
.text:000000018000DBD0                 add     rsp, 20h
.text:000000018000DBD4                 pop     r15
.text:000000018000DBD6                 pop     r14
.text:000000018000DBD8                 pop     rsi
.text:000000018000DBD9                 retn
.text:000000018000DBD9 sub_18000DA20   endp
.text:000000018000DBD9
.text:000000018000DBD9 ; ---------------------------------------------------------------------------
.text:000000018000DBDA algn_18000DBDA:                         ; DATA XREF: .pdata:000000018001CC48↓o
.text:000000018000DBDA                 align 20h
.text:000000018000DBE0
.text:000000018000DBE0 ; =============== S U B R O U T I N E =======================================
.text:000000018000DBE0
.text:000000018000DBE0
.text:000000018000DBE0 sub_18000DBE0   proc near               ; CODE XREF: sub_18000B9C0+E0↑p
.text:000000018000DBE0                                         ; sub_18000BB20+D1↑p ...
.text:000000018000DBE0
.text:000000018000DBE0 arg_0           = qword ptr  8
.text:000000018000DBE0
.text:000000018000DBE0                 mov     [rsp+arg_0], rbx
.text:000000018000DBE5                 push    rdi
.text:000000018000DBE6                 sub     rsp, 20h
.text:000000018000DBEA                 mov     r10d, r8d
.text:000000018000DBED                 mov     r9, rdx
.text:000000018000DBF0                 mov     rdi, rcx
.text:000000018000DBF3                 mov     eax, 1
.text:000000018000DBF8                 test    rcx, rcx
.text:000000018000DBFB                 jz      short loc_18000DC55
.text:000000018000DBFD                 cmp     qword ptr [rcx+0A350h], 0
.text:000000018000DC05                 jz      short loc_18000DC55
.text:000000018000DC07                 test    rdx, rdx
.text:000000018000DC0A                 jz      short loc_18000DC55
.text:000000018000DC0C                 cmp     byte ptr [rcx+0A3D8h], 0
.text:000000018000DC13                 jz      short loc_18000DC3F
.text:000000018000DC15                 mov     rbx, [rcx+0A3E0h]
.text:000000018000DC1C                 mov     rax, [rcx+0A3E8h]
.text:000000018000DC23                 cmp     rbx, rax
.text:000000018000DC26                 jz      short loc_18000DC3F
.text:000000018000DC28
.text:000000018000DC28 loc_18000DC28:                          ; CODE XREF: sub_18000DBE0+5D↓j
.text:000000018000DC28                 mov     r8, [rbx]
.text:000000018000DC2B                 cmp     r8, r9
.text:000000018000DC2E                 jnz     short loc_18000DC36
.text:000000018000DC30                 cmp     [rbx+8], r10d
.text:000000018000DC34                 jz      short loc_18000DC60
.text:000000018000DC36
.text:000000018000DC36 loc_18000DC36:                          ; CODE XREF: sub_18000DBE0+4E↑j
.text:000000018000DC36                 add     rbx, 10h
.text:000000018000DC3A                 cmp     rbx, rax
.text:000000018000DC3D                 jnz     short loc_18000DC28
.text:000000018000DC3F
.text:000000018000DC3F loc_18000DC3F:                          ; CODE XREF: sub_18000DBE0+33↑j
.text:000000018000DC3F                                         ; sub_18000DBE0+46↑j
.text:000000018000DC3F                 mov     [rcx+0A358h], r9
.text:000000018000DC46                 mov     r8, r10         ; Size
.text:000000018000DC49                 mov     rcx, r9         ; void *
.text:000000018000DC4C                 xor     edx, edx        ; Val
.text:000000018000DC4E                 call    memset
.text:000000018000DC53                 xor     eax, eax
.text:000000018000DC55
.text:000000018000DC55 loc_18000DC55:                          ; CODE XREF: sub_18000DBE0+1B↑j
.text:000000018000DC55                                         ; sub_18000DBE0+25↑j ...
.text:000000018000DC55                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000DC5A                 add     rsp, 20h
.text:000000018000DC5E                 pop     rdi
.text:000000018000DC5F                 retn
.text:000000018000DC60 ; ---------------------------------------------------------------------------
.text:000000018000DC60
.text:000000018000DC60 loc_18000DC60:                          ; CODE XREF: sub_18000DBE0+54↑j
.text:000000018000DC60                 mov     edx, [rcx+258h]
.text:000000018000DC66                 mov     ecx, [rcx+0A388h]
.text:000000018000DC6C                 call    qword ptr [rdi+0A3C0h]
.text:000000018000DC72                 mov     r8, [rdi+0A3E8h]
.text:000000018000DC79                 lea     rdx, [rbx+10h]  ; Src
.text:000000018000DC7D                 sub     r8, rdx         ; Size
.text:000000018000DC80                 mov     rcx, rbx        ; void *
.text:000000018000DC83                 call    memmove
.text:000000018000DC88                 add     qword ptr [rdi+0A3E8h], 0FFFFFFFFFFFFFFF0h
.text:000000018000DC90                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000DC95                 xor     eax, eax
.text:000000018000DC97                 add     rsp, 20h
.text:000000018000DC9B                 pop     rdi
.text:000000018000DC9C                 retn
.text:000000018000DC9C sub_18000DBE0   endp
.text:000000018000DC9C
.text:000000018000DC9C ; ---------------------------------------------------------------------------
.text:000000018000DC9D algn_18000DC9D:                         ; DATA XREF: .pdata:000000018001CC54↓o
.text:000000018000DC9D                 align 20h
.text:000000018000DCA0
.text:000000018000DCA0 ; =============== S U B R O U T I N E =======================================
.text:000000018000DCA0
.text:000000018000DCA0
.text:000000018000DCA0 sub_18000DCA0   proc near               ; CODE XREF: sub_18000B9C0+3F↑p
.text:000000018000DCA0                                         ; sub_18000BB20+2D↑p ...
.text:000000018000DCA0
.text:000000018000DCA0 var_18          = xmmword ptr -18h
.text:000000018000DCA0 arg_0           = qword ptr  8
.text:000000018000DCA0 arg_8           = qword ptr  10h
.text:000000018000DCA0 arg_10          = qword ptr  18h
.text:000000018000DCA0
.text:000000018000DCA0                 mov     [rsp+arg_0], rbx
.text:000000018000DCA5                 mov     [rsp+arg_8], rbp
.text:000000018000DCAA                 mov     [rsp+arg_10], rsi
.text:000000018000DCAF                 push    rdi
.text:000000018000DCB0                 sub     rsp, 30h
.text:000000018000DCB4                 mov     ebp, r8d
.text:000000018000DCB7                 mov     rsi, rdx
.text:000000018000DCBA                 mov     qword ptr [rdx], 0
.text:000000018000DCC1                 mov     rbx, rcx
.text:000000018000DCC4                 mov     edi, 1
.text:000000018000DCC9                 test    rcx, rcx
.text:000000018000DCCC                 jz      loc_18000DDD4
.text:000000018000DCD2                 cmp     qword ptr [rcx+0A350h], 0
.text:000000018000DCDA                 jz      loc_18000DDD4
.text:000000018000DCE0                 call    sub_18000FB70
.text:000000018000DCE5                 test    al, al
.text:000000018000DCE7                 jz      short loc_18000DCF3
.text:000000018000DCE9                 mov     edi, 2
.text:000000018000DCEE                 jmp     loc_18000DDD4
.text:000000018000DCF3 ; ---------------------------------------------------------------------------
.text:000000018000DCF3
.text:000000018000DCF3 loc_18000DCF3:                          ; CODE XREF: sub_18000DCA0+47↑j
.text:000000018000DCF3                 cmp     byte ptr [rbx+0A3D8h], 0
.text:000000018000DCFA                 jz      loc_18000DD8D
.text:000000018000DD00                 mov     rax, [rbx+0A3B8h]
.text:000000018000DD07                 mov     r8d, ebp
.text:000000018000DD0A                 mov     edx, [rbx+258h]
.text:000000018000DD10                 mov     ecx, [rbx+0A388h]
.text:000000018000DD16                 call    rax
.text:000000018000DD18                 mov     [rsi], rax
.text:000000018000DD1B                 test    rax, rax
.text:000000018000DD1E                 jz      short loc_18000DD8D
.text:000000018000DD20                 mov     r8, rbp         ; Size
.text:000000018000DD23                 xor     edx, edx        ; Val
.text:000000018000DD25                 mov     rcx, rax        ; void *
.text:000000018000DD28                 call    memset
.text:000000018000DD2D                 mov     ecx, [rbx+0A360h]
.text:000000018000DD33                 mov     rax, [rsi]
.text:000000018000DD36                 add     ecx, edi
.text:000000018000DD38                 mov     [rbx+0A360h], ecx
.text:000000018000DD3E                 mov     dword ptr [rsp+38h+var_18+8], ebp
.text:000000018000DD42                 mov     qword ptr [rsp+38h+var_18], rax
.text:000000018000DD47                 jnz     short loc_18000DD51
.text:000000018000DD49                 mov     [rbx+0A360h], edi
.text:000000018000DD4F                 mov     ecx, edi
.text:000000018000DD51
.text:000000018000DD51 loc_18000DD51:                          ; CODE XREF: sub_18000DCA0+A7↑j
.text:000000018000DD51                 mov     rax, [rsi]
.text:000000018000DD54                 mov     [rax+0Ch], ecx
.text:000000018000DD57                 lea     rcx, [rbx+0A3E0h]
.text:000000018000DD5E                 mov     rdx, [rbx+0A3E8h]
.text:000000018000DD65                 cmp     rdx, [rbx+0A3F0h]
.text:000000018000DD6C                 jz      short loc_18000DD7F
.text:000000018000DD6E                 movups  xmm0, [rsp+38h+var_18]
.text:000000018000DD73                 movups  xmmword ptr [rdx], xmm0
.text:000000018000DD76                 add     qword ptr [rcx+8], 10h
.text:000000018000DD7B                 xor     eax, eax
.text:000000018000DD7D                 jmp     short loc_18000DDD6
.text:000000018000DD7F ; ---------------------------------------------------------------------------
.text:000000018000DD7F
.text:000000018000DD7F loc_18000DD7F:                          ; CODE XREF: sub_18000DCA0+CC↑j
.text:000000018000DD7F                 lea     r8, [rsp+38h+var_18]
.text:000000018000DD84                 call    sub_18000C5B0
.text:000000018000DD89                 xor     eax, eax
.text:000000018000DD8B                 jmp     short loc_18000DDD6
.text:000000018000DD8D ; ---------------------------------------------------------------------------
.text:000000018000DD8D
.text:000000018000DD8D loc_18000DD8D:                          ; CODE XREF: sub_18000DCA0+5A↑j
.text:000000018000DD8D                                         ; sub_18000DCA0+7E↑j
.text:000000018000DD8D                 mov     eax, [rbx+2C8h]
.text:000000018000DD93                 sub     eax, [rbx+0A358h]
.text:000000018000DD99                 add     eax, [rbx+0A350h]
.text:000000018000DD9F                 cmp     eax, ebp
.text:000000018000DDA1                 jb      short loc_18000DDD2
.text:000000018000DDA3                 mov     rax, [rbx+0A358h]
.text:000000018000DDAA                 mov     [rsi], rax
.text:000000018000DDAD                 mov     ecx, [rbx+0A360h]
.text:000000018000DDB3                 add     ecx, edi
.text:000000018000DDB5                 mov     [rbx+0A360h], ecx
.text:000000018000DDBB                 jnz     short loc_18000DDC5
.text:000000018000DDBD                 mov     [rbx+0A360h], edi
.text:000000018000DDC3                 mov     ecx, edi
.text:000000018000DDC5
.text:000000018000DDC5 loc_18000DDC5:                          ; CODE XREF: sub_18000DCA0+11B↑j
.text:000000018000DDC5                 mov     rax, [rsi]
.text:000000018000DDC8                 mov     [rax+0Ch], ecx
.text:000000018000DDCB                 add     [rbx+0A358h], rbp
.text:000000018000DDD2
.text:000000018000DDD2 loc_18000DDD2:                          ; CODE XREF: sub_18000DCA0+101↑j
.text:000000018000DDD2                 xor     edi, edi
.text:000000018000DDD4
.text:000000018000DDD4 loc_18000DDD4:                          ; CODE XREF: sub_18000DCA0+2C↑j
.text:000000018000DDD4                                         ; sub_18000DCA0+3A↑j ...
.text:000000018000DDD4                 mov     eax, edi
.text:000000018000DDD6
.text:000000018000DDD6 loc_18000DDD6:                          ; CODE XREF: sub_18000DCA0+DD↑j
.text:000000018000DDD6                                         ; sub_18000DCA0+EB↑j
.text:000000018000DDD6                 mov     rbx, [rsp+38h+arg_0]
.text:000000018000DDDB                 mov     rbp, [rsp+38h+arg_8]
.text:000000018000DDE0                 mov     rsi, [rsp+38h+arg_10]
.text:000000018000DDE5                 add     rsp, 30h
.text:000000018000DDE9                 pop     rdi
.text:000000018000DDEA                 retn
.text:000000018000DDEA sub_18000DCA0   endp
.text:000000018000DDEA
.text:000000018000DDEA ; ---------------------------------------------------------------------------
.text:000000018000DDEB algn_18000DDEB:                         ; DATA XREF: .pdata:000000018001CC60↓o
.text:000000018000DDEB                 align 10h
.text:000000018000DDF0
.text:000000018000DDF0 ; =============== S U B R O U T I N E =======================================
.text:000000018000DDF0
.text:000000018000DDF0
.text:000000018000DDF0 sub_18000DDF0   proc near               ; CODE XREF: sub_18000BC10+17↑p
.text:000000018000DDF0                                         ; sub_18000BFD0+161↑p
.text:000000018000DDF0                                         ; DATA XREF: ...
.text:000000018000DDF0
.text:000000018000DDF0 arg_0           = qword ptr  8
.text:000000018000DDF0 arg_8           = qword ptr  10h
.text:000000018000DDF0 arg_10          = qword ptr  18h
.text:000000018000DDF0 arg_18          = qword ptr  20h
.text:000000018000DDF0
.text:000000018000DDF0                 push    rbx
.text:000000018000DDF2                 sub     rsp, 20h
.text:000000018000DDF6                 mov     rbx, rcx
.text:000000018000DDF9                 test    rcx, rcx
.text:000000018000DDFC                 jz      loc_18000DF24
.text:000000018000DE02                 cmp     byte ptr [rcx+0A3D8h], 0
.text:000000018000DE09
.text:000000018000DE09 loc_18000DE09:                          ; DATA XREF: .rdata:0000000180016044↓o
.text:000000018000DE09                                         ; .rdata:0000000180016060↓o ...
.text:000000018000DE09                 mov     [rsp+28h+arg_18], rdi
.text:000000018000DE0E                 jz      short loc_18000DE54
.text:000000018000DE10                 mov     rdi, [rcx+0A3E0h]
.text:000000018000DE17                 cmp     rdi, [rcx+0A3E8h]
.text:000000018000DE1E                 jz      short loc_18000DE4D
.text:000000018000DE20
.text:000000018000DE20 loc_18000DE20:                          ; CODE XREF: sub_18000DDF0+54↓j
.text:000000018000DE20                 mov     r9, [rdi]
.text:000000018000DE23                 mov     r8d, [rdi+8]
.text:000000018000DE27                 mov     edx, [rbx+258h]
.text:000000018000DE2D                 mov     ecx, [rbx+0A388h]
.text:000000018000DE33                 call    qword ptr [rbx+0A3C8h]
.text:000000018000DE39                 add     rdi, 10h
.text:000000018000DE3D                 cmp     rdi, [rbx+0A3E8h]
.text:000000018000DE44                 jnz     short loc_18000DE20
.text:000000018000DE46                 mov     rdi, [rbx+0A3E0h]
.text:000000018000DE4D
.text:000000018000DE4D loc_18000DE4D:                          ; CODE XREF: sub_18000DDF0+2E↑j
.text:000000018000DE4D                 mov     [rbx+0A3E8h], rdi
.text:000000018000DE54
.text:000000018000DE54 loc_18000DE54:                          ; CODE XREF: sub_18000DDF0+1E↑j
.text:000000018000DE54                 mov     edi, [rbx+0A358h]
.text:000000018000DE5A                 sub     edi, [rbx+0A350h]
.text:000000018000DE60                 jz      loc_18000DF14
.text:000000018000DE66                 mov     [rsp+28h+arg_8], rbp
.text:000000018000DE6B                 mov     ecx, edi        ; Size
.text:000000018000DE6D                 mov     [rsp+28h+arg_10], rsi
.text:000000018000DE72                 mov     ebp, edi
.text:000000018000DE74                 call    cs:__imp_malloc
.text:000000018000DE7A                 mov     rsi, rax
.text:000000018000DE7D                 test    rax, rax
.text:000000018000DE80                 jz      loc_18000DF0D
.text:000000018000DE86                 mov     rdx, [rbx+0A350h] ; Src
.text:000000018000DE8D                 mov     r8d, ebp        ; Size
.text:000000018000DE90                 mov     rcx, rax        ; void *
.text:000000018000DE93                 call    memcpy
.text:000000018000DE98                 mov     ecx, 20h ; ' '  ; Size
.text:000000018000DE9D                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000DEA2                 mov     [rsp+28h+arg_0], rax
.text:000000018000DEA7                 mov     rdx, rax
.text:000000018000DEAA                 test    rax, rax
.text:000000018000DEAD                 jz      short loc_18000DF04
.text:000000018000DEAF                 mov     eax, [rbx+258h]
.text:000000018000DEB5                 mov     rcx, rbx
.text:000000018000DEB8                 mov     qword ptr [rdx], 0
.text:000000018000DEBF                 mov     [rdx+8], rsi
.text:000000018000DEC3                 mov     [rdx+10h], edi
.text:000000018000DEC6                 mov     [rdx+14h], eax
.text:000000018000DEC9                 mov     dword ptr [rdx+18h], 0
.text:000000018000DED0                 call    sub_180010140
.text:000000018000DED5                 mov     rcx, [rbx+0A350h] ; void *
.text:000000018000DEDC                 mov     r8d, ebp        ; Size
.text:000000018000DEDF                 xor     edx, edx        ; Val
.text:000000018000DEE1                 mov     [rbx+0A358h], rcx
.text:000000018000DEE8                 call    memset
.text:000000018000DEED                 xor     eax, eax
.text:000000018000DEEF
.text:000000018000DEEF loc_18000DEEF:                          ; CODE XREF: sub_18000DDF0+122↓j
.text:000000018000DEEF                 mov     rsi, [rsp+28h+arg_10]
.text:000000018000DEF4                 mov     rbp, [rsp+28h+arg_8]
.text:000000018000DEF9                 mov     rdi, [rsp+28h+arg_18]
.text:000000018000DEFE                 add     rsp, 20h
.text:000000018000DF02                 pop     rbx
.text:000000018000DF03                 retn
.text:000000018000DF04 ; ---------------------------------------------------------------------------
.text:000000018000DF04
.text:000000018000DF04 loc_18000DF04:                          ; CODE XREF: sub_18000DDF0+BD↑j
.text:000000018000DF04                                         ; DATA XREF: .pdata:000000018001CC78↓o ...
.text:000000018000DF04                 mov     rcx, rsi        ; Block
.text:000000018000DF07                 call    cs:__imp_free
.text:000000018000DF0D
.text:000000018000DF0D loc_18000DF0D:                          ; CODE XREF: sub_18000DDF0+90↑j
.text:000000018000DF0D                 mov     eax, 1
.text:000000018000DF12                 jmp     short loc_18000DEEF
.text:000000018000DF14 ; ---------------------------------------------------------------------------
.text:000000018000DF14
.text:000000018000DF14 loc_18000DF14:                          ; CODE XREF: sub_18000DDF0+70↑j
.text:000000018000DF14                                         ; DATA XREF: .pdata:000000018001CC84↓o ...
.text:000000018000DF14                 mov     rdi, [rsp+28h+arg_18]
.text:000000018000DF19                 mov     eax, 1
.text:000000018000DF1E                 add     rsp, 20h
.text:000000018000DF22                 pop     rbx
.text:000000018000DF23                 retn
.text:000000018000DF24 ; ---------------------------------------------------------------------------
.text:000000018000DF24
.text:000000018000DF24 loc_18000DF24:                          ; CODE XREF: sub_18000DDF0+C↑j
.text:000000018000DF24                                         ; DATA XREF: .pdata:000000018001CC90↓o ...
.text:000000018000DF24                 mov     eax, 1
.text:000000018000DF29                 add     rsp, 20h
.text:000000018000DF2D                 pop     rbx
.text:000000018000DF2E                 retn
.text:000000018000DF2E sub_18000DDF0   endp
.text:000000018000DF2E
.text:000000018000DF2E ; ---------------------------------------------------------------------------
.text:000000018000DF2F algn_18000DF2F:                         ; DATA XREF: .pdata:000000018001CC9C↓o
.text:000000018000DF2F                 align 10h
.text:000000018000DF30
.text:000000018000DF30 ; =============== S U B R O U T I N E =======================================
.text:000000018000DF30
.text:000000018000DF30
.text:000000018000DF30 sub_18000DF30   proc near               ; CODE XREF: sub_18000BFD0+51↑p
.text:000000018000DF30
.text:000000018000DF30 arg_20          = qword ptr  28h
.text:000000018000DF30
.text:000000018000DF30                 mov     rax, [rsp+arg_20]
.text:000000018000DF35                 mov     [rcx+0A368h], rax
.text:000000018000DF3C                 xor     eax, eax
.text:000000018000DF3E                 mov     [rcx+2A0h], r8
.text:000000018000DF45                 mov     [rcx+2A8h], r9d
.text:000000018000DF4C                 mov     [rcx+2B0h], rdx
.text:000000018000DF53                 retn
.text:000000018000DF53 sub_18000DF30   endp
.text:000000018000DF53
.text:000000018000DF53 ; ---------------------------------------------------------------------------
.text:000000018000DF54                 align 20h
.text:000000018000DF60
.text:000000018000DF60 ; =============== S U B R O U T I N E =======================================
.text:000000018000DF60
.text:000000018000DF60 ; Attributes: bp-based frame fpd=47h
.text:000000018000DF60
.text:000000018000DF60 sub_18000DF60   proc near               ; CODE XREF: sub_18000CFD0+384↑p
.text:000000018000DF60                                         ; sub_18000CFD0+58C↑p ...
.text:000000018000DF60
.text:000000018000DF60 dwCreationDisposition= dword ptr -0A0h
.text:000000018000DF60 dwFlagsAndAttributes= dword ptr -98h
.text:000000018000DF60 hTemplateFile   = qword ptr -90h
.text:000000018000DF60 ppResult        = qword ptr -80h
.text:000000018000DF60 lpFileName      = qword ptr -78h
.text:000000018000DF60 var_70          = dword ptr -70h
.text:000000018000DF60 var_6C          = dword ptr -6Ch
.text:000000018000DF60 var_68          = xmmword ptr -68h
.text:000000018000DF60 var_58          = xmmword ptr -58h
.text:000000018000DF60 var_48          = qword ptr -48h
.text:000000018000DF60 arg_20          = dword ptr  30h
.text:000000018000DF60 arg_28          = byte ptr  38h
.text:000000018000DF60
.text:000000018000DF60 ; __unwind { // __GSHandlerCheck_EH4
.text:000000018000DF60                 push    rbp
.text:000000018000DF62                 push    rbx
.text:000000018000DF63                 push    rsi
.text:000000018000DF64                 push    rdi
.text:000000018000DF65                 push    r12
.text:000000018000DF67                 push    r13
.text:000000018000DF69                 push    r14
.text:000000018000DF6B                 push    r15
.text:000000018000DF6D                 lea     rbp, [rsp-0Fh]
.text:000000018000DF72                 sub     rsp, 88h
.text:000000018000DF79                 mov     rax, cs:__security_cookie
.text:000000018000DF80                 xor     rax, rsp
.text:000000018000DF83                 mov     [rbp+47h+var_48], rax
.text:000000018000DF87                 mov     r14, r9
.text:000000018000DF8A                 mov     rsi, r8
.text:000000018000DF8D                 mov     r15, rcx
.text:000000018000DF90                 mov     r13b, 1
.text:000000018000DF93                 mov     ecx, [rcx+24h]
.text:000000018000DF96                 test    ecx, ecx
.text:000000018000DF98                 jz      loc_18000E250
.text:000000018000DF9E                 cmp     ecx, 1
.text:000000018000DFA1                 jnz     loc_18000E333
.text:000000018000DFA7                 xor     r12d, r12d
.text:000000018000DFAA                 mov     qword ptr [rbp+47h+var_68], r12
.text:000000018000DFAE                 mov     qword ptr [rbp+47h+var_68+8], 0Fh
.text:000000018000DFB6                 mov     byte ptr [rbp+47h+lpFileName], r12b
.text:000000018000DFBA                 mov     rbx, 0FFFFFFFFFFFFFFFFh
.text:000000018000DFC1                 mov     r8, rbx
.text:000000018000DFC4
.text:000000018000DFC4 loc_18000DFC4:                          ; CODE XREF: sub_18000DF60+6B↓j
.text:000000018000DFC4                 inc     r8              ; Size
.text:000000018000DFC7                 cmp     [rsi+r8], r12b
.text:000000018000DFCB                 jnz     short loc_18000DFC4
.text:000000018000DFCD                 mov     rdx, rsi        ; Src
.text:000000018000DFD0                 lea     rcx, [rbp+47h+lpFileName] ; void *
.text:000000018000DFD4                 call    sub_180009910
.text:000000018000DFD9                 nop
.text:000000018000DFDA                 cmp     qword ptr [rbp+47h+var_68], 0
.text:000000018000DFDF                 jnz     short loc_18000DFFA
.text:000000018000DFE1                 lea     rsi, byte_1800126D0
.text:000000018000DFE8                 mov     r8d, 1          ; Size
.text:000000018000DFEE                 mov     rdx, rsi        ; Src
.text:000000018000DFF1                 lea     rcx, [rbp+47h+lpFileName] ; void *
.text:000000018000DFF5                 call    sub_180009910
.text:000000018000DFFA
.text:000000018000DFFA loc_18000DFFA:                          ; CODE XREF: sub_18000DF60+7F↑j
.text:000000018000DFFA                 lea     rdx, Src        ; lpString2
.text:000000018000E001                 mov     rcx, r14        ; lpString1
.text:000000018000E004                 call    cs:lstrcmpiA
.text:000000018000E00A                 test    eax, eax
.text:000000018000E00C                 jnz     short loc_18000E050
.text:000000018000E00E                 mov     rdx, qword ptr [rbp+47h+var_68]
.text:000000018000E012                 add     rdx, 30h ; '0'
.text:000000018000E016                 lea     rcx, [rbp+47h+lpFileName]
.text:000000018000E01A                 call    sub_18000EFE0
.text:000000018000E01F                 cmp     qword ptr [rbp+47h+var_68], 0
.text:000000018000E024                 jbe     loc_18000E357
.text:000000018000E02A                 lea     rcx, [rbp+47h+lpFileName]
.text:000000018000E02E                 mov     rdx, qword ptr [rbp+47h+var_68+8]
.text:000000018000E032                 cmp     rdx, 10h
.text:000000018000E036                 cmovnb  rcx, [rbp+47h+lpFileName] ; Buffer
.text:000000018000E03B                 mov     r9, rsi
.text:000000018000E03E                 lea     r8, aSPipeMicrosoft ; "\\\\%s\\pipe\\Microsoft Flight Simulato"...
.text:000000018000E045                 call    sub_18000E6B0
.text:000000018000E04A                 jmp     loc_18000E0D0
.text:000000018000E04A ; ---------------------------------------------------------------------------
.text:000000018000E04F                 align 10h
.text:000000018000E050
.text:000000018000E050 loc_18000E050:                          ; CODE XREF: sub_18000DF60+AC↑j
.text:000000018000E050                                         ; sub_18000DF60+F8↓j
.text:000000018000E050                 inc     rbx
.text:000000018000E053                 cmp     byte ptr [r14+rbx], 0
.text:000000018000E058                 jnz     short loc_18000E050
.text:000000018000E05A                 mov     rdi, qword ptr [rbp+47h+var_68]
.text:000000018000E05E                 lea     rcx, [rdi+0Dh]
.text:000000018000E062                 add     rcx, rbx
.text:000000018000E065                 mov     rax, qword ptr [rbp+47h+var_68+8]
.text:000000018000E069                 cmp     rdi, rcx
.text:000000018000E06C                 ja      short loc_18000E093
.text:000000018000E06E                 cmp     rax, rcx
.text:000000018000E071                 jz      short loc_18000E093
.text:000000018000E073                 jnb     loc_18000E145
.text:000000018000E079                 sub     rcx, rdi
.text:000000018000E07C                 xor     r8d, r8d
.text:000000018000E07F                 mov     rdx, rcx
.text:000000018000E082                 lea     rcx, [rbp+47h+lpFileName] ; Src
.text:000000018000E086                 call    sub_18000C760
.text:000000018000E08B                 mov     qword ptr [rbp+47h+var_68], rdi
.text:000000018000E08F                 mov     rax, qword ptr [rbp+47h+var_68+8]
.text:000000018000E093
.text:000000018000E093 loc_18000E093:                          ; CODE XREF: sub_18000DF60+10C↑j
.text:000000018000E093                                         ; sub_18000DF60+111↑j ...
.text:000000018000E093                 mov     edx, 100h
.text:000000018000E098                 cmp     rax, rdx
.text:000000018000E09B                 jnb     short loc_18000E0A0
.text:000000018000E09D
.text:000000018000E09D loc_18000E09D:                          ; CODE XREF: sub_18000DF60+24A↓j
.text:000000018000E09D                 mov     rdx, rax
.text:000000018000E0A0
.text:000000018000E0A0 loc_18000E0A0:                          ; CODE XREF: sub_18000DF60+13B↑j
.text:000000018000E0A0                 test    rdi, rdi
.text:000000018000E0A3                 jz      loc_18000E357
.text:000000018000E0A9                 lea     rcx, [rbp+47h+lpFileName]
.text:000000018000E0AD                 cmp     rax, 10h
.text:000000018000E0B1                 cmovnb  rcx, [rbp+47h+lpFileName] ; Buffer
.text:000000018000E0B6                 mov     qword ptr [rsp+0C0h+dwCreationDisposition], r14
.text:000000018000E0BB                 mov     r9, rsi
.text:000000018000E0BE                 lea     r8, aSPipeS     ; "\\\\%s\\pipe\\%s"
.text:000000018000E0C5                 call    sub_18000E6B0
.text:000000018000E0CA                 nop     word ptr [rax+rax+00h]
.text:000000018000E0D0
.text:000000018000E0D0 loc_18000E0D0:                          ; CODE XREF: sub_18000DF60+EA↑j
.text:000000018000E0D0                                         ; sub_18000DF60+1E3↓j
.text:000000018000E0D0                 lea     rcx, [rbp+47h+lpFileName]
.text:000000018000E0D4                 cmp     qword ptr [rbp+47h+var_68+8], 10h
.text:000000018000E0D9                 cmovnb  rcx, [rbp+47h+lpFileName] ; lpFileName
.text:000000018000E0DE                 mov     [rsp+0C0h+hTemplateFile], r12 ; hTemplateFile
.text:000000018000E0E3                 mov     [rsp+0C0h+dwFlagsAndAttributes], 40000000h ; dwFlagsAndAttributes
.text:000000018000E0EB                 mov     [rsp+0C0h+dwCreationDisposition], 3 ; dwCreationDisposition
.text:000000018000E0F3                 xor     r9d, r9d        ; lpSecurityAttributes
.text:000000018000E0F6                 xor     r8d, r8d        ; dwShareMode
.text:000000018000E0F9                 mov     edx, 0C0000000h ; dwDesiredAccess
.text:000000018000E0FE                 call    cs:CreateFileA
.text:000000018000E104                 mov     rbx, rax
.text:000000018000E107                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:000000018000E10B                 jnz     loc_18000E1B6
.text:000000018000E111                 call    cs:GetLastError
.text:000000018000E117                 cmp     eax, 0E7h
.text:000000018000E11C                 jnz     loc_18000E209
.text:000000018000E122                 lea     rcx, [rbp+47h+lpFileName]
.text:000000018000E126                 cmp     qword ptr [rbp+47h+var_68+8], 10h
.text:000000018000E12B                 cmovnb  rcx, [rbp+47h+lpFileName] ; lpNamedPipeName
.text:000000018000E130                 mov     edx, 1388h      ; nTimeOut
.text:000000018000E135                 call    cs:WaitNamedPipeA
.text:000000018000E13B                 test    eax, eax
.text:000000018000E13D                 jz      loc_18000E209
.text:000000018000E143                 jmp     short loc_18000E0D0
.text:000000018000E145 ; ---------------------------------------------------------------------------
.text:000000018000E145
.text:000000018000E145 loc_18000E145:                          ; CODE XREF: sub_18000DF60+113↑j
.text:000000018000E145                 cmp     rcx, 10h
.text:000000018000E149                 jnb     loc_18000E093
.text:000000018000E14F                 cmp     rax, 10h
.text:000000018000E153                 jb      loc_18000E093
.text:000000018000E159                 mov     rbx, [rbp+47h+lpFileName]
.text:000000018000E15D                 lea     r8, [rdi+1]     ; Size
.text:000000018000E161                 mov     rdx, rbx        ; Src
.text:000000018000E164                 lea     rcx, [rbp+47h+lpFileName] ; void *
.text:000000018000E168                 call    memcpy
.text:000000018000E16D                 mov     rdx, qword ptr [rbp+47h+var_68+8]
.text:000000018000E171                 inc     rdx
.text:000000018000E174                 cmp     rdx, 1000h
.text:000000018000E17B                 jb      short loc_18000E195
.text:000000018000E17D                 add     rdx, 27h ; '''
.text:000000018000E181                 mov     rcx, [rbx-8]
.text:000000018000E185                 sub     rbx, rcx
.text:000000018000E188                 lea     rax, [rbx-8]
.text:000000018000E18C                 cmp     rax, 1Fh
.text:000000018000E190                 ja      short loc_18000E1AF
.text:000000018000E192                 mov     rbx, rcx
.text:000000018000E195
.text:000000018000E195 loc_18000E195:                          ; CODE XREF: sub_18000DF60+21B↑j
.text:000000018000E195                 mov     rcx, rbx        ; Block
.text:000000018000E198                 call    j_j_free
.text:000000018000E19D                 mov     eax, 0Fh
.text:000000018000E1A2                 mov     qword ptr [rbp+47h+var_68+8], rax
.text:000000018000E1A6                 mov     rdi, qword ptr [rbp+47h+var_68]
.text:000000018000E1AA                 jmp     loc_18000E09D
.text:000000018000E1AF ; ---------------------------------------------------------------------------
.text:000000018000E1AF
.text:000000018000E1AF loc_18000E1AF:                          ; CODE XREF: sub_18000DF60+230↑j
.text:000000018000E1AF                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000E1B5                 int     3               ; Trap to Debugger
.text:000000018000E1B6 ; ---------------------------------------------------------------------------
.text:000000018000E1B6
.text:000000018000E1B6 loc_18000E1B6:                          ; CODE XREF: sub_18000DF60+1AB↑j
.text:000000018000E1B6                 xor     r8d, r8d        ; Flags
.text:000000018000E1B9                 lea     rdx, Function   ; Function
.text:000000018000E1C0                 mov     rcx, rbx        ; FileHandle
.text:000000018000E1C3                 call    cs:BindIoCompletionCallback
.text:000000018000E1C9                 test    eax, eax
.text:000000018000E1CB                 jz      short loc_18000E202
.text:000000018000E1CD                 movzx   eax, [rbp+47h+arg_28]
.text:000000018000E1D1                 mov     byte ptr [rsp+0C0h+dwFlagsAndAttributes], al
.text:000000018000E1D5                 mov     eax, [rbp+47h+arg_20]
.text:000000018000E1D8                 mov     [rsp+0C0h+dwCreationDisposition], eax
.text:000000018000E1DC                 xor     r9d, r9d
.text:000000018000E1DF                 mov     r8, rbx
.text:000000018000E1E2                 mov     dl, 1
.text:000000018000E1E4                 mov     rcx, r15
.text:000000018000E1E7                 call    sub_18000F830
.text:000000018000E1EC                 mov     rax, [r15]
.text:000000018000E1EF                 mov     rcx, r15
.text:000000018000E1F2                 call    qword ptr [rax+8]
.text:000000018000E1F5                 mov     rcx, r15
.text:000000018000E1F8                 call    sub_18000FA90
.text:000000018000E1FD                 xor     r13b, r13b
.text:000000018000E200                 jmp     short loc_18000E209
.text:000000018000E202 ; ---------------------------------------------------------------------------
.text:000000018000E202
.text:000000018000E202 loc_18000E202:                          ; CODE XREF: sub_18000DF60+26B↑j
.text:000000018000E202                 call    cs:GetLastError
.text:000000018000E208                 nop
.text:000000018000E209
.text:000000018000E209 loc_18000E209:                          ; CODE XREF: sub_18000DF60+1BC↑j
.text:000000018000E209                                         ; sub_18000DF60+1DD↑j ...
.text:000000018000E209                 mov     rdx, qword ptr [rbp+47h+var_68+8]
.text:000000018000E20D                 cmp     rdx, 10h
.text:000000018000E211                 jb      loc_18000E333
.text:000000018000E217                 inc     rdx
.text:000000018000E21A                 mov     rcx, [rbp+47h+lpFileName] ; Block
.text:000000018000E21E                 mov     rax, rcx
.text:000000018000E221                 cmp     rdx, 1000h
.text:000000018000E228                 jb      short loc_18000E246
.text:000000018000E22A                 add     rdx, 27h ; '''
.text:000000018000E22E                 mov     rcx, [rcx-8]
.text:000000018000E232                 sub     rax, rcx
.text:000000018000E235                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000E239                 cmp     rax, 1Fh
.text:000000018000E23D                 jbe     short loc_18000E246
.text:000000018000E23F                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000E245                 int     3               ; Trap to Debugger
.text:000000018000E246 ; ---------------------------------------------------------------------------
.text:000000018000E246
.text:000000018000E246 loc_18000E246:                          ; CODE XREF: sub_18000DF60+2C8↑j
.text:000000018000E246                                         ; sub_18000DF60+2DD↑j
.text:000000018000E246                 call    j_j_free
.text:000000018000E24B                 jmp     loc_18000E333
.text:000000018000E250 ; ---------------------------------------------------------------------------
.text:000000018000E250
.text:000000018000E250 loc_18000E250:                          ; CODE XREF: sub_18000DF60+38↑j
.text:000000018000E250                 xor     r12d, r12d
.text:000000018000E253                 mov     dword ptr [rbp+47h+lpFileName], r12d
.text:000000018000E257                 xorps   xmm0, xmm0
.text:000000018000E25A                 movdqu  [rbp+47h+var_68], xmm0
.text:000000018000E25F                 xorps   xmm1, xmm1
.text:000000018000E262                 movdqu  [rbp+47h+var_58], xmm1
.text:000000018000E267                 mov     [rbp+47h+ppResult], r12
.text:000000018000E26B                 mov     dword ptr [rbp+47h+lpFileName+4], edx
.text:000000018000E26E                 mov     [rbp+47h+var_70], 1
.text:000000018000E275                 mov     [rbp+47h+var_6C], 6
.text:000000018000E27C                 lea     r9, [rbp+47h+ppResult] ; ppResult
.text:000000018000E280                 lea     r8, [rbp+47h+lpFileName] ; pHints
.text:000000018000E284                 mov     rdx, r14        ; pServiceName
.text:000000018000E287                 mov     rcx, rsi        ; pNodeName
.text:000000018000E28A                 call    cs:getaddrinfo
.text:000000018000E290                 test    eax, eax
.text:000000018000E292                 jnz     loc_18000E333
.text:000000018000E298                 mov     rax, [rbp+47h+ppResult]
.text:000000018000E29C                 test    rax, rax
.text:000000018000E29F                 jz      loc_18000E333
.text:000000018000E2A5                 mov     r8d, [rax+0Ch]  ; protocol
.text:000000018000E2A9                 mov     edx, [rax+8]    ; type
.text:000000018000E2AC                 mov     ecx, [rax+4]    ; af
.text:000000018000E2AF                 call    cs:socket
.text:000000018000E2B5                 mov     rbx, rax
.text:000000018000E2B8                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:000000018000E2BC                 jz      short loc_18000E329
.text:000000018000E2BE                 mov     rdx, [rbp+47h+ppResult]
.text:000000018000E2C2                 mov     r8d, [rdx+10h]  ; namelen
.text:000000018000E2C6                 mov     rdx, [rdx+20h]  ; name
.text:000000018000E2CA                 mov     rcx, rax        ; s
.text:000000018000E2CD                 call    cs:connect
.text:000000018000E2D3                 cmp     eax, 0FFFFFFFFh
.text:000000018000E2D6                 jz      short loc_18000E329
.text:000000018000E2D8                 xor     r8d, r8d        ; Flags
.text:000000018000E2DB                 lea     rdx, Function   ; Function
.text:000000018000E2E2                 mov     rcx, rbx        ; FileHandle
.text:000000018000E2E5                 call    cs:BindIoCompletionCallback
.text:000000018000E2EB                 test    eax, eax
.text:000000018000E2ED                 jz      short loc_18000E329
.text:000000018000E2EF                 movzx   eax, [rbp+47h+arg_28]
.text:000000018000E2F3                 mov     byte ptr [rsp+0C0h+dwFlagsAndAttributes], al
.text:000000018000E2F7                 mov     eax, [rbp+47h+arg_20]
.text:000000018000E2FA                 mov     [rsp+0C0h+dwCreationDisposition], eax
.text:000000018000E2FE                 mov     rax, [rbp+47h+ppResult]
.text:000000018000E302                 mov     r9d, [rax+4]
.text:000000018000E306                 mov     r8, rbx
.text:000000018000E309                 movzx   edx, r13b
.text:000000018000E30D                 mov     rcx, r15
.text:000000018000E310                 call    sub_18000F830
.text:000000018000E315                 mov     rax, [r15]
.text:000000018000E318                 mov     rcx, r15
.text:000000018000E31B                 call    qword ptr [rax+8]
.text:000000018000E31E                 mov     rcx, r15
.text:000000018000E321                 call    sub_18000FA90
.text:000000018000E326                 xor     r13b, r13b
.text:000000018000E329
.text:000000018000E329 loc_18000E329:                          ; CODE XREF: sub_18000DF60+35C↑j
.text:000000018000E329                                         ; sub_18000DF60+376↑j ...
.text:000000018000E329                 mov     rcx, [rbp+47h+ppResult] ; pAddrInfo
.text:000000018000E32D                 call    cs:freeaddrinfo
.text:000000018000E333
.text:000000018000E333 loc_18000E333:                          ; CODE XREF: sub_18000DF60+41↑j
.text:000000018000E333                                         ; sub_18000DF60+2B1↑j ...
.text:000000018000E333                 movzx   eax, r13b
.text:000000018000E337                 mov     rcx, [rbp+47h+var_48]
.text:000000018000E33B                 xor     rcx, rsp        ; StackCookie
.text:000000018000E33E                 call    __security_check_cookie
.text:000000018000E343                 add     rsp, 88h
.text:000000018000E34A                 pop     r15
.text:000000018000E34C                 pop     r14
.text:000000018000E34E                 pop     r13
.text:000000018000E350                 pop     r12
.text:000000018000E352                 pop     rdi
.text:000000018000E353                 pop     rsi
.text:000000018000E354                 pop     rbx
.text:000000018000E355                 pop     rbp
.text:000000018000E356                 retn
.text:000000018000E357 ; ---------------------------------------------------------------------------
.text:000000018000E357
.text:000000018000E357 loc_18000E357:                          ; CODE XREF: sub_18000DF60+C4↑j
.text:000000018000E357                                         ; sub_18000DF60+143↑j
.text:000000018000E357                 call    sub_180009A70
.text:000000018000E357 ; ---------------------------------------------------------------------------
.text:000000018000E35C                 db 90h
.text:000000018000E35C ; } // starts at 18000DF60
.text:000000018000E35C sub_18000DF60   endp
.text:000000018000E35C
.text:000000018000E35D algn_18000E35D:                         ; DATA XREF: .pdata:000000018001CCA8↓o
.text:000000018000E35D                 align 20h
.text:000000018000E360
.text:000000018000E360 ; =============== S U B R O U T I N E =======================================
.text:000000018000E360
.text:000000018000E360
.text:000000018000E360 sub_18000E360   proc near               ; CODE XREF: sub_18000CFD0+418↑p
.text:000000018000E360                                         ; sub_18000CFD0+4FD↑p ...
.text:000000018000E360
.text:000000018000E360 phkResult       = qword ptr -48h
.text:000000018000E360 lpcbData        = qword ptr -40h
.text:000000018000E360 cbData          = dword ptr -38h
.text:000000018000E360 hKey            = qword ptr -30h
.text:000000018000E360 Data            = byte ptr -28h
.text:000000018000E360 var_10          = qword ptr -10h
.text:000000018000E360 var_8           = byte ptr -8
.text:000000018000E360 arg_10          = qword ptr  18h
.text:000000018000E360 arg_18          = qword ptr  20h
.text:000000018000E360
.text:000000018000E360 ; __unwind { // __GSHandlerCheck
.text:000000018000E360                 mov     [rsp+arg_10], rbx
.text:000000018000E365                 mov     [rsp+arg_18], rsi
.text:000000018000E36A                 push    rdi
.text:000000018000E36B                 sub     rsp, 60h
.text:000000018000E36F                 mov     rax, cs:__security_cookie
.text:000000018000E376                 xor     rax, rsp
.text:000000018000E379                 mov     [rsp+68h+var_10], rax
.text:000000018000E37E                 mov     rdi, rdx
.text:000000018000E381                 movzx   esi, cl
.text:000000018000E384                 mov     rcx, rdi        ; void *
.text:000000018000E387                 lea     rdx, Src        ; Src
.text:000000018000E38E                 xor     r8d, r8d        ; Size
.text:000000018000E391                 xor     bl, bl
.text:000000018000E393                 call    sub_180009910
.text:000000018000E398                 lea     rax, [rsp+68h+hKey]
.text:000000018000E39D                 mov     [rsp+68h+hKey], 0
.text:000000018000E3A6                 mov     r9d, 20019h     ; samDesired
.text:000000018000E3AC                 mov     [rsp+68h+phkResult], rax ; phkResult
.text:000000018000E3B1                 xor     r8d, r8d        ; ulOptions
.text:000000018000E3B4                 lea     rdx, SubKey     ; "SOFTWARE\\Microsoft\\Microsoft Games\\K"...
.text:000000018000E3BB                 mov     rcx, 0FFFFFFFF80000001h ; hKey
.text:000000018000E3C2                 call    cs:RegOpenKeyExA
.text:000000018000E3C8                 test    eax, eax
.text:000000018000E3CA                 jnz     short loc_18000E443
.text:000000018000E3CC                 mov     rcx, [rsp+68h+hKey] ; hKey
.text:000000018000E3D1                 lea     rax, ValueName  ; "SimConnect_Port_IPv6"
.text:000000018000E3D8                 test    sil, sil
.text:000000018000E3DB                 mov     [rsp+68h+cbData], 14h
.text:000000018000E3E3                 lea     rdx, aSimconnectPort_0 ; "SimConnect_Port_IPv4"
.text:000000018000E3EA                 cmovnz  rdx, rax        ; lpValueName
.text:000000018000E3EE                 lea     rax, [rsp+68h+cbData]
.text:000000018000E3F3                 mov     [rsp+68h+lpcbData], rax ; lpcbData
.text:000000018000E3F8                 xor     r9d, r9d        ; lpType
.text:000000018000E3FB                 lea     rax, [rsp+68h+Data]
.text:000000018000E400                 xor     r8d, r8d        ; lpReserved
.text:000000018000E403                 mov     [rsp+68h+phkResult], rax ; lpData
.text:000000018000E408                 call    cs:RegQueryValueExA
.text:000000018000E40E                 test    eax, eax
.text:000000018000E410                 jnz     short loc_18000E438
.text:000000018000E412                 lea     rax, [rsp+68h+Data]
.text:000000018000E417                 mov     r8, 0FFFFFFFFFFFFFFFFh
.text:000000018000E41E                 xchg    ax, ax
.text:000000018000E420
.text:000000018000E420 loc_18000E420:                          ; CODE XREF: sub_18000E360+C7↓j
.text:000000018000E420                 inc     r8              ; Size
.text:000000018000E423                 cmp     [rax+r8], bl
.text:000000018000E427                 jnz     short loc_18000E420
.text:000000018000E429                 lea     rdx, [rsp+68h+Data] ; Src
.text:000000018000E42E                 mov     rcx, rdi        ; void *
.text:000000018000E431                 call    sub_180009910
.text:000000018000E436                 mov     bl, 1
.text:000000018000E438
.text:000000018000E438 loc_18000E438:                          ; CODE XREF: sub_18000E360+B0↑j
.text:000000018000E438                 mov     rcx, [rsp+68h+hKey] ; hKey
.text:000000018000E43D                 call    cs:RegCloseKey
.text:000000018000E443
.text:000000018000E443 loc_18000E443:                          ; CODE XREF: sub_18000E360+6A↑j
.text:000000018000E443                 movzx   eax, bl
.text:000000018000E446                 mov     rcx, [rsp+68h+var_10]
.text:000000018000E44B                 xor     rcx, rsp        ; StackCookie
.text:000000018000E44E                 call    __security_check_cookie
.text:000000018000E453                 lea     r11, [rsp+68h+var_8]
.text:000000018000E458                 mov     rbx, [r11+20h]
.text:000000018000E45C                 mov     rsi, [r11+28h]
.text:000000018000E460                 mov     rsp, r11
.text:000000018000E463                 pop     rdi
.text:000000018000E464                 retn
.text:000000018000E464 ; } // starts at 18000E360
.text:000000018000E464 sub_18000E360   endp
.text:000000018000E464
.text:000000018000E464 ; ---------------------------------------------------------------------------
.text:000000018000E465 algn_18000E465:                         ; DATA XREF: .pdata:000000018001CCB4↓o
.text:000000018000E465                 align 10h
.text:000000018000E470
.text:000000018000E470 ; =============== S U B R O U T I N E =======================================
.text:000000018000E470
.text:000000018000E470
.text:000000018000E470 sub_18000E470   proc near               ; DATA XREF: .rdata:0000000180012778↓o
.text:000000018000E470                                         ; .pdata:000000018001CCC0↓o
.text:000000018000E470
.text:000000018000E470 arg_0           = qword ptr  8
.text:000000018000E470 arg_8           = qword ptr  10h
.text:000000018000E470
.text:000000018000E470                 mov     [rsp+arg_0], rbx
.text:000000018000E475                 push    rdi
.text:000000018000E476                 sub     rsp, 20h
.text:000000018000E47A                 mov     rdi, rcx
.text:000000018000E47D                 mov     rbx, rdx
.text:000000018000E480                 mov     ecx, 20h ; ' '  ; Size
.text:000000018000E485                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000E48A                 xor     r10d, r10d
.text:000000018000E48D                 mov     [rsp+28h+arg_8], rax
.text:000000018000E492                 mov     rdx, rax
.text:000000018000E495                 test    rax, rax
.text:000000018000E498                 jz      short loc_18000E4BE
.text:000000018000E49A                 mov     rax, [rbx+8]
.text:000000018000E49E                 mov     r9d, [rdi+258h]
.text:000000018000E4A5                 mov     r8d, [rbx+4]
.text:000000018000E4A9                 mov     [rdx+8], rax
.text:000000018000E4AD                 mov     [rdx], r10
.text:000000018000E4B0                 mov     [rdx+10h], r8d
.text:000000018000E4B4                 mov     [rdx+14h], r9d
.text:000000018000E4B8                 mov     [rdx+18h], r10d
.text:000000018000E4BC                 jmp     short loc_18000E4C1
.text:000000018000E4BE ; ---------------------------------------------------------------------------
.text:000000018000E4BE
.text:000000018000E4BE loc_18000E4BE:                          ; CODE XREF: sub_18000E470+28↑j
.text:000000018000E4BE                 mov     rdx, r10
.text:000000018000E4C1
.text:000000018000E4C1 loc_18000E4C1:                          ; CODE XREF: sub_18000E470+4C↑j
.text:000000018000E4C1                 mov     rcx, rdi
.text:000000018000E4C4                 mov     [rbx+8], r10
.text:000000018000E4C8                 mov     qword ptr [rbx], 0
.text:000000018000E4CF                 call    sub_18000E4F0
.text:000000018000E4D4                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000E4D9                 xor     eax, eax
.text:000000018000E4DB                 add     rsp, 20h
.text:000000018000E4DF                 pop     rdi
.text:000000018000E4E0                 retn
.text:000000018000E4E0 sub_18000E470   endp
.text:000000018000E4E0
.text:000000018000E4E0 ; ---------------------------------------------------------------------------
.text:000000018000E4E1 algn_18000E4E1:                         ; DATA XREF: .pdata:000000018001CCC0↓o
.text:000000018000E4E1                 align 10h
.text:000000018000E4F0
.text:000000018000E4F0 ; =============== S U B R O U T I N E =======================================
.text:000000018000E4F0
.text:000000018000E4F0
.text:000000018000E4F0 sub_18000E4F0   proc near               ; CODE XREF: sub_18000CBB0+7D↑p
.text:000000018000E4F0                                         ; sub_18000E470+5F↑p
.text:000000018000E4F0                                         ; DATA XREF: ...
.text:000000018000E4F0
.text:000000018000E4F0 arg_0           = qword ptr  8
.text:000000018000E4F0
.text:000000018000E4F0                 mov     [rsp+arg_0], rbx
.text:000000018000E4F5                 push    rdi
.text:000000018000E4F6                 sub     rsp, 20h
.text:000000018000E4FA                 mov     rbx, rcx
.text:000000018000E4FD                 mov     rdi, rdx
.text:000000018000E500                 mov     rcx, [rcx+280h] ; lpCriticalSection
.text:000000018000E507                 call    cs:EnterCriticalSection
.text:000000018000E50D                 cmp     qword ptr [rbx+288h], 0
.text:000000018000E515                 jnz     short loc_18000E520
.text:000000018000E517                 mov     [rbx+288h], rdi
.text:000000018000E51E                 jmp     short loc_18000E52A
.text:000000018000E520 ; ---------------------------------------------------------------------------
.text:000000018000E520
.text:000000018000E520 loc_18000E520:                          ; CODE XREF: sub_18000E4F0+25↑j
.text:000000018000E520                 mov     rax, [rbx+290h]
.text:000000018000E527                 mov     [rax], rdi
.text:000000018000E52A
.text:000000018000E52A loc_18000E52A:                          ; CODE XREF: sub_18000E4F0+2E↑j
.text:000000018000E52A                 mov     [rbx+290h], rdi
.text:000000018000E531                 inc     dword ptr [rbx+298h]
.text:000000018000E537                 mov     eax, [rdi+10h]
.text:000000018000E53A                 mov     rcx, [rbx+280h] ; lpCriticalSection
.text:000000018000E541                 add     [rbx+29Ch], eax
.text:000000018000E547                 call    cs:LeaveCriticalSection
.text:000000018000E54D                 mov     rcx, [rbx+2A0h] ; hWnd
.text:000000018000E554                 test    rcx, rcx
.text:000000018000E557                 jz      short loc_18000E56F
.text:000000018000E559                 mov     edx, [rbx+2A8h] ; Msg
.text:000000018000E55F                 test    edx, edx
.text:000000018000E561                 jz      short loc_18000E56F
.text:000000018000E563                 xor     r9d, r9d        ; lParam
.text:000000018000E566                 xor     r8d, r8d        ; wParam
.text:000000018000E569                 call    cs:PostMessageA
.text:000000018000E56F
.text:000000018000E56F loc_18000E56F:                          ; CODE XREF: sub_18000E4F0+67↑j
.text:000000018000E56F                                         ; sub_18000E4F0+71↑j
.text:000000018000E56F                 mov     rcx, [rbx+0A368h] ; hEvent
.text:000000018000E576                 test    rcx, rcx
.text:000000018000E579                 jz      short loc_18000E581
.text:000000018000E57B                 call    cs:SetEvent
.text:000000018000E581
.text:000000018000E581 loc_18000E581:                          ; CODE XREF: sub_18000E4F0+89↑j
.text:000000018000E581                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000E586                 add     rsp, 20h
.text:000000018000E58A                 pop     rdi
.text:000000018000E58B                 retn
.text:000000018000E58B sub_18000E4F0   endp
.text:000000018000E58B
.text:000000018000E58B ; ---------------------------------------------------------------------------
.text:000000018000E58C algn_18000E58C:                         ; DATA XREF: .pdata:000000018001CCCC↓o
.text:000000018000E58C                 align 10h
.text:000000018000E590
.text:000000018000E590 ; =============== S U B R O U T I N E =======================================
.text:000000018000E590
.text:000000018000E590
.text:000000018000E590 sub_18000E590   proc near               ; DATA XREF: .rdata:0000000180012768↓o
.text:000000018000E590                                         ; .pdata:000000018001CCD8↓o
.text:000000018000E590
.text:000000018000E590 optlen          = dword ptr -18h
.text:000000018000E590 optval          = byte ptr  8
.text:000000018000E590
.text:000000018000E590                 push    rbx
.text:000000018000E592                 sub     rsp, 30h
.text:000000018000E596                 mov     rbx, rcx
.text:000000018000E599                 call    sub_18000FEA0
.text:000000018000E59E                 cmp     byte ptr [rbx+1C4h], 0
.text:000000018000E5A5                 jz      short loc_18000E5D5
.text:000000018000E5A7                 cmp     dword ptr [rbx+24h], 0
.text:000000018000E5AB                 jnz     short loc_18000E5D5
.text:000000018000E5AD                 mov     rcx, [rbx+10h]  ; s
.text:000000018000E5B1                 lea     r9, [rsp+38h+optval] ; optval
.text:000000018000E5B6                 mov     edx, 6          ; level
.text:000000018000E5BB                 mov     dword ptr [rsp+38h+optval], 1
.text:000000018000E5C3                 mov     [rsp+38h+optlen], 4 ; optlen
.text:000000018000E5CB                 lea     r8d, [rdx-5]    ; optname
.text:000000018000E5CF                 call    cs:setsockopt
.text:000000018000E5D5
.text:000000018000E5D5 loc_18000E5D5:                          ; CODE XREF: sub_18000E590+15↑j
.text:000000018000E5D5                                         ; sub_18000E590+1B↑j
.text:000000018000E5D5                 mov     dword ptr [rbx+18h], 2
.text:000000018000E5DC                 add     rsp, 30h
.text:000000018000E5E0                 pop     rbx
.text:000000018000E5E1                 retn
.text:000000018000E5E1 sub_18000E590   endp
.text:000000018000E5E1
.text:000000018000E5E1 ; ---------------------------------------------------------------------------
.text:000000018000E5E2 algn_18000E5E2:                         ; DATA XREF: .pdata:000000018001CCD8↓o
.text:000000018000E5E2                 align 10h
.text:000000018000E5F0
.text:000000018000E5F0 ; =============== S U B R O U T I N E =======================================
.text:000000018000E5F0
.text:000000018000E5F0
.text:000000018000E5F0 _guard_check_icall_nop proc near        ; DATA XREF: .rdata:__guard_check_icall_fptr↓o
.text:000000018000E5F0                                         ; .rdata:__guard_xfg_check_icall_fptr↓o ...
.text:000000018000E5F0                 retn    0
.text:000000018000E5F0 _guard_check_icall_nop endp
.text:000000018000E5F0
.text:000000018000E5F0 ; ---------------------------------------------------------------------------
.text:000000018000E5F3                 align 20h
.text:000000018000E600
.text:000000018000E600 ; =============== S U B R O U T I N E =======================================
.text:000000018000E600
.text:000000018000E600
.text:000000018000E600 sub_18000E600   proc near               ; CODE XREF: sub_18000DA20+11A↑p
.text:000000018000E600                 cmp     dword ptr [rdx+8], 2
.text:000000018000E604                 jnz     locret_18000E6AB
.text:000000018000E60A                 cmp     r8d, 134h
.text:000000018000E611                 jnz     locret_18000E6AB
.text:000000018000E617                 cmp     dword ptr [rcx+0A388h], 0
.text:000000018000E61E                 jnz     locret_18000E6AB
.text:000000018000E624                 cmp     dword ptr [rcx+0A38Ch], 1
.text:000000018000E62B                 jnz     short locret_18000E6AB
.text:000000018000E62D                 mov     eax, [rdx+12Ch]
.text:000000018000E633                 test    eax, eax
.text:000000018000E635                 jz      short locret_18000E6AB
.text:000000018000E637                 mov     [rcx+0A388h], eax
.text:000000018000E63D                 lea     r9, [rcx+0A398h]
.text:000000018000E644                 mov     dword ptr [rcx+0A38Ch], 2
.text:000000018000E64E                 lea     edx, [r8-23h]
.text:000000018000E652                 xorps   xmm0, xmm0
.text:000000018000E655                 mov     r8d, 2002Ah
.text:000000018000E65B                 movups  xmmword ptr [r9], xmm0
.text:000000018000E65F                 movups  xmmword ptr [r9+10h], xmm0
.text:000000018000E664                 mov     dword ptr [r9], 20h ; ' '
.text:000000018000E66B                 mov     dword ptr [r9+4], 1
.text:000000018000E673                 mov     eax, [rcx+0A388h]
.text:000000018000E679                 mov     [r9+8], eax
.text:000000018000E67D                 mov     eax, [rcx+258h]
.text:000000018000E683                 mov     [r9+0Ch], eax
.text:000000018000E687                 lea     rax, sub_18000CB20
.text:000000018000E68E                 mov     [r9+10h], rax
.text:000000018000E692                 lea     rax, sub_18000CBB0
.text:000000018000E699                 mov     [r9+18h], rax
.text:000000018000E69D                 mov     rcx, [rcx+0A390h]
.text:000000018000E6A4                 jmp     cs:PostMessageA
.text:000000018000E6AB ; ---------------------------------------------------------------------------
.text:000000018000E6AB
.text:000000018000E6AB locret_18000E6AB:                       ; CODE XREF: sub_18000E600+4↑j
.text:000000018000E6AB                                         ; sub_18000E600+11↑j ...
.text:000000018000E6AB                 retn
.text:000000018000E6AB sub_18000E600   endp
.text:000000018000E6AB
.text:000000018000E6AB ; ---------------------------------------------------------------------------
.text:000000018000E6AC                 align 10h
.text:000000018000E6B0
.text:000000018000E6B0 ; =============== S U B R O U T I N E =======================================
.text:000000018000E6B0
.text:000000018000E6B0
.text:000000018000E6B0 ; __int64 __fastcall sub_18000E6B0(char *Buffer)
.text:000000018000E6B0 sub_18000E6B0   proc near               ; CODE XREF: sub_18000DF60+E5↑p
.text:000000018000E6B0                                         ; sub_18000DF60+165↑p ...
.text:000000018000E6B0
.text:000000018000E6B0 Locale          = qword ptr -38h
.text:000000018000E6B0 ArgList         = qword ptr -30h
.text:000000018000E6B0 var_28          = qword ptr -28h
.text:000000018000E6B0 var_20          = qword ptr -20h
.text:000000018000E6B0 var_18          = qword ptr -18h
.text:000000018000E6B0 arg_10          = qword ptr  18h
.text:000000018000E6B0 arg_18          = byte ptr  20h
.text:000000018000E6B0
.text:000000018000E6B0                 mov     [rsp+arg_10], r8
.text:000000018000E6B5                 mov     qword ptr [rsp+arg_18], r9
.text:000000018000E6BA                 push    rbp
.text:000000018000E6BB                 push    rdi
.text:000000018000E6BC                 sub     rsp, 48h
.text:000000018000E6C0                 lea     rax, [rdx-1]
.text:000000018000E6C4                 mov     rbp, r8
.text:000000018000E6C7                 mov     rdi, rcx
.text:000000018000E6CA                 cmp     rax, 7FFFFFFEh
.text:000000018000E6D0                 jbe     short loc_18000E6EA
.text:000000018000E6D2                 mov     eax, 80070057h
.text:000000018000E6D7                 test    rdx, rdx
.text:000000018000E6DA                 jz      loc_18000E760
.text:000000018000E6E0                 mov     byte ptr [rcx], 0
.text:000000018000E6E3                 add     rsp, 48h
.text:000000018000E6E7                 pop     rdi
.text:000000018000E6E8                 pop     rbp
.text:000000018000E6E9                 retn
.text:000000018000E6EA ; ---------------------------------------------------------------------------
.text:000000018000E6EA
.text:000000018000E6EA loc_18000E6EA:                          ; CODE XREF: sub_18000E6B0+20↑j
.text:000000018000E6EA                                         ; DATA XREF: .rdata:00000001800160E4↓o ...
.text:000000018000E6EA                 mov     [rsp+58h+var_18], rbx
.text:000000018000E6EF                 lea     rbx, [rdx-1]
.text:000000018000E6F3                 mov     [rsp+58h+var_20], rsi
.text:000000018000E6F8                 xor     esi, esi
.text:000000018000E6FA
.text:000000018000E6FA loc_18000E6FA:                          ; DATA XREF: .rdata:00000001800160F8↓o
.text:000000018000E6FA                                         ; .rdata:0000000180016108↓o ...
.text:000000018000E6FA                 mov     [rsp+58h+var_28], r14
.text:000000018000E6FF                 lea     r14, [rsp+58h+arg_18]
.text:000000018000E704                 call    sub_180002960
.text:000000018000E709                 mov     [rsp+58h+ArgList], r14 ; ArgList
.text:000000018000E70E                 mov     r9, rbp         ; Format
.text:000000018000E711                 mov     r8, rbx         ; BufferCount
.text:000000018000E714                 mov     [rsp+58h+Locale], rsi ; Locale
.text:000000018000E719                 mov     rdx, rdi        ; Buffer
.text:000000018000E71C                 mov     rcx, [rax]
.text:000000018000E71F                 or      rcx, 1          ; Options
.text:000000018000E723                 call    cs:__stdio_common_vsprintf
.text:000000018000E729                 mov     r14, [rsp+58h+var_28]
.text:000000018000E72E                 mov     ecx, 0FFFFFFFFh
.text:000000018000E733                 test    eax, eax
.text:000000018000E735                 cmovs   eax, ecx
.text:000000018000E738                 test    eax, eax
.text:000000018000E73A                 js      short loc_18000E74B
.text:000000018000E73C
.text:000000018000E73C loc_18000E73C:                          ; DATA XREF: .pdata:000000018001CCFC↓o
.text:000000018000E73C                                         ; .pdata:000000018001CD08↓o
.text:000000018000E73C                 cdqe
.text:000000018000E73E                 cmp     rax, rbx
.text:000000018000E741                 ja      short loc_18000E74B
.text:000000018000E743                 jnz     short loc_18000E754
.text:000000018000E745                 mov     [rbx+rdi], sil
.text:000000018000E749                 jmp     short loc_18000E754
.text:000000018000E74B ; ---------------------------------------------------------------------------
.text:000000018000E74B
.text:000000018000E74B loc_18000E74B:                          ; CODE XREF: sub_18000E6B0+8A↑j
.text:000000018000E74B                                         ; sub_18000E6B0+91↑j
.text:000000018000E74B                 mov     [rbx+rdi], sil
.text:000000018000E74F                 mov     esi, 8007007Ah
.text:000000018000E754
.text:000000018000E754 loc_18000E754:                          ; CODE XREF: sub_18000E6B0+93↑j
.text:000000018000E754                                         ; sub_18000E6B0+99↑j
.text:000000018000E754                 mov     rbx, [rsp+58h+var_18]
.text:000000018000E759                 mov     eax, esi
.text:000000018000E75B                 mov     rsi, [rsp+58h+var_20]
.text:000000018000E760
.text:000000018000E760 loc_18000E760:                          ; CODE XREF: sub_18000E6B0+2A↑j
.text:000000018000E760                                         ; DATA XREF: .pdata:000000018001CD08↓o ...
.text:000000018000E760                 add     rsp, 48h
.text:000000018000E764                 pop     rdi
.text:000000018000E765                 pop     rbp
.text:000000018000E766                 retn
.text:000000018000E766 sub_18000E6B0   endp
.text:000000018000E766
.text:000000018000E766 ; ---------------------------------------------------------------------------
.text:000000018000E767 algn_18000E767:                         ; DATA XREF: .pdata:000000018001CD14↓o
.text:000000018000E767                 align 10h
.text:000000018000E770
.text:000000018000E770 ; =============== S U B R O U T I N E =======================================
.text:000000018000E770
.text:000000018000E770
.text:000000018000E770 sub_18000E770   proc near               ; CODE XREF: sub_18000CFD0:loc_18000D4DD↑p
.text:000000018000E770                                         ; sub_18000CFD0:loc_18000D6F5↑p
.text:000000018000E770                                         ; DATA XREF: ...
.text:000000018000E770
.text:000000018000E770 WSAData         = WSAData ptr -1B8h
.text:000000018000E770 var_18          = qword ptr -18h
.text:000000018000E770
.text:000000018000E770 ; __unwind { // __GSHandlerCheck
.text:000000018000E770                 sub     rsp, 1D8h
.text:000000018000E777                 mov     rax, cs:__security_cookie
.text:000000018000E77E                 xor     rax, rsp
.text:000000018000E781                 mov     [rsp+1D8h+var_18], rax
.text:000000018000E789                 movzx   eax, cs:byte_1800194AC
.text:000000018000E790                 test    al, al
.text:000000018000E792                 jnz     short loc_18000E7CF
.text:000000018000E794                 xor     edx, edx        ; Val
.text:000000018000E796                 lea     rcx, [rsp+1D8h+WSAData] ; void *
.text:000000018000E79B                 mov     r8d, 198h       ; Size
.text:000000018000E7A1                 call    memset
.text:000000018000E7A6                 lea     rdx, [rsp+1D8h+WSAData] ; lpWSAData
.text:000000018000E7AB                 mov     cx, 2           ; wVersionRequested
.text:000000018000E7AF                 call    cs:WSAStartup
.text:000000018000E7B5                 movzx   ecx, cs:byte_1800194AC
.text:000000018000E7BC                 mov     edx, 1
.text:000000018000E7C1                 test    eax, eax
.text:000000018000E7C3                 cmovz   ecx, edx
.text:000000018000E7C6                 mov     cs:byte_1800194AC, cl
.text:000000018000E7CC                 movzx   eax, cl
.text:000000018000E7CF
.text:000000018000E7CF loc_18000E7CF:                          ; CODE XREF: sub_18000E770+22↑j
.text:000000018000E7CF                 mov     rcx, [rsp+1D8h+var_18]
.text:000000018000E7D7                 xor     rcx, rsp        ; StackCookie
.text:000000018000E7DA                 call    __security_check_cookie
.text:000000018000E7DF                 add     rsp, 1D8h
.text:000000018000E7E6                 retn
.text:000000018000E7E6 ; } // starts at 18000E770
.text:000000018000E7E6 sub_18000E770   endp
.text:000000018000E7E6
.text:000000018000E7E6 ; ---------------------------------------------------------------------------
.text:000000018000E7E7 algn_18000E7E7:                         ; DATA XREF: .pdata:000000018001CD20↓o
.text:000000018000E7E7                 align 10h
.text:000000018000E7F0 ; [00000011 BYTES: COLLAPSED FUNCTION std::vector<void *,std::allocator<void *>>::_Xlen(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018000E801 algn_18000E801:                         ; DATA XREF: .pdata:000000018001CD2C↓o
.text:000000018000E801                 align 10h
.text:000000018000E810
.text:000000018000E810 ; =============== S U B R O U T I N E =======================================
.text:000000018000E810
.text:000000018000E810
.text:000000018000E810 sub_18000E810   proc near               ; CODE XREF: sub_18000C5B0+51F9↓p
.text:000000018000E810                                         ; DATA XREF: .pdata:000000018001CD38↓o
.text:000000018000E810                 sub     rsp, 28h
.text:000000018000E814                 shl     r8, 4
.text:000000018000E818                 mov     rax, rdx
.text:000000018000E81B                 cmp     r8, 1000h
.text:000000018000E822                 jb      short loc_18000E83C
.text:000000018000E824                 mov     rcx, [rdx-8]
.text:000000018000E828                 add     r8, 27h ; '''
.text:000000018000E82C                 sub     rax, rcx
.text:000000018000E82F                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000E833                 cmp     rax, 1Fh
.text:000000018000E837                 ja      short loc_18000E84B
.text:000000018000E839                 mov     rax, rcx
.text:000000018000E83C
.text:000000018000E83C loc_18000E83C:                          ; CODE XREF: sub_18000E810+12↑j
.text:000000018000E83C                 mov     rdx, r8
.text:000000018000E83F                 mov     rcx, rax        ; Block
.text:000000018000E842                 add     rsp, 28h
.text:000000018000E846                 jmp     j_j_free
.text:000000018000E84B ; ---------------------------------------------------------------------------
.text:000000018000E84B
.text:000000018000E84B loc_18000E84B:                          ; CODE XREF: sub_18000E810+27↑j
.text:000000018000E84B                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000E84B ; ---------------------------------------------------------------------------
.text:000000018000E851                 db 0CCh
.text:000000018000E851 sub_18000E810   endp
.text:000000018000E851
.text:000000018000E852 algn_18000E852:                         ; DATA XREF: .pdata:000000018001CD38↓o
.text:000000018000E852                 align 20h
.text:000000018000E860
.text:000000018000E860 ; =============== S U B R O U T I N E =======================================
.text:000000018000E860
.text:000000018000E860 ; Attributes: bp-based frame fpd=1E0h
.text:000000018000E860
.text:000000018000E860 sub_18000E860   proc near               ; CODE XREF: sub_18000CFD0+2F5↑p
.text:000000018000E860                                         ; DATA XREF: .rdata:0000000180016218↓o ...
.text:000000018000E860
.text:000000018000E860 pszPath         = qword ptr -2C0h
.text:000000018000E860 var_2B8         = qword ptr -2B8h
.text:000000018000E860 var_2B0         = qword ptr -2B0h
.text:000000018000E860 FileName        = byte ptr -2A0h
.text:000000018000E860 var_290         = qword ptr -290h
.text:000000018000E860 var_288         = qword ptr -288h
.text:000000018000E860 pszDest         = byte ptr -270h
.text:000000018000E860 pszDir          = byte ptr -160h
.text:000000018000E860 var_50          = qword ptr -50h
.text:000000018000E860 var_38          = qword ptr -38h
.text:000000018000E860 arg_20          = qword ptr  30h
.text:000000018000E860 arg_28          = qword ptr  38h
.text:000000018000E860
.text:000000018000E860 ; __unwind { // __GSHandlerCheck
.text:000000018000E860                 push    rbp
.text:000000018000E862                 push    rsi
.text:000000018000E863                 push    rdi
.text:000000018000E864                 push    r12
.text:000000018000E866                 push    r13
.text:000000018000E868                 push    r14
.text:000000018000E86A                 push    r15
.text:000000018000E86C                 lea     rbp, [rsp-1B0h]
.text:000000018000E874                 sub     rsp, 2B0h
.text:000000018000E87B                 mov     rax, cs:__security_cookie
.text:000000018000E882                 xor     rax, rsp
.text:000000018000E885                 mov     [rbp+1E0h+var_50], rax
.text:000000018000E88C                 mov     r12, [rbp+1E0h+arg_20]
.text:000000018000E893                 mov     r14, r8
.text:000000018000E896                 mov     r13, [rbp+1E0h+arg_28]
.text:000000018000E89D                 mov     rsi, rdx
.text:000000018000E8A0                 mov     edi, ecx
.text:000000018000E8A2                 mov     dword ptr [rdx], 1
.text:000000018000E8A8                 mov     rcx, r14        ; void *
.text:000000018000E8AB                 lea     rdx, Src        ; Src
.text:000000018000E8B2                 xor     r8d, r8d        ; Size
.text:000000018000E8B5                 mov     r15, r9
.text:000000018000E8B8                 call    sub_180009910
.text:000000018000E8BD                 xor     r8d, r8d        ; Size
.text:000000018000E8C0                 lea     rdx, Src        ; Src
.text:000000018000E8C7                 mov     rcx, r15        ; void *
.text:000000018000E8CA                 call    sub_180009910
.text:000000018000E8CF                 mov     dword ptr [r12], 0A080h
.text:000000018000E8D7                 mov     byte ptr [r13+0], 0
.text:000000018000E8DC                 cmp     edi, 0FFFFFFFFh
.text:000000018000E8DF                 jz      loc_18000EAC4
.text:000000018000E8E5                 xor     r9d, r9d        ; dwFlags
.text:000000018000E8E5 ; } // starts at 18000E860
.text:000000018000E8E8
.text:000000018000E8E8 loc_18000E8E8:                          ; DATA XREF: .rdata:0000000180016218↓o
.text:000000018000E8E8                                         ; .rdata:0000000180016228↓o ...
.text:000000018000E8E8 ; __unwind { // __GSHandlerCheck
.text:000000018000E8E8                 mov     [rsp+2E0h+var_38], rbx
.text:000000018000E8F0                 lea     rax, [rbp+1E0h+pszDir]
.text:000000018000E8F7                 xor     r8d, r8d        ; hToken
.text:000000018000E8FA                 xor     ecx, ecx        ; hwnd
.text:000000018000E8FC                 mov     [rsp+2E0h+pszPath], rax ; pszPath
.text:000000018000E901                 lea     edx, [r9+2Eh]   ; csidl
.text:000000018000E905                 call    cs:SHGetFolderPathA
.text:000000018000E90B                 mov     rbx, 0FFFFFFFFFFFFFFFFh
.text:000000018000E912                 test    eax, eax
.text:000000018000E914                 js      short loc_18000E98D
.text:000000018000E916                 lea     r8, pszFile     ; "SimConnect.cfg"
.text:000000018000E91D                 lea     rdx, [rbp+1E0h+pszDir] ; pszDir
.text:000000018000E924                 lea     rcx, [rsp+2E0h+pszDest] ; pszDest
.text:000000018000E929                 call    cs:PathCombineA
.text:000000018000E92F                 test    rax, rax
.text:000000018000E932                 jz      short loc_18000E98D
.text:000000018000E934                 mov     [rsp+2E0h+var_290], 0
.text:000000018000E93D                 lea     rax, [rsp+2E0h+pszDest]
.text:000000018000E942                 mov     [rsp+2E0h+var_288], 0Fh
.text:000000018000E94B                 mov     r8, rbx
.text:000000018000E94E                 mov     [rsp+2E0h+FileName], 0
.text:000000018000E953
.text:000000018000E953 loc_18000E953:                          ; CODE XREF: sub_18000E860+FB↓j
.text:000000018000E953                 inc     r8              ; Size
.text:000000018000E956                 cmp     byte ptr [rax+r8], 0
.text:000000018000E95B                 jnz     short loc_18000E953
.text:000000018000E95D                 lea     rdx, [rsp+2E0h+pszDest] ; Src
.text:000000018000E962                 lea     rcx, [rsp+2E0h+FileName] ; void *
.text:000000018000E967                 call    sub_180009910
.text:000000018000E96C                 mov     [rsp+2E0h+var_2B0], r13 ; __int64
.text:000000018000E971                 lea     rcx, [rsp+2E0h+FileName] ; lpFileName
.text:000000018000E976                 mov     [rsp+2E0h+var_2B8], r12 ; __int64
.text:000000018000E97B                 mov     r9, r14
.text:000000018000E97E                 mov     r8, rsi
.text:000000018000E981                 mov     [rsp+2E0h+pszPath], r15 ; void *
.text:000000018000E986                 mov     edx, edi
.text:000000018000E988                 call    sub_18000EAF0
.text:000000018000E98D
.text:000000018000E98D loc_18000E98D:                          ; CODE XREF: sub_18000E860+B4↑j
.text:000000018000E98D                                         ; sub_18000E860+D2↑j
.text:000000018000E98D                 xor     r9d, r9d        ; dwFlags
.text:000000018000E990                 lea     rax, [rbp+1E0h+pszDir]
.text:000000018000E997                 xor     r8d, r8d        ; hToken
.text:000000018000E99A                 mov     [rsp+2E0h+pszPath], rax ; pszPath
.text:000000018000E99F                 xor     ecx, ecx        ; hwnd
.text:000000018000E9A1                 lea     edx, [r9+5]     ; csidl
.text:000000018000E9A5                 call    cs:SHGetFolderPathA
.text:000000018000E9AB                 test    eax, eax
.text:000000018000E9AD                 js      short loc_18000EA2A
.text:000000018000E9AF                 lea     r8, pszFile     ; "SimConnect.cfg"
.text:000000018000E9B6                 lea     rdx, [rbp+1E0h+pszDir] ; pszDir
.text:000000018000E9BD                 lea     rcx, [rsp+2E0h+pszDest] ; pszDest
.text:000000018000E9C2                 call    cs:PathCombineA
.text:000000018000E9C8                 test    rax, rax
.text:000000018000E9CB                 jz      short loc_18000EA2A
.text:000000018000E9CD                 mov     [rsp+2E0h+var_290], 0
.text:000000018000E9D6                 lea     rax, [rsp+2E0h+pszDest]
.text:000000018000E9DB                 mov     [rsp+2E0h+var_288], 0Fh
.text:000000018000E9E4                 mov     r8, rbx
.text:000000018000E9E7                 mov     [rsp+2E0h+FileName], 0
.text:000000018000E9EC                 nop     dword ptr [rax+00h]
.text:000000018000E9F0
.text:000000018000E9F0 loc_18000E9F0:                          ; CODE XREF: sub_18000E860+198↓j
.text:000000018000E9F0                 inc     r8              ; Size
.text:000000018000E9F3                 cmp     byte ptr [rax+r8], 0
.text:000000018000E9F8                 jnz     short loc_18000E9F0
.text:000000018000E9FA                 lea     rdx, [rsp+2E0h+pszDest] ; Src
.text:000000018000E9FF                 lea     rcx, [rsp+2E0h+FileName] ; void *
.text:000000018000EA04                 call    sub_180009910
.text:000000018000EA09                 mov     [rsp+2E0h+var_2B0], r13 ; __int64
.text:000000018000EA0E                 lea     rcx, [rsp+2E0h+FileName] ; lpFileName
.text:000000018000EA13                 mov     [rsp+2E0h+var_2B8], r12 ; __int64
.text:000000018000EA18                 mov     r9, r14
.text:000000018000EA1B                 mov     r8, rsi
.text:000000018000EA1E                 mov     [rsp+2E0h+pszPath], r15 ; void *
.text:000000018000EA23                 mov     edx, edi
.text:000000018000EA25                 call    sub_18000EAF0
.text:000000018000EA2A
.text:000000018000EA2A loc_18000EA2A:                          ; CODE XREF: sub_18000E860+14D↑j
.text:000000018000EA2A                                         ; sub_18000E860+16B↑j
.text:000000018000EA2A                 lea     rdx, [rbp+1E0h+pszDir] ; lpBuffer
.text:000000018000EA31                 mov     ecx, 104h       ; nBufferLength
.text:000000018000EA36                 call    cs:GetCurrentDirectoryA
.text:000000018000EA3C                 test    eax, eax
.text:000000018000EA3E                 jz      short loc_18000EABC
.text:000000018000EA40                 lea     r8, pszFile     ; "SimConnect.cfg"
.text:000000018000EA47                 lea     rdx, [rbp+1E0h+pszDir] ; pszDir
.text:000000018000EA4E                 lea     rcx, [rsp+2E0h+pszDest] ; pszDest
.text:000000018000EA53                 call    cs:PathCombineA
.text:000000018000EA59                 test    rax, rax
.text:000000018000EA5C                 jz      short loc_18000EABC
.text:000000018000EA5E                 mov     [rsp+2E0h+var_290], 0
.text:000000018000EA67                 lea     rax, [rsp+2E0h+pszDest]
.text:000000018000EA6C                 mov     [rsp+2E0h+var_288], 0Fh
.text:000000018000EA75                 mov     [rsp+2E0h+FileName], 0
.text:000000018000EA7A                 nop     word ptr [rax+rax+00h]
.text:000000018000EA80
.text:000000018000EA80 loc_18000EA80:                          ; CODE XREF: sub_18000E860+227↓j
.text:000000018000EA80                 inc     rbx
.text:000000018000EA83                 cmp     byte ptr [rax+rbx], 0
.text:000000018000EA87                 jnz     short loc_18000EA80
.text:000000018000EA89                 mov     r8, rbx         ; Size
.text:000000018000EA8C                 lea     rdx, [rsp+2E0h+pszDest] ; Src
.text:000000018000EA91                 lea     rcx, [rsp+2E0h+FileName] ; void *
.text:000000018000EA96                 call    sub_180009910
.text:000000018000EA9B                 mov     [rsp+2E0h+var_2B0], r13 ; __int64
.text:000000018000EAA0                 lea     rcx, [rsp+2E0h+FileName] ; lpFileName
.text:000000018000EAA5                 mov     [rsp+2E0h+var_2B8], r12 ; __int64
.text:000000018000EAAA                 mov     r9, r14
.text:000000018000EAAD                 mov     r8, rsi
.text:000000018000EAB0                 mov     [rsp+2E0h+pszPath], r15 ; void *
.text:000000018000EAB5                 mov     edx, edi
.text:000000018000EAB7                 call    sub_18000EAF0
.text:000000018000EABC
.text:000000018000EABC loc_18000EABC:                          ; CODE XREF: sub_18000E860+1DE↑j
.text:000000018000EABC                                         ; sub_18000E860+1FC↑j
.text:000000018000EABC                 mov     rbx, [rsp+2E0h+var_38]
.text:000000018000EABC ; } // starts at 18000E8E8
.text:000000018000EAC4
.text:000000018000EAC4 loc_18000EAC4:                          ; CODE XREF: sub_18000E860+7F↑j
.text:000000018000EAC4                                         ; DATA XREF: .pdata:000000018001CD50↓o ...
.text:000000018000EAC4 ; __unwind { // __GSHandlerCheck
.text:000000018000EAC4                 mov     rcx, [rbp+1E0h+var_50]
.text:000000018000EACB                 xor     rcx, rsp        ; StackCookie
.text:000000018000EACE                 call    __security_check_cookie
.text:000000018000EAD3                 add     rsp, 2B0h
.text:000000018000EADA                 pop     r15
.text:000000018000EADC                 pop     r14
.text:000000018000EADE                 pop     r13
.text:000000018000EAE0                 pop     r12
.text:000000018000EAE2                 pop     rdi
.text:000000018000EAE3                 pop     rsi
.text:000000018000EAE4                 pop     rbp
.text:000000018000EAE5                 retn
.text:000000018000EAE5 ; } // starts at 18000EAC4
.text:000000018000EAE5 sub_18000E860   endp
.text:000000018000EAE5
.text:000000018000EAE5 ; ---------------------------------------------------------------------------
.text:000000018000EAE6 algn_18000EAE6:                         ; DATA XREF: .pdata:000000018001CD5C↓o
.text:000000018000EAE6                 align 10h
.text:000000018000EAF0
.text:000000018000EAF0 ; =============== S U B R O U T I N E =======================================
.text:000000018000EAF0
.text:000000018000EAF0 ; Attributes: bp-based frame fpd=7D0h
.text:000000018000EAF0
.text:000000018000EAF0 ; __int64 __usercall sub_18000EAF0@<rax>(LPCSTR lpFileName@<rcx>, void *, __int64, __int64)
.text:000000018000EAF0 sub_18000EAF0   proc near               ; CODE XREF: sub_18000E860+128↑p
.text:000000018000EAF0                                         ; sub_18000E860+1C5↑p ...
.text:000000018000EAF0
.text:000000018000EAF0 nSize           = dword ptr -8B0h
.text:000000018000EAF0 lpFileName      = qword ptr -8A8h
.text:000000018000EAF0 var_898         = qword ptr -898h
.text:000000018000EAF0 lpString1       = qword ptr -890h
.text:000000018000EAF0 Size            = qword ptr -880h
.text:000000018000EAF0 var_878         = qword ptr -878h
.text:000000018000EAF0 AppName         = byte ptr -870h
.text:000000018000EAF0 ReturnedString  = byte ptr -850h
.text:000000018000EAF0 var_50          = qword ptr -50h
.text:000000018000EAF0 arg_20          = qword ptr  30h
.text:000000018000EAF0 arg_28          = qword ptr  38h
.text:000000018000EAF0 arg_30          = qword ptr  40h
.text:000000018000EAF0
.text:000000018000EAF0 ; __unwind { // __GSHandlerCheck_EH4
.text:000000018000EAF0                 push    rbp
.text:000000018000EAF2                 push    rbx
.text:000000018000EAF3                 push    rsi
.text:000000018000EAF4                 push    rdi
.text:000000018000EAF5                 push    r12
.text:000000018000EAF7                 push    r13
.text:000000018000EAF9                 push    r14
.text:000000018000EAFB                 push    r15
.text:000000018000EAFD                 lea     rbp, [rsp-798h]
.text:000000018000EB05                 sub     rsp, 898h
.text:000000018000EB0C                 mov     rax, cs:__security_cookie
.text:000000018000EB13                 xor     rax, rsp
.text:000000018000EB16                 mov     [rbp+7D0h+var_50], rax
.text:000000018000EB1D                 mov     r15, r9
.text:000000018000EB20                 mov     r14, r8
.text:000000018000EB23                 mov     rbx, rcx
.text:000000018000EB26                 mov     [rsp+8D0h+var_898], rcx
.text:000000018000EB2B                 mov     rsi, [rbp+7D0h+arg_20]
.text:000000018000EB32                 mov     r12, [rbp+7D0h+arg_28]
.text:000000018000EB39                 mov     r13, [rbp+7D0h+arg_30]
.text:000000018000EB40                 mov     [rsp+8D0h+Size], 0
.text:000000018000EB49                 mov     [rsp+8D0h+var_878], 0Fh
.text:000000018000EB52                 mov     byte ptr [rsp+8D0h+lpString1], 0
.text:000000018000EB57                 lea     rcx, [rsp+8D0h+AppName] ; Buffer
.text:000000018000EB5C                 test    edx, edx
.text:000000018000EB5E                 jnz     short loc_18000EBA4
.text:000000018000EB60                 mov     edx, 1Ah
.text:000000018000EB65                 lea     r8, aSimconnect ; "SimConnect"
.text:000000018000EB6C                 lea     rax, [rsp+8D0h+AppName]
.text:000000018000EB71                 sub     r8, rax
.text:000000018000EB74
.text:000000018000EB74 loc_18000EB74:                          ; CODE XREF: sub_18000EAF0+A2↓j
.text:000000018000EB74                 lea     rax, [rdx+7FFFFFE4h]
.text:000000018000EB7B                 test    rax, rax
.text:000000018000EB7E                 jz      short loc_18000EB94
.text:000000018000EB80                 movzx   eax, byte ptr [r8+rcx]
.text:000000018000EB85                 test    al, al
.text:000000018000EB87                 jz      short loc_18000EB94
.text:000000018000EB89                 mov     [rcx], al
.text:000000018000EB8B                 inc     rcx
.text:000000018000EB8E                 sub     rdx, 1
.text:000000018000EB92                 jnz     short loc_18000EB74
.text:000000018000EB94
.text:000000018000EB94 loc_18000EB94:                          ; CODE XREF: sub_18000EAF0+8E↑j
.text:000000018000EB94                                         ; sub_18000EAF0+97↑j
.text:000000018000EB94                 lea     rax, [rcx-1]
.text:000000018000EB98                 test    rdx, rdx
.text:000000018000EB9B                 cmovnz  rax, rcx
.text:000000018000EB9F                 mov     byte ptr [rax], 0
.text:000000018000EBA2                 jmp     short loc_18000EBB8
.text:000000018000EBA4 ; ---------------------------------------------------------------------------
.text:000000018000EBA4
.text:000000018000EBA4 loc_18000EBA4:                          ; CODE XREF: sub_18000EAF0+6E↑j
.text:000000018000EBA4                 mov     r9d, edx
.text:000000018000EBA7                 lea     r8, aSimconnectU ; "SimConnect.%u"
.text:000000018000EBAE                 mov     edx, 1Ah
.text:000000018000EBB3                 call    sub_18000E6B0
.text:000000018000EBB8
.text:000000018000EBB8 loc_18000EBB8:                          ; CODE XREF: sub_18000EAF0+B2↑j
.text:000000018000EBB8                 mov     rax, rbx
.text:000000018000EBBB                 cmp     qword ptr [rbx+18h], 10h
.text:000000018000EBC0                 jb      short loc_18000EBC5
.text:000000018000EBC2                 mov     rax, [rbx]
.text:000000018000EBC5
.text:000000018000EBC5 loc_18000EBC5:                          ; CODE XREF: sub_18000EAF0+D0↑j
.text:000000018000EBC5                 mov     [rsp+8D0h+lpFileName], rax ; lpFileName
.text:000000018000EBCA                 mov     [rsp+8D0h+nSize], 800h ; nSize
.text:000000018000EBD2                 lea     r9, [rbp+7D0h+ReturnedString] ; lpReturnedString
.text:000000018000EBD6                 lea     r8, Src         ; lpDefault
.text:000000018000EBDD                 lea     rdx, KeyName    ; "Protocol"
.text:000000018000EBE4                 lea     rcx, [rsp+8D0h+AppName] ; lpAppName
.text:000000018000EBE9                 call    cs:GetPrivateProfileStringA
.text:000000018000EBEF                 lea     rax, [rbp+7D0h+ReturnedString]
.text:000000018000EBF3                 mov     rdi, 0FFFFFFFFFFFFFFFFh
.text:000000018000EBFA                 mov     r8, rdi
.text:000000018000EBFD                 nop     dword ptr [rax]
.text:000000018000EC00
.text:000000018000EC00 loc_18000EC00:                          ; CODE XREF: sub_18000EAF0+118↓j
.text:000000018000EC00                 inc     r8              ; Size
.text:000000018000EC03                 cmp     byte ptr [rax+r8], 0
.text:000000018000EC08                 jnz     short loc_18000EC00
.text:000000018000EC0A                 lea     rdx, [rbp+7D0h+ReturnedString] ; Src
.text:000000018000EC0E                 lea     rcx, [rsp+8D0h+lpString1] ; void *
.text:000000018000EC13                 call    sub_180009910
.text:000000018000EC18                 lea     rcx, [rsp+8D0h+lpString1]
.text:000000018000EC1D                 cmp     [rsp+8D0h+var_878], 10h
.text:000000018000EC23                 cmovnb  rcx, [rsp+8D0h+lpString1] ; lpString1
.text:000000018000EC29                 lea     rdx, String2    ; "Auto"
.text:000000018000EC30                 call    cs:lstrcmpiA
.text:000000018000EC36                 test    eax, eax
.text:000000018000EC38                 jz      loc_18000ECD8
.text:000000018000EC3E                 lea     rcx, [rsp+8D0h+lpString1]
.text:000000018000EC43                 cmp     [rsp+8D0h+var_878], 10h
.text:000000018000EC49                 cmovnb  rcx, [rsp+8D0h+lpString1] ; lpString1
.text:000000018000EC4F                 lea     rdx, aIpv4      ; "IPv4"
.text:000000018000EC56                 call    cs:lstrcmpiA
.text:000000018000EC5C                 test    eax, eax
.text:000000018000EC5E                 jnz     short loc_18000EC7A
.text:000000018000EC60                 mov     dword ptr [r14], 2
.text:000000018000EC67                 cmp     qword ptr [rsi+10h], 0
.text:000000018000EC6C                 jnz     short loc_18000ECDF
.text:000000018000EC6E                 mov     rdx, rsi
.text:000000018000EC71                 xor     ecx, ecx
.text:000000018000EC73                 call    sub_18000E360
.text:000000018000EC78                 jmp     short loc_18000ECDF
.text:000000018000EC7A ; ---------------------------------------------------------------------------
.text:000000018000EC7A
.text:000000018000EC7A loc_18000EC7A:                          ; CODE XREF: sub_18000EAF0+16E↑j
.text:000000018000EC7A                 lea     rcx, [rsp+8D0h+lpString1]
.text:000000018000EC7F                 cmp     [rsp+8D0h+var_878], 10h
.text:000000018000EC85                 cmovnb  rcx, [rsp+8D0h+lpString1] ; lpString1
.text:000000018000EC8B                 lea     rdx, aIpv6      ; "IPv6"
.text:000000018000EC92                 call    cs:lstrcmpiA
.text:000000018000EC98                 test    eax, eax
.text:000000018000EC9A                 jnz     short loc_18000ECB6
.text:000000018000EC9C                 mov     dword ptr [r14], 17h
.text:000000018000ECA3                 cmp     qword ptr [rsi+10h], 0
.text:000000018000ECA8                 jnz     short loc_18000ECDF
.text:000000018000ECAA                 mov     rdx, rsi
.text:000000018000ECAD                 mov     cl, 1
.text:000000018000ECAF                 call    sub_18000E360
.text:000000018000ECB4                 jmp     short loc_18000ECDF
.text:000000018000ECB6 ; ---------------------------------------------------------------------------
.text:000000018000ECB6
.text:000000018000ECB6 loc_18000ECB6:                          ; CODE XREF: sub_18000EAF0+1AA↑j
.text:000000018000ECB6                 lea     rcx, [rsp+8D0h+lpString1]
.text:000000018000ECBB                 cmp     [rsp+8D0h+var_878], 10h
.text:000000018000ECC1                 cmovnb  rcx, [rsp+8D0h+lpString1] ; lpString1
.text:000000018000ECC7                 lea     rdx, aPipe      ; "Pipe"
.text:000000018000ECCE                 call    cs:lstrcmpiA
.text:000000018000ECD4                 test    eax, eax
.text:000000018000ECD6                 jnz     short loc_18000ECDF
.text:000000018000ECD8
.text:000000018000ECD8 loc_18000ECD8:                          ; CODE XREF: sub_18000EAF0+148↑j
.text:000000018000ECD8                 mov     dword ptr [r14], 1
.text:000000018000ECDF
.text:000000018000ECDF loc_18000ECDF:                          ; CODE XREF: sub_18000EAF0+17C↑j
.text:000000018000ECDF                                         ; sub_18000EAF0+188↑j ...
.text:000000018000ECDF                 mov     rax, rbx
.text:000000018000ECE2                 cmp     qword ptr [rbx+18h], 10h
.text:000000018000ECE7                 jb      short loc_18000ECEC
.text:000000018000ECE9                 mov     rax, [rbx]
.text:000000018000ECEC
.text:000000018000ECEC loc_18000ECEC:                          ; CODE XREF: sub_18000EAF0+1F7↑j
.text:000000018000ECEC                 mov     [rsp+8D0h+lpFileName], rax ; lpFileName
.text:000000018000ECF1                 mov     [rsp+8D0h+nSize], 800h ; nSize
.text:000000018000ECF9                 lea     r9, [rbp+7D0h+ReturnedString] ; lpReturnedString
.text:000000018000ECFD                 lea     r8, Src         ; lpDefault
.text:000000018000ED04                 lea     rdx, aAddress   ; "Address"
.text:000000018000ED0B                 lea     rcx, [rsp+8D0h+AppName] ; lpAppName
.text:000000018000ED10                 call    cs:GetPrivateProfileStringA
.text:000000018000ED16                 lea     rax, [rbp+7D0h+ReturnedString]
.text:000000018000ED1A                 mov     r8, rdi
.text:000000018000ED1D                 nop     dword ptr [rax]
.text:000000018000ED20
.text:000000018000ED20 loc_18000ED20:                          ; CODE XREF: sub_18000EAF0+238↓j
.text:000000018000ED20                 inc     r8              ; Size
.text:000000018000ED23                 cmp     byte ptr [rax+r8], 0
.text:000000018000ED28                 jnz     short loc_18000ED20
.text:000000018000ED2A                 lea     rdx, [rbp+7D0h+ReturnedString] ; Src
.text:000000018000ED2E                 lea     rcx, [rsp+8D0h+lpString1] ; void *
.text:000000018000ED33                 call    sub_180009910
.text:000000018000ED38                 mov     r9, [rsp+8D0h+lpString1]
.text:000000018000ED3D                 mov     r10, [rsp+8D0h+var_878]
.text:000000018000ED42                 mov     r8, [rsp+8D0h+Size] ; Size
.text:000000018000ED47                 test    r8, r8
.text:000000018000ED4A                 jz      short loc_18000ED6B
.text:000000018000ED4C                 lea     rax, [rsp+8D0h+lpString1]
.text:000000018000ED51                 cmp     r15, rax
.text:000000018000ED54                 jz      short loc_18000ED6B
.text:000000018000ED56                 lea     rdx, [rsp+8D0h+lpString1]
.text:000000018000ED5B                 cmp     r10, 10h
.text:000000018000ED5F                 cmovnb  rdx, r9         ; Src
.text:000000018000ED63                 mov     rcx, r15        ; void *
.text:000000018000ED66                 call    sub_180009910
.text:000000018000ED6B
.text:000000018000ED6B loc_18000ED6B:                          ; CODE XREF: sub_18000EAF0+25A↑j
.text:000000018000ED6B                                         ; sub_18000EAF0+264↑j
.text:000000018000ED6B                 mov     rax, rbx
.text:000000018000ED6E                 cmp     qword ptr [rbx+18h], 10h
.text:000000018000ED73                 jb      short loc_18000ED78
.text:000000018000ED75                 mov     rax, [rbx]
.text:000000018000ED78
.text:000000018000ED78 loc_18000ED78:                          ; CODE XREF: sub_18000EAF0+283↑j
.text:000000018000ED78                 mov     [rsp+8D0h+lpFileName], rax ; lpFileName
.text:000000018000ED7D                 mov     [rsp+8D0h+nSize], 800h ; nSize
.text:000000018000ED85                 lea     r9, [rbp+7D0h+ReturnedString] ; lpReturnedString
.text:000000018000ED89                 lea     r8, Src         ; lpDefault
.text:000000018000ED90                 lea     rdx, aPort      ; "Port"
.text:000000018000ED97                 lea     rcx, [rsp+8D0h+AppName] ; lpAppName
.text:000000018000ED9C                 call    cs:GetPrivateProfileStringA
.text:000000018000EDA2                 lea     rax, [rbp+7D0h+ReturnedString]
.text:000000018000EDA6                 mov     r8, rdi
.text:000000018000EDA9                 nop     dword ptr [rax+00000000h]
.text:000000018000EDB0
.text:000000018000EDB0 loc_18000EDB0:                          ; CODE XREF: sub_18000EAF0+2C8↓j
.text:000000018000EDB0                 inc     r8              ; Size
.text:000000018000EDB3                 cmp     byte ptr [rax+r8], 0
.text:000000018000EDB8                 jnz     short loc_18000EDB0
.text:000000018000EDBA                 lea     rdx, [rbp+7D0h+ReturnedString] ; Src
.text:000000018000EDBE                 lea     rcx, [rsp+8D0h+lpString1] ; void *
.text:000000018000EDC3                 call    sub_180009910
.text:000000018000EDC8                 mov     rcx, [rsp+8D0h+lpString1]
.text:000000018000EDCD                 mov     r9, [rsp+8D0h+var_878]
.text:000000018000EDD2                 mov     r8, [rsp+8D0h+Size] ; Size
.text:000000018000EDD7                 test    r8, r8
.text:000000018000EDDA                 jz      short loc_18000EDFB
.text:000000018000EDDC                 lea     rax, [rsp+8D0h+lpString1]
.text:000000018000EDE1                 cmp     rsi, rax
.text:000000018000EDE4                 jz      short loc_18000EDFB
.text:000000018000EDE6                 lea     rdx, [rsp+8D0h+lpString1]
.text:000000018000EDEB                 cmp     r9, 10h
.text:000000018000EDEF                 cmovnb  rdx, rcx        ; Src
.text:000000018000EDF3                 mov     rcx, rsi        ; void *
.text:000000018000EDF6                 call    sub_180009910
.text:000000018000EDFB
.text:000000018000EDFB loc_18000EDFB:                          ; CODE XREF: sub_18000EAF0+2EA↑j
.text:000000018000EDFB                                         ; sub_18000EAF0+2F4↑j
.text:000000018000EDFB                 mov     rax, rbx
.text:000000018000EDFE                 cmp     qword ptr [rbx+18h], 10h
.text:000000018000EE03                 jb      short loc_18000EE08
.text:000000018000EE05                 mov     rax, [rbx]
.text:000000018000EE08
.text:000000018000EE08 loc_18000EE08:                          ; CODE XREF: sub_18000EAF0+313↑j
.text:000000018000EE08                 mov     [rsp+8D0h+lpFileName], rax ; lpFileName
.text:000000018000EE0D                 mov     [rsp+8D0h+nSize], 800h ; nSize
.text:000000018000EE15                 lea     r9, [rbp+7D0h+ReturnedString] ; lpReturnedString
.text:000000018000EE19                 lea     r8, Src         ; lpDefault
.text:000000018000EE20                 lea     rdx, aMaxreceivesize ; "MaxReceiveSize"
.text:000000018000EE27                 lea     rcx, [rsp+8D0h+AppName] ; lpAppName
.text:000000018000EE2C                 call    cs:GetPrivateProfileStringA
.text:000000018000EE32                 lea     rax, [rbp+7D0h+ReturnedString]
.text:000000018000EE36                 mov     r8, rdi
.text:000000018000EE39                 nop     dword ptr [rax+00000000h]
.text:000000018000EE40
.text:000000018000EE40 loc_18000EE40:                          ; CODE XREF: sub_18000EAF0+358↓j
.text:000000018000EE40                 inc     r8              ; Size
.text:000000018000EE43                 cmp     byte ptr [rax+r8], 0
.text:000000018000EE48                 jnz     short loc_18000EE40
.text:000000018000EE4A                 lea     rdx, [rbp+7D0h+ReturnedString] ; Src
.text:000000018000EE4E                 lea     rcx, [rsp+8D0h+lpString1] ; void *
.text:000000018000EE53                 call    sub_180009910
.text:000000018000EE58                 mov     rdx, [rsp+8D0h+lpString1]
.text:000000018000EE5D                 mov     r8, [rsp+8D0h+var_878]
.text:000000018000EE62                 cmp     [rsp+8D0h+Size], 0
.text:000000018000EE68                 jz      short loc_18000EE87
.text:000000018000EE6A                 lea     rcx, [rsp+8D0h+lpString1]
.text:000000018000EE6F                 cmp     r8, 10h
.text:000000018000EE73                 cmovnb  rcx, rdx        ; String
.text:000000018000EE77                 call    cs:atoi
.text:000000018000EE7D                 cmp     eax, [r12]
.text:000000018000EE81                 jbe     short loc_18000EE87
.text:000000018000EE83                 mov     [r12], eax
.text:000000018000EE87
.text:000000018000EE87 loc_18000EE87:                          ; CODE XREF: sub_18000EAF0+378↑j
.text:000000018000EE87                                         ; sub_18000EAF0+391↑j
.text:000000018000EE87                 mov     rax, rbx
.text:000000018000EE8A                 cmp     qword ptr [rbx+18h], 10h
.text:000000018000EE8F                 jb      short loc_18000EE94
.text:000000018000EE91                 mov     rax, [rbx]
.text:000000018000EE94
.text:000000018000EE94 loc_18000EE94:                          ; CODE XREF: sub_18000EAF0+39F↑j
.text:000000018000EE94                 mov     [rsp+8D0h+lpFileName], rax ; lpFileName
.text:000000018000EE99                 mov     [rsp+8D0h+nSize], 800h ; nSize
.text:000000018000EEA1                 lea     r9, [rbp+7D0h+ReturnedString] ; lpReturnedString
.text:000000018000EEA5                 lea     r8, Src         ; lpDefault
.text:000000018000EEAC                 lea     rdx, aDisablenagle ; "DisableNagle"
.text:000000018000EEB3                 lea     rcx, [rsp+8D0h+AppName] ; lpAppName
.text:000000018000EEB8                 call    cs:GetPrivateProfileStringA
.text:000000018000EEBE                 lea     rax, [rbp+7D0h+ReturnedString]
.text:000000018000EEC2
.text:000000018000EEC2 loc_18000EEC2:                          ; CODE XREF: sub_18000EAF0+3D9↓j
.text:000000018000EEC2                 inc     rdi
.text:000000018000EEC5                 cmp     byte ptr [rax+rdi], 0
.text:000000018000EEC9                 jnz     short loc_18000EEC2
.text:000000018000EECB                 mov     r8, rdi         ; Size
.text:000000018000EECE                 lea     rdx, [rbp+7D0h+ReturnedString] ; Src
.text:000000018000EED2                 lea     rcx, [rsp+8D0h+lpString1] ; void *
.text:000000018000EED7                 call    sub_180009910
.text:000000018000EEDC                 mov     r8, [rsp+8D0h+lpString1]
.text:000000018000EEE1                 mov     rdx, [rsp+8D0h+var_878]
.text:000000018000EEE6                 cmp     [rsp+8D0h+Size], 0
.text:000000018000EEEC                 jz      short loc_18000EF14
.text:000000018000EEEE                 lea     rcx, [rsp+8D0h+lpString1]
.text:000000018000EEF3                 cmp     rdx, 10h
.text:000000018000EEF7                 cmovnb  rcx, r8         ; String
.text:000000018000EEFB                 call    cs:atoi
.text:000000018000EF01                 test    eax, eax
.text:000000018000EF03                 setnz   al
.text:000000018000EF06                 mov     [r13+0], al
.text:000000018000EF0A                 mov     rdx, [rsp+8D0h+var_878]
.text:000000018000EF0F                 mov     r8, [rsp+8D0h+lpString1]
.text:000000018000EF14
.text:000000018000EF14 loc_18000EF14:                          ; CODE XREF: sub_18000EAF0+3FC↑j
.text:000000018000EF14                 cmp     rdx, 10h
.text:000000018000EF18                 jb      short loc_18000EF4D
.text:000000018000EF1A                 inc     rdx
.text:000000018000EF1D                 mov     rax, r8
.text:000000018000EF20                 cmp     rdx, 1000h
.text:000000018000EF27                 jb      short loc_18000EF45
.text:000000018000EF29                 add     rdx, 27h ; '''
.text:000000018000EF2D                 mov     r8, [r8-8]
.text:000000018000EF31                 sub     rax, r8
.text:000000018000EF34                 add     rax, 0FFFFFFFFFFFFFFF8h
.text:000000018000EF38                 cmp     rax, 1Fh
.text:000000018000EF3C                 jbe     short loc_18000EF45
.text:000000018000EF3E                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000EF44                 int     3               ; Trap to Debugger
.text:000000018000EF45 ; ---------------------------------------------------------------------------
.text:000000018000EF45
.text:000000018000EF45 loc_18000EF45:                          ; CODE XREF: sub_18000EAF0+437↑j
.text:000000018000EF45                                         ; sub_18000EAF0+44C↑j
.text:000000018000EF45                 mov     rcx, r8         ; Block
.text:000000018000EF48                 call    j_j_free
.text:000000018000EF4D
.text:000000018000EF4D loc_18000EF4D:                          ; CODE XREF: sub_18000EAF0+428↑j
.text:000000018000EF4D                 xor     edi, edi
.text:000000018000EF4F                 mov     [rsp+8D0h+Size], rdi
.text:000000018000EF54                 mov     [rsp+8D0h+var_878], 0Fh
.text:000000018000EF5D                 mov     byte ptr [rsp+8D0h+lpString1], dil
.text:000000018000EF62                 mov     rdx, [rbx+18h]
.text:000000018000EF66                 cmp     rdx, 10h
.text:000000018000EF6A                 jb      short loc_18000EF98
.text:000000018000EF6C                 inc     rdx
.text:000000018000EF6F                 mov     rcx, [rbx]
.text:000000018000EF72                 cmp     rdx, 1000h
.text:000000018000EF79                 jb      short loc_18000EF93
.text:000000018000EF7B                 add     rdx, 27h ; '''
.text:000000018000EF7F                 mov     r8, [rcx-8]
.text:000000018000EF83                 sub     rcx, r8
.text:000000018000EF86                 lea     rax, [rcx-8]
.text:000000018000EF8A                 cmp     rax, 1Fh
.text:000000018000EF8E                 ja      short loc_18000EFCA
.text:000000018000EF90                 mov     rcx, r8         ; Block
.text:000000018000EF93
.text:000000018000EF93 loc_18000EF93:                          ; CODE XREF: sub_18000EAF0+489↑j
.text:000000018000EF93                 call    j_j_free
.text:000000018000EF98
.text:000000018000EF98 loc_18000EF98:                          ; CODE XREF: sub_18000EAF0+47A↑j
.text:000000018000EF98                 mov     [rbx+10h], rdi
.text:000000018000EF9C                 mov     qword ptr [rbx+18h], 0Fh
.text:000000018000EFA4                 mov     byte ptr [rbx], 0
.text:000000018000EFA7                 mov     rcx, [rbp+7D0h+var_50]
.text:000000018000EFAE                 xor     rcx, rsp        ; StackCookie
.text:000000018000EFB1                 call    __security_check_cookie
.text:000000018000EFB6                 add     rsp, 898h
.text:000000018000EFBD                 pop     r15
.text:000000018000EFBF                 pop     r14
.text:000000018000EFC1                 pop     r13
.text:000000018000EFC3                 pop     r12
.text:000000018000EFC5                 pop     rdi
.text:000000018000EFC6                 pop     rsi
.text:000000018000EFC7                 pop     rbx
.text:000000018000EFC8                 pop     rbp
.text:000000018000EFC9                 retn
.text:000000018000EFCA ; ---------------------------------------------------------------------------
.text:000000018000EFCA
.text:000000018000EFCA loc_18000EFCA:                          ; CODE XREF: sub_18000EAF0+49E↑j
.text:000000018000EFCA                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000EFCA ; ---------------------------------------------------------------------------
.text:000000018000EFD0                 db 0CCh
.text:000000018000EFD0 ; } // starts at 18000EAF0
.text:000000018000EFD0 sub_18000EAF0   endp
.text:000000018000EFD0
.text:000000018000EFD1 algn_18000EFD1:                         ; DATA XREF: .pdata:000000018001CD68↓o
.text:000000018000EFD1                 align 20h
.text:000000018000EFE0
.text:000000018000EFE0 ; =============== S U B R O U T I N E =======================================
.text:000000018000EFE0
.text:000000018000EFE0
.text:000000018000EFE0 sub_18000EFE0   proc near               ; CODE XREF: sub_18000DF60+BA↑p
.text:000000018000EFE0                                         ; DATA XREF: .rdata:0000000180015F00↓o ...
.text:000000018000EFE0
.text:000000018000EFE0 arg_0           = qword ptr  8
.text:000000018000EFE0 arg_8           = qword ptr  10h
.text:000000018000EFE0
.text:000000018000EFE0                 mov     [rsp+arg_8], rsi
.text:000000018000EFE5                 push    rdi
.text:000000018000EFE6                 sub     rsp, 20h
.text:000000018000EFEA                 mov     rsi, [rcx+10h]
.text:000000018000EFEE                 mov     rdi, rcx
.text:000000018000EFF1                 cmp     rsi, rdx
.text:000000018000EFF4                 ja      loc_18000F07C
.text:000000018000EFFA                 mov     rax, [rcx+18h]
.text:000000018000EFFE                 cmp     rax, rdx
.text:000000018000F001                 jz      short loc_18000F07C
.text:000000018000F003                 jnb     short loc_18000F01F
.text:000000018000F005                 sub     rdx, rsi
.text:000000018000F008                 xor     r8d, r8d
.text:000000018000F00B                 call    sub_18000C760
.text:000000018000F010                 mov     [rdi+10h], rsi
.text:000000018000F014                 mov     rsi, [rsp+28h+arg_8]
.text:000000018000F019                 add     rsp, 20h
.text:000000018000F01D                 pop     rdi
.text:000000018000F01E                 retn
.text:000000018000F01F ; ---------------------------------------------------------------------------
.text:000000018000F01F
.text:000000018000F01F loc_18000F01F:                          ; CODE XREF: sub_18000EFE0+23↑j
.text:000000018000F01F                 cmp     rdx, 10h
.text:000000018000F023                 jnb     short loc_18000F07C
.text:000000018000F025                 cmp     rax, 10h
.text:000000018000F029                 jb      short loc_18000F07C
.text:000000018000F02B
.text:000000018000F02B loc_18000F02B:                          ; DATA XREF: .rdata:0000000180015F00↓o
.text:000000018000F02B                                         ; .rdata:0000000180015F10↓o ...
.text:000000018000F02B                 mov     [rsp+28h+arg_0], rbx
.text:000000018000F030                 lea     r8, [rsi+1]     ; Size
.text:000000018000F034                 mov     rbx, [rcx]
.text:000000018000F037                 mov     rdx, rbx        ; Src
.text:000000018000F03A                 call    memcpy
.text:000000018000F03F                 mov     rdx, [rdi+18h]
.text:000000018000F043                 inc     rdx
.text:000000018000F046                 cmp     rdx, 1000h
.text:000000018000F04D                 jb      short loc_18000F067
.text:000000018000F04F                 mov     rcx, [rbx-8]
.text:000000018000F053                 add     rdx, 27h ; '''
.text:000000018000F057                 sub     rbx, rcx
.text:000000018000F05A                 lea     rax, [rbx-8]
.text:000000018000F05E                 cmp     rax, 1Fh
.text:000000018000F062                 ja      short loc_18000F087
.text:000000018000F064                 mov     rbx, rcx
.text:000000018000F067
.text:000000018000F067 loc_18000F067:                          ; CODE XREF: sub_18000EFE0+6D↑j
.text:000000018000F067                 mov     rcx, rbx        ; Block
.text:000000018000F06A                 call    j_j_free
.text:000000018000F06F                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000F074                 mov     qword ptr [rdi+18h], 0Fh
.text:000000018000F07C
.text:000000018000F07C loc_18000F07C:                          ; CODE XREF: sub_18000EFE0+14↑j
.text:000000018000F07C                                         ; sub_18000EFE0+21↑j ...
.text:000000018000F07C                 mov     rsi, [rsp+28h+arg_8]
.text:000000018000F081                 add     rsp, 20h
.text:000000018000F085                 pop     rdi
.text:000000018000F086                 retn
.text:000000018000F087 ; ---------------------------------------------------------------------------
.text:000000018000F087
.text:000000018000F087 loc_18000F087:                          ; CODE XREF: sub_18000EFE0+82↑j
.text:000000018000F087                                         ; DATA XREF: .pdata:000000018001CD8C↓o ...
.text:000000018000F087                 call    cs:_invalid_parameter_noinfo_noreturn
.text:000000018000F087 ; ---------------------------------------------------------------------------
.text:000000018000F08D                 db 0CCh
.text:000000018000F08D sub_18000EFE0   endp
.text:000000018000F08D
.text:000000018000F08E algn_18000F08E:                         ; DATA XREF: .pdata:000000018001CD98↓o
.text:000000018000F08E                 align 10h
.text:000000018000F090
.text:000000018000F090 ; =============== S U B R O U T I N E =======================================
.text:000000018000F090
.text:000000018000F090
.text:000000018000F090 sub_18000F090   proc near               ; CODE XREF: sub_18000CFD0+D0↑p
.text:000000018000F090                                         ; sub_18000CFD0+15F↑p ...
.text:000000018000F090
.text:000000018000F090 var_58          = qword ptr -58h
.text:000000018000F090 AppName         = byte ptr -50h
.text:000000018000F090 ReturnedString  = byte ptr -30h
.text:000000018000F090 var_10          = qword ptr -10h
.text:000000018000F090
.text:000000018000F090 ; __unwind { // __GSHandlerCheck
.text:000000018000F090                 push    rbx
.text:000000018000F092                 sub     rsp, 70h
.text:000000018000F096                 mov     rax, cs:__security_cookie
.text:000000018000F09D                 xor     rax, rsp
.text:000000018000F0A0                 mov     [rsp+78h+var_10], rax
.text:000000018000F0A5                 mov     [rsp+78h+var_58], rcx
.text:000000018000F0AA                 mov     rbx, rcx
.text:000000018000F0AD                 lea     rcx, [rsp+78h+AppName] ; Buffer
.text:000000018000F0B2                 test    edx, edx
.text:000000018000F0B4                 jnz     short loc_18000F100
.text:000000018000F0B6                 lea     r8, aSimconnect ; "SimConnect"
.text:000000018000F0BD                 mov     edx, 1Ah
.text:000000018000F0C2                 lea     rax, [rsp+78h+AppName]
.text:000000018000F0C7                 sub     r8, rax
.text:000000018000F0CA                 nop     word ptr [rax+rax+00h]
.text:000000018000F0D0
.text:000000018000F0D0 loc_18000F0D0:                          ; CODE XREF: sub_18000F090+5E↓j
.text:000000018000F0D0                 lea     rax, [rdx+7FFFFFE4h]
.text:000000018000F0D7                 test    rax, rax
.text:000000018000F0DA                 jz      short loc_18000F0F0
.text:000000018000F0DC                 movzx   eax, byte ptr [r8+rcx]
.text:000000018000F0E1                 test    al, al
.text:000000018000F0E3                 jz      short loc_18000F0F0
.text:000000018000F0E5                 mov     [rcx], al
.text:000000018000F0E7                 inc     rcx
.text:000000018000F0EA                 sub     rdx, 1
.text:000000018000F0EE                 jnz     short loc_18000F0D0
.text:000000018000F0F0
.text:000000018000F0F0 loc_18000F0F0:                          ; CODE XREF: sub_18000F090+4A↑j
.text:000000018000F0F0                                         ; sub_18000F090+53↑j
.text:000000018000F0F0                 test    rdx, rdx
.text:000000018000F0F3                 lea     rax, [rcx-1]
.text:000000018000F0F7                 cmovnz  rax, rcx
.text:000000018000F0FB                 mov     byte ptr [rax], 0
.text:000000018000F0FE                 jmp     short loc_18000F114
.text:000000018000F100 ; ---------------------------------------------------------------------------
.text:000000018000F100
.text:000000018000F100 loc_18000F100:                          ; CODE XREF: sub_18000F090+24↑j
.text:000000018000F100                 mov     r9d, edx
.text:000000018000F103                 lea     r8, aSimconnectU ; "SimConnect.%u"
.text:000000018000F10A                 mov     edx, 1Ah
.text:000000018000F10F                 call    sub_18000E6B0
.text:000000018000F114
.text:000000018000F114 loc_18000F114:                          ; CODE XREF: sub_18000F090+6E↑j
.text:000000018000F114                 cmp     qword ptr [rbx+18h], 10h
.text:000000018000F119                 mov     r9, rbx
.text:000000018000F11C                 jb      short loc_18000F121
.text:000000018000F11E                 mov     r9, [rbx]       ; lpFileName
.text:000000018000F121
.text:000000018000F121 loc_18000F121:                          ; CODE XREF: sub_18000F090+8C↑j
.text:000000018000F121                 mov     r8d, 1Eh        ; nSize
.text:000000018000F127                 lea     rdx, [rsp+78h+ReturnedString] ; lpReturnedString
.text:000000018000F12C                 lea     rcx, [rsp+78h+AppName] ; lpAppName
.text:000000018000F131                 call    cs:GetPrivateProfileSectionA
.text:000000018000F137                 mov     rcx, rbx
.text:000000018000F13A                 test    eax, eax
.text:000000018000F13C                 jnz     short loc_18000F15B
.text:000000018000F13E                 call    sub_180002660
.text:000000018000F143                 mov     eax, 3
.text:000000018000F148                 mov     rcx, [rsp+78h+var_10]
.text:000000018000F14D                 xor     rcx, rsp        ; StackCookie
.text:000000018000F150                 call    __security_check_cookie
.text:000000018000F155                 add     rsp, 70h
.text:000000018000F159                 pop     rbx
.text:000000018000F15A                 retn
.text:000000018000F15B ; ---------------------------------------------------------------------------
.text:000000018000F15B
.text:000000018000F15B loc_18000F15B:                          ; CODE XREF: sub_18000F090+AC↑j
.text:000000018000F15B                 call    sub_180002660
.text:000000018000F160                 xor     eax, eax
.text:000000018000F162                 mov     rcx, [rsp+78h+var_10]
.text:000000018000F167                 xor     rcx, rsp        ; StackCookie
.text:000000018000F16A                 call    __security_check_cookie
.text:000000018000F16F                 add     rsp, 70h
.text:000000018000F173                 pop     rbx
.text:000000018000F174                 retn
.text:000000018000F174 ; } // starts at 18000F090
.text:000000018000F174 sub_18000F090   endp
.text:000000018000F174
.text:000000018000F174 ; ---------------------------------------------------------------------------
.text:000000018000F175 algn_18000F175:                         ; DATA XREF: .pdata:000000018001CDA4↓o
.text:000000018000F175                 align 20h
.text:000000018000F180
.text:000000018000F180 ; =============== S U B R O U T I N E =======================================
.text:000000018000F180
.text:000000018000F180
.text:000000018000F180 sub_18000F180   proc near               ; CODE XREF: sub_18000C8B0+17↑p
.text:000000018000F180                                         ; DATA XREF: .pdata:000000018001CDB0↓o
.text:000000018000F180
.text:000000018000F180 arg_0           = qword ptr  8
.text:000000018000F180 arg_8           = qword ptr  10h
.text:000000018000F180 arg_10          = qword ptr  18h
.text:000000018000F180
.text:000000018000F180                 mov     [rsp+arg_8], rbx
.text:000000018000F185                 mov     [rsp+arg_10], rsi
.text:000000018000F18A                 push    rdi
.text:000000018000F18B                 sub     rsp, 20h
.text:000000018000F18F                 xor     esi, esi
.text:000000018000F191                 mov     [rcx+24h], edx
.text:000000018000F194                 mov     [rcx+18h], rsi
.text:000000018000F198                 lea     rax, off_180012840
.text:000000018000F19F                 mov     [rcx], rax
.text:000000018000F1A2                 mov     rbx, rcx
.text:000000018000F1A5                 mov     [rcx+20h], esi
.text:000000018000F1A8                 mov     [rcx+38h], rsi
.text:000000018000F1AC                 mov     [rcx+40h], rsi
.text:000000018000F1B0                 mov     [rcx+48h], rsi
.text:000000018000F1B4                 lea     ecx, [rsi+28h]  ; Size
.text:000000018000F1B7                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000F1BC                 mov     [rsp+28h+arg_0], rax
.text:000000018000F1C1                 mov     rdi, rax
.text:000000018000F1C4                 test    rax, rax
.text:000000018000F1C7                 jz      short loc_18000F1D4
.text:000000018000F1C9                 mov     rcx, rax        ; lpCriticalSection
.text:000000018000F1CC                 call    cs:InitializeCriticalSection
.text:000000018000F1D2                 jmp     short loc_18000F1D7
.text:000000018000F1D4 ; ---------------------------------------------------------------------------
.text:000000018000F1D4
.text:000000018000F1D4 loc_18000F1D4:                          ; CODE XREF: sub_18000F180+47↑j
.text:000000018000F1D4                 mov     rdi, rsi
.text:000000018000F1D7
.text:000000018000F1D7 loc_18000F1D7:                          ; CODE XREF: sub_18000F180+52↑j
.text:000000018000F1D7                 mov     [rbx+30h], rdi
.text:000000018000F1DB                 mov     [rbx+50h], sil
.text:000000018000F1DF                 mov     [rbx+58h], rsi
.text:000000018000F1E3                 mov     [rbx+60h], rsi
.text:000000018000F1E7                 mov     [rbx+78h], sil
.text:000000018000F1EB                 mov     [rbx+1B0h], rsi
.text:000000018000F1F2                 mov     [rbx+1C4h], sil
.text:000000018000F1F9                 mov     [rbx+258h], esi
.text:000000018000F1FF                 mov     qword ptr [rbx+25Ch], 400h
.text:000000018000F20A                 mov     [rbx+268h], esi
.text:000000018000F210                 mov     dword ptr [rbx+270h], 0FFFFFFFFh
.text:000000018000F21A                 mov     qword ptr [rbx+10h], 0FFFFFFFFFFFFFFFFh
.text:000000018000F222                 mov     qword ptr [rbx+1B8h], 0FFFFFFFFFFFFFFFFh
.text:000000018000F22D                 lock inc dword ptr [rbx+260h]
.text:000000018000F234                 inc     cs:dword_1800194C8
.text:000000018000F23A                 mov     rax, rbx
.text:000000018000F23D                 mov     [rbx+240h], rsi
.text:000000018000F244                 mov     [rbx+1F8h], rsi
.text:000000018000F24B                 mov     rsi, [rsp+28h+arg_10]
.text:000000018000F250                 mov     qword ptr [rbx+228h], 0FFFFFFFFFFFFFFFFh
.text:000000018000F25B                 mov     qword ptr [rbx+1E0h], 0FFFFFFFFFFFFFFFFh
.text:000000018000F266                 mov     rbx, [rsp+28h+arg_8]
.text:000000018000F26B                 add     rsp, 20h
.text:000000018000F26F                 pop     rdi
.text:000000018000F270                 retn
.text:000000018000F270 sub_18000F180   endp
.text:000000018000F270
.text:000000018000F270 ; ---------------------------------------------------------------------------
.text:000000018000F271 algn_18000F271:                         ; DATA XREF: .pdata:000000018001CDB0↓o
.text:000000018000F271                 align 20h
.text:000000018000F280
.text:000000018000F280 ; =============== S U B R O U T I N E =======================================
.text:000000018000F280
.text:000000018000F280
.text:000000018000F280 sub_18000F280   proc near               ; CODE XREF: sub_18000CA30+B8↑p
.text:000000018000F280                                         ; sub_1800117C0+7↓j
.text:000000018000F280                                         ; DATA XREF: ...
.text:000000018000F280
.text:000000018000F280 arg_0           = qword ptr  8
.text:000000018000F280
.text:000000018000F280                 mov     [rsp+arg_0], rbx
.text:000000018000F285                 push    rdi
.text:000000018000F286                 sub     rsp, 20h
.text:000000018000F28A                 lea     rax, off_180012840
.text:000000018000F291                 mov     rbx, rcx
.text:000000018000F294                 mov     [rcx], rax
.text:000000018000F297                 dec     cs:dword_1800194C8
.text:000000018000F29D                 mov     rdi, [rcx+30h]
.text:000000018000F2A1                 test    rdi, rdi
.text:000000018000F2A4                 jz      short loc_18000F2BC
.text:000000018000F2A6                 mov     rcx, rdi        ; lpCriticalSection
.text:000000018000F2A9                 call    cs:DeleteCriticalSection
.text:000000018000F2AF                 mov     edx, 28h ; '('
.text:000000018000F2B4                 mov     rcx, rdi        ; Block
.text:000000018000F2B7                 call    j_j_free
.text:000000018000F2BC
.text:000000018000F2BC loc_18000F2BC:                          ; CODE XREF: sub_18000F280+24↑j
.text:000000018000F2BC                 xor     eax, eax
.text:000000018000F2BE                 mov     [rbx+30h], rax
.text:000000018000F2C2                 mov     [rbx+48h], rax
.text:000000018000F2C6                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000F2CB                 add     rsp, 20h
.text:000000018000F2CF                 pop     rdi
.text:000000018000F2D0                 retn
.text:000000018000F2D0 sub_18000F280   endp
.text:000000018000F2D0
.text:000000018000F2D0 ; ---------------------------------------------------------------------------
.text:000000018000F2D1 algn_18000F2D1:                         ; DATA XREF: .pdata:000000018001CDBC↓o
.text:000000018000F2D1                 align 20h
.text:000000018000F2E0
.text:000000018000F2E0 ; =============== S U B R O U T I N E =======================================
.text:000000018000F2E0
.text:000000018000F2E0
.text:000000018000F2E0 ; __int64 __fastcall sub_18000F2E0(void *Block)
.text:000000018000F2E0 sub_18000F2E0   proc near               ; DATA XREF: .rdata:off_180012840↓o
.text:000000018000F2E0                                         ; .pdata:000000018001CDC8↓o
.text:000000018000F2E0
.text:000000018000F2E0 arg_0           = qword ptr  8
.text:000000018000F2E0 arg_8           = qword ptr  10h
.text:000000018000F2E0
.text:000000018000F2E0                 mov     [rsp+arg_0], rbx
.text:000000018000F2E5                 mov     [rsp+arg_8], rsi
.text:000000018000F2EA                 push    rdi
.text:000000018000F2EB                 sub     rsp, 20h
.text:000000018000F2EF                 lea     rax, off_180012840
.text:000000018000F2F6                 mov     esi, edx
.text:000000018000F2F8                 mov     [rcx], rax
.text:000000018000F2FB                 mov     rbx, rcx
.text:000000018000F2FE                 dec     cs:dword_1800194C8
.text:000000018000F304                 mov     rdi, [rcx+30h]
.text:000000018000F308                 test    rdi, rdi
.text:000000018000F30B                 jz      short loc_18000F323
.text:000000018000F30D                 mov     rcx, rdi        ; lpCriticalSection
.text:000000018000F310                 call    cs:DeleteCriticalSection
.text:000000018000F316                 mov     edx, 28h ; '('
.text:000000018000F31B                 mov     rcx, rdi        ; Block
.text:000000018000F31E                 call    j_j_free
.text:000000018000F323
.text:000000018000F323 loc_18000F323:                          ; CODE XREF: sub_18000F2E0+2B↑j
.text:000000018000F323                 xor     eax, eax
.text:000000018000F325                 mov     [rbx+30h], rax
.text:000000018000F329                 mov     [rbx+48h], rax
.text:000000018000F32D                 test    sil, 1
.text:000000018000F331                 jz      short loc_18000F340
.text:000000018000F333                 mov     edx, 278h
.text:000000018000F338                 mov     rcx, rbx        ; Block
.text:000000018000F33B                 call    j_j_free
.text:000000018000F340
.text:000000018000F340 loc_18000F340:                          ; CODE XREF: sub_18000F2E0+51↑j
.text:000000018000F340                 mov     rsi, [rsp+28h+arg_8]
.text:000000018000F345                 mov     rax, rbx
.text:000000018000F348                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000F34D                 add     rsp, 20h
.text:000000018000F351                 pop     rdi
.text:000000018000F352                 retn
.text:000000018000F352 sub_18000F2E0   endp
.text:000000018000F352
.text:000000018000F352 ; ---------------------------------------------------------------------------
.text:000000018000F353 algn_18000F353:                         ; DATA XREF: .pdata:000000018001CDC8↓o
.text:000000018000F353                 align 20h
.text:000000018000F360
.text:000000018000F360 ; =============== S U B R O U T I N E =======================================
.text:000000018000F360
.text:000000018000F360
.text:000000018000F360 sub_18000F360   proc near               ; CODE XREF: sub_18000CC50+F↑p
.text:000000018000F360                                         ; DATA XREF: .rdata:0000000180012850↓o ...
.text:000000018000F360
.text:000000018000F360 arg_0           = qword ptr  8
.text:000000018000F360 arg_8           = qword ptr  10h
.text:000000018000F360 arg_10          = qword ptr  18h
.text:000000018000F360 arg_18          = qword ptr  20h
.text:000000018000F360
.text:000000018000F360                 mov     [rsp+arg_0], rbx
.text:000000018000F365                 mov     [rsp+arg_8], rbp
.text:000000018000F36A                 mov     [rsp+arg_10], rsi
.text:000000018000F36F                 mov     [rsp+arg_18], rdi
.text:000000018000F374                 push    r14
.text:000000018000F376                 sub     rsp, 20h
.text:000000018000F37A                 cmp     byte ptr [rcx+78h], 0
.text:000000018000F37E                 mov     r14d, r8d
.text:000000018000F381                 mov     edi, edx
.text:000000018000F383                 mov     rbx, rcx
.text:000000018000F386                 jz      short loc_18000F3B4
.text:000000018000F388                 sub     rcx, 0FFFFFFFFFFFFFF80h ; lpCriticalSection
.text:000000018000F38C                 call    cs:EnterCriticalSection
.text:000000018000F392                 mov     esi, [rbx+18h]
.text:000000018000F395                 xor     eax, eax
.text:000000018000F397                 mov     [rbx+18h], eax
.text:000000018000F39A                 mov     [rbx+258h], eax
.text:000000018000F3A0                 cmp     [rbx+78h], al
.text:000000018000F3A3                 jz      short loc_18000F3C2
.text:000000018000F3A5                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:000000018000F3AC                 call    cs:LeaveCriticalSection
.text:000000018000F3B2                 jmp     short loc_18000F3C2
.text:000000018000F3B4 ; ---------------------------------------------------------------------------
.text:000000018000F3B4
.text:000000018000F3B4 loc_18000F3B4:                          ; CODE XREF: sub_18000F360+26↑j
.text:000000018000F3B4                 mov     esi, [rcx+18h]
.text:000000018000F3B7                 xor     eax, eax
.text:000000018000F3B9                 mov     [rcx+18h], eax
.text:000000018000F3BC                 mov     [rcx+258h], eax
.text:000000018000F3C2
.text:000000018000F3C2 loc_18000F3C2:                          ; CODE XREF: sub_18000F360+43↑j
.text:000000018000F3C2                                         ; sub_18000F360+52↑j
.text:000000018000F3C2                 test    esi, esi
.text:000000018000F3C4                 jz      loc_18000F483
.text:000000018000F3CA                 mov     ecx, [rbx+24h]
.text:000000018000F3CD                 test    ecx, ecx
.text:000000018000F3CF                 jz      short loc_18000F445
.text:000000018000F3D1                 cmp     ecx, 1
.text:000000018000F3D4                 jnz     loc_18000F483
.text:000000018000F3DA                 test    edi, edi
.text:000000018000F3DC                 jz      short loc_18000F3EB
.text:000000018000F3DE                 call    cs:GetLastError
.text:000000018000F3E4                 mov     [rbx+1Ch], eax
.text:000000018000F3E7                 mov     [rbx+20h], r14d
.text:000000018000F3EB
.text:000000018000F3EB loc_18000F3EB:                          ; CODE XREF: sub_18000F360+7C↑j
.text:000000018000F3EB                 mov     rax, [rbx+10h]
.text:000000018000F3EF                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:000000018000F3F3                 jz      short loc_18000F407
.text:000000018000F3F5                 mov     rcx, [rbx+10h]  ; hObject
.text:000000018000F3F9                 mov     qword ptr [rbx+10h], 0FFFFFFFFFFFFFFFFh
.text:000000018000F401                 call    cs:CloseHandle
.text:000000018000F407
.text:000000018000F407 loc_18000F407:                          ; CODE XREF: sub_18000F360+93↑j
.text:000000018000F407                 mov     rcx, [rbx+1E0h] ; hObject
.text:000000018000F40E                 cmp     rcx, 0FFFFFFFFFFFFFFFFh
.text:000000018000F412                 jz      short loc_18000F425
.text:000000018000F414                 call    cs:CloseHandle
.text:000000018000F41A                 mov     qword ptr [rbx+1E0h], 0FFFFFFFFFFFFFFFFh
.text:000000018000F425
.text:000000018000F425 loc_18000F425:                          ; CODE XREF: sub_18000F360+B2↑j
.text:000000018000F425                 mov     rcx, [rbx+228h] ; hObject
.text:000000018000F42C                 cmp     rcx, 0FFFFFFFFFFFFFFFFh
.text:000000018000F430                 jz      short loc_18000F483
.text:000000018000F432                 call    cs:CloseHandle
.text:000000018000F438                 mov     qword ptr [rbx+228h], 0FFFFFFFFFFFFFFFFh
.text:000000018000F443                 jmp     short loc_18000F483
.text:000000018000F445 ; ---------------------------------------------------------------------------
.text:000000018000F445
.text:000000018000F445 loc_18000F445:                          ; CODE XREF: sub_18000F360+6F↑j
.text:000000018000F445                 test    edi, edi
.text:000000018000F447                 jz      short loc_18000F456
.text:000000018000F449                 call    cs:WSAGetLastError
.text:000000018000F44F                 mov     [rbx+1Ch], eax
.text:000000018000F452                 mov     [rbx+20h], r14d
.text:000000018000F456
.text:000000018000F456 loc_18000F456:                          ; CODE XREF: sub_18000F360+E7↑j
.text:000000018000F456                 cmp     esi, 2
.text:000000018000F459                 jnz     short loc_18000F471
.text:000000018000F45B                 mov     rcx, [rbx+10h]  ; s
.text:000000018000F45F                 mov     edx, esi        ; how
.text:000000018000F461                 call    cs:shutdown
.text:000000018000F467                 mov     rcx, [rbx+10h]  ; hFile
.text:000000018000F46B                 call    cs:CancelIo
.text:000000018000F471
.text:000000018000F471 loc_18000F471:                          ; CODE XREF: sub_18000F360+F9↑j
.text:000000018000F471                 mov     rcx, [rbx+10h]  ; s
.text:000000018000F475                 mov     qword ptr [rbx+10h], 0FFFFFFFFFFFFFFFFh
.text:000000018000F47D                 call    cs:closesocket
.text:000000018000F483
.text:000000018000F483 loc_18000F483:                          ; CODE XREF: sub_18000F360+64↑j
.text:000000018000F483                                         ; sub_18000F360+74↑j ...
.text:000000018000F483                 mov     [rbx+268h], edi
.text:000000018000F489                 test    edi, edi
.text:000000018000F48B                 jz      short loc_18000F498
.text:000000018000F48D                 mov     eax, 1
.text:000000018000F492                 xchg    eax, cs:dword_1800194CC
.text:000000018000F498
.text:000000018000F498 loc_18000F498:                          ; CODE XREF: sub_18000F360+12B↑j
.text:000000018000F498                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000F49D                 mov     rbp, [rsp+28h+arg_8]
.text:000000018000F4A2                 mov     rsi, [rsp+28h+arg_10]
.text:000000018000F4A7                 mov     rdi, [rsp+28h+arg_18]
.text:000000018000F4AC                 add     rsp, 20h
.text:000000018000F4B0                 pop     r14
.text:000000018000F4B2                 retn
.text:000000018000F4B2 sub_18000F360   endp
.text:000000018000F4B2
.text:000000018000F4B2 ; ---------------------------------------------------------------------------
.text:000000018000F4B3 algn_18000F4B3:                         ; DATA XREF: .pdata:000000018001CDD4↓o
.text:000000018000F4B3                 align 20h
.text:000000018000F4C0
.text:000000018000F4C0 ; =============== S U B R O U T I N E =======================================
.text:000000018000F4C0
.text:000000018000F4C0
.text:000000018000F4C0 sub_18000F4C0   proc near               ; CODE XREF: sub_18000CE00+11A↑p
.text:000000018000F4C0                                         ; DATA XREF: .pdata:000000018001CDE0↓o
.text:000000018000F4C0
.text:000000018000F4C0 arg_0           = qword ptr  8
.text:000000018000F4C0
.text:000000018000F4C0                 mov     [rsp+arg_0], rbx
.text:000000018000F4C5                 push    rdi
.text:000000018000F4C6                 sub     rsp, 20h
.text:000000018000F4CA                 mov     rbx, rcx
.text:000000018000F4CD                 add     rcx, 30h ; '0'
.text:000000018000F4D1                 call    sub_18000F7C0
.text:000000018000F4D6                 mov     rcx, [rbx+58h]  ; Block
.text:000000018000F4DA                 test    rcx, rcx
.text:000000018000F4DD                 jz      short loc_18000F4E4
.text:000000018000F4DF                 call    j_j_free
.text:000000018000F4E4
.text:000000018000F4E4 loc_18000F4E4:                          ; CODE XREF: sub_18000F4C0+1D↑j
.text:000000018000F4E4                 mov     rdi, [rbx+1B0h]
.text:000000018000F4EB                 test    rdi, rdi
.text:000000018000F4EE                 jz      short loc_18000F50C
.text:000000018000F4F0                 mov     rcx, [rdi+8]    ; Block
.text:000000018000F4F4                 test    rcx, rcx
.text:000000018000F4F7                 jz      short loc_18000F4FF
.text:000000018000F4F9                 call    cs:__imp_free
.text:000000018000F4FF
.text:000000018000F4FF loc_18000F4FF:                          ; CODE XREF: sub_18000F4C0+37↑j
.text:000000018000F4FF                 mov     edx, 10h
.text:000000018000F504                 mov     rcx, rdi        ; Block
.text:000000018000F507                 call    j_j_free
.text:000000018000F50C
.text:000000018000F50C loc_18000F50C:                          ; CODE XREF: sub_18000F4C0+2E↑j
.text:000000018000F50C                 xor     eax, eax
.text:000000018000F50E                 mov     [rbx+68h], rax
.text:000000018000F512                 mov     [rbx+70h], rax
.text:000000018000F516                 cmp     [rbx+78h], al
.text:000000018000F519                 jz      short loc_18000F52C
.text:000000018000F51B                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:000000018000F522                 call    cs:DeleteCriticalSection
.text:000000018000F528                 mov     byte ptr [rbx+78h], 0
.text:000000018000F52C
.text:000000018000F52C loc_18000F52C:                          ; CODE XREF: sub_18000F4C0+59↑j
.text:000000018000F52C                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000F531                 add     rsp, 20h
.text:000000018000F535                 pop     rdi
.text:000000018000F536                 retn
.text:000000018000F536 sub_18000F4C0   endp
.text:000000018000F536
.text:000000018000F536 ; ---------------------------------------------------------------------------
.text:000000018000F537 algn_18000F537:                         ; DATA XREF: .pdata:000000018001CDE0↓o
.text:000000018000F537                 align 20h
.text:000000018000F540
.text:000000018000F540 ; =============== S U B R O U T I N E =======================================
.text:000000018000F540
.text:000000018000F540
.text:000000018000F540 ; void __stdcall Function(DWORD dwErrorCode, DWORD dwNumberOfBytesTransfered, LPOVERLAPPED lpOverlapped)
.text:000000018000F540 Function        proc near               ; DATA XREF: sub_18000DF60+259↑o
.text:000000018000F540                                         ; sub_18000DF60+37B↑o ...
.text:000000018000F540
.text:000000018000F540 lpOverlapped    = qword ptr -28h
.text:000000018000F540 var_20          = qword ptr -20h
.text:000000018000F540 lpCompletionRoutine= qword ptr -18h
.text:000000018000F540 arg_0           = qword ptr  8
.text:000000018000F540 arg_8           = qword ptr  10h
.text:000000018000F540 Flags           = dword ptr  18h
.text:000000018000F540
.text:000000018000F540                 test    r8, r8
.text:000000018000F543                 jz      locret_18000F7B6
.text:000000018000F549                 push    rdi
.text:000000018000F54A                 sub     rsp, 40h
.text:000000018000F54E
.text:000000018000F54E loc_18000F54E:                          ; DATA XREF: .rdata:0000000180016374↓o
.text:000000018000F54E                                         ; .rdata:0000000180016384↓o ...
.text:000000018000F54E                 mov     [rsp+48h+arg_0], rbx
.text:000000018000F553                 mov     rbx, [r8+20h]
.text:000000018000F557                 mov     [rsp+48h+arg_8], rsi
.text:000000018000F55C                 mov     edi, edx
.text:000000018000F55E                 test    ecx, ecx
.text:000000018000F560                 jz      short loc_18000F570
.text:000000018000F562                 cmp     ecx, 80000005h
.text:000000018000F568                 jnz     short loc_18000F5C8
.text:000000018000F56A                 cmp     dword ptr [rbx+24h], 1
.text:000000018000F56E                 jnz     short loc_18000F5E8
.text:000000018000F570
.text:000000018000F570 loc_18000F570:                          ; CODE XREF: Function+20↑j
.text:000000018000F570                 test    edx, edx
.text:000000018000F572                 jz      loc_18000F78B
.text:000000018000F578                 cmp     byte ptr [r8+28h], 0
.text:000000018000F57D                 mov     eax, [rbx+18h]
.text:000000018000F580                 jz      loc_18000F612
.text:000000018000F586                 cmp     eax, 2
.text:000000018000F589                 jnz     loc_18000F79F
.text:000000018000F58F                 cmp     byte ptr [rbx+78h], 0
.text:000000018000F593                 jz      short loc_18000F5A2
.text:000000018000F595                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:000000018000F59C                 call    cs:EnterCriticalSection
.text:000000018000F5A2
.text:000000018000F5A2 loc_18000F5A2:                          ; CODE XREF: Function+53↑j
.text:000000018000F5A2                 mov     dl, 1
.text:000000018000F5A4                 mov     rcx, rbx
.text:000000018000F5A7                 call    sub_18000FFB0
.text:000000018000F5AC                 cmp     byte ptr [rbx+78h], 0
.text:000000018000F5B0                 jz      loc_18000F79F
.text:000000018000F5B6                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:000000018000F5BD                 call    cs:LeaveCriticalSection
.text:000000018000F5C3                 jmp     loc_18000F79F
.text:000000018000F5C8 ; ---------------------------------------------------------------------------
.text:000000018000F5C8
.text:000000018000F5C8 loc_18000F5C8:                          ; CODE XREF: Function+28↑j
.text:000000018000F5C8                 cmp     ecx, 0C0000120h
.text:000000018000F5CE                 jz      short loc_18000F602
.text:000000018000F5D0                 cmp     ecx, 0C000013Ch
.text:000000018000F5D6                 jz      short loc_18000F5F5
.text:000000018000F5D8                 cmp     ecx, 0C000014Bh
.text:000000018000F5DE                 jz      short loc_18000F5F5
.text:000000018000F5E0                 cmp     ecx, 0C000020Dh
.text:000000018000F5E6                 jz      short loc_18000F5F5
.text:000000018000F5E8
.text:000000018000F5E8 loc_18000F5E8:                          ; CODE XREF: Function+2E↑j
.text:000000018000F5E8                 mov     r8d, ecx
.text:000000018000F5EB                 mov     edx, 9
.text:000000018000F5F0                 jmp     loc_18000F796
.text:000000018000F5F5 ; ---------------------------------------------------------------------------
.text:000000018000F5F5
.text:000000018000F5F5 loc_18000F5F5:                          ; CODE XREF: Function+96↑j
.text:000000018000F5F5                                         ; Function+9E↑j ...
.text:000000018000F5F5                 mov     r8d, ecx
.text:000000018000F5F8                 mov     edx, 5
.text:000000018000F5FD                 jmp     loc_18000F796
.text:000000018000F602 ; ---------------------------------------------------------------------------
.text:000000018000F602
.text:000000018000F602 loc_18000F602:                          ; CODE XREF: Function+8E↑j
.text:000000018000F602                 mov     edx, 8
.text:000000018000F607                 mov     r8d, 0C0000120h
.text:000000018000F60D                 jmp     loc_18000F796
.text:000000018000F612 ; ---------------------------------------------------------------------------
.text:000000018000F612
.text:000000018000F612 loc_18000F612:                          ; CODE XREF: Function+40↑j
.text:000000018000F612                 cmp     eax, 1
.text:000000018000F615                 jnz     short loc_18000F620
.text:000000018000F617                 mov     rax, [rbx]
.text:000000018000F61A                 mov     rcx, rbx
.text:000000018000F61D                 call    qword ptr [rax+20h]
.text:000000018000F620
.text:000000018000F620 loc_18000F620:                          ; CODE XREF: Function+D5↑j
.text:000000018000F620                 add     [rbx+68h], rdi
.text:000000018000F624                 cmp     dword ptr [rbx+270h], 0FFFFFFFFh
.text:000000018000F62B                 mov     [rbx+28h], edi
.text:000000018000F62E                 jnz     short loc_18000F636
.text:000000018000F630                 mov     [rbx+270h], edi
.text:000000018000F636
.text:000000018000F636 loc_18000F636:                          ; CODE XREF: Function+EE↑j
.text:000000018000F636                 mov     rdx, [rbx+1B0h]
.text:000000018000F63D                 mov     rcx, rbx
.text:000000018000F640                 call    sub_18000FC20
.text:000000018000F645                 mov     ecx, eax
.text:000000018000F647                 test    eax, eax
.text:000000018000F649                 jnz     short loc_18000F675
.text:000000018000F64B                 nop     dword ptr [rax+rax+00h]
.text:000000018000F650
.text:000000018000F650 loc_18000F650:                          ; CODE XREF: Function+133↓j
.text:000000018000F650                 mov     rax, [rbx]
.text:000000018000F653                 mov     rcx, rbx
.text:000000018000F656                 mov     rdx, [rbx+1B0h]
.text:000000018000F65D                 call    qword ptr [rax+18h]
.text:000000018000F660                 mov     rdx, [rbx+1B0h]
.text:000000018000F667                 mov     rcx, rbx
.text:000000018000F66A                 call    sub_18000FC20
.text:000000018000F66F                 mov     ecx, eax
.text:000000018000F671                 test    eax, eax
.text:000000018000F673                 jz      short loc_18000F650
.text:000000018000F675
.text:000000018000F675 loc_18000F675:                          ; CODE XREF: Function+109↑j
.text:000000018000F675                 sub     ecx, 1
.text:000000018000F678                 jz      short loc_18000F6B7
.text:000000018000F67A                 sub     ecx, 1
.text:000000018000F67D                 jz      short loc_18000F6A7
.text:000000018000F67F                 sub     ecx, 1
.text:000000018000F682                 jz      short loc_18000F697
.text:000000018000F684                 cmp     ecx, 1
.text:000000018000F687                 jnz     short loc_18000F6B7
.text:000000018000F689                 lea     edx, [rcx+2]
.text:000000018000F68C                 mov     r8d, 8007000Eh
.text:000000018000F692                 jmp     loc_18000F796
.text:000000018000F697 ; ---------------------------------------------------------------------------
.text:000000018000F697
.text:000000018000F697 loc_18000F697:                          ; CODE XREF: Function+142↑j
.text:000000018000F697                 mov     edx, 2
.text:000000018000F69C                 mov     r8d, 80004004h
.text:000000018000F6A2                 jmp     loc_18000F796
.text:000000018000F6A7 ; ---------------------------------------------------------------------------
.text:000000018000F6A7
.text:000000018000F6A7 loc_18000F6A7:                          ; CODE XREF: Function+13D↑j
.text:000000018000F6A7                 mov     edx, 1
.text:000000018000F6AC                 mov     r8d, 80004004h
.text:000000018000F6B2                 jmp     loc_18000F796
.text:000000018000F6B7 ; ---------------------------------------------------------------------------
.text:000000018000F6B7
.text:000000018000F6B7 loc_18000F6B7:                          ; CODE XREF: Function+138↑j
.text:000000018000F6B7                                         ; Function+147↑j
.text:000000018000F6B7                 xor     r8d, r8d
.text:000000018000F6BA                 cmp     dword ptr [rbx+18h], 2
.text:000000018000F6BE                 mov     [rbx+28h], r8d
.text:000000018000F6C2                 jnz     loc_18000F79F
.text:000000018000F6C8                 mov     eax, [rbx+1A8h]
.text:000000018000F6CE                 lea     rdx, [rbx+1C8h]
.text:000000018000F6D5                 add     eax, [rbx+58h]
.text:000000018000F6D8                 xorps   xmm0, xmm0
.text:000000018000F6DB                 sub     eax, [rbx+68h]
.text:000000018000F6DE                 movups  xmmword ptr [rdx], xmm0
.text:000000018000F6E1                 xor     ecx, ecx
.text:000000018000F6E3                 mov     [rsp+48h+Flags], r8d
.text:000000018000F6E8                 mov     [rdx+10h], rcx
.text:000000018000F6EC                 mov     [rbx+200h], eax
.text:000000018000F6F2                 mov     rax, [rbx+68h]
.text:000000018000F6F6                 mov     [rbx+208h], rax
.text:000000018000F6FD                 lock inc dword ptr [rbx+260h]
.text:000000018000F704                 mov     ecx, [rbx+24h]
.text:000000018000F707                 test    ecx, ecx
.text:000000018000F709                 jz      short loc_18000F740
.text:000000018000F70B                 cmp     ecx, 1
.text:000000018000F70E                 jnz     loc_18000F79F
.text:000000018000F714                 mov     r8d, [rbx+200h] ; nNumberOfBytesToRead
.text:000000018000F71B                 xor     r9d, r9d        ; lpNumberOfBytesRead
.text:000000018000F71E                 mov     rcx, [rbx+10h]  ; hFile
.text:000000018000F722                 mov     [rsp+48h+lpOverlapped], rdx ; lpOverlapped
.text:000000018000F727                 mov     rdx, [rbx+208h] ; lpBuffer
.text:000000018000F72E                 call    cs:ReadFile
.text:000000018000F734                 test    eax, eax
.text:000000018000F736                 jnz     short loc_18000F79F
.text:000000018000F738                 call    cs:GetLastError
.text:000000018000F73E                 jmp     short loc_18000F77A
.text:000000018000F740 ; ---------------------------------------------------------------------------
.text:000000018000F740
.text:000000018000F740 loc_18000F740:                          ; CODE XREF: Function+1C9↑j
.text:000000018000F740                 mov     rcx, [rbx+10h]  ; s
.text:000000018000F744                 lea     rax, [rsp+48h+Flags]
.text:000000018000F749                 mov     [rsp+48h+lpCompletionRoutine], r8 ; lpCompletionRoutine
.text:000000018000F74E                 lea     r9, [rbx+28h]   ; lpNumberOfBytesRecvd
.text:000000018000F752                 mov     [rsp+48h+var_20], rdx ; lpOverlapped
.text:000000018000F757                 mov     r8d, 1          ; dwBufferCount
.text:000000018000F75D                 lea     rdx, [rbx+200h] ; lpBuffers
.text:000000018000F764                 mov     [rsp+48h+lpOverlapped], rax ; lpFlags
.text:000000018000F769                 call    cs:WSARecv
.text:000000018000F76F                 cmp     eax, 0FFFFFFFFh
.text:000000018000F772                 jnz     short loc_18000F79F
.text:000000018000F774                 call    cs:WSAGetLastError
.text:000000018000F77A
.text:000000018000F77A loc_18000F77A:                          ; CODE XREF: Function+1FE↑j
.text:000000018000F77A                 cmp     eax, 3E5h
.text:000000018000F77F                 jz      short loc_18000F79F
.text:000000018000F781                 mov     rcx, rbx
.text:000000018000F784                 call    sub_18000FDF0
.text:000000018000F789                 jmp     short loc_18000F79F
.text:000000018000F78B ; ---------------------------------------------------------------------------
.text:000000018000F78B
.text:000000018000F78B loc_18000F78B:                          ; CODE XREF: Function+32↑j
.text:000000018000F78B                 mov     edx, 4
.text:000000018000F790                 mov     r8d, 0C000013Eh
.text:000000018000F796
.text:000000018000F796 loc_18000F796:                          ; CODE XREF: Function+B0↑j
.text:000000018000F796                                         ; Function+BD↑j ...
.text:000000018000F796                 mov     rax, [rbx]
.text:000000018000F799                 mov     rcx, rbx
.text:000000018000F79C                 call    qword ptr [rax+10h]
.text:000000018000F79F
.text:000000018000F79F loc_18000F79F:                          ; CODE XREF: Function+49↑j
.text:000000018000F79F                                         ; Function+70↑j ...
.text:000000018000F79F                 mov     rcx, rbx
.text:000000018000F7A2                 call    sub_18000FDF0
.text:000000018000F7A7                 mov     rsi, [rsp+48h+arg_8]
.text:000000018000F7AC                 mov     rbx, [rsp+48h+arg_0]
.text:000000018000F7B1                 add     rsp, 40h
.text:000000018000F7B5                 pop     rdi
.text:000000018000F7B6
.text:000000018000F7B6 locret_18000F7B6:                       ; CODE XREF: Function+3↑j
.text:000000018000F7B6                                         ; DATA XREF: .pdata:000000018001CDF8↓o ...
.text:000000018000F7B6                 retn
.text:000000018000F7B6 Function        endp
.text:000000018000F7B6
.text:000000018000F7B6 ; ---------------------------------------------------------------------------
.text:000000018000F7B7 algn_18000F7B7:                         ; DATA XREF: .pdata:000000018001CE04↓o
.text:000000018000F7B7                 align 20h
.text:000000018000F7C0
.text:000000018000F7C0 ; =============== S U B R O U T I N E =======================================
.text:000000018000F7C0
.text:000000018000F7C0
.text:000000018000F7C0 sub_18000F7C0   proc near               ; CODE XREF: sub_18000F4C0+11↑p
.text:000000018000F7C0                                         ; sub_18000FDF0+24↓p ...
.text:000000018000F7C0
.text:000000018000F7C0 arg_0           = qword ptr  8
.text:000000018000F7C0
.text:000000018000F7C0                 mov     [rsp+arg_0], rbx
.text:000000018000F7C5                 push    rdi
.text:000000018000F7C6                 sub     rsp, 20h
.text:000000018000F7CA                 mov     rdi, rcx
.text:000000018000F7CD                 mov     rcx, [rcx]      ; lpCriticalSection
.text:000000018000F7D0                 call    cs:EnterCriticalSection
.text:000000018000F7D6                 mov     rbx, [rdi+8]
.text:000000018000F7DA                 xor     eax, eax
.text:000000018000F7DC                 mov     rcx, [rdi]      ; lpCriticalSection
.text:000000018000F7DF                 mov     [rdi+10h], rax
.text:000000018000F7E3                 mov     [rdi+8], rax
.text:000000018000F7E7                 mov     [rdi+18h], rax
.text:000000018000F7EB                 call    cs:LeaveCriticalSection
.text:000000018000F7F1                 test    rbx, rbx
.text:000000018000F7F4                 jz      short loc_18000F822
.text:000000018000F7F6                 db      66h, 66h
.text:000000018000F7F6                 nop     word ptr [rax+rax+00000000h]
.text:000000018000F800
.text:000000018000F800 loc_18000F800:                          ; CODE XREF: sub_18000F7C0+60↓j
.text:000000018000F800                 mov     rcx, [rbx+8]    ; Block
.text:000000018000F804                 mov     rdi, [rbx]
.text:000000018000F807                 call    cs:__imp_free
.text:000000018000F80D                 mov     edx, 20h ; ' '
.text:000000018000F812                 mov     rcx, rbx        ; Block
.text:000000018000F815                 call    j_j_free
.text:000000018000F81A                 mov     rbx, rdi
.text:000000018000F81D                 test    rdi, rdi
.text:000000018000F820                 jnz     short loc_18000F800
.text:000000018000F822
.text:000000018000F822 loc_18000F822:                          ; CODE XREF: sub_18000F7C0+34↑j
.text:000000018000F822                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000F827                 add     rsp, 20h
.text:000000018000F82B                 pop     rdi
.text:000000018000F82C                 retn
.text:000000018000F82C sub_18000F7C0   endp
.text:000000018000F82C
.text:000000018000F82C ; ---------------------------------------------------------------------------
.text:000000018000F82D algn_18000F82D:                         ; DATA XREF: .pdata:000000018001CE10↓o
.text:000000018000F82D                 align 10h
.text:000000018000F830
.text:000000018000F830 ; =============== S U B R O U T I N E =======================================
.text:000000018000F830
.text:000000018000F830
.text:000000018000F830 sub_18000F830   proc near               ; CODE XREF: sub_18000DF60+287↑p
.text:000000018000F830                                         ; sub_18000DF60+3B0↑p
.text:000000018000F830                                         ; DATA XREF: ...
.text:000000018000F830
.text:000000018000F830 arg_0           = qword ptr  8
.text:000000018000F830 arg_8           = qword ptr  10h
.text:000000018000F830 arg_20          = dword ptr  28h
.text:000000018000F830 arg_28          = byte ptr  30h
.text:000000018000F830
.text:000000018000F830                 mov     [rsp+arg_8], rbx
.text:000000018000F835                 push    rdi
.text:000000018000F836                 sub     rsp, 20h
.text:000000018000F83A                 mov     rbx, rcx
.text:000000018000F83D                 test    dl, dl
.text:000000018000F83F                 jz      short loc_18000F85E
.text:000000018000F841                 mov     ecx, [rcx+24h]
.text:000000018000F844                 test    ecx, ecx
.text:000000018000F846                 jz      short loc_18000F84D
.text:000000018000F848                 cmp     ecx, 1
.text:000000018000F84B                 jnz     short loc_18000F865
.text:000000018000F84D
.text:000000018000F84D loc_18000F84D:                          ; CODE XREF: sub_18000F830+16↑j
.text:000000018000F84D                 mov     qword ptr [rbx+1B8h], 0FFFFFFFFFFFFFFFFh
.text:000000018000F858                 mov     [rbx+10h], r8
.text:000000018000F85C                 jmp     short loc_18000F865
.text:000000018000F85E ; ---------------------------------------------------------------------------
.text:000000018000F85E
.text:000000018000F85E loc_18000F85E:                          ; CODE XREF: sub_18000F830+F↑j
.text:000000018000F85E                 mov     [rcx+1B8h], r8
.text:000000018000F865
.text:000000018000F865 loc_18000F865:                          ; CODE XREF: sub_18000F830+1B↑j
.text:000000018000F865                                         ; sub_18000F830+2C↑j
.text:000000018000F865                 mov     eax, [rsp+28h+arg_20]
.text:000000018000F869                 mov     ecx, 800h       ; Size
.text:000000018000F86E                 mov     [rbx+25Ch], eax
.text:000000018000F874                 movzx   eax, [rsp+28h+arg_28]
.text:000000018000F879                 mov     [rbx+1C4h], al
.text:000000018000F87F                 mov     [rbx+1C0h], r9d
.text:000000018000F886                 call    j_??2@YAPEAX_K@Z ; operator new(unsigned __int64)
.text:000000018000F88B                 xor     edi, edi
.text:000000018000F88D                 mov     [rbx+58h], rax
.text:000000018000F891                 mov     dword ptr [rbx+1A8h], 800h
.text:000000018000F89B                 mov     [rbx+268h], edi
.text:000000018000F8A1                 mov     [rbx+210h], rdi
.text:000000018000F8A8                 lea     ecx, [rdi+10h]  ; Size
.text:000000018000F8AB                 mov     [rbx+218h], rdi
.text:000000018000F8B2                 mov     [rbx+220h], rdi
.text:000000018000F8B9                 mov     [rbx+240h], rdi
.text:000000018000F8C0                 mov     [rbx+1C8h], rdi
.text:000000018000F8C7                 mov     [rbx+1D0h], rdi
.text:000000018000F8CE                 mov     [rbx+1D8h], rdi
.text:000000018000F8D5                 mov     [rbx+1F8h], rdi
.text:000000018000F8DC                 mov     [rbx+228h], rdi
.text:000000018000F8E3                 mov     [rbx+1E0h], rdi
.text:000000018000F8EA                 mov     [rbx+230h], rbx
.text:000000018000F8F1                 mov     [rbx+1E8h], rbx
.text:000000018000F8F8                 mov     word ptr [rbx+238h], 101h
.text:000000018000F901                 mov     word ptr [rbx+1F0h], 100h
.text:000000018000F90A                 mov     [rbx+18h], edi
.text:000000018000F90D                 call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
.text:000000018000F912                 mov     [rsp+28h+arg_0], rax
.text:000000018000F917                 test    rax, rax
.text:000000018000F91A                 jz      short loc_18000F925
.text:000000018000F91C                 mov     [rax], rdi
.text:000000018000F91F                 mov     [rax+8], rdi
.text:000000018000F923                 jmp     short loc_18000F928
.text:000000018000F925 ; ---------------------------------------------------------------------------
.text:000000018000F925
.text:000000018000F925 loc_18000F925:                          ; CODE XREF: sub_18000F830+EA↑j
.text:000000018000F925                 mov     rax, rdi
.text:000000018000F928
.text:000000018000F928 loc_18000F928:                          ; CODE XREF: sub_18000F830+F3↑j
.text:000000018000F928                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:000000018000F92F                 mov     [rbx+1B0h], rax
.text:000000018000F936                 call    cs:InitializeCriticalSection
.text:000000018000F93C                 mov     byte ptr [rbx+78h], 1
.text:000000018000F940                 mov     ecx, cs:dword_1800194C0
.text:000000018000F946                 lea     eax, [rcx+1]
.text:000000018000F949                 mov     cs:dword_1800194C0, eax
.text:000000018000F94F                 mov     [rbx+8], ecx
.text:000000018000F952                 mov     rbx, [rsp+28h+arg_8]
.text:000000018000F957                 add     rsp, 20h
.text:000000018000F95B                 pop     rdi
.text:000000018000F95C                 retn
.text:000000018000F95C sub_18000F830   endp
.text:000000018000F95C
.text:000000018000F95C ; ---------------------------------------------------------------------------
.text:000000018000F95D algn_18000F95D:                         ; DATA XREF: .pdata:000000018001CE1C↓o
.text:000000018000F95D                 align 20h
.text:000000018000F960
.text:000000018000F960 ; =============== S U B R O U T I N E =======================================
.text:000000018000F960
.text:000000018000F960
.text:000000018000F960 sub_18000F960   proc near               ; CODE XREF: sub_18000CFD0+28F↑p
.text:000000018000F960                                         ; DATA XREF: .pdata:000000018001CE28↓o
.text:000000018000F960
.text:000000018000F960 ppResult        = qword ptr -1F8h
.text:000000018000F960 pHints          = ADDRINFOA ptr -1F0h
.text:000000018000F960 WSAData         = WSAData ptr -1B8h
.text:000000018000F960 var_18          = qword ptr -18h
.text:000000018000F960 var_8           = byte ptr -8
.text:000000018000F960 arg_8           = qword ptr  10h
.text:000000018000F960 arg_10          = qword ptr  18h
.text:000000018000F960
.text:000000018000F960 ; __unwind { // __GSHandlerCheck
.text:000000018000F960                 mov     [rsp+arg_8], rbx
.text:000000018000F965                 mov     [rsp+arg_10], rsi
.text:000000018000F96A                 push    rdi
.text:000000018000F96B                 sub     rsp, 210h
.text:000000018000F972                 mov     rax, cs:__security_cookie
.text:000000018000F979                 xor     rax, rsp
.text:000000018000F97C                 mov     [rsp+218h+var_18], rax
.text:000000018000F984                 movzx   esi, cl
.text:000000018000F987                 xor     edx, edx        ; Val
.text:000000018000F989                 lea     rcx, [rsp+218h+WSAData] ; void *
.text:000000018000F98E                 mov     r8d, 198h       ; Size
.text:000000018000F994                 xor     dil, dil
.text:000000018000F997                 call    memset
.text:000000018000F99C                 mov     ebx, 2
.text:000000018000F9A1                 lea     rdx, [rsp+218h+WSAData] ; lpWSAData
.text:000000018000F9A6                 mov     ecx, ebx        ; wVersionRequested
.text:000000018000F9A8                 call    cs:WSAStartup
.text:000000018000F9AE                 test    eax, eax
.text:000000018000F9B0                 jnz     loc_18000FA5B
.text:000000018000F9B6                 test    sil, sil
.text:000000018000F9B9                 mov     [rsp+218h+ppResult], 0
.text:000000018000F9C2                 mov     eax, 17h
.text:000000018000F9C7                 mov     [rsp+218h+pHints.ai_socktype], 1
.text:000000018000F9CF                 cmovnz  ebx, eax
.text:000000018000F9D2                 mov     [rsp+218h+pHints.ai_protocol], 6
.text:000000018000F9DA                 lea     rax, pNodeName  ; "::1"
.text:000000018000F9E1                 mov     [rsp+218h+pHints.ai_family], ebx
.text:000000018000F9E5                 xorps   xmm0, xmm0
.text:000000018000F9E8                 mov     [rsp+218h+pHints.ai_flags], 4
.text:000000018000F9F0                 xorps   xmm1, xmm1
.text:000000018000F9F3                 lea     rcx, a127001_0  ; "127.0.0.1"
.text:000000018000F9FA                 cmovnz  rcx, rax        ; pNodeName
.text:000000018000F9FE                 lea     r9, [rsp+218h+ppResult] ; ppResult
.text:000000018000FA03                 xor     edx, edx        ; pServiceName
.text:000000018000FA05                 lea     r8, [rsp+218h+pHints] ; pHints
.text:000000018000FA0A                 movdqu  xmmword ptr [rsp+218h+pHints.ai_addrlen], xmm0
.text:000000018000FA10                 movdqu  xmmword ptr [rsp+218h+pHints.ai_addr], xmm1
.text:000000018000FA16                 call    cs:getaddrinfo
.text:000000018000FA1C                 test    eax, eax
.text:000000018000FA1E                 jnz     short loc_18000FA55
.text:000000018000FA20                 mov     rcx, [rsp+218h+ppResult] ; pAddrInfo
.text:000000018000FA25                 test    rcx, rcx
.text:000000018000FA28                 jz      short loc_18000FA55
.text:000000018000FA2A                 mov     rax, rcx
.text:000000018000FA2D                 nop     dword ptr [rax]
.text:000000018000FA30
.text:000000018000FA30 loc_18000FA30:                          ; CODE XREF: sub_18000F960+E8↓j
.text:000000018000FA30                 cmp     ebx, [rax+4]
.text:000000018000FA33                 jnz     short loc_18000FA41
.text:000000018000FA35                 cmp     dword ptr [rax+0Ch], 6
.text:000000018000FA39                 jnz     short loc_18000FA41
.text:000000018000FA3B                 cmp     dword ptr [rax+8], 1
.text:000000018000FA3F                 jz      short loc_18000FA4C
.text:000000018000FA41
.text:000000018000FA41 loc_18000FA41:                          ; CODE XREF: sub_18000F960+D3↑j
.text:000000018000FA41                                         ; sub_18000F960+D9↑j
.text:000000018000FA41                 mov     rax, [rax+28h]
.text:000000018000FA45                 test    rax, rax
.text:000000018000FA48                 jnz     short loc_18000FA30
.text:000000018000FA4A                 jmp     short loc_18000FA4F
.text:000000018000FA4C ; ---------------------------------------------------------------------------
.text:000000018000FA4C
.text:000000018000FA4C loc_18000FA4C:                          ; CODE XREF: sub_18000F960+DF↑j
.text:000000018000FA4C                 mov     dil, 1
.text:000000018000FA4F
.text:000000018000FA4F loc_18000FA4F:                          ; CODE XREF: sub_18000F960+EA↑j
.text:000000018000FA4F                 call    cs:freeaddrinfo
.text:000000018000FA55
.text:000000018000FA55 loc_18000FA55:                          ; CODE XREF: sub_18000F960+BE↑j
.text:000000018000FA55                                         ; sub_18000F960+C8↑j
.text:000000018000FA55                 call    cs:WSACleanup
.text:000000018000FA5B
.text:000000018000FA5B loc_18000FA5B:                          ; CODE XREF: sub_18000F960+50↑j
.text:000000018000FA5B                 movzx   eax, dil
.text:000000018000FA5F                 mov     rcx, [rsp+218h+var_18]
.text:000000018000FA67                 xor     rcx, rsp        ; StackCookie
.text:000000018000FA6A                 call    __security_check_cookie
.text:000000018000FA6F                 lea     r11, [rsp+218h+var_8]
.text:000000018000FA77                 mov     rbx, [r11+18h]
.text:000000018000FA7B                 mov     rsi, [r11+20h]
.text:000000018000FA7F                 mov     rsp, r11
.text:000000018000FA82                 pop     rdi
.text:000000018000FA83                 retn
.text:000000018000FA83 ; } // starts at 18000F960
.text:000000018000FA83 sub_18000F960   endp
.text:000000018000FA83
.text:000000018000FA83 ; ---------------------------------------------------------------------------
.text:000000018000FA84 algn_18000FA84:                         ; DATA XREF: .pdata:000000018001CE28↓o
.text:000000018000FA84                 align 10h
.text:000000018000FA90
.text:000000018000FA90 ; =============== S U B R O U T I N E =======================================
.text:000000018000FA90
.text:000000018000FA90
.text:000000018000FA90 sub_18000FA90   proc near               ; CODE XREF: sub_18000DF60+298↑p
.text:000000018000FA90                                         ; sub_18000DF60+3C1↑p
.text:000000018000FA90                                         ; DATA XREF: ...
.text:000000018000FA90
.text:000000018000FA90 lpOverlapped    = qword ptr -28h
.text:000000018000FA90 var_20          = qword ptr -20h
.text:000000018000FA90 lpCompletionRoutine= qword ptr -18h
.text:000000018000FA90 Flags           = dword ptr  8
.text:000000018000FA90
.text:000000018000FA90                 push    rbx
.text:000000018000FA92                 sub     rsp, 40h
.text:000000018000FA96                 xor     r8d, r8d
.text:000000018000FA99                 lea     r9, [rcx+28h]   ; lpNumberOfBytesRecvd
.text:000000018000FA9D                 cmp     dword ptr [rcx+18h], 2
.text:000000018000FAA1                 mov     rbx, rcx
.text:000000018000FAA4                 mov     [r9], r8d
.text:000000018000FAA7                 jnz     loc_18000FB66
.text:000000018000FAAD                 mov     eax, [rcx+1A8h]
.text:000000018000FAB3                 lea     rdx, [rcx+1C8h]
.text:000000018000FABA                 add     eax, [rcx+58h]
.text:000000018000FABD                 xorps   xmm0, xmm0
.text:000000018000FAC0                 sub     eax, [rcx+68h]
.text:000000018000FAC3                 movups  xmmword ptr [rdx], xmm0
.text:000000018000FAC6                 xor     ecx, ecx
.text:000000018000FAC8                 mov     [rsp+48h+Flags], r8d
.text:000000018000FACD                 mov     [rdx+10h], rcx
.text:000000018000FAD1                 mov     [rbx+200h], eax
.text:000000018000FAD7                 mov     rax, [rbx+68h]
.text:000000018000FADB                 mov     [rbx+208h], rax
.text:000000018000FAE2                 lock inc dword ptr [rbx+260h]
.text:000000018000FAE9                 mov     ecx, [rbx+24h]
.text:000000018000FAEC                 test    ecx, ecx
.text:000000018000FAEE                 jz      short loc_18000FB21
.text:000000018000FAF0                 cmp     ecx, 1
.text:000000018000FAF3                 jnz     short loc_18000FB66
.text:000000018000FAF5                 mov     r8d, [rbx+200h] ; nNumberOfBytesToRead
.text:000000018000FAFC                 xor     r9d, r9d        ; lpNumberOfBytesRead
.text:000000018000FAFF                 mov     rcx, [rbx+10h]  ; hFile
.text:000000018000FB03                 mov     [rsp+48h+lpOverlapped], rdx ; lpOverlapped
.text:000000018000FB08                 mov     rdx, [rbx+208h] ; lpBuffer
.text:000000018000FB0F                 call    cs:ReadFile
.text:000000018000FB15                 test    eax, eax
.text:000000018000FB17                 jnz     short loc_18000FB66
.text:000000018000FB19                 call    cs:GetLastError
.text:000000018000FB1F                 jmp     short loc_18000FB57
.text:000000018000FB21 ; ---------------------------------------------------------------------------
.text:000000018000FB21
.text:000000018000FB21 loc_18000FB21:                          ; CODE XREF: sub_18000FA90+5E↑j
.text:000000018000FB21                 mov     rcx, [rbx+10h]  ; s
.text:000000018000FB25                 lea     rax, [rsp+48h+Flags]
.text:000000018000FB2A                 mov     [rsp+48h+lpCompletionRoutine], r8 ; lpCompletionRoutine
.text:000000018000FB2F                 mov     r8d, 1          ; dwBufferCount
.text:000000018000FB35                 mov     [rsp+48h+var_20], rdx ; lpOverlapped
.text:000000018000FB3A                 lea     rdx, [rbx+200h] ; lpBuffers
.text:000000018000FB41                 mov     [rsp+48h+lpOverlapped], rax ; lpFlags
.text:000000018000FB46                 call    cs:WSARecv
.text:000000018000FB4C                 cmp     eax, 0FFFFFFFFh
.text:000000018000FB4F                 jnz     short loc_18000FB66
.text:000000018000FB51                 call    cs:WSAGetLastError
.text:000000018000FB57
.text:000000018000FB57 loc_18000FB57:                          ; CODE XREF: sub_18000FA90+8F↑j
.text:000000018000FB57                 cmp     eax, 3E5h
.text:000000018000FB5C                 jz      short loc_18000FB66
.text:000000018000FB5E                 mov     rcx, rbx
.text:000000018000FB61                 call    sub_18000FDF0
.text:000000018000FB66
.text:000000018000FB66 loc_18000FB66:                          ; CODE XREF: sub_18000FA90+17↑j
.text:000000018000FB66                                         ; sub_18000FA90+63↑j ...
.text:000000018000FB66                 add     rsp, 40h
.text:000000018000FB6A                 pop     rbx
.text:000000018000FB6B                 retn
.text:000000018000FB6B sub_18000FA90   endp
.text:000000018000FB6B
.text:000000018000FB6B ; ---------------------------------------------------------------------------
.text:000000018000FB6C algn_18000FB6C:                         ; DATA XREF: .pdata:000000018001CE34↓o
.text:000000018000FB6C                 align 10h
.text:000000018000FB70
.text:000000018000FB70 ; =============== S U B R O U T I N E =======================================
.text:000000018000FB70
.text:000000018000FB70
.text:000000018000FB70 sub_18000FB70   proc near               ; CODE XREF: sub_18000DA20+19A↑p
.text:000000018000FB70                                         ; sub_18000DCA0+40↑p
.text:000000018000FB70                                         ; DATA XREF: ...
.text:000000018000FB70
.text:000000018000FB70 optlen          = qword ptr -18h
.text:000000018000FB70 optval          = byte ptr  8
.text:000000018000FB70 arg_8           = dword ptr  10h
.text:000000018000FB70 arg_10          = qword ptr  18h
.text:000000018000FB70
.text:000000018000FB70                 mov     [rsp+arg_10], rbx
.text:000000018000FB75                 push    rdi
.text:000000018000FB76                 sub     rsp, 30h
.text:000000018000FB7A                 xor     dil, dil
.text:000000018000FB7D                 mov     dword ptr [rsp+38h+optval], 0
.text:000000018000FB85                 cmp     dword ptr [rcx+24h], 0
.text:000000018000FB89                 mov     rbx, rcx
.text:000000018000FB8C                 jnz     short loc_18000FBE7
.text:000000018000FB8E                 cmp     dword ptr [rcx+18h], 1
.text:000000018000FB92                 jnz     short loc_18000FBE7
.text:000000018000FB94                 mov     rcx, [rcx+10h]  ; s
.text:000000018000FB98                 lea     rax, [rsp+38h+arg_8]
.text:000000018000FB9D                 lea     r9, [rsp+38h+optval] ; optval
.text:000000018000FBA2                 mov     [rsp+38h+optlen], rax ; optlen
.text:000000018000FBA7                 mov     edx, 0FFFFh     ; level
.text:000000018000FBAC                 mov     [rsp+38h+arg_8], 4
.text:000000018000FBB4                 mov     r8d, 700Ch      ; optname
.text:000000018000FBBA                 call    cs:getsockopt
.text:000000018000FBC0                 test    eax, eax
.text:000000018000FBC2                 jnz     short loc_18000FBE7
.text:000000018000FBC4                 mov     eax, dword ptr [rsp+38h+optval]
.text:000000018000FBC8                 add     eax, 0FFFFFFFCh
.text:000000018000FBCB                 cmp     eax, 0FFFFFFFAh
.text:000000018000FBCE                 ja      short loc_18000FBE7
.text:000000018000FBD0                 mov     rax, [rbx]
.text:000000018000FBD3                 mov     edx, 7
.text:000000018000FBD8                 mov     r8d, 0C000013Fh
.text:000000018000FBDE                 mov     rcx, rbx
.text:000000018000FBE1                 call    qword ptr [rax+10h]
.text:000000018000FBE4                 mov     dil, 1
.text:000000018000FBE7
.text:000000018000FBE7 loc_18000FBE7:                          ; CODE XREF: sub_18000FB70+1C↑j
.text:000000018000FBE7                                         ; sub_18000FB70+22↑j ...
.text:000000018000FBE7                 cmp     dword ptr [rbx+268h], 0
.text:000000018000FBEE                 mov     ecx, 1
.text:000000018000FBF3                 mov     rbx, [rsp+38h+arg_10]
.text:000000018000FBF8                 movzx   eax, dil
.text:000000018000FBFC                 cmovnz  eax, ecx
.text:000000018000FBFF                 add     rsp, 30h
.text:000000018000FC03                 pop     rdi
.text:000000018000FC04                 retn
.text:000000018000FC04 sub_18000FB70   endp
.text:000000018000FC04
.text:000000018000FC04 ; ---------------------------------------------------------------------------
.text:000000018000FC05 algn_18000FC05:                         ; DATA XREF: .pdata:000000018001CE40↓o
.text:000000018000FC05                 align 10h
.text:000000018000FC10
.text:000000018000FC10 ; =============== S U B R O U T I N E =======================================
.text:000000018000FC10
.text:000000018000FC10
.text:000000018000FC10 sub_18000FC10   proc near               ; CODE XREF: __scrt_dllmain_uninitialize_c:loc_180010939↓p
.text:000000018000FC10                                         ; DATA XREF: .rdata:0000000180012858↓o
.text:000000018000FC10                 xor     eax, eax
.text:000000018000FC12                 retn
.text:000000018000FC12 sub_18000FC10   endp
.text:000000018000FC12
.text:000000018000FC12 ; ---------------------------------------------------------------------------
.text:000000018000FC13                 align 20h
.text:000000018000FC20
.text:000000018000FC20 ; =============== S U B R O U T I N E =======================================
.text:000000018000FC20
.text:000000018000FC20
.text:000000018000FC20 sub_18000FC20   proc near               ; CODE XREF: Function+100↑p
.text:000000018000FC20                                         ; Function+12A↑p
.text:000000018000FC20                                         ; DATA XREF: ...
.text:000000018000FC20
.text:000000018000FC20 arg_0           = qword ptr  8
.text:000000018000FC20 arg_8           = qword ptr  10h
.text:000000018000FC20 arg_10          = qword ptr  18h
.text:000000018000FC20
.text:000000018000FC20                 mov     [rsp+arg_0], rbx
.text:000000018000FC25                 mov     [rsp+arg_8], rbp
.text:000000018000FC2A                 mov     [rsp+arg_10], rsi
.text:000000018000FC2F                 push    rdi
.text:000000018000FC30                 sub     rsp, 20h
.text:000000018000FC34                 mov     ebp, [rcx+68h]
.text:000000018000FC37                 mov     rbx, rdx
.text:000000018000FC3A                 sub     ebp, [rcx+70h]
.text:000000018000FC3D                 mov     rdi, rcx
.text:000000018000FC40                 cmp     ebp, 4
.text:000000018000FC43                 jb      loc_18000FD0C
.text:000000018000FC49                 mov     rax, [rcx+70h]
.text:000000018000FC4D                 movsxd  rsi, dword ptr [rax]
.text:000000018000FC50                 cmp     esi, [rcx+25Ch]
.text:000000018000FC56                 ja      loc_18000FD02
.text:000000018000FC5C                 cmp     esi, 4
.text:000000018000FC5F                 jb      short loc_18000FCD4
.text:000000018000FC61                 cmp     esi, [rdx+4]
.text:000000018000FC64                 jbe     short loc_18000FC8A
.text:000000018000FC66                 mov     rcx, [rdx+8]    ; Block
.text:000000018000FC6A                 mov     eax, esi
.text:000000018000FC6C                 mov     [rdx+4], esi
.text:000000018000FC6F                 test    rcx, rcx
.text:000000018000FC72                 jz      short loc_18000FC7D
.text:000000018000FC74                 call    cs:__imp_free
.text:000000018000FC7A                 mov     eax, [rbx+4]
.text:000000018000FC7D
.text:000000018000FC7D loc_18000FC7D:                          ; CODE XREF: sub_18000FC20+52↑j
.text:000000018000FC7D                 movsxd  rcx, eax        ; Size
.text:000000018000FC80                 call    cs:__imp_malloc
.text:000000018000FC86                 mov     [rbx+8], rax
.text:000000018000FC8A
.text:000000018000FC8A loc_18000FC8A:                          ; CODE XREF: sub_18000FC20+44↑j
.text:000000018000FC8A                 mov     rcx, [rbx+8]    ; void *
.text:000000018000FC8E                 mov     [rbx], esi
.text:000000018000FC90                 test    rcx, rcx
.text:000000018000FC93                 jz      short loc_18000FCCD
.text:000000018000FC95                 cmp     ebp, esi
.text:000000018000FC97                 jl      short loc_18000FCC6
.text:000000018000FC99                 mov     rdx, [rdi+70h]  ; Src
.text:000000018000FC9D                 mov     r8, rsi         ; Size
.text:000000018000FCA0                 call    memcpy
.text:000000018000FCA5                 movsxd  rax, dword ptr [rbx]
.text:000000018000FCA8                 add     [rdi+70h], rax
.text:000000018000FCAC                 mov     rax, [rdi+70h]
.text:000000018000FCB0                 cmp     rax, [rdi+68h]
.text:000000018000FCB4                 jnz     short loc_18000FCC2
.text:000000018000FCB6                 mov     rax, [rdi+58h]
.text:000000018000FCBA                 mov     [rdi+68h], rax
.text:000000018000FCBE                 mov     [rdi+70h], rax
.text:000000018000FCC2
.text:000000018000FCC2 loc_18000FCC2:                          ; CODE XREF: sub_18000FC20+94↑j
.text:000000018000FCC2                 xor     ecx, ecx
.text:000000018000FCC4                 jmp     short loc_18000FCD9
.text:000000018000FCC6 ; ---------------------------------------------------------------------------
.text:000000018000FCC6
.text:000000018000FCC6 loc_18000FCC6:                          ; CODE XREF: sub_18000FC20+77↑j
.text:000000018000FCC6                 mov     ecx, 1
.text:000000018000FCCB                 jmp     short loc_18000FCD9
.text:000000018000FCCD ; ---------------------------------------------------------------------------
.text:000000018000FCCD
.text:000000018000FCCD loc_18000FCCD:                          ; CODE XREF: sub_18000FC20+73↑j
.text:000000018000FCCD                 mov     ecx, 4
.text:000000018000FCD2                 jmp     short loc_18000FCD9
.text:000000018000FCD4 ; ---------------------------------------------------------------------------
.text:000000018000FCD4
.text:000000018000FCD4 loc_18000FCD4:                          ; CODE XREF: sub_18000FC20+3F↑j
.text:000000018000FCD4                 mov     ecx, 3
.text:000000018000FCD9
.text:000000018000FCD9 loc_18000FCD9:                          ; CODE XREF: sub_18000FC20+A4↑j
.text:000000018000FCD9                                         ; sub_18000FC20+AB↑j ...
.text:000000018000FCD9                 mov     r8d, [rdi+68h]
.text:000000018000FCDD                 mov     esi, ecx
.text:000000018000FCDF                 sub     r8d, [rdi+70h]
.text:000000018000FCE3                 test    ecx, ecx
.text:000000018000FCE5                 jnz     short loc_18000FD19
.text:000000018000FCE7                 mov     rdx, [rdi+70h]
.text:000000018000FCEB                 mov     rax, [rdi+68h]
.text:000000018000FCEF                 sub     rax, rdx
.text:000000018000FCF2                 cmp     rax, 4
.text:000000018000FCF6                 jb      short loc_18000FD19
.text:000000018000FCF8                 cmp     [rdx], r8d
.text:000000018000FCFB                 ja      short loc_18000FD19
.text:000000018000FCFD                 jmp     loc_18000FDD0
.text:000000018000FD02 ; ---------------------------------------------------------------------------
.text:000000018000FD02
.text:000000018000FD02 loc_18000FD02:                          ; CODE XREF: sub_18000FC20+36↑j
.text:000000018000FD02                 mov     eax, 2
.text:000000018000FD07                 jmp     loc_18000FDD2
.text:000000018000FD0C ; ---------------------------------------------------------------------------
.text:000000018000FD0C
.text:000000018000FD0C loc_18000FD0C:                          ; CODE XREF: sub_18000FC20+23↑j
.text:000000018000FD0C                 mov     r8d, [rcx+68h]
.text:000000018000FD10                 mov     esi, 1
.text:000000018000FD15                 sub     r8d, [rcx+70h]
.text:000000018000FD19
.text:000000018000FD19 loc_18000FD19:                          ; CODE XREF: sub_18000FC20+C5↑j
.text:000000018000FD19                                         ; sub_18000FC20+D6↑j ...
.text:000000018000FD19                 mov     rcx, [rdi+58h]  ; void *
.text:000000018000FD1D                 mov     rdx, [rdi+68h]
.text:000000018000FD21                 movsxd  r9, dword ptr [rdi+1A8h]
.text:000000018000FD28                 sub     rdx, rcx
.text:000000018000FD2B                 cmp     rdx, r9
.text:000000018000FD2E                 jl      loc_18000FDD0
.text:000000018000FD34                 mov     rdx, [rdi+70h]  ; Src
.text:000000018000FD38                 cmp     rdx, rcx
.text:000000018000FD3B                 jbe     short loc_18000FD59
.text:000000018000FD3D                 movsxd  rbx, r8d
.text:000000018000FD40                 mov     r8, rbx         ; Size
.text:000000018000FD43                 call    memmove
.text:000000018000FD48                 mov     rax, [rdi+58h]
.text:000000018000FD4C                 mov     [rdi+70h], rax
.text:000000018000FD50                 add     rax, rbx
.text:000000018000FD53                 mov     [rdi+68h], rax
.text:000000018000FD57                 jmp     short loc_18000FDD0
.text:000000018000FD59 ; ---------------------------------------------------------------------------
.text:000000018000FD59
.text:000000018000FD59 loc_18000FD59:                          ; CODE XREF: sub_18000FC20+11B↑j
.text:000000018000FD59                 cmp     r9d, 100000h
.text:000000018000FD60                 jnb     short loc_18000FDB1
.text:000000018000FD62                 lea     ecx, [r9+800h]  ; Size
.text:000000018000FD69                 call    j_??2@YAPEAX_K@Z ; operator new(unsigned __int64)
.text:000000018000FD6E                 movsxd  r8, dword ptr [rdi+1A8h] ; Size
.text:000000018000FD75                 mov     rcx, rax        ; void *
.text:000000018000FD78                 mov     rdx, [rdi+58h]  ; Src
.text:000000018000FD7C                 mov     rbx, rax
.text:000000018000FD7F                 call    memcpy
.text:000000018000FD84                 mov     rcx, [rdi+58h]  ; Block
.text:000000018000FD88                 call    j_j_free
.text:000000018000FD8D                 movsxd  rax, dword ptr [rdi+1A8h]
.text:000000018000FD94                 mov     [rdi+70h], rbx
.text:000000018000FD98                 mov     [rdi+58h], rbx
.text:000000018000FD9C                 lea     rcx, [rbx+rax]
.text:000000018000FDA0                 add     eax, 800h
.text:000000018000FDA5                 mov     [rdi+1A8h], eax
.text:000000018000FDAB                 mov     [rdi+68h], rcx
.text:000000018000FDAF                 jmp     short loc_18000FDD0
.text:000000018000FDB1 ; ---------------------------------------------------------------------------
.text:000000018000FDB1
.text:000000018000FDB1 loc_18000FDB1:                          ; CODE XREF: sub_18000FC20+140↑j
.text:000000018000FDB1                 mov     rcx, [rbx+8]    ; Block
.text:000000018000FDB5                 mov     dword ptr [rbx], 0FFFFFFFFh
.text:000000018000FDBB                 test    rcx, rcx
.text:000000018000FDBE                 jz      short loc_18000FDC6
.text:000000018000FDC0                 call    cs:__imp_free
.text:000000018000FDC6
.text:000000018000FDC6 loc_18000FDC6:                          ; CODE XREF: sub_18000FC20+19E↑j
.text:000000018000FDC6                 mov     qword ptr [rbx+8], 0
.text:000000018000FDCE                 xor     esi, esi
.text:000000018000FDD0
.text:000000018000FDD0 loc_18000FDD0:                          ; CODE XREF: sub_18000FC20+DD↑j
.text:000000018000FDD0                                         ; sub_18000FC20+10E↑j ...
.text:000000018000FDD0                 mov     eax, esi
.text:000000018000FDD2
.text:000000018000FDD2 loc_18000FDD2:                          ; CODE XREF: sub_18000FC20+E7↑j
.text:000000018000FDD2                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000FDD7                 mov     rbp, [rsp+28h+arg_8]
.text:000000018000FDDC                 mov     rsi, [rsp+28h+arg_10]
.text:000000018000FDE1                 add     rsp, 20h
.text:000000018000FDE5                 pop     rdi
.text:000000018000FDE6                 retn
.text:000000018000FDE6 sub_18000FC20   endp
.text:000000018000FDE6
.text:000000018000FDE6 ; ---------------------------------------------------------------------------
.text:000000018000FDE7 algn_18000FDE7:                         ; DATA XREF: .pdata:000000018001CE4C↓o
.text:000000018000FDE7                 align 10h
.text:000000018000FDF0
.text:000000018000FDF0 ; =============== S U B R O U T I N E =======================================
.text:000000018000FDF0
.text:000000018000FDF0
.text:000000018000FDF0 sub_18000FDF0   proc near               ; CODE XREF: Function+244↑p
.text:000000018000FDF0                                         ; Function+262↑p ...
.text:000000018000FDF0
.text:000000018000FDF0 arg_0           = qword ptr  8
.text:000000018000FDF0
.text:000000018000FDF0                 push    rbx
.text:000000018000FDF2                 sub     rsp, 20h
.text:000000018000FDF6                 mov     rbx, rcx
.text:000000018000FDF9                 mov     eax, 0FFFFFFFFh
.text:000000018000FDFE                 lock xadd [rcx+260h], eax
.text:000000018000FE06                 cmp     eax, 1
.text:000000018000FE09                 jnz     short loc_18000FE89
.text:000000018000FE0B                 add     rcx, 30h ; '0'
.text:000000018000FE0F
.text:000000018000FE0F loc_18000FE0F:                          ; DATA XREF: .rdata:0000000180016344↓o
.text:000000018000FE0F                                         ; .rdata:0000000180016354↓o ...
.text:000000018000FE0F                 mov     [rsp+28h+arg_0], rdi
.text:000000018000FE14                 call    sub_18000F7C0
.text:000000018000FE19                 mov     rcx, [rbx+58h]  ; Block
.text:000000018000FE1D                 test    rcx, rcx
.text:000000018000FE20                 jz      short loc_18000FE27
.text:000000018000FE22                 call    j_j_free
.text:000000018000FE27
.text:000000018000FE27 loc_18000FE27:                          ; CODE XREF: sub_18000FDF0+30↑j
.text:000000018000FE27                 mov     rdi, [rbx+1B0h]
.text:000000018000FE2E                 test    rdi, rdi
.text:000000018000FE31                 jz      short loc_18000FE4F
.text:000000018000FE33                 mov     rcx, [rdi+8]    ; Block
.text:000000018000FE37                 test    rcx, rcx
.text:000000018000FE3A                 jz      short loc_18000FE42
.text:000000018000FE3C                 call    cs:__imp_free
.text:000000018000FE42
.text:000000018000FE42 loc_18000FE42:                          ; CODE XREF: sub_18000FDF0+4A↑j
.text:000000018000FE42                 mov     edx, 10h
.text:000000018000FE47                 mov     rcx, rdi        ; Block
.text:000000018000FE4A                 call    j_j_free
.text:000000018000FE4F
.text:000000018000FE4F loc_18000FE4F:                          ; CODE XREF: sub_18000FDF0+41↑j
.text:000000018000FE4F                 mov     rdi, [rsp+28h+arg_0]
.text:000000018000FE54                 xor     eax, eax
.text:000000018000FE56                 mov     [rbx+68h], rax
.text:000000018000FE5A                 mov     [rbx+70h], rax
.text:000000018000FE5E                 cmp     [rbx+78h], al
.text:000000018000FE61                 jz      short loc_18000FE74
.text:000000018000FE63
.text:000000018000FE63 loc_18000FE63:                          ; DATA XREF: .pdata:000000018001CE64↓o
.text:000000018000FE63                                         ; .pdata:000000018001CE70↓o
.text:000000018000FE63                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:000000018000FE6A                 call    cs:DeleteCriticalSection
.text:000000018000FE70                 mov     byte ptr [rbx+78h], 0
.text:000000018000FE74
.text:000000018000FE74 loc_18000FE74:                          ; CODE XREF: sub_18000FDF0+71↑j
.text:000000018000FE74                 mov     rax, [rbx]
.text:000000018000FE77                 mov     edx, 1
.text:000000018000FE7C                 mov     rcx, rbx
.text:000000018000FE7F                 call    qword ptr [rax]
.text:000000018000FE81                 mov     al, 1
.text:000000018000FE83                 add     rsp, 20h
.text:000000018000FE87                 pop     rbx
.text:000000018000FE88                 retn
.text:000000018000FE89 ; ---------------------------------------------------------------------------
.text:000000018000FE89
.text:000000018000FE89 loc_18000FE89:                          ; CODE XREF: sub_18000FDF0+19↑j
.text:000000018000FE89                 xor     al, al
.text:000000018000FE8B                 add     rsp, 20h
.text:000000018000FE8F                 pop     rbx
.text:000000018000FE90                 retn
.text:000000018000FE90 sub_18000FDF0   endp
.text:000000018000FE90
.text:000000018000FE90 ; ---------------------------------------------------------------------------
.text:000000018000FE91 algn_18000FE91:                         ; DATA XREF: .pdata:000000018001CE70↓o
.text:000000018000FE91                 align 20h
.text:000000018000FEA0
.text:000000018000FEA0 ; =============== S U B R O U T I N E =======================================
.text:000000018000FEA0
.text:000000018000FEA0
.text:000000018000FEA0 sub_18000FEA0   proc near               ; CODE XREF: sub_18000E590+9↑p
.text:000000018000FEA0                                         ; DATA XREF: .rdata:0000000180012848↓o ...
.text:000000018000FEA0
.text:000000018000FEA0 arg_0           = qword ptr  8
.text:000000018000FEA0 arg_8           = qword ptr  10h
.text:000000018000FEA0
.text:000000018000FEA0                 mov     [rsp+arg_0], rbx
.text:000000018000FEA5                 mov     [rsp+arg_8], rsi
.text:000000018000FEAA                 push    rdi
.text:000000018000FEAB                 sub     rsp, 20h
.text:000000018000FEAF                 mov     rbx, rcx
.text:000000018000FEB2                 add     rcx, 30h ; '0'
.text:000000018000FEB6                 call    sub_18000F7C0
.text:000000018000FEBB                 cmp     byte ptr [rbx+78h], 0
.text:000000018000FEBF                 jz      short loc_18000FECE
.text:000000018000FEC1                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:000000018000FEC8                 call    cs:EnterCriticalSection
.text:000000018000FECE
.text:000000018000FECE loc_18000FECE:                          ; CODE XREF: sub_18000FEA0+1F↑j
.text:000000018000FECE                 mov     rcx, [rbx+240h] ; Block
.text:000000018000FED5                 call    cs:__imp_free
.text:000000018000FEDB                 mov     qword ptr [rbx+240h], 0
.text:000000018000FEE6                 mov     esi, 1
.text:000000018000FEEB                 mov     byte ptr [rbx+50h], 0
.text:000000018000FEEF                 mov     eax, cs:dword_1800194C4
.text:000000018000FEF5                 add     eax, 1
.text:000000018000FEF8                 cmovz   eax, esi
.text:000000018000FEFB                 mov     cs:dword_1800194C4, eax
.text:000000018000FF01                 cmp     byte ptr [rbx+78h], 0
.text:000000018000FF05                 mov     [rbx+258h], eax
.text:000000018000FF0B                 mov     dword ptr [rbx+270h], 0FFFFFFFFh
.text:000000018000FF15                 jz      short loc_18000FF24
.text:000000018000FF17                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:000000018000FF1E                 call    cs:LeaveCriticalSection
.text:000000018000FF24
.text:000000018000FF24 loc_18000FF24:                          ; CODE XREF: sub_18000FEA0+75↑j
.text:000000018000FF24                 mov     rax, [rbx+58h]
.text:000000018000FF28                 mov     [rbx+68h], rax
.text:000000018000FF2C                 mov     [rbx+70h], rax
.text:000000018000FF30                 cmp     [rbx+24h], esi
.text:000000018000FF33                 jnz     short loc_18000FF95
.text:000000018000FF35                 xor     r9d, r9d        ; lpName
.text:000000018000FF38                 xor     r8d, r8d        ; bInitialState
.text:000000018000FF3B                 mov     edx, esi        ; bManualReset
.text:000000018000FF3D                 xor     ecx, ecx        ; lpEventAttributes
.text:000000018000FF3F                 call    cs:CreateEventA
.text:000000018000FF45                 mov     [rbx+228h], rax
.text:000000018000FF4C                 test    rax, rax
.text:000000018000FF4F                 jnz     short loc_18000FF65
.text:000000018000FF51                 call    cs:GetLastError
.text:000000018000FF57                 mov     edx, eax
.text:000000018000FF59                 lea     rcx, aCreateeventFai ; "CreateEvent failed with %d.\n"
.text:000000018000FF60                 call    sub_180010210
.text:000000018000FF65
.text:000000018000FF65 loc_18000FF65:                          ; CODE XREF: sub_18000FEA0+AF↑j
.text:000000018000FF65                 xor     r9d, r9d        ; lpName
.text:000000018000FF68                 xor     r8d, r8d        ; bInitialState
.text:000000018000FF6B                 mov     edx, esi        ; bManualReset
.text:000000018000FF6D                 xor     ecx, ecx        ; lpEventAttributes
.text:000000018000FF6F                 call    cs:CreateEventA
.text:000000018000FF75                 mov     [rbx+1E0h], rax
.text:000000018000FF7C                 test    rax, rax
.text:000000018000FF7F                 jnz     short loc_18000FF95
.text:000000018000FF81                 call    cs:GetLastError
.text:000000018000FF87                 mov     edx, eax
.text:000000018000FF89                 lea     rcx, aCreateeventFai ; "CreateEvent failed with %d.\n"
.text:000000018000FF90                 call    sub_180010210
.text:000000018000FF95
.text:000000018000FF95 loc_18000FF95:                          ; CODE XREF: sub_18000FEA0+93↑j
.text:000000018000FF95                                         ; sub_18000FEA0+DF↑j
.text:000000018000FF95                 mov     rbx, [rsp+28h+arg_0]
.text:000000018000FF9A                 mov     rsi, [rsp+28h+arg_8]
.text:000000018000FF9F                 add     rsp, 20h
.text:000000018000FFA3                 pop     rdi
.text:000000018000FFA4                 retn
.text:000000018000FFA4 sub_18000FEA0   endp
.text:000000018000FFA4
.text:000000018000FFA4 ; ---------------------------------------------------------------------------
.text:000000018000FFA5 algn_18000FFA5:                         ; DATA XREF: .pdata:000000018001CE7C↓o
.text:000000018000FFA5                 align 10h
.text:000000018000FFB0
.text:000000018000FFB0 ; =============== S U B R O U T I N E =======================================
.text:000000018000FFB0
.text:000000018000FFB0
.text:000000018000FFB0 sub_18000FFB0   proc near               ; CODE XREF: Function+67↑p
.text:000000018000FFB0                                         ; sub_180010140+65↓p
.text:000000018000FFB0                                         ; DATA XREF: ...
.text:000000018000FFB0
.text:000000018000FFB0 lpOverlapped    = qword ptr -28h
.text:000000018000FFB0 var_20          = qword ptr -20h
.text:000000018000FFB0 lpCompletionRoutine= qword ptr -18h
.text:000000018000FFB0 arg_0           = qword ptr  8
.text:000000018000FFB0 arg_8           = qword ptr  10h
.text:000000018000FFB0 arg_10          = qword ptr  18h
.text:000000018000FFB0 arg_18          = qword ptr  20h
.text:000000018000FFB0
.text:000000018000FFB0                 mov     [rsp+arg_8], rbx
.text:000000018000FFB5                 mov     [rsp+arg_10], rbp
.text:000000018000FFBA                 mov     [rsp+arg_18], rsi
.text:000000018000FFBF                 push    rdi
.text:000000018000FFC0                 sub     rsp, 40h
.text:000000018000FFC4                 movzx   ebx, dl
.text:000000018000FFC7                 mov     rdi, rcx
.text:000000018000FFCA                 test    dl, dl
.text:000000018000FFCC                 jnz     short loc_18000FFDA
.text:000000018000FFCE                 movzx   eax, byte ptr [rcx+50h]
.text:000000018000FFD2                 test    al, al
.text:000000018000FFD4                 jnz     loc_180010128
.text:000000018000FFDA
.text:000000018000FFDA loc_18000FFDA:                          ; CODE XREF: sub_18000FFB0+1C↑j
.text:000000018000FFDA                 mov     rcx, [rcx+240h] ; Block
.text:000000018000FFE1                 call    cs:__imp_free
.text:000000018000FFE7                 xor     ebp, ebp
.text:000000018000FFE9                 mov     [rdi+240h], rbp
.text:000000018000FFF0                 mov     rcx, [rdi+30h]  ; lpCriticalSection
.text:000000018000FFF4                 call    cs:EnterCriticalSection
.text:000000018000FFFA                 mov     rsi, [rdi+38h]
.text:000000018000FFFE                 test    rsi, rsi
.text:0000000180010001                 jz      loc_180010104
.text:0000000180010007                 mov     rax, [rsi]
.text:000000018001000A                 mov     [rdi+38h], rax
.text:000000018001000E                 mov     [rsi], rbp
.text:0000000180010011
.text:0000000180010011 loc_180010011:                          ; DATA XREF: .rdata:00000001800163EC↓o
.text:0000000180010011                                         ; .rdata:00000001800163FC↓o ...
.text:0000000180010011                 mov     [rsp+48h+arg_0], r14
.text:0000000180010016                 cmp     [rdi+38h], rbp
.text:000000018001001A                 jnz     short loc_180010020
.text:000000018001001C                 mov     [rdi+40h], rbp
.text:0000000180010020
.text:0000000180010020 loc_180010020:                          ; CODE XREF: sub_18000FFB0+6A↑j
.text:0000000180010020                 dec     dword ptr [rdi+48h]
.text:0000000180010023                 mov     eax, [rsi+10h]
.text:0000000180010026                 mov     rcx, [rdi+30h]  ; lpCriticalSection
.text:000000018001002A                 sub     [rdi+4Ch], eax
.text:000000018001002D                 call    cs:LeaveCriticalSection
.text:0000000180010033                 mov     eax, [rsi+10h]
.text:0000000180010036                 xor     ecx, ecx        ; Block
.text:0000000180010038                 mov     [rdi+248h], eax
.text:000000018001003E                 mov     rbx, [rsi+8]
.text:0000000180010042                 mov     [rdi+250h], rbx
.text:0000000180010049                 mov     [rsi+8], rbp
.text:000000018001004D                 call    cs:__imp_free
.text:0000000180010053                 mov     edx, 20h ; ' '
.text:0000000180010058                 mov     rcx, rsi        ; Block
.text:000000018001005B                 call    j_j_free
.text:0000000180010060                 lock inc dword ptr [rdi+260h]
.text:0000000180010067                 mov     ecx, [rdi+24h]
.text:000000018001006A                 mov     [rdi+240h], rbx
.text:0000000180010071                 test    ecx, ecx
.text:0000000180010073                 jz      short loc_1800100AD
.text:0000000180010075                 cmp     ecx, 1
.text:0000000180010078                 jnz     short loc_1800100F7
.text:000000018001007A                 mov     r8d, [rdi+248h] ; nNumberOfBytesToWrite
.text:0000000180010081                 lea     rax, [rdi+210h]
.text:0000000180010088                 mov     rdx, [rdi+250h] ; lpBuffer
.text:000000018001008F                 xor     r9d, r9d        ; lpNumberOfBytesWritten
.text:0000000180010092                 mov     rcx, [rdi+10h]  ; hFile
.text:0000000180010096                 mov     [rsp+48h+lpOverlapped], rax ; lpOverlapped
.text:000000018001009B                 call    cs:WriteFile
.text:00000001800100A1                 test    eax, eax
.text:00000001800100A3                 jnz     short loc_1800100F7
.text:00000001800100A5                 call    cs:GetLastError
.text:00000001800100AB                 jmp     short loc_1800100E8
.text:00000001800100AD ; ---------------------------------------------------------------------------
.text:00000001800100AD
.text:00000001800100AD loc_1800100AD:                          ; CODE XREF: sub_18000FFB0+C3↑j
.text:00000001800100AD                 mov     rcx, [rdi+10h]  ; s
.text:00000001800100B1                 lea     rax, [rdi+210h]
.text:00000001800100B8                 mov     [rsp+48h+lpCompletionRoutine], rbp ; lpCompletionRoutine
.text:00000001800100BD                 lea     r9, [rdi+54h]   ; lpNumberOfBytesSent
.text:00000001800100C1                 mov     [rsp+48h+var_20], rax ; lpOverlapped
.text:00000001800100C6                 lea     rdx, [rdi+248h] ; lpBuffers
.text:00000001800100CD                 mov     r8d, 1          ; dwBufferCount
.text:00000001800100D3                 mov     dword ptr [rsp+48h+lpOverlapped], ebp ; dwFlags
.text:00000001800100D7                 call    cs:WSASend
.text:00000001800100DD                 cmp     eax, 0FFFFFFFFh
.text:00000001800100E0                 jnz     short loc_1800100F7
.text:00000001800100E2                 call    cs:WSAGetLastError
.text:00000001800100E8
.text:00000001800100E8 loc_1800100E8:                          ; CODE XREF: sub_18000FFB0+FB↑j
.text:00000001800100E8                 cmp     eax, 3E5h
.text:00000001800100ED                 jz      short loc_1800100F7
.text:00000001800100EF                 mov     rcx, rdi
.text:00000001800100F2                 call    sub_18000FDF0
.text:00000001800100F7
.text:00000001800100F7 loc_1800100F7:                          ; CODE XREF: sub_18000FFB0+C8↑j
.text:00000001800100F7                                         ; sub_18000FFB0+F3↑j ...
.text:00000001800100F7                 mov     r14, [rsp+48h+arg_0]
.text:00000001800100FC                 mov     al, 1
.text:00000001800100FE                 mov     byte ptr [rdi+50h], 1
.text:0000000180010102                 jmp     short loc_18001012A
.text:0000000180010104 ; ---------------------------------------------------------------------------
.text:0000000180010104
.text:0000000180010104 loc_180010104:                          ; CODE XREF: sub_18000FFB0+51↑j
.text:0000000180010104                                         ; DATA XREF: .pdata:000000018001CE94↓o ...
.text:0000000180010104                 mov     rcx, [rdi+30h]  ; lpCriticalSection
.text:0000000180010108                 mov     [rdi+48h], rbp
.text:000000018001010C                 call    cs:LeaveCriticalSection
.text:0000000180010112                 test    bl, bl
.text:0000000180010114                 jz      short loc_180010128
.text:0000000180010116                 mov     [rdi+240h], rbp
.text:000000018001011D                 mov     [rdi+250h], rbp
.text:0000000180010124                 mov     [rdi+50h], bpl
.text:0000000180010128
.text:0000000180010128 loc_180010128:                          ; CODE XREF: sub_18000FFB0+24↑j
.text:0000000180010128                                         ; sub_18000FFB0+164↑j
.text:0000000180010128                 xor     al, al
.text:000000018001012A
.text:000000018001012A loc_18001012A:                          ; CODE XREF: sub_18000FFB0+152↑j
.text:000000018001012A                 mov     rbx, [rsp+48h+arg_8]
.text:000000018001012F                 mov     rbp, [rsp+48h+arg_10]
.text:0000000180010134                 mov     rsi, [rsp+48h+arg_18]
.text:0000000180010139                 add     rsp, 40h
.text:000000018001013D                 pop     rdi
.text:000000018001013E                 retn
.text:000000018001013E sub_18000FFB0   endp
.text:000000018001013E
.text:000000018001013E ; ---------------------------------------------------------------------------
.text:000000018001013F algn_18001013F:                         ; DATA XREF: .pdata:000000018001CEA0↓o
.text:000000018001013F                 align 20h
.text:0000000180010140
.text:0000000180010140 ; =============== S U B R O U T I N E =======================================
.text:0000000180010140
.text:0000000180010140
.text:0000000180010140 sub_180010140   proc near               ; CODE XREF: sub_18000CCB0+EE↑p
.text:0000000180010140                                         ; sub_18000DDF0+E0↑p
.text:0000000180010140                                         ; DATA XREF: ...
.text:0000000180010140
.text:0000000180010140 arg_0           = qword ptr  8
.text:0000000180010140 arg_8           = qword ptr  10h
.text:0000000180010140
.text:0000000180010140                 mov     [rsp+arg_0], rbx
.text:0000000180010145                 mov     [rsp+arg_8], rsi
.text:000000018001014A                 push    rdi
.text:000000018001014B                 sub     rsp, 20h
.text:000000018001014F                 cmp     byte ptr [rcx+78h], 0
.text:0000000180010153                 mov     rdi, rdx
.text:0000000180010156                 mov     rbx, rcx
.text:0000000180010159                 jz      short loc_180010165
.text:000000018001015B                 sub     rcx, 0FFFFFFFFFFFFFF80h ; lpCriticalSection
.text:000000018001015F                 call    cs:EnterCriticalSection
.text:0000000180010165
.text:0000000180010165 loc_180010165:                          ; CODE XREF: sub_180010140+19↑j
.text:0000000180010165                 cmp     dword ptr [rbx+18h], 2
.text:0000000180010169                 jnz     short loc_1800101CF
.text:000000018001016B                 mov     rcx, [rbx+30h]  ; lpCriticalSection
.text:000000018001016F                 call    cs:EnterCriticalSection
.text:0000000180010175                 cmp     qword ptr [rbx+38h], 0
.text:000000018001017A                 jnz     short loc_180010182
.text:000000018001017C                 mov     [rbx+38h], rdi
.text:0000000180010180                 jmp     short loc_180010189
.text:0000000180010182 ; ---------------------------------------------------------------------------
.text:0000000180010182
.text:0000000180010182 loc_180010182:                          ; CODE XREF: sub_180010140+3A↑j
.text:0000000180010182                 mov     rax, [rbx+40h]
.text:0000000180010186                 mov     [rax], rdi
.text:0000000180010189
.text:0000000180010189 loc_180010189:                          ; CODE XREF: sub_180010140+40↑j
.text:0000000180010189                 mov     [rbx+40h], rdi
.text:000000018001018D                 inc     dword ptr [rbx+48h]
.text:0000000180010190                 mov     eax, [rdi+10h]
.text:0000000180010193                 mov     rcx, [rbx+30h]  ; lpCriticalSection
.text:0000000180010197                 add     [rbx+4Ch], eax
.text:000000018001019A                 call    cs:LeaveCriticalSection
.text:00000001800101A0                 xor     edx, edx
.text:00000001800101A2                 mov     rcx, rbx
.text:00000001800101A5                 call    sub_18000FFB0
.text:00000001800101AA                 cmp     byte ptr [rbx+78h], 0
.text:00000001800101AE                 jz      short loc_1800101BD
.text:00000001800101B0                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:00000001800101B7                 call    cs:LeaveCriticalSection
.text:00000001800101BD
.text:00000001800101BD loc_1800101BD:                          ; CODE XREF: sub_180010140+6E↑j
.text:00000001800101BD                 mov     al, 1
.text:00000001800101BF                 mov     rbx, [rsp+28h+arg_0]
.text:00000001800101C4                 mov     rsi, [rsp+28h+arg_8]
.text:00000001800101C9                 add     rsp, 20h
.text:00000001800101CD                 pop     rdi
.text:00000001800101CE                 retn
.text:00000001800101CF ; ---------------------------------------------------------------------------
.text:00000001800101CF
.text:00000001800101CF loc_1800101CF:                          ; CODE XREF: sub_180010140+29↑j
.text:00000001800101CF                 cmp     byte ptr [rbx+78h], 0
.text:00000001800101D3                 jz      short loc_1800101E2
.text:00000001800101D5                 lea     rcx, [rbx+80h]  ; lpCriticalSection
.text:00000001800101DC                 call    cs:LeaveCriticalSection
.text:00000001800101E2
.text:00000001800101E2 loc_1800101E2:                          ; CODE XREF: sub_180010140+93↑j
.text:00000001800101E2                 test    rdi, rdi
.text:00000001800101E5                 jz      short loc_1800101FE
.text:00000001800101E7                 mov     rcx, [rdi+8]    ; Block
.text:00000001800101EB                 call    cs:__imp_free
.text:00000001800101F1                 mov     edx, 20h ; ' '
.text:00000001800101F6                 mov     rcx, rdi        ; Block
.text:00000001800101F9                 call    j_j_free
.text:00000001800101FE
.text:00000001800101FE loc_1800101FE:                          ; CODE XREF: sub_180010140+A5↑j
.text:00000001800101FE                 mov     rbx, [rsp+28h+arg_0]
.text:0000000180010203                 xor     al, al
.text:0000000180010205                 mov     rsi, [rsp+28h+arg_8]
.text:000000018001020A                 add     rsp, 20h
.text:000000018001020E                 pop     rdi
.text:000000018001020F                 retn
.text:000000018001020F sub_180010140   endp
.text:000000018001020F
.text:0000000180010210
.text:0000000180010210 ; =============== S U B R O U T I N E =======================================
.text:0000000180010210
.text:0000000180010210
.text:0000000180010210 sub_180010210   proc near               ; CODE XREF: sub_18000FEA0+C0↑p
.text:0000000180010210                                         ; sub_18000FEA0+F0↑p
.text:0000000180010210                                         ; DATA XREF: ...
.text:0000000180010210
.text:0000000180010210 ArgList         = qword ptr -28h
.text:0000000180010210 Format          = qword ptr  8
.text:0000000180010210 arg_8           = byte ptr  10h
.text:0000000180010210 arg_10          = qword ptr  18h
.text:0000000180010210 arg_18          = qword ptr  20h
.text:0000000180010210
.text:0000000180010210                 mov     [rsp+Format], rcx
.text:0000000180010215                 mov     qword ptr [rsp+arg_8], rdx
.text:000000018001021A                 mov     [rsp+arg_10], r8
.text:000000018001021F                 mov     [rsp+arg_18], r9
.text:0000000180010224                 push    rbx
.text:0000000180010225                 push    rdi
.text:0000000180010226                 sub     rsp, 38h
.text:000000018001022A                 mov     ecx, 1          ; Ix
.text:000000018001022F                 lea     rdi, [rsp+48h+arg_8]
.text:0000000180010234                 call    cs:__acrt_iob_func
.text:000000018001023A                 mov     rbx, rax
.text:000000018001023D                 call    sub_180002960
.text:0000000180010242                 mov     r8, [rsp+48h+Format] ; Format
.text:0000000180010247                 xor     r9d, r9d        ; Locale
.text:000000018001024A                 mov     rdx, rbx        ; Stream
.text:000000018001024D                 mov     [rsp+48h+ArgList], rdi ; ArgList
.text:0000000180010252                 mov     rcx, [rax]      ; Options
.text:0000000180010255                 call    cs:__stdio_common_vfprintf
.text:000000018001025B                 add     rsp, 38h
.text:000000018001025F                 pop     rdi
.text:0000000180010260                 pop     rbx
.text:0000000180010261                 retn
.text:0000000180010261 sub_180010210   endp
.text:0000000180010261
.text:0000000180010262 ; [00000006 BYTES: COLLAPSED FUNCTION std::_Xlength_error(char const *). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010268 ; [00000006 BYTES: COLLAPSED FUNCTION std::_Lockit::~_Lockit(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001026E                 align 10h
.text:0000000180010270 ; [00000038 BYTES: COLLAPSED FUNCTION std::_Facet_Register(std::_Facet_base *). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102A8 ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::~basic_streambuf<char,std::char_traits<char>>(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102AE ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::_Lock(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102B4 ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::_Unlock(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102BA ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::showmanyc(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102C0 ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::uflow(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102C6 ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::xsgetn(char *,__int64). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102CC ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::xsputn(char const *,__int64). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102D2 ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::setbuf(char *,__int64). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102D8 ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::sync(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102DE ; [00000006 BYTES: COLLAPSED FUNCTION std::basic_streambuf<char,std::char_traits<char>>::imbue(std::locale const &). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800102E4                 align 20h
.text:0000000180010300 ; [0000001E BYTES: COLLAPSED FUNCTION __security_check_cookie. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001031E algn_18001031E:                         ; DATA XREF: .pdata:000000018001CED0↓o
.text:000000018001031E                 align 20h
.text:0000000180010320 ; [0000003C BYTES: COLLAPSED FUNCTION operator new(unsigned __int64). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001035C ; [00000005 BYTES: COLLAPSED FUNCTION j_j_free. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010361                 align 4
.text:0000000180010364
.text:0000000180010364 ; =============== S U B R O U T I N E =======================================
.text:0000000180010364
.text:0000000180010364
.text:0000000180010364 sub_180010364   proc near               ; DATA XREF: .rdata:off_180012890↓o
.text:0000000180010364                                         ; .pdata:000000018001CEE8↓o
.text:0000000180010364                 push    rbx
.text:0000000180010366                 sub     rsp, 20h
.text:000000018001036A                 lea     rax, off_180012890
.text:0000000180010371                 mov     rbx, rcx
.text:0000000180010374                 mov     [rcx], rax
.text:0000000180010377                 test    dl, 1
.text:000000018001037A                 jz      short loc_180010386
.text:000000018001037C                 mov     edx, 18h
.text:0000000180010381                 call    j_j_free
.text:0000000180010386
.text:0000000180010386 loc_180010386:                          ; CODE XREF: sub_180010364+16↑j
.text:0000000180010386                 mov     rax, rbx
.text:0000000180010389                 add     rsp, 20h
.text:000000018001038D                 pop     rbx
.text:000000018001038E                 retn
.text:000000018001038E sub_180010364   endp
.text:000000018001038E
.text:000000018001038E ; ---------------------------------------------------------------------------
.text:000000018001038F algn_18001038F:                         ; DATA XREF: .pdata:000000018001CEE8↓o
.text:000000018001038F                 align 10h
.text:0000000180010390 ; [00000050 BYTES: COLLAPSED FUNCTION dllmain_crt_dispatch(HINSTANCE__ * const,ulong,void * const). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800103E0 ; [00000116 BYTES: COLLAPSED FUNCTION dllmain_crt_process_attach(HINSTANCE__ * const,void * const). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800104F6
.text:00000001800104F6 loc_1800104F6:                          ; DATA XREF: .pdata:000000018001CF00↓o
.text:00000001800104F6                 int     3               ; Trap to Debugger
.text:00000001800104F7                 int     3               ; Trap to Debugger
.text:00000001800104F8 ; [00000084 BYTES: COLLAPSED FUNCTION dllmain_crt_process_detach(bool). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001057C ; [00000131 BYTES: COLLAPSED FUNCTION dllmain_dispatch(HINSTANCE__ * const,ulong,void * const). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800106AD algn_1800106AD:                         ; DATA XREF: .pdata:000000018001CF18↓o
.text:00000001800106AD                 align 10h
.text:00000001800106B0 ; [0000003D BYTES: COLLAPSED FUNCTION DllEntryPoint. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800106ED algn_1800106ED:                         ; DATA XREF: .pdata:000000018001CF24↓o
.text:00000001800106ED                 align 10h
.text:00000001800106F0 ; [0000001D BYTES: COLLAPSED FUNCTION __GSHandlerCheck. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001070D algn_18001070D:                         ; DATA XREF: .pdata:000000018001CF30↓o
.text:000000018001070D                 align 10h
.text:0000000180010710 ; [0000005B BYTES: COLLAPSED FUNCTION __GSHandlerCheckCommon. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001076B algn_18001076B:                         ; DATA XREF: .pdata:000000018001CF3C↓o
.text:000000018001076B                 align 4
.text:000000018001076C ; [0000007F BYTES: COLLAPSED FUNCTION __GSHandlerCheck_EH4. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800107EB algn_1800107EB:                         ; DATA XREF: .pdata:000000018001CF48↓o
.text:00000001800107EB                 align 4
.text:00000001800107EC ; [00000005 BYTES: COLLAPSED FUNCTION operator new(unsigned __int64). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800107F1                 align 4
.text:00000001800107F4 ; [00000039 BYTES: COLLAPSED FUNCTION __scrt_acquire_startup_lock. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001082D algn_18001082D:                         ; DATA XREF: .pdata:000000018001CF54↓o
.text:000000018001082D                 align 10h
.text:0000000180010830 ; [00000034 BYTES: COLLAPSED FUNCTION __scrt_dllmain_after_initialize_c. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010864 ; [00000015 BYTES: COLLAPSED FUNCTION __scrt_dllmain_before_initialize_c. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010879 algn_180010879:                         ; DATA XREF: .pdata:000000018001CF6C↓o
.text:0000000180010879                 align 4
.text:000000018001087C
.text:000000018001087C ; =============== S U B R O U T I N E =======================================
.text:000000018001087C
.text:000000018001087C
.text:000000018001087C sub_18001087C   proc near               ; CODE XREF: dllmain_crt_dispatch(HINSTANCE__ * const,ulong,void * const):loc_1800103B8↑p
.text:000000018001087C                                         ; DATA XREF: .pdata:000000018001CF78↓o
.text:000000018001087C                 sub     rsp, 28h
.text:0000000180010880                 call    sub_180011264
.text:0000000180010885                 test    al, al
.text:0000000180010887                 jnz     short loc_18001088D
.text:0000000180010889
.text:0000000180010889 loc_180010889:                          ; CODE XREF: sub_18001087C+1F↓j
.text:0000000180010889                 xor     al, al
.text:000000018001088B                 jmp     short loc_18001089F
.text:000000018001088D ; ---------------------------------------------------------------------------
.text:000000018001088D
.text:000000018001088D loc_18001088D:                          ; CODE XREF: sub_18001087C+B↑j
.text:000000018001088D                 call    sub_180011264
.text:0000000180010892                 test    al, al
.text:0000000180010894                 jnz     short loc_18001089D
.text:0000000180010896                 call    sub_180011264
.text:000000018001089B                 jmp     short loc_180010889
.text:000000018001089D ; ---------------------------------------------------------------------------
.text:000000018001089D
.text:000000018001089D loc_18001089D:                          ; CODE XREF: sub_18001087C+18↑j
.text:000000018001089D                 mov     al, 1
.text:000000018001089F
.text:000000018001089F loc_18001089F:                          ; CODE XREF: sub_18001087C+F↑j
.text:000000018001089F                 add     rsp, 28h
.text:00000001800108A3                 retn
.text:00000001800108A3 sub_18001087C   endp
.text:00000001800108A3
.text:00000001800108A4 ; [00000015 BYTES: COLLAPSED FUNCTION __scrt_dllmain_crt_thread_detach. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800108B9 algn_1800108B9:                         ; DATA XREF: .pdata:000000018001CF84↓o
.text:00000001800108B9                 align 4
.text:00000001800108BC ; [00000060 BYTES: COLLAPSED FUNCTION __scrt_dllmain_exception_filter. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001091C ; [00000030 BYTES: COLLAPSED FUNCTION __scrt_dllmain_uninitialize_c. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001094C ; [00000014 BYTES: COLLAPSED FUNCTION __scrt_dllmain_uninitialize_critical. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010960 ; [00000049 BYTES: COLLAPSED FUNCTION __scrt_initialize_crt. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800109A9 algn_1800109A9:                         ; DATA XREF: .pdata:000000018001CFB4↓o
.text:00000001800109A9                 align 4
.text:00000001800109AC ; [0000008B BYTES: COLLAPSED FUNCTION __scrt_initialize_onexit_tables. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010A37 algn_180010A37:                         ; DATA XREF: .pdata:000000018001CFC0↓o
.text:0000000180010A37                 align 8
.text:0000000180010A38 ; [00000098 BYTES: COLLAPSED FUNCTION __scrt_is_nonwritable_in_current_image. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010AD0 ; [00000024 BYTES: COLLAPSED FUNCTION __scrt_release_startup_lock. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010AF4 ; [00000029 BYTES: COLLAPSED FUNCTION __scrt_uninitialize_crt. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010B1D algn_180010B1D:                         ; DATA XREF: .pdata:000000018001CFE4↓o
.text:0000000180010B1D                 align 20h
.text:0000000180010B20 ; [0000003A BYTES: COLLAPSED FUNCTION _onexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010B5A algn_180010B5A:                         ; DATA XREF: .pdata:000000018001CFF0↓o
.text:0000000180010B5A                 align 4
.text:0000000180010B5C ; [00000017 BYTES: COLLAPSED FUNCTION atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010B73 algn_180010B73:                         ; DATA XREF: .pdata:000000018001CFFC↓o
.text:0000000180010B73                 align 4
.text:0000000180010B74 ; [00000034 BYTES: COLLAPSED FUNCTION __raise_securityfailure. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010BA8 ; [000000D2 BYTES: COLLAPSED FUNCTION __report_gsfailure. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010C7A algn_180010C7A:                         ; DATA XREF: .pdata:000000018001D014↓o
.text:0000000180010C7A                 align 4
.text:0000000180010C7C ; [00000071 BYTES: COLLAPSED FUNCTION capture_previous_context. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010CED algn_180010CED:                         ; DATA XREF: .pdata:000000018001D020↓o
.text:0000000180010CED                 align 10h
.text:0000000180010CF0
.text:0000000180010CF0 ; =============== S U B R O U T I N E =======================================
.text:0000000180010CF0
.text:0000000180010CF0
.text:0000000180010CF0 sub_180010CF0   proc near               ; CODE XREF: Concurrency::cancel_current_task(void)+9↓p
.text:0000000180010CF0                 and     qword ptr [rcx+10h], 0
.text:0000000180010CF5                 lea     rax, aBadAllocation ; "bad allocation"
.text:0000000180010CFC                 mov     [rcx+8], rax
.text:0000000180010D00                 lea     rax, off_180012728
.text:0000000180010D07                 mov     [rcx], rax
.text:0000000180010D0A                 mov     rax, rcx
.text:0000000180010D0D                 retn
.text:0000000180010D0D sub_180010CF0   endp
.text:0000000180010D0D
.text:0000000180010D0D ; ---------------------------------------------------------------------------
.text:0000000180010D0E                 align 10h
.text:0000000180010D10 ; [00000020 BYTES: COLLAPSED FUNCTION Concurrency::cancel_current_task(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010D30 ; [00000005 BYTES: COLLAPSED FUNCTION j_free. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010D35                 align 8
.text:0000000180010D38 ; [000000AC BYTES: COLLAPSED FUNCTION __security_init_cookie. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010DE4 ; [00000023 BYTES: COLLAPSED FUNCTION DllMain. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010E07 algn_180010E07:                         ; DATA XREF: .pdata:000000018001D044↓o
.text:0000000180010E07                 align 8
.text:0000000180010E08
.text:0000000180010E08 ; =============== S U B R O U T I N E =======================================
.text:0000000180010E08
.text:0000000180010E08
.text:0000000180010E08 sub_180010E08   proc near               ; CODE XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const)+5D↑p
.text:0000000180010E08                 lea     rcx, unk_180019AA0
.text:0000000180010E0F                 jmp     cs:InitializeSListHead
.text:0000000180010E0F sub_180010E08   endp
.text:0000000180010E0F
.text:0000000180010E0F ; ---------------------------------------------------------------------------
.text:0000000180010E16                 align 8
.text:0000000180010E18
.text:0000000180010E18 ; =============== S U B R O U T I N E =======================================
.text:0000000180010E18
.text:0000000180010E18
.text:0000000180010E18 sub_180010E18   proc near               ; CODE XREF: dllmain_crt_process_detach(bool)+45↑p
.text:0000000180010E18                 lea     rcx, unk_180019AA0
.text:0000000180010E1F                 jmp     __std_type_info_destroy_list
.text:0000000180010E1F sub_180010E18   endp
.text:0000000180010E1F
.text:0000000180010E24 ; [0000001B BYTES: COLLAPSED FUNCTION __scrt_initialize_default_local_stdio_options. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010E3F algn_180010E3F:                         ; DATA XREF: .pdata:000000018001D050↓o
.text:0000000180010E3F                 align 20h
.text:0000000180010E40
.text:0000000180010E40 ; =============== S U B R O U T I N E =======================================
.text:0000000180010E40
.text:0000000180010E40
.text:0000000180010E40 sub_180010E40   proc near               ; CODE XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const)+B3↑p
.text:0000000180010E40                 lea     rax, unk_18001B2C8
.text:0000000180010E47                 retn
.text:0000000180010E47 sub_180010E40   endp
.text:0000000180010E47
.text:0000000180010E48
.text:0000000180010E48 ; =============== S U B R O U T I N E =======================================
.text:0000000180010E48
.text:0000000180010E48
.text:0000000180010E48 sub_180010E48   proc near               ; CODE XREF: __scrt_fastfail+2F↓p
.text:0000000180010E48                                         ; __scrt_fastfail+135↓p
.text:0000000180010E48                 and     cs:dword_180019AB0, 0
.text:0000000180010E4F                 retn
.text:0000000180010E4F sub_180010E48   endp
.text:0000000180010E4F
.text:0000000180010E50 ; [0000014B BYTES: COLLAPSED FUNCTION __scrt_fastfail. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180010F9B algn_180010F9B:                         ; DATA XREF: .pdata:000000018001D05C↓o
.text:0000000180010F9B                 align 4
.text:0000000180010F9C
.text:0000000180010F9C ; =============== S U B R O U T I N E =======================================
.text:0000000180010F9C
.text:0000000180010F9C
.text:0000000180010F9C sub_180010F9C   proc near               ; CODE XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const)+58↑p
.text:0000000180010F9C                                         ; DATA XREF: .pdata:000000018001D068↓o
.text:0000000180010F9C
.text:0000000180010F9C arg_0           = qword ptr  8
.text:0000000180010F9C
.text:0000000180010F9C                 mov     [rsp+arg_0], rbx
.text:0000000180010FA1                 push    rdi
.text:0000000180010FA2                 sub     rsp, 20h
.text:0000000180010FA6                 lea     rbx, unk_180014B88
.text:0000000180010FAD                 lea     rdi, unk_180014B88
.text:0000000180010FB4                 jmp     short loc_180010FC8
.text:0000000180010FB6 ; ---------------------------------------------------------------------------
.text:0000000180010FB6
.text:0000000180010FB6 loc_180010FB6:                          ; CODE XREF: sub_180010F9C+2F↓j
.text:0000000180010FB6                 mov     rax, [rbx]
.text:0000000180010FB9                 test    rax, rax
.text:0000000180010FBC                 jz      short loc_180010FC4
.text:0000000180010FBE                 call    cs:__guard_dispatch_icall_fptr
.text:0000000180010FC4
.text:0000000180010FC4 loc_180010FC4:                          ; CODE XREF: sub_180010F9C+20↑j
.text:0000000180010FC4                 add     rbx, 8
.text:0000000180010FC8
.text:0000000180010FC8 loc_180010FC8:                          ; CODE XREF: sub_180010F9C+18↑j
.text:0000000180010FC8                 cmp     rbx, rdi
.text:0000000180010FCB                 jb      short loc_180010FB6
.text:0000000180010FCD                 mov     rbx, [rsp+28h+arg_0]
.text:0000000180010FD2                 add     rsp, 20h
.text:0000000180010FD6                 pop     rdi
.text:0000000180010FD7                 retn
.text:0000000180010FD7 sub_180010F9C   endp
.text:0000000180010FD7
.text:0000000180010FD8
.text:0000000180010FD8 ; =============== S U B R O U T I N E =======================================
.text:0000000180010FD8
.text:0000000180010FD8
.text:0000000180010FD8 sub_180010FD8   proc near               ; CODE XREF: dllmain_crt_process_detach(bool)+4A↑p
.text:0000000180010FD8                                         ; DATA XREF: .pdata:000000018001D068↓o ...
.text:0000000180010FD8
.text:0000000180010FD8 arg_0           = qword ptr  8
.text:0000000180010FD8
.text:0000000180010FD8                 mov     [rsp+arg_0], rbx
.text:0000000180010FDD                 push    rdi
.text:0000000180010FDE                 sub     rsp, 20h
.text:0000000180010FE2                 lea     rbx, unk_180014B98
.text:0000000180010FE9                 lea     rdi, unk_180014B98
.text:0000000180010FF0                 jmp     short loc_180011004
.text:0000000180010FF2 ; ---------------------------------------------------------------------------
.text:0000000180010FF2
.text:0000000180010FF2 loc_180010FF2:                          ; CODE XREF: sub_180010FD8+2F↓j
.text:0000000180010FF2                 mov     rax, [rbx]
.text:0000000180010FF5                 test    rax, rax
.text:0000000180010FF8                 jz      short loc_180011000
.text:0000000180010FFA                 call    cs:__guard_dispatch_icall_fptr
.text:0000000180011000
.text:0000000180011000 loc_180011000:                          ; CODE XREF: sub_180010FD8+20↑j
.text:0000000180011000                 add     rbx, 8
.text:0000000180011004
.text:0000000180011004 loc_180011004:                          ; CODE XREF: sub_180010FD8+18↑j
.text:0000000180011004                 cmp     rbx, rdi
.text:0000000180011007                 jb      short loc_180010FF2
.text:0000000180011009                 mov     rbx, [rsp+28h+arg_0]
.text:000000018001100E                 add     rsp, 20h
.text:0000000180011012                 pop     rdi
.text:0000000180011013                 retn
.text:0000000180011013 sub_180010FD8   endp
.text:0000000180011013
.text:0000000180011014 ; [000001AC BYTES: COLLAPSED FUNCTION __isa_available_init. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800111C0 ; [00000006 BYTES: COLLAPSED FUNCTION charNode::raw_length(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800111C6                 align 8
.text:00000001800111C8 ; [0000000C BYTES: COLLAPSED FUNCTION __uncaught_exception(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800111D4                 align 20h
.text:00000001800111E0 ; [00000006 BYTES: COLLAPSED FUNCTION __CxxFrameHandler4. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800111E6 ; ---------------------------------------------------------------------------
.text:00000001800111E6 ; START OF FUNCTION CHUNK FOR sub_18000A4F0
.text:00000001800111E6 ;   ADDITIONAL PARENT FUNCTION sub_180006F70
.text:00000001800111E6 ;   ADDITIONAL PARENT FUNCTION sub_180009630
.text:00000001800111E6 ;   ADDITIONAL PARENT FUNCTION sub_180009700
.text:00000001800111E6 ;   ADDITIONAL PARENT FUNCTION sub_180009A90
.text:00000001800111E6 ;   ADDITIONAL PARENT FUNCTION sub_180009C80
.text:00000001800111E6 ;   ADDITIONAL PARENT FUNCTION sub_180009F20
.text:00000001800111E6
.text:00000001800111E6 __std_terminate:                        ; DATA XREF: .rdata:00000001800154DB↓o
.text:00000001800111E6                                         ; .rdata:0000000180015A89↓o ...
.text:00000001800111E6 ;   cleanup() // owned by 180009C0C
.text:00000001800111E6 ;   cleanup() // owned by 180009EDF
.text:00000001800111E6 ;   cleanup() // owned by 18000A09C
.text:00000001800111E6 ;   cleanup() // owned by 18000A677
.text:00000001800111E6                 jmp     cs:__imp___std_terminate
.text:00000001800111E6 ; END OF FUNCTION CHUNK FOR sub_18000A4F0
.text:00000001800111EC ; [00000006 BYTES: COLLAPSED FUNCTION memcpy. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800111F2 ; [00000006 BYTES: COLLAPSED FUNCTION memset. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800111F8 ; [00000006 BYTES: COLLAPSED FUNCTION _CxxThrowException. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800111FE ; [00000006 BYTES: COLLAPSED FUNCTION memcmp. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011204 ; [00000006 BYTES: COLLAPSED FUNCTION memmove. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001120A ; [00000006 BYTES: COLLAPSED FUNCTION __C_specific_handler. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011210 ; [00000006 BYTES: COLLAPSED FUNCTION __std_type_info_destroy_list. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011216 ; [00000006 BYTES: COLLAPSED FUNCTION free. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001121C ; [00000006 BYTES: COLLAPSED FUNCTION malloc. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011222 ; [00000006 BYTES: COLLAPSED FUNCTION _callnewh. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011228 ; [00000006 BYTES: COLLAPSED FUNCTION _initterm. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001122E ; [00000006 BYTES: COLLAPSED FUNCTION _initterm_e. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011234 ; [00000006 BYTES: COLLAPSED FUNCTION _seh_filter_dll. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001123A ; [00000006 BYTES: COLLAPSED FUNCTION _configure_narrow_argv. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011240 ; [00000006 BYTES: COLLAPSED FUNCTION _initialize_narrow_environment. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011246 ; [00000006 BYTES: COLLAPSED FUNCTION _initialize_onexit_table. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001124C ; [00000006 BYTES: COLLAPSED FUNCTION _register_onexit_function. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011252 ; [00000006 BYTES: COLLAPSED FUNCTION _execute_onexit_table. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011258 ; [00000006 BYTES: COLLAPSED FUNCTION _crt_atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001125E ; [00000006 BYTES: COLLAPSED FUNCTION _cexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011264
.text:0000000180011264 ; =============== S U B R O U T I N E =======================================
.text:0000000180011264
.text:0000000180011264
.text:0000000180011264 sub_180011264   proc near               ; CODE XREF: sub_18001087C+4↑p
.text:0000000180011264                                         ; sub_18001087C:loc_18001088D↑p ...
.text:0000000180011264                 mov     al, 1
.text:0000000180011266                 retn
.text:0000000180011266 sub_180011264   endp
.text:0000000180011266
.text:0000000180011266 ; ---------------------------------------------------------------------------
.text:0000000180011267                 align 20h
.text:0000000180011280 ; [0000004E BYTES: COLLAPSED FUNCTION __alloca_probe. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800112CE ; [00000006 BYTES: COLLAPSED FUNCTION ceilf. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800112D4                 db 12h dup(0CCh)
.text:00000001800112E6                 align 10h
.text:00000001800112F0 ; [00000002 BYTES: COLLAPSED FUNCTION _guard_dispatch_icall_nop. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800112F2 byte_1800112F2  db 14h dup(0CCh)        ; DATA XREF: .pdata:000000018001D098↓o
.text:0000000180011306                 align 10h
.text:0000000180011310 ; [00000006 BYTES: COLLAPSED FUNCTION _guard_xfg_dispatch_icall_nop. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011316 algn_180011316:                         ; DATA XREF: .pdata:000000018001D0A4↓o
.text:0000000180011316                 align 20h
.text:0000000180011320 ; START OF FUNCTION CHUNK FOR sub_180002E20
.text:0000000180011320
.text:0000000180011320 loc_180011320:                          ; DATA XREF: .rdata:000000018001504B↓o
.text:0000000180011320                                         ; .pdata:000000018001D0B0↓o
.text:0000000180011320                 push    rbp
.text:0000000180011322                 sub     rsp, 20h
.text:0000000180011326                 mov     rbp, rdx
.text:0000000180011329                 mov     edx, 30h ; '0'
.text:000000018001132E                 mov     rcx, [rbp+70h]  ; Block
.text:0000000180011332                 call    j_j_free
.text:0000000180011337                 add     rsp, 20h
.text:000000018001133B                 pop     rbp
.text:000000018001133C                 retn
.text:000000018001133D ; ---------------------------------------------------------------------------
.text:000000018001133D
.text:000000018001133D loc_18001133D:                          ; DATA XREF: .rdata:0000000180015050↓o
.text:000000018001133D                                         ; .pdata:000000018001D0B0↓o
.text:000000018001133D                 mov     rcx, [rdx+70h]
.text:0000000180011344                 add     rcx, 8
.text:0000000180011348                 jmp     sub_18000A6C0
.text:0000000180011348 ; END OF FUNCTION CHUNK FOR sub_180002E20
.text:0000000180011348 ; ---------------------------------------------------------------------------
.text:000000018001134D                 align 10h
.text:0000000180011350
.text:0000000180011350 ; =============== S U B R O U T I N E =======================================
.text:0000000180011350
.text:0000000180011350
.text:0000000180011350 sub_180011350   proc near
.text:0000000180011350                 lea     rcx, [rdx+118h]
.text:0000000180011357                 jmp     sub_180002660
.text:0000000180011357 sub_180011350   endp
.text:0000000180011357
.text:000000018001135C ; ---------------------------------------------------------------------------
.text:000000018001135C ; START OF FUNCTION CHUNK FOR sub_1800034B0
.text:000000018001135C
.text:000000018001135C loc_18001135C:                          ; DATA XREF: .rdata:00000001800150CA↓o
.text:000000018001135C                                         ; .pdata:000000018001D0BC↓o
.text:000000018001135C ;   cleanup() // owned by 1800039A7
.text:000000018001135C                 push    rbp
.text:000000018001135E                 sub     rsp, 20h
.text:0000000180011362                 mov     rbp, rdx
.text:0000000180011365                 mov     edx, 38h ; '8'
.text:000000018001136A                 mov     rcx, [rbp+290h+var_1D0] ; Block
.text:0000000180011371                 call    j_j_free
.text:0000000180011376                 add     rsp, 20h
.text:000000018001137A                 pop     rbp
.text:000000018001137B                 retn
.text:000000018001137C ; ---------------------------------------------------------------------------
.text:000000018001137C
.text:000000018001137C loc_18001137C:                          ; DATA XREF: .rdata:00000001800150CF↓o
.text:000000018001137C                                         ; .rdata:00000001800150DB↓o ...
.text:000000018001137C ;   cleanup() // owned by 180003A1B
.text:000000018001137C ;   cleanup() // owned by 180003FDB
.text:000000018001137C ;   cleanup() // owned by 180004349
.text:000000018001137C ;   cleanup() // owned by 180004631
.text:000000018001137C ;   cleanup() // owned by 18000481D
.text:000000018001137C ;   cleanup() // owned by 180004B1F
.text:000000018001137C ;   cleanup() // owned by 180004C79
.text:000000018001137C                 push    rbp
.text:000000018001137E                 sub     rsp, 20h
.text:0000000180011382                 mov     rbp, rdx
.text:0000000180011385                 mov     eax, [rbp+290h+var_210]
.text:000000018001138B                 and     eax, 1
.text:000000018001138E                 test    eax, eax
.text:0000000180011390                 jz      short loc_1800113A5
.text:0000000180011392                 and     [rbp+290h+var_210], 0FFFFFFFEh
.text:0000000180011399                 lea     rcx, [rbp+290h+var_198]
.text:00000001800113A0                 call    sub_180002660
.text:00000001800113A5
.text:00000001800113A5 loc_1800113A5:                          ; CODE XREF: sub_1800034B0+DEE0↑j
.text:00000001800113A5                 add     rsp, 20h
.text:00000001800113A9                 pop     rbp
.text:00000001800113AA                 retn
.text:00000001800113AA ; END OF FUNCTION CHUNK FOR sub_1800034B0
.text:00000001800113AB ; [0000000C BYTES: COLLAPSED FUNCTION int `std::ctype<char>::_Getcat(ctype<char>::locale::facet const * *,ctype<char>::facet const *)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800113B7
.text:00000001800113B7 ; =============== S U B R O U T I N E =======================================
.text:00000001800113B7
.text:00000001800113B7
.text:00000001800113B7 sub_1800113B7   proc near
.text:00000001800113B7                 lea     rcx, [rdx+98h]
.text:00000001800113BE                 jmp     sub_180002660
.text:00000001800113BE sub_1800113B7   endp
.text:00000001800113BE
.text:00000001800113C3
.text:00000001800113C3 ; =============== S U B R O U T I N E =======================================
.text:00000001800113C3
.text:00000001800113C3
.text:00000001800113C3 sub_1800113C3   proc near
.text:00000001800113C3                 lea     rcx, [rdx+98h]
.text:00000001800113CA                 jmp     sub_180002660
.text:00000001800113CA sub_1800113C3   endp
.text:00000001800113CA
.text:00000001800113CF ; [0000000C BYTES: COLLAPSED FUNCTION int `std::money_put<ushort,std::ostreambuf_iterator<ushort,std::char_traits<ushort>>>::_Putmfld(money_put<ushort,std::ostreambuf_iterator<ushort,std::char_traits<ushort>>>::std,bool,money_put<ushort,std::ostreambuf_iterator<ushort,std::char_traits<ushort>>>::ios_base &,ushort,bool,money_put<ushort,std::ostreambuf_iterator<ushort,std::char_traits<ushort>>>::basic_string<ushort,std::char_traits<ushort>,std::allocator<ushort>>,ushort)'::`1'::dtor$4. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800113DB
.text:00000001800113DB ; =============== S U B R O U T I N E =======================================
.text:00000001800113DB
.text:00000001800113DB
.text:00000001800113DB sub_1800113DB   proc near
.text:00000001800113DB                 lea     rcx, [rdx+0E0h]
.text:00000001800113E2                 jmp     sub_180005590
.text:00000001800113E2 sub_1800113DB   endp
.text:00000001800113E2
.text:00000001800113E7 ; [0000000C BYTES: COLLAPSED FUNCTION unknown_libname_1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800113F3                 align 20h
.text:0000000180011400 ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001140C                 align 10h
.text:0000000180011410 ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001141C ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011428                 align 10h
.text:0000000180011430 ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001143C                 align 20h
.text:0000000180011440
.text:0000000180011440 ; =============== S U B R O U T I N E =======================================
.text:0000000180011440
.text:0000000180011440
.text:0000000180011440 sub_180011440   proc near
.text:0000000180011440                 mov     rcx, [rdx+58h]
.text:0000000180011447                 jmp     sub_180006F70
.text:0000000180011447 sub_180011440   endp
.text:0000000180011447
.text:000000018001144C ; ---------------------------------------------------------------------------
.text:000000018001144C ; START OF FUNCTION CHUNK FOR sub_180007030
.text:000000018001144C
.text:000000018001144C loc_18001144C:                          ; DATA XREF: .rdata:0000000180015521↓o
.text:000000018001144C ;   cleanup() // owned by 180007118
.text:000000018001144C ;   cleanup() // owned by 1800072B1
.text:000000018001144C                 mov     rcx, [rdx+58h]
.text:0000000180011453                 add     rcx, 110h
.text:000000018001145A                 jmp     sub_180002660
.text:000000018001145A ; END OF FUNCTION CHUNK FOR sub_180007030
.text:000000018001145F ; [0000000C BYTES: COLLAPSED FUNCTION unknown_libname_2. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001146B
.text:000000018001146B ; =============== S U B R O U T I N E =======================================
.text:000000018001146B
.text:000000018001146B
.text:000000018001146B sub_18001146B   proc near
.text:000000018001146B                 lea     rcx, [rdx+60h]
.text:0000000180011472                 jmp     sub_180002660
.text:0000000180011472 sub_18001146B   endp
.text:0000000180011472
.text:0000000180011472 ; ---------------------------------------------------------------------------
.text:0000000180011477                 align 20h
.text:0000000180011480 ; START OF FUNCTION CHUNK FOR sub_180007600
.text:0000000180011480
.text:0000000180011480 loc_180011480:                          ; DATA XREF: .rdata:00000001800155C3↓o
.text:0000000180011480                                         ; .pdata:000000018001D0D4↓o
.text:0000000180011480 ;   cleanup() // owned by 18000772B
.text:0000000180011480                 push    rbp
.text:0000000180011482                 sub     rsp, 20h
.text:0000000180011486                 mov     rbp, rdx
.text:0000000180011489                 mov     eax, [rbp+80h+var_60]
.text:000000018001148C                 and     eax, 2
.text:000000018001148F                 test    eax, eax
.text:0000000180011491                 jz      short loc_1800114A8
.text:0000000180011493                 and     [rbp+80h+var_60], 0FFFFFFFDh
.text:0000000180011497                 lea     rcx, [rbp+80h+var_20]
.text:000000018001149B                 add     rcx, 98h
.text:00000001800114A2                 call    cs:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ios<char,std::char_traits<char>>::~basic_ios<char,std::char_traits<char>>(void)
.text:00000001800114A8
.text:00000001800114A8 loc_1800114A8:                          ; CODE XREF: sub_180007600+9E91↑j
.text:00000001800114A8                 add     rsp, 20h
.text:00000001800114AC                 pop     rbp
.text:00000001800114AD                 retn
.text:00000001800114AE ; ---------------------------------------------------------------------------
.text:00000001800114AE
.text:00000001800114AE loc_1800114AE:                          ; DATA XREF: .rdata:00000001800155C8↓o
.text:00000001800114AE                                         ; .pdata:000000018001D0D4↓o
.text:00000001800114AE ;   cleanup() // owned by 18000777D
.text:00000001800114AE ;   cleanup() // owned by 1800077CA
.text:00000001800114AE                 lea     rcx, [rdx+60h]
.text:00000001800114B5                 add     rcx, 20h ; ' '
.text:00000001800114B9                 jmp     cs:??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_iostream<char,std::char_traits<char>>::~basic_iostream<char,std::char_traits<char>>(void)
.text:00000001800114B9 ; END OF FUNCTION CHUNK FOR sub_180007600
.text:00000001800114C0
.text:00000001800114C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800114C0
.text:00000001800114C0
.text:00000001800114C0 sub_1800114C0   proc near
.text:00000001800114C0                 lea     rcx, [rdx+60h]
.text:00000001800114C7                 jmp     sub_1800078D0
.text:00000001800114C7 sub_1800114C0   endp
.text:00000001800114C7
.text:00000001800114CC ; ---------------------------------------------------------------------------
.text:00000001800114CC ; START OF FUNCTION CHUNK FOR sub_180007600
.text:00000001800114CC
.text:00000001800114CC loc_1800114CC:                          ; DATA XREF: .rdata:00000001800155D3↓o
.text:00000001800114CC                                         ; .pdata:000000018001D0E0↓o
.text:00000001800114CC                 push    rbp
.text:00000001800114CE                 sub     rsp, 20h
.text:00000001800114D2                 mov     rbp, rdx
.text:00000001800114D5                 mov     eax, [rbp+80h+var_60]
.text:00000001800114D8                 and     eax, 8
.text:00000001800114DB                 test    eax, eax
.text:00000001800114DD                 jz      short loc_1800114EC
.text:00000001800114DF                 and     [rbp+80h+var_60], 0FFFFFFF7h
.text:00000001800114E3                 mov     rcx, [rbp+80h+var_40]
.text:00000001800114E7                 call    sub_180002660
.text:00000001800114EC
.text:00000001800114EC loc_1800114EC:                          ; CODE XREF: sub_180007600+9EDD↑j
.text:00000001800114EC                 add     rsp, 20h
.text:00000001800114F0                 pop     rbp
.text:00000001800114F1                 retn
.text:00000001800114F1 ; END OF FUNCTION CHUNK FOR sub_180007600
.text:00000001800114F1 ; ---------------------------------------------------------------------------
.text:00000001800114F2 algn_1800114F2:                         ; DATA XREF: .pdata:000000018001D0E0↓o
.text:00000001800114F2                 align 20h
.text:0000000180011500 ; [0000000C BYTES: COLLAPSED FUNCTION int `std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>::_Iput(num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>::std,num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>::ios_base &,char,char *,unsigned __int64)'::`1'::dtor$1. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001150C                 align 10h
.text:0000000180011510 ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001151C                 align 20h
.text:0000000180011520 ; START OF FUNCTION CHUNK FOR sub_180009480
.text:0000000180011520
.text:0000000180011520 loc_180011520:                          ; DATA XREF: .rdata:0000000180015933↓o
.text:0000000180011520                                         ; .pdata:000000018001D0EC↓o
.text:0000000180011520 ;   cleanup() // owned by 1800094FC
.text:0000000180011520                 push    rbp
.text:0000000180011522                 sub     rsp, 20h
.text:0000000180011526                 mov     rbp, rdx
.text:0000000180011529                 mov     eax, [rbp+20h]
.text:000000018001152C                 and     eax, 1
.text:000000018001152F                 test    eax, eax
.text:0000000180011531                 jz      short loc_180011548
.text:0000000180011533                 and     dword ptr [rbp+20h], 0FFFFFFFEh
.text:0000000180011537                 mov     rcx, [rbp+28h]
.text:000000018001153B                 add     rcx, 0A8h
.text:0000000180011542                 call    cs:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ios<char,std::char_traits<char>>::~basic_ios<char,std::char_traits<char>>(void)
.text:0000000180011548
.text:0000000180011548 loc_180011548:                          ; CODE XREF: sub_180009480+80B1↑j
.text:0000000180011548                 add     rsp, 20h
.text:000000018001154C                 pop     rbp
.text:000000018001154D                 retn
.text:000000018001154E ; ---------------------------------------------------------------------------
.text:000000018001154E
.text:000000018001154E loc_18001154E:                          ; DATA XREF: .rdata:0000000180015938↓o
.text:000000018001154E                                         ; .pdata:000000018001D0EC↓o
.text:000000018001154E                 mov     rcx, [rdx+28h]
.text:0000000180011555                 add     rcx, 10h
.text:0000000180011559                 jmp     cs:??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ostream<char,std::char_traits<char>>::~basic_ostream<char,std::char_traits<char>>(void)
.text:0000000180011559 ; END OF FUNCTION CHUNK FOR sub_180009480
.text:0000000180011560
.text:0000000180011560 ; =============== S U B R O U T I N E =======================================
.text:0000000180011560
.text:0000000180011560
.text:0000000180011560 sub_180011560   proc near
.text:0000000180011560                 mov     rcx, [rdx+30h]
.text:0000000180011567                 jmp     cs:__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_streambuf<char,std::char_traits<char>>::~basic_streambuf<char,std::char_traits<char>>(void)
.text:0000000180011567 sub_180011560   endp
.text:0000000180011567
.text:0000000180011567 ; ---------------------------------------------------------------------------
.text:000000018001156E                 align 10h
.text:0000000180011570 ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001157C ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011588 ; ---------------------------------------------------------------------------
.text:0000000180011588 ; START OF FUNCTION CHUNK FOR sub_180009A90
.text:0000000180011588
.text:0000000180011588 loc_180011588:                          ; DATA XREF: .rdata:0000000180015A9D↓o
.text:0000000180011588                                         ; .pdata:000000018001D0F8↓o
.text:0000000180011588 ;   catch(...) // owned by 180009B5B
.text:0000000180011588                 mov     [rsp+48h+var_38], rdx
.text:000000018001158D                 push    rbp
.text:000000018001158E                 sub     rsp, 20h
.text:0000000180011592                 mov     rbp, rdx
.text:0000000180011595                 mov     rdx, [rbp+50h]
.text:0000000180011599                 mov     rax, [rdx]
.text:000000018001159C                 movsxd  rcx, dword ptr [rax+4]
.text:00000001800115A0                 add     rcx, rdx
.text:00000001800115A3                 mov     r8b, 1
.text:00000001800115A6                 mov     edx, 4
.text:00000001800115AB                 call    cs:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
.text:00000001800115B1                 nop
.text:00000001800115B2                 mov     rax, 0
.text:00000001800115BC                 add     rsp, 20h
.text:00000001800115C0                 pop     rbp
.text:00000001800115C1                 retn
.text:00000001800115C1 ; ---------------------------------------------------------------------------
.text:00000001800115C2                 db 0CCh
.text:00000001800115C2 ; END OF FUNCTION CHUNK FOR sub_180009A90
.text:00000001800115C3 algn_1800115C3:                         ; DATA XREF: .pdata:000000018001D0F8↓o
.text:00000001800115C3                 align 10h
.text:00000001800115D0 ; [0000000C BYTES: COLLAPSED FUNCTION int `_wcrtomb_s_l(int * const,char * const,unsigned __int64,wchar_t,_Mbstatet * const,__crt_locale_pointers * const)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800115DC ; [0000000C BYTES: COLLAPSED FUNCTION int `_wcrtomb_s_l(int * const,char * const,unsigned __int64,wchar_t,_Mbstatet * const,__crt_locale_pointers * const)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800115E8
.text:00000001800115E8 ; =============== S U B R O U T I N E =======================================
.text:00000001800115E8
.text:00000001800115E8
.text:00000001800115E8 sub_1800115E8   proc near
.text:00000001800115E8                 lea     rcx, [rdx+60h]
.text:00000001800115EF                 jmp     sub_180006F40
.text:00000001800115EF sub_1800115E8   endp
.text:00000001800115EF
.text:00000001800115F4
.text:00000001800115F4 ; =============== S U B R O U T I N E =======================================
.text:00000001800115F4
.text:00000001800115F4
.text:00000001800115F4 sub_1800115F4   proc near
.text:00000001800115F4                 lea     rcx, [rdx+88h]
.text:00000001800115FB                 jmp     cs:__imp_??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
.text:00000001800115FB sub_1800115F4   endp
.text:00000001800115FB
.text:0000000180011602 ; ---------------------------------------------------------------------------
.text:0000000180011602                 lea     rcx, [rdx+90h]
.text:0000000180011609                 jmp     loc_18000A4D0
.text:000000018001160E ; ---------------------------------------------------------------------------
.text:000000018001160E ; START OF FUNCTION CHUNK FOR sub_180009C80
.text:000000018001160E
.text:000000018001160E loc_18001160E:                          ; DATA XREF: .rdata:0000000180015B26↓o
.text:000000018001160E                                         ; .pdata:000000018001D104↓o
.text:000000018001160E ;   catch(...) // owned by 180009E8D
.text:000000018001160E                 mov     [rsp+1B0h+var_1A0], rdx
.text:0000000180011613                 push    rbp
.text:0000000180011614                 sub     rsp, 40h
.text:0000000180011618                 mov     rbp, rdx
.text:000000018001161B                 mov     rdx, [rbp+40h]
.text:000000018001161F                 mov     rax, [rdx]
.text:0000000180011622                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180011626                 add     rcx, rdx
.text:0000000180011629                 mov     r8b, 1
.text:000000018001162C                 mov     edx, 4
.text:0000000180011631                 call    cs:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
.text:0000000180011637                 nop
.text:0000000180011638                 mov     rax, 0
.text:0000000180011642                 add     rsp, 40h
.text:0000000180011646                 pop     rbp
.text:0000000180011647                 retn
.text:0000000180011647 ; ---------------------------------------------------------------------------
.text:0000000180011648                 db 0CCh
.text:0000000180011648 ; END OF FUNCTION CHUNK FOR sub_180009C80
.text:0000000180011649 algn_180011649:                         ; DATA XREF: .pdata:000000018001D104↓o
.text:0000000180011649                 align 10h
.text:0000000180011650 ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001165C ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011668 ; ---------------------------------------------------------------------------
.text:0000000180011668 ; START OF FUNCTION CHUNK FOR sub_18000A4F0
.text:0000000180011668 ;   ADDITIONAL PARENT FUNCTION sub_180009F20
.text:0000000180011668
.text:0000000180011668 loc_180011668:                          ; DATA XREF: .rdata:0000000180015B80↓o
.text:0000000180011668                                         ; .rdata:0000000180015CC4↓o ...
.text:0000000180011668 ;   catch(...) // owned by 180009FF1
.text:0000000180011668 ;   catch(...) // owned by 18000A5C6
.text:0000000180011668                 mov     [rsp+58h+var_48], rdx
.text:000000018001166D                 push    rbp
.text:000000018001166E                 sub     rsp, 20h
.text:0000000180011672                 mov     rbp, rdx
.text:0000000180011675                 mov     rdx, [rbp+60h]
.text:0000000180011679                 mov     rax, [rdx]
.text:000000018001167C                 movsxd  rcx, dword ptr [rax+4]
.text:0000000180011680                 add     rcx, rdx
.text:0000000180011683                 mov     r8b, 1
.text:0000000180011686                 mov     edx, 4
.text:000000018001168B                 call    cs:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z ; std::basic_ios<char,std::char_traits<char>>::setstate(int,bool)
.text:0000000180011691                 nop
.text:0000000180011692                 mov     rax, 0
.text:000000018001169C                 add     rsp, 20h
.text:00000001800116A0                 pop     rbp
.text:00000001800116A1                 retn
.text:00000001800116A1 ; ---------------------------------------------------------------------------
.text:00000001800116A2                 db 0CCh
.text:00000001800116A2 ; END OF FUNCTION CHUNK FOR sub_18000A4F0
.text:00000001800116A3 algn_1800116A3:                         ; DATA XREF: .pdata:000000018001D110↓o
.text:00000001800116A3                 align 10h
.text:00000001800116B0
.text:00000001800116B0 ; =============== S U B R O U T I N E =======================================
.text:00000001800116B0
.text:00000001800116B0
.text:00000001800116B0 sub_1800116B0   proc near
.text:00000001800116B0                 lea     rcx, [rdx+28h]
.text:00000001800116B7                 jmp     cs:__imp_??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
.text:00000001800116B7 sub_1800116B0   endp
.text:00000001800116B7
.text:00000001800116BE ; ---------------------------------------------------------------------------
.text:00000001800116BE                 lea     rcx, [rdx+30h]
.text:00000001800116C5                 jmp     loc_18000A4D0
.text:00000001800116C5 ; ---------------------------------------------------------------------------
.text:00000001800116CA                 align 10h
.text:00000001800116D0
.text:00000001800116D0 ; =============== S U B R O U T I N E =======================================
.text:00000001800116D0
.text:00000001800116D0
.text:00000001800116D0 sub_1800116D0   proc near
.text:00000001800116D0                 mov     rcx, [rdx+58h]
.text:00000001800116D7                 jmp     sub_180002660
.text:00000001800116D7 sub_1800116D0   endp
.text:00000001800116D7
.text:00000001800116DC ; ---------------------------------------------------------------------------
.text:00000001800116DC ; START OF FUNCTION CHUNK FOR sub_18000A6F0
.text:00000001800116DC
.text:00000001800116DC loc_1800116DC:                          ; DATA XREF: .rdata:0000000180015D11↓o
.text:00000001800116DC                                         ; .pdata:000000018001D11C↓o
.text:00000001800116DC ;   cleanup() // owned by 18000A993
.text:00000001800116DC ;   cleanup() // owned by 18000AAE7
.text:00000001800116DC ;   cleanup() // owned by 18000AB75
.text:00000001800116DC ;   cleanup() // owned by 18000ACC9
.text:00000001800116DC                 push    rbp
.text:00000001800116DE                 sub     rsp, 20h
.text:00000001800116E2                 mov     rbp, rdx
.text:00000001800116E5                 mov     eax, [rbp+200h+var_1D0]
.text:00000001800116E8                 and     eax, 1
.text:00000001800116EB                 test    eax, eax
.text:00000001800116ED                 jz      short loc_1800116FC
.text:00000001800116EF                 and     [rbp+200h+var_1D0], 0FFFFFFFEh
.text:00000001800116F3                 mov     rcx, [rbp+200h+var_1B0]
.text:00000001800116F7                 call    sub_180002660
.text:00000001800116FC
.text:00000001800116FC loc_1800116FC:                          ; CODE XREF: sub_18000A6F0+6FFD↑j
.text:00000001800116FC                 add     rsp, 20h
.text:0000000180011700                 pop     rbp
.text:0000000180011701                 retn
.text:0000000180011701 ; END OF FUNCTION CHUNK FOR sub_18000A6F0
.text:0000000180011702
.text:0000000180011702 ; =============== S U B R O U T I N E =======================================
.text:0000000180011702
.text:0000000180011702
.text:0000000180011702 sub_180011702   proc near               ; DATA XREF: .pdata:000000018001D11C↓o
.text:0000000180011702                 lea     rcx, [rdx+68h]
.text:0000000180011709                 jmp     sub_180002660
.text:0000000180011709 sub_180011702   endp
.text:0000000180011709
.text:000000018001170E
.text:000000018001170E ; =============== S U B R O U T I N E =======================================
.text:000000018001170E
.text:000000018001170E
.text:000000018001170E sub_18001170E   proc near
.text:000000018001170E                 lea     rcx, [rdx+90h]
.text:0000000180011715                 jmp     sub_180002660
.text:0000000180011715 sub_18001170E   endp
.text:0000000180011715
.text:000000018001171A
.text:000000018001171A ; =============== S U B R O U T I N E =======================================
.text:000000018001171A
.text:000000018001171A
.text:000000018001171A sub_18001171A   proc near
.text:000000018001171A                 lea     rcx, [rdx+68h]
.text:0000000180011721                 jmp     sub_180002660
.text:0000000180011721 sub_18001171A   endp
.text:0000000180011721
.text:0000000180011721 ; ---------------------------------------------------------------------------
.text:0000000180011726                 align 10h
.text:0000000180011730
.text:0000000180011730 ; =============== S U B R O U T I N E =======================================
.text:0000000180011730
.text:0000000180011730
.text:0000000180011730 sub_180011730   proc near
.text:0000000180011730                 mov     rcx, [rdx+58h]
.text:0000000180011737                 jmp     sub_180002660
.text:0000000180011737 sub_180011730   endp
.text:0000000180011737
.text:000000018001173C ; [0000000C BYTES: COLLAPSED FUNCTION unknown_libname_6. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011748 ; ---------------------------------------------------------------------------
.text:0000000180011748
.text:0000000180011748 unknown_libname_7:                      ; Microsoft VisualC v7/14 64bit runtime
.text:0000000180011748                 lea     rcx, [rdx+40h]  ; Microsoft VisualC v14 64bit runtime
.text:000000018001174F                 jmp     loc_180006E00
.text:0000000180011754 ; ---------------------------------------------------------------------------
.text:0000000180011754                 lea     rcx, [rdx+40h]
.text:000000018001175B                 jmp     loc_180006E00
.text:0000000180011760
.text:0000000180011760 ; =============== S U B R O U T I N E =======================================
.text:0000000180011760
.text:0000000180011760
.text:0000000180011760 sub_180011760   proc near
.text:0000000180011760                 lea     rcx, [rdx+40h]
.text:0000000180011767                 jmp     sub_18000B930
.text:0000000180011767 sub_180011760   endp
.text:0000000180011767
.text:0000000180011767 ; ---------------------------------------------------------------------------
.text:000000018001176C                 align 10h
.text:0000000180011770 ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001177C ; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011788                 align 10h
.text:0000000180011790 ; START OF FUNCTION CHUNK FOR sub_18000C5B0
.text:0000000180011790
.text:0000000180011790 loc_180011790:                          ; DATA XREF: .rdata:00000001800162BF↓o
.text:0000000180011790                                         ; .pdata:000000018001D128↓o
.text:0000000180011790 ;   catch(...) // owned by 18000C696
.text:0000000180011790                 mov     [rsp+58h+var_48], rdx
.text:0000000180011795                 push    rbp
.text:0000000180011796                 sub     rsp, 20h
.text:000000018001179A                 mov     rbp, rdx
.text:000000018001179D                 mov     r8, [rbp+68h]
.text:00000001800117A1                 mov     rdx, [rbp+78h]
.text:00000001800117A5                 mov     rcx, [rbp+60h]
.text:00000001800117A9                 call    sub_18000E810
.text:00000001800117AE                 xor     edx, edx        ; pThrowInfo
.text:00000001800117B0                 xor     ecx, ecx        ; pExceptionObject
.text:00000001800117B2                 call    _CxxThrowException
.text:00000001800117B2 ; END OF FUNCTION CHUNK FOR sub_18000C5B0
.text:00000001800117B2 ; ---------------------------------------------------------------------------
.text:00000001800117B7                 align 8
.text:00000001800117B8 algn_1800117B8:                         ; DATA XREF: .pdata:000000018001D128↓o
.text:00000001800117B8                 align 20h
.text:00000001800117C0
.text:00000001800117C0 ; =============== S U B R O U T I N E =======================================
.text:00000001800117C0
.text:00000001800117C0
.text:00000001800117C0 sub_1800117C0   proc near
.text:00000001800117C0                 mov     rcx, [rdx+30h]
.text:00000001800117C7                 jmp     sub_18000F280
.text:00000001800117C7 sub_1800117C0   endp
.text:00000001800117C7
.text:00000001800117C7 ; ---------------------------------------------------------------------------
.text:00000001800117CC                 align 10h
.text:00000001800117D0 ; [0000000C BYTES: COLLAPSED FUNCTION int `std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>::do_put(time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>::std,time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>::ios_base &,char,tm const *,char,char)'::`1'::dtor$0. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800117DC                 align 20h
.text:00000001800117E0
.text:00000001800117E0 ; =============== S U B R O U T I N E =======================================
.text:00000001800117E0
.text:00000001800117E0
.text:00000001800117E0 sub_1800117E0   proc near
.text:00000001800117E0                 lea     rcx, [rdx+98h]
.text:00000001800117E7                 jmp     sub_180002660
.text:00000001800117E7 sub_1800117E0   endp
.text:00000001800117E7
.text:00000001800117E7 ; ---------------------------------------------------------------------------
.text:00000001800117EC                 align 10h
.text:00000001800117F0 ; START OF FUNCTION CHUNK FOR sub_18000CFD0
.text:00000001800117F0
.text:00000001800117F0 loc_1800117F0:                          ; DATA XREF: .rdata:0000000180015F70↓o
.text:00000001800117F0                                         ; .rdata:0000000180015F75↓o ...
.text:00000001800117F0 ;   cleanup() // owned by 18000D4F9
.text:00000001800117F0 ;   cleanup() // owned by 18000D711
.text:00000001800117F0 ;   cleanup() // owned by 18000D8C5
.text:00000001800117F0                 push    rbp
.text:00000001800117F2                 sub     rsp, 20h
.text:00000001800117F6                 mov     rbp, rdx
.text:00000001800117F9                 mov     edx, 0A3F8h
.text:00000001800117FE                 mov     rcx, [rbp+220h+var_1E8] ; Block
.text:0000000180011802                 call    j_j_free
.text:0000000180011807                 add     rsp, 20h
.text:000000018001180B                 pop     rbp
.text:000000018001180C                 retn
.text:000000018001180C ; END OF FUNCTION CHUNK FOR sub_18000CFD0
.text:000000018001180C ; ---------------------------------------------------------------------------
.text:000000018001180D algn_18001180D:                         ; DATA XREF: .pdata:000000018001D134↓o
.text:000000018001180D                 align 10h
.text:0000000180011810 ; [0000000C BYTES: COLLAPSED FUNCTION unknown_libname_5. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001181C                 align 20h
.text:0000000180011820
.text:0000000180011820 ; =============== S U B R O U T I N E =======================================
.text:0000000180011820
.text:0000000180011820
.text:0000000180011820 sub_180011820   proc near
.text:0000000180011820                 mov     rcx, [rdx+38h]
.text:0000000180011827                 jmp     sub_180002660
.text:0000000180011827 sub_180011820   endp
.text:0000000180011827
.text:0000000180011827 ; ---------------------------------------------------------------------------
.text:000000018001182C                 align 10h
.text:0000000180011830
.text:0000000180011830 ; =============== S U B R O U T I N E =======================================
.text:0000000180011830
.text:0000000180011830
.text:0000000180011830 sub_180011830   proc near
.text:0000000180011830                 lea     rcx, [rdx+40h]
.text:0000000180011837                 jmp     sub_180002660
.text:0000000180011837 sub_180011830   endp
.text:0000000180011837
.text:000000018001183C ; ---------------------------------------------------------------------------
.text:000000018001183C ; [00000017 BYTES: COLLAPSED CHUNK OF FUNCTION dllmain_crt_process_attach(HINSTANCE__ * const,void * const). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011853 ; ---------------------------------------------------------------------------
.text:0000000180011853 ; [0000002D BYTES: COLLAPSED CHUNK OF FUNCTION dllmain_crt_process_detach(bool). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0000000180011880 ; [00000036 BYTES: COLLAPSED CHUNK OF FUNCTION dllmain_dispatch(HINSTANCE__ * const,ulong,void * const). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800118B6 ; [00000018 BYTES: COLLAPSED CHUNK OF FUNCTION __scrt_is_nonwritable_in_current_image. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00000001800118CE algn_1800118CE:                         ; DATA XREF: .pdata:000000018001D170↓o
.text:00000001800118CE                 align 10h
.text:00000001800118D0 ; [0000005B BYTES: COLLAPSED FUNCTION unknown_libname_8. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:000000018001192B algn_18001192B:                         ; DATA XREF: .pdata:000000018001D17C↓o
.text:000000018001192B                 align 100h
.text:0000000180011A00                 dq 0C0h dup(?)
.text:0000000180011A00 _text           ends
.text:0000000180011A00
.idata:0000000180012000 ; Section 2. (virtual address 00012000)
.idata:0000000180012000 ; Virtual size                  : 00006820 (  26656.)
.idata:0000000180012000 ; Section size in file          : 00006A00 (  27136.)
.idata:0000000180012000 ; Offset to raw data for section: 00010E00
.idata:0000000180012000 ; Flags 40000040: Data Readable
.idata:0000000180012000 ; Alignment     : default
.idata:0000000180012000 ;
.idata:0000000180012000 ; Imports from ADVAPI32.dll
.idata:0000000180012000 ;
.idata:0000000180012000 ; ===========================================================================
.idata:0000000180012000
.idata:0000000180012000 ; Segment type: Externs
.idata:0000000180012000 ; _idata
.idata:0000000180012000 ; LSTATUS (__stdcall *RegOpenKeyExA)(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult)
.idata:0000000180012000                 extrn RegOpenKeyExA:qword
.idata:0000000180012000                                         ; CODE XREF: sub_18000E360+62↑p
.idata:0000000180012000                                         ; DATA XREF: sub_18000E360+62↑r ...
.idata:0000000180012008 ; LSTATUS (__stdcall *RegQueryValueExA)(HKEY hKey, LPCSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
.idata:0000000180012008                 extrn RegQueryValueExA:qword
.idata:0000000180012008                                         ; CODE XREF: sub_18000E360+A8↑p
.idata:0000000180012008                                         ; DATA XREF: sub_18000E360+A8↑r
.idata:0000000180012010 ; LSTATUS (__stdcall *RegCloseKey)(HKEY hKey)
.idata:0000000180012010                 extrn RegCloseKey:qword ; CODE XREF: sub_18000E360+DD↑p
.idata:0000000180012010                                         ; DATA XREF: sub_18000E360+DD↑r
.idata:0000000180012018
.idata:0000000180012020 ;
.idata:0000000180012020 ; Imports from KERNEL32.dll
.idata:0000000180012020 ;
.idata:0000000180012020 ; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
.idata:0000000180012020                 extrn SetUnhandledExceptionFilter:qword
.idata:0000000180012020                                         ; CODE XREF: __raise_securityfailure+B↑p
.idata:0000000180012020                                         ; __scrt_fastfail+119↑p
.idata:0000000180012020                                         ; DATA XREF: ...
.idata:0000000180012028 ; HANDLE (__stdcall *GetCurrentProcess)()
.idata:0000000180012028                 extrn GetCurrentProcess:qword
.idata:0000000180012028                                         ; CODE XREF: __raise_securityfailure+1A↑p
.idata:0000000180012028                                         ; DATA XREF: __raise_securityfailure+1A↑r
.idata:0000000180012030 ; BOOL (__stdcall *TerminateProcess)(HANDLE hProcess, UINT uExitCode)
.idata:0000000180012030                 extrn TerminateProcess:qword
.idata:0000000180012030                                         ; DATA XREF: __raise_securityfailure+2D↑r
.idata:0000000180012038 ; BOOL (__stdcall *IsProcessorFeaturePresent)(DWORD ProcessorFeature)
.idata:0000000180012038                 extrn IsProcessorFeaturePresent:qword
.idata:0000000180012038                                         ; CODE XREF: __report_gsfailure+E↑p
.idata:0000000180012038                                         ; __scrt_fastfail+1C↑p
.idata:0000000180012038                                         ; DATA XREF: ...
.idata:0000000180012040 ; DWORD (__stdcall *GetCurrentThreadId)()
.idata:0000000180012040                 extrn GetCurrentThreadId:qword
.idata:0000000180012040                                         ; CODE XREF: __security_init_cookie+3A↑p
.idata:0000000180012040                                         ; DATA XREF: __security_init_cookie+3A↑r
.idata:0000000180012048 ; void (__stdcall *GetSystemTimeAsFileTime)(LPFILETIME lpSystemTimeAsFileTime)
.idata:0000000180012048                 extrn GetSystemTimeAsFileTime:qword
.idata:0000000180012048                                         ; CODE XREF: __security_init_cookie+2C↑p
.idata:0000000180012048                                         ; DATA XREF: __security_init_cookie+2C↑r
.idata:0000000180012050 ; BOOL (__stdcall *DisableThreadLibraryCalls)(HMODULE hLibModule)
.idata:0000000180012050                 extrn DisableThreadLibraryCalls:qword
.idata:0000000180012050                                         ; CODE XREF: DllMain+13↑p
.idata:0000000180012050                                         ; DATA XREF: DllMain+13↑r
.idata:0000000180012058 ; void (__stdcall *InitializeSListHead)(PSLIST_HEADER ListHead)
.idata:0000000180012058                 extrn InitializeSListHead:qword
.idata:0000000180012058                                         ; DATA XREF: sub_180010E08+7↑r
.idata:0000000180012060 ; BOOL (__stdcall *IsDebuggerPresent)()
.idata:0000000180012060                 extrn IsDebuggerPresent:qword
.idata:0000000180012060                                         ; CODE XREF: __scrt_fastfail+F8↑p
.idata:0000000180012060                                         ; DATA XREF: __scrt_fastfail+F8↑r
.idata:0000000180012068 ; LONG (__stdcall *UnhandledExceptionFilter)(struct _EXCEPTION_POINTERS *ExceptionInfo)
.idata:0000000180012068                 extrn UnhandledExceptionFilter:qword
.idata:0000000180012068                                         ; CODE XREF: __raise_securityfailure+14↑p
.idata:0000000180012068                                         ; __scrt_fastfail+124↑p
.idata:0000000180012068                                         ; DATA XREF: ...
.idata:0000000180012070 ; BOOL (__stdcall *CreateTimerQueueTimer)(PHANDLE phNewTimer, HANDLE TimerQueue, WAITORTIMERCALLBACK Callback, PVOID Parameter, DWORD DueTime, DWORD Period, ULONG Flags)
.idata:0000000180012070                 extrn CreateTimerQueueTimer:qword
.idata:0000000180012070                                         ; CODE XREF: sub_180002E20+2CB↑p
.idata:0000000180012070                                         ; sub_1800034B0+3C1↑p ...
.idata:0000000180012078 ; void (__stdcall *EnterCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
.idata:0000000180012078                 extrn EnterCriticalSection:qword
.idata:0000000180012078                                         ; CODE XREF: fsuipcw_getLvarFromId+2E↑p
.idata:0000000180012078                                         ; fsuipcw_getLvarFromName+33↑p ...
.idata:0000000180012080 ; void (__stdcall *LeaveCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
.idata:0000000180012080                 extrn LeaveCriticalSection:qword
.idata:0000000180012080                                         ; CODE XREF: fsuipcw_getLvarFromId+5E↑p
.idata:0000000180012080                                         ; fsuipcw_getLvarFromId+83↑p ...
.idata:0000000180012088 ; void (__stdcall *InitializeCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
.idata:0000000180012088                 extrn InitializeCriticalSection:qword
.idata:0000000180012088                                         ; CODE XREF: fsuipcw_init+119↑p
.idata:0000000180012088                                         ; sub_180002AE0+B2↑p ...
.idata:0000000180012090 ; DWORD (__stdcall *WaitForSingleObject)(HANDLE hHandle, DWORD dwMilliseconds)
.idata:0000000180012090                 extrn WaitForSingleObject:qword
.idata:0000000180012090                                         ; CODE XREF: sub_180002E20+2F5↑p
.idata:0000000180012090                                         ; DATA XREF: sub_180002E20+2F5↑r
.idata:0000000180012098 ; BOOL (__stdcall *CloseHandle)(HANDLE hObject)
.idata:0000000180012098                 extrn CloseHandle:qword ; CODE XREF: sub_180003260+1E9↑p
.idata:0000000180012098                                         ; sub_18000F360+A1↑p ...
.idata:00000001800120A0 ; HANDLE (__stdcall *CreateThread)(LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId)
.idata:00000001800120A0                 extrn CreateThread:qword
.idata:00000001800120A0                                         ; CODE XREF: fsuipcw_start+11B↑p
.idata:00000001800120A0                                         ; DATA XREF: fsuipcw_start+11B↑r
.idata:00000001800120A8 ; PEXCEPTION_ROUTINE (__stdcall *RtlVirtualUnwind)(ULONG HandlerType, ULONG64 ImageBase, ULONG64 ControlPc, PRUNTIME_FUNCTION FunctionEntry, PCONTEXT ContextRecord, PVOID *HandlerData, PULONG64 EstablisherFrame, PKNONVOLATILE_CONTEXT_POINTERS ContextPointers)
.idata:00000001800120A8                 extrn RtlVirtualUnwind:qword
.idata:00000001800120A8                                         ; CODE XREF: capture_previous_context+5C↑p
.idata:00000001800120A8                                         ; __scrt_fastfail+A4↑p
.idata:00000001800120A8                                         ; DATA XREF: ...
.idata:00000001800120B0 ; HANDLE (__stdcall *CreateEventA)(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCSTR lpName)
.idata:00000001800120B0                 extrn CreateEventA:qword
.idata:00000001800120B0                                         ; CODE XREF: fsuipcw_start+A8↑p
.idata:00000001800120B0                                         ; sub_18000FEA0+9F↑p ...
.idata:00000001800120B8 ; BOOL (__stdcall *QueryPerformanceCounter)(LARGE_INTEGER *lpPerformanceCount)
.idata:00000001800120B8                 extrn QueryPerformanceCounter:qword
.idata:00000001800120B8                                         ; CODE XREF: __security_init_cookie+56↑p
.idata:00000001800120B8                                         ; DATA XREF: __security_init_cookie+56↑r
.idata:00000001800120C0 ; void (__stdcall *Sleep)(DWORD dwMilliseconds)
.idata:00000001800120C0                 extrn Sleep:qword       ; CODE XREF: sub_18000CE00+1C↑p
.idata:00000001800120C0                                         ; sub_18000CE00+145↑p
.idata:00000001800120C0                                         ; DATA XREF: ...
.idata:00000001800120C8 ; void (__stdcall *DeleteCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
.idata:00000001800120C8                 extrn DeleteCriticalSection:qword
.idata:00000001800120C8                                         ; CODE XREF: sub_18000CA30+94↑p
.idata:00000001800120C8                                         ; sub_18000F280+29↑p ...
.idata:00000001800120D0 ; DWORD (__stdcall *GetCurrentDirectoryA)(DWORD nBufferLength, LPSTR lpBuffer)
.idata:00000001800120D0                 extrn GetCurrentDirectoryA:qword
.idata:00000001800120D0                                         ; CODE XREF: sub_18000CFD0+17A↑p
.idata:00000001800120D0                                         ; sub_18000E860+1D6↑p
.idata:00000001800120D0                                         ; DATA XREF: ...
.idata:00000001800120D8 ; HANDLE (__stdcall *CreateFileA)(LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
.idata:00000001800120D8                 extrn CreateFileA:qword ; CODE XREF: sub_18000DF60+19E↑p
.idata:00000001800120D8                                         ; DATA XREF: sub_18000DF60+19E↑r
.idata:00000001800120E0 ; DWORD (__stdcall *GetLastError)()
.idata:00000001800120E0                 extrn GetLastError:qword
.idata:00000001800120E0                                         ; CODE XREF: sub_18000DF60+1B1↑p
.idata:00000001800120E0                                         ; sub_18000DF60:loc_18000E202↑p ...
.idata:00000001800120E8 ; BOOL (__stdcall *SetEvent)(HANDLE hEvent)
.idata:00000001800120E8                 extrn SetEvent:qword    ; CODE XREF: sub_18000CC50+46↑p
.idata:00000001800120E8                                         ; sub_18000E4F0+8B↑p
.idata:00000001800120E8                                         ; DATA XREF: ...
.idata:00000001800120F0 ; DWORD (__stdcall *GetCurrentProcessId)()
.idata:00000001800120F0                 extrn GetCurrentProcessId:qword
.idata:00000001800120F0                                         ; CODE XREF: sub_18000CFD0+248↑p
.idata:00000001800120F0                                         ; __security_init_cookie+46↑p
.idata:00000001800120F0                                         ; DATA XREF: ...
.idata:00000001800120F8 ; HMODULE (__stdcall *GetModuleHandleA)(LPCSTR lpModuleName)
.idata:00000001800120F8                 extrn GetModuleHandleA:qword
.idata:00000001800120F8                                         ; CODE XREF: sub_18000CFD0+1FB↑p
.idata:00000001800120F8                                         ; sub_18000CFD0+216↑p
.idata:00000001800120F8                                         ; DATA XREF: ...
.idata:0000000180012100 ; BOOL (__stdcall *GetModuleHandleExA)(DWORD dwFlags, LPCSTR lpModuleName, HMODULE *phModule)
.idata:0000000180012100                 extrn GetModuleHandleExA:qword
.idata:0000000180012100                                         ; CODE XREF: sub_18000CFD0+263↑p
.idata:0000000180012100                                         ; DATA XREF: sub_18000CFD0+263↑r
.idata:0000000180012108 ; FARPROC (__stdcall *GetProcAddress)(HMODULE hModule, LPCSTR lpProcName)
.idata:0000000180012108                 extrn GetProcAddress:qword
.idata:0000000180012108                                         ; CODE XREF: sub_18000CFD0+20B↑p
.idata:0000000180012108                                         ; sub_18000CFD0+226↑p
.idata:0000000180012108                                         ; DATA XREF: ...
.idata:0000000180012110 ; int (__stdcall *lstrcmpiA)(LPCSTR lpString1, LPCSTR lpString2)
.idata:0000000180012110                 extrn lstrcmpiA:qword   ; CODE XREF: sub_18000DF60+A4↑p
.idata:0000000180012110                                         ; sub_18000EAF0+140↑p ...
.idata:0000000180012118 ; DWORD (__stdcall *GetPrivateProfileStringA)(LPCSTR lpAppName, LPCSTR lpKeyName, LPCSTR lpDefault, LPSTR lpReturnedString, DWORD nSize, LPCSTR lpFileName)
.idata:0000000180012118                 extrn GetPrivateProfileStringA:qword
.idata:0000000180012118                                         ; CODE XREF: sub_18000EAF0+F9↑p
.idata:0000000180012118                                         ; sub_18000EAF0+220↑p ...
.idata:0000000180012120 ; DWORD (__stdcall *GetPrivateProfileSectionA)(LPCSTR lpAppName, LPSTR lpReturnedString, DWORD nSize, LPCSTR lpFileName)
.idata:0000000180012120                 extrn GetPrivateProfileSectionA:qword
.idata:0000000180012120                                         ; CODE XREF: sub_18000F090+A1↑p
.idata:0000000180012120                                         ; DATA XREF: sub_18000F090+A1↑r
.idata:0000000180012128 ; BOOL (__stdcall *WaitNamedPipeA)(LPCSTR lpNamedPipeName, DWORD nTimeOut)
.idata:0000000180012128                 extrn WaitNamedPipeA:qword
.idata:0000000180012128                                         ; CODE XREF: sub_18000DF60+1D5↑p
.idata:0000000180012128                                         ; DATA XREF: sub_18000DF60+1D5↑r
.idata:0000000180012130 ; BOOL (__stdcall *BindIoCompletionCallback)(HANDLE FileHandle, LPOVERLAPPED_COMPLETION_ROUTINE Function, ULONG Flags)
.idata:0000000180012130                 extrn BindIoCompletionCallback:qword
.idata:0000000180012130                                         ; CODE XREF: sub_18000DF60+263↑p
.idata:0000000180012130                                         ; sub_18000DF60+385↑p
.idata:0000000180012130                                         ; DATA XREF: ...
.idata:0000000180012138 ; BOOL (__stdcall *ReadFile)(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
.idata:0000000180012138                 extrn ReadFile:qword    ; CODE XREF: Function+1EE↑p
.idata:0000000180012138                                         ; sub_18000FA90+7F↑p
.idata:0000000180012138                                         ; DATA XREF: ...
.idata:0000000180012140 ; BOOL (__stdcall *WriteFile)(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
.idata:0000000180012140                 extrn WriteFile:qword   ; CODE XREF: sub_18000FFB0+EB↑p
.idata:0000000180012140                                         ; DATA XREF: sub_18000FFB0+EB↑r
.idata:0000000180012148 ; BOOL (__stdcall *CancelIo)(HANDLE hFile)
.idata:0000000180012148                 extrn CancelIo:qword    ; CODE XREF: sub_18000F360+10B↑p
.idata:0000000180012148                                         ; DATA XREF: sub_18000F360+10B↑r
.idata:0000000180012150 ; PRUNTIME_FUNCTION (__stdcall *RtlLookupFunctionEntry)(ULONG64 ControlPc, PULONG64 ImageBase, PUNWIND_HISTORY_TABLE HistoryTable)
.idata:0000000180012150                 extrn RtlLookupFunctionEntry:qword
.idata:0000000180012150                                         ; CODE XREF: capture_previous_context+25↑p
.idata:0000000180012150                                         ; __scrt_fastfail+63↑p
.idata:0000000180012150                                         ; DATA XREF: ...
.idata:0000000180012158 ; BOOL (__stdcall *DeleteTimerQueueTimer)(HANDLE TimerQueue, HANDLE Timer, HANDLE CompletionEvent)
.idata:0000000180012158                 extrn DeleteTimerQueueTimer:qword
.idata:0000000180012158                                         ; CODE XREF: sub_180003260+3C↑p
.idata:0000000180012158                                         ; sub_180003260+54↑p ...
.idata:0000000180012160 ; void (__stdcall *RtlCaptureContext)(PCONTEXT ContextRecord)
.idata:0000000180012160                 extrn RtlCaptureContext:qword
.idata:0000000180012160                                         ; CODE XREF: capture_previous_context+B↑p
.idata:0000000180012160                                         ; __scrt_fastfail+49↑p
.idata:0000000180012160                                         ; DATA XREF: ...
.idata:0000000180012168
.idata:0000000180012170 ;
.idata:0000000180012170 ; Imports from MSVCP140.dll
.idata:0000000180012170 ;
.idata:0000000180012170 ; public: std::locale::id::operator unsigned __int64(void)
.idata:0000000180012170                 extrn ??Bid@locale@std@@QEAA_KXZ:qword
.idata:0000000180012170                                         ; CODE XREF: sub_180009C80+D3↑p
.idata:0000000180012170                                         ; sub_18000A0D0+47↑p
.idata:0000000180012170                                         ; DATA XREF: ...
.idata:0000000180012178 ; public: bool std::codecvt_base::always_noconv(void)const
.idata:0000000180012178                 extrn ?always_noconv@codecvt_base@std@@QEBA_NXZ:qword
.idata:0000000180012178                                         ; CODE XREF: sub_180008760+1B↑p
.idata:0000000180012178                                         ; sub_180009300+119↑p
.idata:0000000180012178                                         ; DATA XREF: ...
.idata:0000000180012180 ; void std::_Xout_of_range(char const *)
.idata:0000000180012180                 extrn ?_Xout_of_range@std@@YAXPEBD@Z:qword
.idata:0000000180012180                                         ; CODE XREF: sub_180005890+B↑p
.idata:0000000180012180                                         ; sub_1800058B0+B↑p ...
.idata:0000000180012188 ; __declspec(dllimport) void std::_Xlength_error(char const *)
.idata:0000000180012188                 extrn __imp_?_Xlength_error@std@@YAXPEBD@Z:qword
.idata:0000000180012188                                         ; CODE XREF: sub_180002AA0+B↑p
.idata:0000000180012188                                         ; sub_180002AC0+B↑p ...
.idata:0000000180012190 ; __declspec(dllimport) public: std::_Lockit::~_Lockit(void)
.idata:0000000180012190                 extrn __imp_??1_Lockit@std@@QEAA@XZ:qword
.idata:0000000180012190                                         ; CODE XREF: sub_180009C80+17E↑p
.idata:0000000180012190                                         ; sub_18000A0D0+DC↑p
.idata:0000000180012190                                         ; DATA XREF: ...
.idata:0000000180012198 ; public: std::_Lockit::_Lockit(int)
.idata:0000000180012198                 extrn ??0_Lockit@std@@QEAA@H@Z:qword
.idata:0000000180012198                                         ; CODE XREF: sub_180009C80+B6↑p
.idata:0000000180012198                                         ; sub_18000A0D0+2D↑p
.idata:0000000180012198                                         ; DATA XREF: ...
.idata:00000001800121A0 ; public: static class std::locale::id std::time_put<char, class std::ostreambuf_iterator<char, struct std::char_traits<char>>>::id
.idata:00000001800121A0                 extrn ?id@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A:qword
.idata:00000001800121A0                                         ; DATA XREF: sub_180009C80+CC↑r
.idata:00000001800121A8 ; class std::basic_ostream<char, struct std::char_traits<char>> std::cout
.idata:00000001800121A8                 extrn ?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:qword
.idata:00000001800121A8                                         ; DATA XREF: sub_180007930+125↑r
.idata:00000001800121A8                                         ; sub_180007B30+133↑r ...
.idata:00000001800121B0 ; private: static class std::locale::_Locimp * std::locale::_Getgloballocale(void)
.idata:00000001800121B0                 extrn ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:qword
.idata:00000001800121B0                                         ; CODE XREF: sub_180009C80+105↑p
.idata:00000001800121B0                                         ; sub_18000A0D0+79↑p
.idata:00000001800121B0                                         ; DATA XREF: ...
.idata:00000001800121B8 ; bool std::uncaught_exception(void)
.idata:00000001800121B8                 extrn ?uncaught_exception@std@@YA_NXZ:qword
.idata:00000001800121B8                                         ; CODE XREF: sub_180009700+9↑p
.idata:00000001800121B8                                         ; sub_180009A90+168↑p ...
.idata:00000001800121C0 ; public: static class std::locale::id std::codecvt<char, char, struct _Mbstatet>::id
.idata:00000001800121C0                 extrn ?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A:qword
.idata:00000001800121C0                                         ; DATA XREF: sub_18000A0D0+40↑r
.idata:00000001800121C8 ; struct _iobuf * std::_Fiopen(char const *, int, int)
.idata:00000001800121C8                 extrn ?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z:qword
.idata:00000001800121C8                                         ; CODE XREF: sub_180009300+72↑p
.idata:00000001800121C8                                         ; DATA XREF: sub_180009300+72↑r
.idata:00000001800121D0 ; struct std::_Smanip<__int64> std::setw(__int64)
.idata:00000001800121D0                 extrn ?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z:qword
.idata:00000001800121D0                                         ; CODE XREF: sub_180007600+1A3↑p
.idata:00000001800121D0                                         ; DATA XREF: sub_180007600+1A3↑r
.idata:00000001800121D8 ; __int64 (__cdecl *Xtime_get_ticks)()
.idata:00000001800121D8                 extrn _Xtime_get_ticks:qword
.idata:00000001800121D8                                         ; CODE XREF: sub_180007600+3E↑p
.idata:00000001800121D8                                         ; DATA XREF: sub_180007600+3E↑r
.idata:00000001800121E0 ; public: static unsigned __int64 std::time_put<char, class std::ostreambuf_iterator<char, struct std::char_traits<char>>>::_Getcat(class std::locale::facet const * *, class std::locale const *)
.idata:00000001800121E0                 extrn ?_Getcat@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z:qword
.idata:00000001800121E0                                         ; CODE XREF: sub_180009C80+136↑p
.idata:00000001800121E0                                         ; DATA XREF: sub_180009C80+136↑r
.idata:00000001800121E8 ; public: static unsigned __int64 std::codecvt<char, char, struct _Mbstatet>::_Getcat(class std::locale::facet const * *, class std::locale const *)
.idata:00000001800121E8                 extrn ?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z:qword
.idata:00000001800121E8                                         ; CODE XREF: sub_18000A0D0+A4↑p
.idata:00000001800121E8                                         ; DATA XREF: sub_18000A0D0+A4↑r
.idata:00000001800121F0 ; public: __int64 std::basic_streambuf<char, struct std::char_traits<char>>::sputn(char const *, __int64)
.idata:00000001800121F0                 extrn ?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:qword
.idata:00000001800121F0                                         ; CODE XREF: sub_180009A90+F9↑p
.idata:00000001800121F0                                         ; sub_18000A4F0+103↑p
.idata:00000001800121F0                                         ; DATA XREF: ...
.idata:00000001800121F8 ; public: class std::basic_ostream<char, struct std::char_traits<char>> & std::basic_ostream<char, struct std::char_traits<char>>::put(char)
.idata:00000001800121F8                 extrn ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:qword
.idata:00000001800121F8                                         ; CODE XREF: sub_180009C40+21↑p
.idata:00000001800121F8                                         ; DATA XREF: sub_180009C40+21↑r
.idata:0000000180012200 ; public: class std::ostreambuf_iterator<char, struct std::char_traits<char>> std::time_put<char, class std::ostreambuf_iterator<char, struct std::char_traits<char>>>::put(class std::ostreambuf_iterator<char, struct std::char_traits<char>>, class std::ios_base &, char, struct tm const *, char const *, char const *)const
.idata:0000000180012200                 extrn ?put@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBUtm@@PEBD3@Z:qword
.idata:0000000180012200                                         ; CODE XREF: sub_180009C80+20D↑p
.idata:0000000180012200                                         ; DATA XREF: sub_180009C80+20D↑r
.idata:0000000180012208 ; public: int std::basic_streambuf<char, struct std::char_traits<char>>::sputc(char)
.idata:0000000180012208                 extrn ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:qword
.idata:0000000180012208                                         ; CODE XREF: sub_180009A90+CB↑p
.idata:0000000180012208                                         ; sub_180009A90+11B↑p ...
.idata:0000000180012210 ; public: char std::basic_ios<char, struct std::char_traits<char>>::widen(char)const
.idata:0000000180012210                 extrn ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:qword
.idata:0000000180012210                                         ; CODE XREF: sub_180009C40+15↑p
.idata:0000000180012210                                         ; DATA XREF: sub_180009C40+15↑r
.idata:0000000180012218 ; public: int std::codecvt<char, char, struct _Mbstatet>::unshift(struct _Mbstatet &, char *, char *, char * &)const
.idata:0000000180012218                 extrn ?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z:qword
.idata:0000000180012218                                         ; CODE XREF: sub_180009740+62↑p
.idata:0000000180012218                                         ; DATA XREF: sub_180009740+62↑r
.idata:0000000180012220 ; protected: std::basic_streambuf<char, struct std::char_traits<char>>::basic_streambuf<char, struct std::char_traits<char>>(void)
.idata:0000000180012220                 extrn ??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ:qword
.idata:0000000180012220                                         ; CODE XREF: sub_180007600+12B↑p
.idata:0000000180012220                                         ; sub_180009480+7C↑p
.idata:0000000180012220                                         ; DATA XREF: ...
.idata:0000000180012228 ; public: class std::locale std::basic_streambuf<char, struct std::char_traits<char>>::getloc(void)const
.idata:0000000180012228                 extrn ?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ:qword
.idata:0000000180012228                                         ; CODE XREF: sub_180009300+104↑p
.idata:0000000180012228                                         ; DATA XREF: sub_180009300+104↑r
.idata:0000000180012230 ; protected: void std::basic_streambuf<char, struct std::char_traits<char>>::_Init(void)
.idata:0000000180012230                 extrn ?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ:qword
.idata:0000000180012230                                         ; CODE XREF: sub_180008800+64↑p
.idata:0000000180012230                                         ; sub_180009300+90↑p ...
.idata:0000000180012238 ; public: void std::basic_ostream<char, struct std::char_traits<char>>::_Osfx(void)
.idata:0000000180012238                 extrn ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:qword
.idata:0000000180012238                                         ; CODE XREF: sub_180009700+16↑p
.idata:0000000180012238                                         ; sub_180009A90+175↑p ...
.idata:0000000180012240 ; public: class std::basic_ostream<char, struct std::char_traits<char>> & std::basic_ostream<char, struct std::char_traits<char>>::flush(void)
.idata:0000000180012240                 extrn ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:qword
.idata:0000000180012240                                         ; CODE XREF: sub_180009A90+77↑p
.idata:0000000180012240                                         ; sub_180009C40+2A↑p ...
.idata:0000000180012248 ; public: int std::codecvt<char, char, struct _Mbstatet>::in(struct _Mbstatet &, char const *, char const *, char const * &, char *, char *, char * &)const
.idata:0000000180012248                 extrn ?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z:qword
.idata:0000000180012248                                         ; CODE XREF: sub_180008D10+181↑p
.idata:0000000180012248                                         ; DATA XREF: sub_180008D10+181↑r
.idata:0000000180012250 ; public: int std::codecvt<char, char, struct _Mbstatet>::out(struct _Mbstatet &, char const *, char const *, char const * &, char *, char *, char * &)const
.idata:0000000180012250                 extrn ?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z:qword
.idata:0000000180012250                                         ; CODE XREF: sub_180009110+101↑p
.idata:0000000180012250                                         ; DATA XREF: sub_180009110+101↑r
.idata:0000000180012258 ; protected: char * std::basic_streambuf<char, struct std::char_traits<char>>::_Pninc(void)
.idata:0000000180012258                 extrn ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:qword
.idata:0000000180012258                                         ; CODE XREF: sub_1800084B0+4D↑p
.idata:0000000180012258                                         ; sub_1800084B0+1AD↑p ...
.idata:0000000180012260 ; public: void std::basic_ios<char, struct std::char_traits<char>>::clear(int, bool)
.idata:0000000180012260                 extrn ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:qword
.idata:0000000180012260                                         ; CODE XREF: sub_180009300+175↑p
.idata:0000000180012260                                         ; DATA XREF: sub_180009300+175↑r
.idata:0000000180012268 ; public: void std::basic_ios<char, struct std::char_traits<char>>::setstate(int, bool)
.idata:0000000180012268                 extrn ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:qword
.idata:0000000180012268                                         ; CODE XREF: sub_180009300+43↑p
.idata:0000000180012268                                         ; sub_180009A90+161↑p ...
.idata:0000000180012270 ; protected: std::basic_ios<char, struct std::char_traits<char>>::basic_ios<char, struct std::char_traits<char>>(void)
.idata:0000000180012270                 extrn ??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ:qword
.idata:0000000180012270                                         ; CODE XREF: sub_180007600+DB↑p
.idata:0000000180012270                                         ; sub_180009480+2B↑p
.idata:0000000180012270                                         ; DATA XREF: ...
.idata:0000000180012278 ; public: std::basic_ostream<char, struct std::char_traits<char>>::basic_ostream<char, struct std::char_traits<char>>(class std::basic_streambuf<char, struct std::char_traits<char>> *, bool)
.idata:0000000180012278                 extrn ??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:qword
.idata:0000000180012278                                         ; CODE XREF: sub_180009480+4A↑p
.idata:0000000180012278                                         ; DATA XREF: sub_180009480+4A↑r
.idata:0000000180012280 ; public: std::basic_iostream<char, struct std::char_traits<char>>::basic_iostream<char, struct std::char_traits<char>>(class std::basic_streambuf<char, struct std::char_traits<char>> *)
.idata:0000000180012280                 extrn ??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:qword
.idata:0000000180012280                                         ; CODE XREF: sub_180007600+F7↑p
.idata:0000000180012280                                         ; DATA XREF: sub_180007600+F7↑r
.idata:0000000180012288 ; __declspec(dllimport) public: virtual std::basic_streambuf<char, struct std::char_traits<char>>::~basic_streambuf<char, struct std::char_traits<char>>(void)
.idata:0000000180012288                 extrn __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ:qword
.idata:0000000180012288                                         ; CODE XREF: sub_180006F70+96↑p
.idata:0000000180012288                                         ; sub_180009630+61↑p
.idata:0000000180012288                                         ; DATA XREF: ...
.idata:0000000180012290 ; __declspec(dllimport) public: virtual void std::basic_streambuf<char, struct std::char_traits<char>>::_Lock(void)
.idata:0000000180012290                 extrn __imp_?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:qword
.idata:0000000180012290                                         ; DATA XREF: std::basic_streambuf<char,std::char_traits<char>>::_Lock(void)↑r
.idata:0000000180012298 ; __declspec(dllimport) public: virtual void std::basic_streambuf<char, struct std::char_traits<char>>::_Unlock(void)
.idata:0000000180012298                 extrn __imp_?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:qword
.idata:0000000180012298                                         ; DATA XREF: std::basic_streambuf<char,std::char_traits<char>>::_Unlock(void)↑r
.idata:00000001800122A0 ; __declspec(dllimport) protected: virtual __int64 std::basic_streambuf<char, struct std::char_traits<char>>::showmanyc(void)
.idata:00000001800122A0                 extrn __imp_?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ:qword
.idata:00000001800122A0                                         ; DATA XREF: std::basic_streambuf<char,std::char_traits<char>>::showmanyc(void)↑r
.idata:00000001800122A8 ; __declspec(dllimport) protected: virtual int std::basic_streambuf<char, struct std::char_traits<char>>::uflow(void)
.idata:00000001800122A8                 extrn __imp_?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:qword
.idata:00000001800122A8                                         ; DATA XREF: std::basic_streambuf<char,std::char_traits<char>>::uflow(void)↑r
.idata:00000001800122B0 ; __declspec(dllimport) protected: virtual __int64 std::basic_streambuf<char, struct std::char_traits<char>>::xsgetn(char *, __int64)
.idata:00000001800122B0                 extrn __imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z:qword
.idata:00000001800122B0                                         ; DATA XREF: sub_180008BC0+31↑r
.idata:00000001800122B0                                         ; std::basic_streambuf<char,std::char_traits<char>>::xsgetn(char *,__int64)↑r
.idata:00000001800122B8 ; __declspec(dllimport) protected: virtual __int64 std::basic_streambuf<char, struct std::char_traits<char>>::xsputn(char const *, __int64)
.idata:00000001800122B8                 extrn __imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z:qword
.idata:00000001800122B8                                         ; DATA XREF: sub_180008AF0+21↑r
.idata:00000001800122B8                                         ; std::basic_streambuf<char,std::char_traits<char>>::xsputn(char const *,__int64)↑r
.idata:00000001800122C0 ; __declspec(dllimport) protected: virtual class std::basic_streambuf<char, struct std::char_traits<char>> * std::basic_streambuf<char, struct std::char_traits<char>>::setbuf(char *, __int64)
.idata:00000001800122C0                 extrn __imp_?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z:qword
.idata:00000001800122C0                                         ; DATA XREF: std::basic_streambuf<char,std::char_traits<char>>::setbuf(char *,__int64)↑r
.idata:00000001800122C8 ; __declspec(dllimport) protected: virtual int std::basic_streambuf<char, struct std::char_traits<char>>::sync(void)
.idata:00000001800122C8                 extrn __imp_?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:qword
.idata:00000001800122C8                                         ; DATA XREF: std::basic_streambuf<char,std::char_traits<char>>::sync(void)↑r
.idata:00000001800122D0 ; __declspec(dllimport) protected: virtual void std::basic_streambuf<char, struct std::char_traits<char>>::imbue(class std::locale const &)
.idata:00000001800122D0                 extrn __imp_?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z:qword
.idata:00000001800122D0                                         ; DATA XREF: std::basic_streambuf<char,std::char_traits<char>>::imbue(std::locale const &)↑r
.idata:00000001800122D8 ; public: virtual std::basic_ios<char, struct std::char_traits<char>>::~basic_ios<char, struct std::char_traits<char>>(void)
.idata:00000001800122D8                 extrn ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ:qword
.idata:00000001800122D8                                         ; CODE XREF: sub_180007600+292↑p
.idata:00000001800122D8                                         ; sub_180009590+5E↑p ...
.idata:00000001800122E0 ; public: virtual std::basic_ostream<char, struct std::char_traits<char>>::~basic_ostream<char, struct std::char_traits<char>>(void)
.idata:00000001800122E0                 extrn ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ:qword
.idata:00000001800122E0                                         ; CODE XREF: sub_180006F70+A4↑p
.idata:00000001800122E0                                         ; DATA XREF: sub_180006F70+A4↑r ...
.idata:00000001800122E8 ; public: class std::basic_ostream<char, struct std::char_traits<char>> & std::basic_ostream<char, struct std::char_traits<char>>::operator<<(class std::basic_ostream<char, struct std::char_traits<char>> & (*)(class std::basic_ostream<char, struct std::char_traits<char>> &))
.idata:00000001800122E8                 extrn ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:qword
.idata:00000001800122E8                                         ; CODE XREF: sub_1800074F0+A0↑p
.idata:00000001800122E8                                         ; sub_180007930+161↑p ...
.idata:00000001800122F0 ; public: class std::basic_ostream<char, struct std::char_traits<char>> & std::basic_ostream<char, struct std::char_traits<char>>::operator<<(__int64)
.idata:00000001800122F0                 extrn ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z:qword
.idata:00000001800122F0                                         ; CODE XREF: sub_180007600+1C3↑p
.idata:00000001800122F0                                         ; DATA XREF: sub_180007600+1C3↑r
.idata:00000001800122F8 ; public: virtual std::basic_iostream<char, struct std::char_traits<char>>::~basic_iostream<char, struct std::char_traits<char>>(void)
.idata:00000001800122F8                 extrn ??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ:qword
.idata:00000001800122F8                                         ; CODE XREF: sub_180007600+288↑p
.idata:00000001800122F8                                         ; sub_1800078D0+46↑p ...
.idata:0000000180012300 ; public: class std::locale std::ios_base::getloc(void)const
.idata:0000000180012300                 extrn ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ:qword
.idata:0000000180012300                                         ; CODE XREF: sub_180009C80+A3↑p
.idata:0000000180012300                                         ; DATA XREF: sub_180009C80+A3↑r
.idata:0000000180012308
.idata:0000000180012310 ;
.idata:0000000180012310 ; Imports from SHELL32.dll
.idata:0000000180012310 ;
.idata:0000000180012310 ; HRESULT (__stdcall *SHGetFolderPathA)(HWND hwnd, int csidl, HANDLE hToken, DWORD dwFlags, LPSTR pszPath)
.idata:0000000180012310                 extrn SHGetFolderPathA:qword
.idata:0000000180012310                                         ; CODE XREF: sub_18000CFD0+6C↑p
.idata:0000000180012310                                         ; sub_18000CFD0+F7↑p ...
.idata:0000000180012318
.idata:0000000180012320 ;
.idata:0000000180012320 ; Imports from SHLWAPI.dll
.idata:0000000180012320 ;
.idata:0000000180012320 ; LPSTR (__stdcall *PathCombineA)(LPSTR pszDest, LPCSTR pszDir, LPCSTR pszFile)
.idata:0000000180012320                 extrn PathCombineA:qword
.idata:0000000180012320                                         ; CODE XREF: sub_18000CFD0+8C↑p
.idata:0000000180012320                                         ; sub_18000CFD0+113↑p ...
.idata:0000000180012328
.idata:0000000180012330 ;
.idata:0000000180012330 ; Imports from USER32.dll
.idata:0000000180012330 ;
.idata:0000000180012330 ; BOOL (__stdcall *PostMessageA)(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
.idata:0000000180012330                 extrn PostMessageA:qword
.idata:0000000180012330                                         ; CODE XREF: sub_18000CC50+34↑p
.idata:0000000180012330                                         ; sub_18000CFD0+280↑p ...
.idata:0000000180012338
.idata:0000000180012340 ;
.idata:0000000180012340 ; Imports from VCRUNTIME140.dll
.idata:0000000180012340 ;
.idata:0000000180012340                 extrn __std_exception_destroy:qword
.idata:0000000180012340                                         ; CODE XREF: sub_180001070+1D↑p
.idata:0000000180012340                                         ; DATA XREF: sub_180001070+1D↑r ...
.idata:0000000180012348                 extrn __std_exception_copy:qword
.idata:0000000180012348                                         ; CODE XREF: sub_180001010+24↑p
.idata:0000000180012348                                         ; sub_180001130+24↑p ...
.idata:0000000180012350                 extrn __imp___std_terminate:qword
.idata:0000000180012350                                         ; DATA XREF: sub_18000A4F0:__std_terminate↑r
.idata:0000000180012358 ; void *(__cdecl *memcpy)(void *, const void *Src, size_t Size)
.idata:0000000180012358                 extrn __imp_memcpy:qword
.idata:0000000180012358                                         ; DATA XREF: memcpy↑r
.idata:0000000180012360 ; void *(__cdecl *memset)(void *, int Val, size_t Size)
.idata:0000000180012360                 extrn __imp_memset:qword
.idata:0000000180012360                                         ; DATA XREF: memset↑r
.idata:0000000180012368 ; void (__stdcall __noreturn *_CxxThrowException)(void *pExceptionObject, _ThrowInfo *pThrowInfo)
.idata:0000000180012368                 extrn __imp__CxxThrowException:qword
.idata:0000000180012368                                         ; DATA XREF: _CxxThrowException↑r
.idata:0000000180012370 ; int (__cdecl *memcmp)(const void *Buf1, const void *Buf2, size_t Size)
.idata:0000000180012370                 extrn __imp_memcmp:qword
.idata:0000000180012370                                         ; DATA XREF: memcmp↑r
.idata:0000000180012378 ; void *(__cdecl *memmove)(void *, const void *Src, size_t Size)
.idata:0000000180012378                 extrn __imp_memmove:qword
.idata:0000000180012378                                         ; DATA XREF: memmove↑r
.idata:0000000180012380 ; EXCEPTION_DISPOSITION (__cdecl *__C_specific_handler)(struct _EXCEPTION_RECORD *ExceptionRecord, void *EstablisherFrame, struct _CONTEXT *ContextRecord, struct _DISPATCHER_CONTEXT *DispatcherContext)
.idata:0000000180012380                 extrn __imp___C_specific_handler:qword
.idata:0000000180012380                                         ; DATA XREF: __C_specific_handler↑r
.idata:0000000180012388                 extrn __imp___std_type_info_destroy_list:qword
.idata:0000000180012388                                         ; DATA XREF: __std_type_info_destroy_list↑r
.idata:0000000180012390
.idata:0000000180012398 ;
.idata:0000000180012398 ; Imports from VCRUNTIME140_1.dll
.idata:0000000180012398 ;
.idata:0000000180012398                 extrn __imp___CxxFrameHandler4:qword
.idata:0000000180012398                                         ; DATA XREF: __CxxFrameHandler4↑r
.idata:0000000180012398                                         ; .rdata:0000000180016BE4↓o
.idata:00000001800123A0
.idata:00000001800123A8 ;
.idata:00000001800123A8 ; Imports from WS2_32.dll
.idata:00000001800123A8 ;
.idata:00000001800123A8 ; int (__stdcall *WSASend)(SOCKET s, LPWSABUF lpBuffers, DWORD dwBufferCount, LPDWORD lpNumberOfBytesSent, DWORD dwFlags, LPWSAOVERLAPPED lpOverlapped, LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
.idata:00000001800123A8                 extrn WSASend:qword     ; CODE XREF: sub_18000FFB0+127↑p
.idata:00000001800123A8                                         ; DATA XREF: sub_18000FFB0+127↑r ...
.idata:00000001800123B0 ; int (__stdcall *WSARecv)(SOCKET s, LPWSABUF lpBuffers, DWORD dwBufferCount, LPDWORD lpNumberOfBytesRecvd, LPDWORD lpFlags, LPWSAOVERLAPPED lpOverlapped, LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
.idata:00000001800123B0                 extrn WSARecv:qword     ; CODE XREF: Function+229↑p
.idata:00000001800123B0                                         ; sub_18000FA90+B6↑p
.idata:00000001800123B0                                         ; DATA XREF: ...
.idata:00000001800123B8 ; int (__stdcall *WSAGetLastError)()
.idata:00000001800123B8                 extrn WSAGetLastError:qword
.idata:00000001800123B8                                         ; CODE XREF: sub_18000F360+E9↑p
.idata:00000001800123B8                                         ; Function+234↑p ...
.idata:00000001800123B8                                         ; Import by ordinal 111
.idata:00000001800123C0 ; int (__stdcall *shutdown)(SOCKET s, int how)
.idata:00000001800123C0                 extrn shutdown:qword    ; CODE XREF: sub_18000F360+101↑p
.idata:00000001800123C0                                         ; DATA XREF: sub_18000F360+101↑r
.idata:00000001800123C0                                         ; Import by ordinal 22
.idata:00000001800123C8 ; int (__stdcall *getsockopt)(SOCKET s, int level, int optname, char *optval, int *optlen)
.idata:00000001800123C8                 extrn getsockopt:qword  ; CODE XREF: sub_18000FB70+4A↑p
.idata:00000001800123C8                                         ; DATA XREF: sub_18000FB70+4A↑r
.idata:00000001800123C8                                         ; Import by ordinal 7
.idata:00000001800123D0 ; int (__stdcall *closesocket)(SOCKET s)
.idata:00000001800123D0                 extrn closesocket:qword ; CODE XREF: sub_18000F360+11D↑p
.idata:00000001800123D0                                         ; DATA XREF: sub_18000F360+11D↑r
.idata:00000001800123D0                                         ; Import by ordinal 3
.idata:00000001800123D8 ; void (__stdcall *freeaddrinfo)(PADDRINFOA pAddrInfo)
.idata:00000001800123D8                 extrn freeaddrinfo:qword
.idata:00000001800123D8                                         ; CODE XREF: sub_18000DF60+3CD↑p
.idata:00000001800123D8                                         ; sub_18000F960:loc_18000FA4F↑p
.idata:00000001800123D8                                         ; DATA XREF: ...
.idata:00000001800123E0 ; INT (__stdcall *getaddrinfo)(PCSTR pNodeName, PCSTR pServiceName, const ADDRINFOA *pHints, PADDRINFOA *ppResult)
.idata:00000001800123E0                 extrn getaddrinfo:qword ; CODE XREF: sub_18000DF60+32A↑p
.idata:00000001800123E0                                         ; sub_18000F960+B6↑p
.idata:00000001800123E0                                         ; DATA XREF: ...
.idata:00000001800123E8 ; int (__stdcall *WSACleanup)()
.idata:00000001800123E8                 extrn WSACleanup:qword  ; CODE XREF: sub_18000CE00+15B↑p
.idata:00000001800123E8                                         ; sub_18000F960:loc_18000FA55↑p
.idata:00000001800123E8                                         ; DATA XREF: ...
.idata:00000001800123E8                                         ; Import by ordinal 116
.idata:00000001800123F0 ; int (__stdcall *WSAStartup)(WORD wVersionRequested, LPWSADATA lpWSAData)
.idata:00000001800123F0                 extrn WSAStartup:qword  ; CODE XREF: sub_18000E770+3F↑p
.idata:00000001800123F0                                         ; sub_18000F960+48↑p
.idata:00000001800123F0                                         ; DATA XREF: ...
.idata:00000001800123F0                                         ; Import by ordinal 115
.idata:00000001800123F8 ; SOCKET (__stdcall *socket)(int af, int type, int protocol)
.idata:00000001800123F8                 extrn socket:qword      ; CODE XREF: sub_18000DF60+34F↑p
.idata:00000001800123F8                                         ; DATA XREF: sub_18000DF60+34F↑r
.idata:00000001800123F8                                         ; Import by ordinal 23
.idata:0000000180012400 ; int (__stdcall *setsockopt)(SOCKET s, int level, int optname, const char *optval, int optlen)
.idata:0000000180012400                 extrn setsockopt:qword  ; CODE XREF: sub_18000E590+3F↑p
.idata:0000000180012400                                         ; DATA XREF: sub_18000E590+3F↑r
.idata:0000000180012400                                         ; Import by ordinal 21
.idata:0000000180012408 ; int (__stdcall *connect)(SOCKET s, const struct sockaddr *name, int namelen)
.idata:0000000180012408                 extrn connect:qword     ; CODE XREF: sub_18000DF60+36D↑p
.idata:0000000180012408                                         ; DATA XREF: sub_18000DF60+36D↑r
.idata:0000000180012408                                         ; Import by ordinal 4
.idata:0000000180012410
.idata:0000000180012418 ;
.idata:0000000180012418 ; Imports from api-ms-win-crt-convert-l1-1-0.dll
.idata:0000000180012418 ;
.idata:0000000180012418 ; int (__cdecl *atoi)(const char *String)
.idata:0000000180012418                 extrn atoi:qword        ; CODE XREF: sub_18000EAF0+387↑p
.idata:0000000180012418                                         ; sub_18000EAF0+40B↑p
.idata:0000000180012418                                         ; DATA XREF: ...
.idata:0000000180012420 ; double (__cdecl *strtod)(const char *String, char **EndPtr)
.idata:0000000180012420                 extrn strtod:qword      ; CODE XREF: sub_180004D10+39↑p
.idata:0000000180012420                                         ; DATA XREF: sub_180004D10+39↑r
.idata:0000000180012428
.idata:0000000180012430 ;
.idata:0000000180012430 ; Imports from api-ms-win-crt-filesystem-l1-1-0.dll
.idata:0000000180012430 ;
.idata:0000000180012430 ; void (__cdecl *lock_file)(FILE *Stream)
.idata:0000000180012430                 extrn _lock_file:qword  ; DATA XREF: sub_1800092E0+C↑r
.idata:0000000180012430                                         ; .rdata:0000000180016C70↓o
.idata:0000000180012438 ; void (__cdecl *unlock_file)(FILE *Stream)
.idata:0000000180012438                 extrn _unlock_file:qword
.idata:0000000180012438                                         ; DATA XREF: sub_1800092C0+C↑r
.idata:0000000180012440 ; int (__cdecl *remove)(const char *FileName)
.idata:0000000180012440                 extrn remove:qword      ; CODE XREF: sub_180007030+32B↑p
.idata:0000000180012440                                         ; DATA XREF: sub_180007030+32B↑r
.idata:0000000180012448 ; int (__cdecl *rename)(const char *OldFilename, const char *NewFilename)
.idata:0000000180012448                 extrn rename:qword      ; CODE XREF: sub_180007030:loc_18000737C↑p
.idata:0000000180012448                                         ; DATA XREF: sub_180007030:loc_18000737C↑r
.idata:0000000180012450
.idata:0000000180012458 ;
.idata:0000000180012458 ; Imports from api-ms-win-crt-heap-l1-1-0.dll
.idata:0000000180012458 ;
.idata:0000000180012458 ; void *(__cdecl *malloc)(size_t Size)
.idata:0000000180012458                 extrn __imp_malloc:qword
.idata:0000000180012458                                         ; CODE XREF: sub_18000CCB0+98↑p
.idata:0000000180012458                                         ; sub_18000DDF0+84↑p ...
.idata:0000000180012460 ; int (__cdecl *_callnewh)(size_t Size)
.idata:0000000180012460                 extrn __imp__callnewh:qword
.idata:0000000180012460                                         ; DATA XREF: _callnewh↑r
.idata:0000000180012468 ; void (__cdecl *free)(void *Block)
.idata:0000000180012468                 extrn __imp_free:qword  ; CODE XREF: sub_18000CCB0+126↑p
.idata:0000000180012468                                         ; sub_18000CE00+69↑p ...
.idata:0000000180012470
.idata:0000000180012478 ;
.idata:0000000180012478 ; Imports from api-ms-win-crt-math-l1-1-0.dll
.idata:0000000180012478 ;
.idata:0000000180012478 ; float (__cdecl *ceilf)(float X)
.idata:0000000180012478                 extrn __imp_ceilf:qword ; DATA XREF: ceilf↑r
.idata:0000000180012478                                         ; .rdata:0000000180016C98↓o
.idata:0000000180012480
.idata:0000000180012488 ;
.idata:0000000180012488 ; Imports from api-ms-win-crt-runtime-l1-1-0.dll
.idata:0000000180012488 ;
.idata:0000000180012488 ; void (__cdecl *_initterm)(_PVFV *First, _PVFV *Last)
.idata:0000000180012488                 extrn __imp__initterm:qword
.idata:0000000180012488                                         ; DATA XREF: _initterm↑r
.idata:0000000180012488                                         ; .rdata:0000000180016C0C↓o
.idata:0000000180012490 ; int (__cdecl *_initterm_e)(_PIFV *First, _PIFV *Last)
.idata:0000000180012490                 extrn __imp__initterm_e:qword
.idata:0000000180012490                                         ; DATA XREF: _initterm_e↑r
.idata:0000000180012498 ; int (__cdecl *_seh_filter_dll)(unsigned int ExceptionNum, struct _EXCEPTION_POINTERS *ExceptionPtr)
.idata:0000000180012498                 extrn __imp__seh_filter_dll:qword
.idata:0000000180012498                                         ; DATA XREF: _seh_filter_dll↑r
.idata:00000001800124A0 ; errno_t (__cdecl *_configure_narrow_argv)(_crt_argv_mode mode)
.idata:00000001800124A0                 extrn __imp__configure_narrow_argv:qword
.idata:00000001800124A0                                         ; DATA XREF: _configure_narrow_argv↑r
.idata:00000001800124A8 ; int (__cdecl *_initialize_narrow_environment)()
.idata:00000001800124A8                 extrn __imp__initialize_narrow_environment:qword
.idata:00000001800124A8                                         ; DATA XREF: _initialize_narrow_environment↑r
.idata:00000001800124B0 ; int (__cdecl *_initialize_onexit_table)(_onexit_table_t *Table)
.idata:00000001800124B0                 extrn __imp__initialize_onexit_table:qword
.idata:00000001800124B0                                         ; DATA XREF: _initialize_onexit_table↑r
.idata:00000001800124B8 ; int (__cdecl *_register_onexit_function)(_onexit_table_t *Table, _onexit_t Function)
.idata:00000001800124B8                 extrn __imp__register_onexit_function:qword
.idata:00000001800124B8                                         ; DATA XREF: _register_onexit_function↑r
.idata:00000001800124C0 ; int (__cdecl *_execute_onexit_table)(_onexit_table_t *Table)
.idata:00000001800124C0                 extrn __imp__execute_onexit_table:qword
.idata:00000001800124C0                                         ; DATA XREF: _execute_onexit_table↑r
.idata:00000001800124C8 ; int (__cdecl *_crt_atexit)(_PVFV Function)
.idata:00000001800124C8                 extrn __imp__crt_atexit:qword
.idata:00000001800124C8                                         ; DATA XREF: _crt_atexit↑r
.idata:00000001800124D0 ; void (__cdecl *_cexit)()
.idata:00000001800124D0                 extrn __imp__cexit:qword
.idata:00000001800124D0                                         ; DATA XREF: _cexit↑r
.idata:00000001800124D8 ; void (__cdecl __noreturn *invalid_parameter_noinfo_noreturn)()
.idata:00000001800124D8                 extrn _invalid_parameter_noinfo_noreturn:qword
.idata:00000001800124D8                                         ; CODE XREF: fsuipcw_getLvarValues:loc_180001E38↑p
.idata:00000001800124D8                                         ; fsuipcw_getLvarList:loc_1800020D8↑p ...
.idata:00000001800124E0
.idata:00000001800124E8 ;
.idata:00000001800124E8 ; Imports from api-ms-win-crt-stdio-l1-1-0.dll
.idata:00000001800124E8 ;
.idata:00000001800124E8 ; FILE *(__cdecl *_acrt_iob_func)(unsigned int Ix)
.idata:00000001800124E8                 extrn __acrt_iob_func:qword
.idata:00000001800124E8                                         ; CODE XREF: sub_180010210+24↑p
.idata:00000001800124E8                                         ; DATA XREF: sub_180010210+24↑r ...
.idata:00000001800124F0 ; int (__cdecl *fseeki64)(FILE *Stream, __int64 Offset, int Origin)
.idata:00000001800124F0                 extrn _fseeki64:qword   ; CODE XREF: sub_1800089E0+71↑p
.idata:00000001800124F0                                         ; DATA XREF: sub_1800089E0+71↑r
.idata:00000001800124F8 ; size_t (__cdecl *fread)(void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream)
.idata:00000001800124F8                 extrn fread:qword       ; CODE XREF: sub_180008BC0+F5↑p
.idata:00000001800124F8                                         ; sub_180008BC0+125↑p
.idata:00000001800124F8                                         ; DATA XREF: ...
.idata:0000000180012500 ; size_t (__cdecl *fwrite)(const void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream)
.idata:0000000180012500                 extrn fwrite:qword      ; CODE XREF: sub_180008AF0+A0↑p
.idata:0000000180012500                                         ; sub_180009110+158↑p ...
.idata:0000000180012508 ; int (__cdecl *fgetpos)(FILE *Stream, fpos_t *Position)
.idata:0000000180012508                 extrn fgetpos:qword     ; CODE XREF: sub_1800089E0+87↑p
.idata:0000000180012508                                         ; DATA XREF: sub_1800089E0+87↑r
.idata:0000000180012510 ; int (__cdecl *fsetpos)(FILE *Stream, const fpos_t *Position)
.idata:0000000180012510                 extrn fsetpos:qword     ; CODE XREF: sub_180008900+4B↑p
.idata:0000000180012510                                         ; DATA XREF: sub_180008900+4B↑r
.idata:0000000180012518 ; errno_t (__cdecl *get_stream_buffer_pointers)(FILE *Stream, char ***Base, char ***Pointer, int **Count)
.idata:0000000180012518                 extrn _get_stream_buffer_pointers:qword
.idata:0000000180012518                                         ; CODE XREF: sub_180008800+90↑p
.idata:0000000180012518                                         ; sub_180009300+B9↑p
.idata:0000000180012518                                         ; DATA XREF: ...
.idata:0000000180012520 ; int (__cdecl *fgetc)(FILE *Stream)
.idata:0000000180012520                 extrn fgetc:qword       ; CODE XREF: sub_180008D10+B2↑p
.idata:0000000180012520                                         ; sub_180008D10:loc_180008DF9↑p
.idata:0000000180012520                                         ; DATA XREF: ...
.idata:0000000180012528 ; int (__cdecl *ungetc)(int Character, FILE *Stream)
.idata:0000000180012528                 extrn ungetc:qword      ; CODE XREF: sub_180008D10+22E↑p
.idata:0000000180012528                                         ; sub_180009030+6D↑p
.idata:0000000180012528                                         ; DATA XREF: ...
.idata:0000000180012530 ; int (__cdecl *fclose)(FILE *Stream)
.idata:0000000180012530                 extrn fclose:qword      ; CODE XREF: sub_180007030+20D↑p
.idata:0000000180012530                                         ; sub_180007030+317↑p ...
.idata:0000000180012538 ; int (__cdecl *fflush)(FILE *Stream)
.idata:0000000180012538                 extrn fflush:qword      ; CODE XREF: sub_1800087B0+2A↑p
.idata:0000000180012538                                         ; DATA XREF: sub_1800087B0+2A↑r
.idata:0000000180012540 ; FILE *(__cdecl *fopen)(const char *FileName, const char *Mode)
.idata:0000000180012540                 extrn fopen:qword       ; CODE XREF: sub_180007030+1FB↑p
.idata:0000000180012540                                         ; sub_180007030+309↑p
.idata:0000000180012540                                         ; DATA XREF: ...
.idata:0000000180012548 ; int (__cdecl *fputc)(int Character, FILE *Stream)
.idata:0000000180012548                 extrn fputc:qword       ; CODE XREF: sub_180009110+AF↑p
.idata:0000000180012548                                         ; sub_180009110+121↑p
.idata:0000000180012548                                         ; DATA XREF: ...
.idata:0000000180012550 ; int (__cdecl *_stdio_common_vsscanf)(unsigned __int64 Options, const char *Buffer, size_t BufferCount, const char *Format, _locale_t Locale, va_list ArgList)
.idata:0000000180012550                 extrn __stdio_common_vsscanf:qword
.idata:0000000180012550                                         ; CODE XREF: sub_180002A40+48↑p
.idata:0000000180012550                                         ; DATA XREF: sub_180002A40+48↑r
.idata:0000000180012558 ; int (__cdecl *_stdio_common_vsprintf)(unsigned __int64 Options, char *Buffer, size_t BufferCount, const char *Format, _locale_t Locale, va_list ArgList)
.idata:0000000180012558                 extrn __stdio_common_vsprintf:qword
.idata:0000000180012558                                         ; CODE XREF: sub_180002980+4B↑p
.idata:0000000180012558                                         ; sub_18000E6B0+73↑p
.idata:0000000180012558                                         ; DATA XREF: ...
.idata:0000000180012560 ; int (__cdecl *setvbuf)(FILE *Stream, char *Buffer, int Mode, size_t Size)
.idata:0000000180012560                 extrn setvbuf:qword     ; CODE XREF: sub_180008800+3F↑p
.idata:0000000180012560                                         ; DATA XREF: sub_180008800+3F↑r
.idata:0000000180012568 ; int (__cdecl *_stdio_common_vsprintf_s)(unsigned __int64 Options, char *Buffer, size_t BufferCount, const char *Format, _locale_t Locale, va_list ArgList)
.idata:0000000180012568                 extrn __stdio_common_vsprintf_s:qword
.idata:0000000180012568                                         ; CODE XREF: sub_1800029E0+3F↑p
.idata:0000000180012568                                         ; DATA XREF: sub_1800029E0+3F↑r
.idata:0000000180012570 ; int (__cdecl *_stdio_common_vfprintf)(unsigned __int64 Options, FILE *Stream, const char *Format, _locale_t Locale, va_list ArgList)
.idata:0000000180012570                 extrn __stdio_common_vfprintf:qword
.idata:0000000180012570                                         ; CODE XREF: sub_180010210+45↑p
.idata:0000000180012570                                         ; DATA XREF: sub_180010210+45↑r
.idata:0000000180012578
.idata:0000000180012580 ;
.idata:0000000180012580 ; Imports from api-ms-win-crt-string-l1-1-0.dll
.idata:0000000180012580 ;
.idata:0000000180012580 ; errno_t (__cdecl *strcpy_s)(char *Destination, rsize_t SizeInBytes, const char *Source)
.idata:0000000180012580                 extrn strcpy_s:qword    ; CODE XREF: fsuipcw_getLvarNameFromId+85↑p
.idata:0000000180012580                                         ; sub_1800051C0+127↑p
.idata:0000000180012580                                         ; DATA XREF: ...
.idata:0000000180012588 ; errno_t (__cdecl *strncpy_s)(char *Destination, rsize_t SizeInBytes, const char *Source, rsize_t MaxCount)
.idata:0000000180012588                 extrn strncpy_s:qword   ; CODE XREF: sub_1800051C0+76↑p
.idata:0000000180012588                                         ; DATA XREF: sub_1800051C0+76↑r
.idata:0000000180012590
.idata:0000000180012598 ;
.idata:0000000180012598 ; Imports from api-ms-win-crt-time-l1-1-0.dll
.idata:0000000180012598 ;
.idata:0000000180012598 ; struct tm *(__cdecl *localtime64)(const __time64_t *Time)
.idata:0000000180012598                 extrn _localtime64:qword
.idata:0000000180012598                                         ; CODE XREF: sub_180007600+14A↑p
.idata:0000000180012598                                         ; DATA XREF: sub_180007600+14A↑r ...
.idata:00000001800125A0
.idata:00000001800125A0
.rdata:00000001800125A8 ; ===========================================================================
.rdata:00000001800125A8
.rdata:00000001800125A8 ; Segment type: Pure data
.rdata:00000001800125A8 ; Segment permissions: Read
.rdata:00000001800125A8 _rdata          segment para public 'DATA' use64
.rdata:00000001800125A8                 assume cs:_rdata
.rdata:00000001800125A8                 ;org 1800125A8h
.rdata:00000001800125A8 __guard_check_icall_fptr dq offset _guard_check_icall_nop
.rdata:00000001800125A8                                         ; DATA XREF: .rdata:0000000180013CF0↓o
.rdata:00000001800125B0 __guard_xfg_check_icall_fptr dq offset _guard_check_icall_nop
.rdata:00000001800125B0                                         ; DATA XREF: .rdata:0000000180013D98↓o
.rdata:00000001800125B8 __guard_dispatch_icall_fptr dq offset _guard_dispatch_icall_nop
.rdata:00000001800125B8                                         ; DATA XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const)+DB↑r
.rdata:00000001800125B8                                         ; dllmain_dispatch(HINSTANCE__ * const,ulong,void * const):loc_1800105CF↑r ...
.rdata:00000001800125C0 __guard_xfg_dispatch_icall_fptr dq offset _guard_xfg_dispatch_icall_nop
.rdata:00000001800125C0                                         ; DATA XREF: .rdata:0000000180013DA0↓o
.rdata:00000001800125C8 __guard_xfg_table_dispatch_icall_fptr dq offset _guard_xfg_dispatch_icall_nop
.rdata:00000001800125C8                                         ; DATA XREF: .rdata:0000000180013DA8↓o
.rdata:00000001800125D0 __castguard_check_failure_os_handled_fptr db    0
.rdata:00000001800125D0                                         ; DATA XREF: .rdata:0000000180013DB0↓o
.rdata:00000001800125D1                 db    0
.rdata:00000001800125D2                 db    0
.rdata:00000001800125D3                 db    0
.rdata:00000001800125D4                 db    0
.rdata:00000001800125D5                 db    0
.rdata:00000001800125D6                 db    0
.rdata:00000001800125D7                 db    0
.rdata:00000001800125D8 off_1800125D8   dq offset memcpy        ; DATA XREF: .rdata:0000000180013DB8↓o
.rdata:00000001800125E0 ; const _PVFV qword_1800125E0
.rdata:00000001800125E0 qword_1800125E0 dq 0                    ; DATA XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const)+8E↑o
.rdata:00000001800125E8                 dq offset sub_180001000
.rdata:00000001800125F0 ; const _PVFV qword_1800125F0
.rdata:00000001800125F0 qword_1800125F0 dq 0                    ; DATA XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const)+87↑o
.rdata:00000001800125F8 ; const _PIFV First
.rdata:00000001800125F8 First           dq 0                    ; DATA XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const)+6E↑o
.rdata:0000000180012600 ; const _PIFV Last
.rdata:0000000180012600 Last            dq 0                    ; DATA XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const)+67↑o
.rdata:0000000180012608                 db    0
.rdata:0000000180012609                 db    0
.rdata:000000018001260A                 db    0
.rdata:000000018001260B                 db    0
.rdata:000000018001260C                 db    0
.rdata:000000018001260D                 db    0
.rdata:000000018001260E                 db    0
.rdata:000000018001260F                 db    0
.rdata:0000000180012610                 db    0
.rdata:0000000180012611                 db    0
.rdata:0000000180012612                 db    0
.rdata:0000000180012613                 db    0
.rdata:0000000180012614                 db    0
.rdata:0000000180012615                 db    0
.rdata:0000000180012616                 db    0
.rdata:0000000180012617                 db    0
.rdata:0000000180012618                 db    0
.rdata:0000000180012619                 db    0
.rdata:000000018001261A                 db    0
.rdata:000000018001261B                 db    0
.rdata:000000018001261C                 db    0
.rdata:000000018001261D                 db    0
.rdata:000000018001261E                 db    0
.rdata:000000018001261F                 db    0
.rdata:0000000180012620                 db    0
.rdata:0000000180012621                 db    0
.rdata:0000000180012622                 db    0
.rdata:0000000180012623                 db    0
.rdata:0000000180012624                 db    0
.rdata:0000000180012625                 db    0
.rdata:0000000180012626                 db    0
.rdata:0000000180012627                 db    0
.rdata:0000000180012628                 db    0
.rdata:0000000180012629                 db    0
.rdata:000000018001262A                 db    0
.rdata:000000018001262B                 db    0
.rdata:000000018001262C                 db    0
.rdata:000000018001262D                 db    0
.rdata:000000018001262E                 db    0
.rdata:000000018001262F                 db    0
.rdata:0000000180012630 ; const CHAR ValueName[]
.rdata:0000000180012630 ValueName       db 'SimConnect_Port_IPv6',0
.rdata:0000000180012630                                         ; DATA XREF: sub_18000E360+71↑o
.rdata:0000000180012645                 align 8
.rdata:0000000180012648 aSimconnectPort_0 db 'SimConnect_Port_IPv4',0
.rdata:0000000180012648                                         ; DATA XREF: sub_18000E360+83↑o
.rdata:000000018001265D                 align 20h
.rdata:0000000180012660 ; const CHAR aIpv4[]
.rdata:0000000180012660 aIpv4           db 'IPv4',0             ; DATA XREF: sub_18000EAF0+15F↑o
.rdata:0000000180012665                 align 8
.rdata:0000000180012668 ; const CHAR aIpv6[]
.rdata:0000000180012668 aIpv6           db 'IPv6',0             ; DATA XREF: sub_18000EAF0+19B↑o
.rdata:000000018001266D                 align 10h
.rdata:0000000180012670 ; const CHAR String2[]
.rdata:0000000180012670 String2         db 'Auto',0             ; DATA XREF: sub_18000EAF0+139↑o
.rdata:0000000180012675                 align 8
.rdata:0000000180012678 ; const CHAR aPipe[]
.rdata:0000000180012678 aPipe           db 'Pipe',0             ; DATA XREF: sub_18000EAF0+1D7↑o
.rdata:000000018001267D                 align 20h
.rdata:0000000180012680 aSPipeMicrosoft db '\\%s\pipe\Microsoft Flight Simulator\SimConnect',0
.rdata:0000000180012680                                         ; DATA XREF: sub_18000DF60+DE↑o
.rdata:00000001800126B0 aSPipeS         db '\\%s\pipe\%s',0     ; DATA XREF: sub_18000DF60+15E↑o
.rdata:00000001800126BD                 align 20h
.rdata:00000001800126C0 a127001         db '127.0.0.1',0        ; DATA XREF: sub_18000CFD0+615↑o
.rdata:00000001800126C0                                         ; sub_18000CFD0+6B7↑r ...
.rdata:00000001800126CA                 align 4
.rdata:00000001800126CC word_1800126CC  dw 3A3Ah                ; DATA XREF: sub_18000CFD0+3FF↑o
.rdata:00000001800126CC                                         ; sub_18000CFD0+4A1↑r ...
.rdata:00000001800126CE byte_1800126CE  db 31h                  ; DATA XREF: sub_18000CFD0+4AB↑r
.rdata:00000001800126CE                                         ; sub_18000CFD0+5DD↑r
.rdata:00000001800126CF                 align 10h
.rdata:00000001800126D0 byte_1800126D0  db 2Eh                  ; DATA XREF: sub_18000CFD0+3C5↑r
.rdata:00000001800126D0                                         ; sub_18000DF60+81↑o
.rdata:00000001800126D1                 align 8
.rdata:00000001800126D8 ; const CHAR pszFile[]
.rdata:00000001800126D8 pszFile         db 'SimConnect.cfg',0   ; DATA XREF: sub_18000CFD0+7A↑o
.rdata:00000001800126D8                                         ; sub_18000CFD0+101↑o ...
.rdata:00000001800126E7                 align 8
.rdata:00000001800126E8 aSimconnect     db 'SimConnect',0       ; DATA XREF: sub_18000EAF0+75↑o
.rdata:00000001800126E8                                         ; sub_18000F090+26↑o
.rdata:00000001800126F3                 align 8
.rdata:00000001800126F8 aSimconnectU    db 'SimConnect.%u',0    ; DATA XREF: sub_18000EAF0+B7↑o
.rdata:00000001800126F8                                         ; sub_18000F090+73↑o
.rdata:0000000180012706                 align 8
.rdata:0000000180012708                 dq offset unk_180013FF0
.rdata:0000000180012710 off_180012710   dq offset sub_180001070 ; DATA XREF: sub_180001010+C↑o
.rdata:0000000180012710                                         ; sub_180001070+A↑o ...
.rdata:0000000180012718                 dq offset sub_180001050
.rdata:0000000180012720                 dq offset unk_1800140C8
.rdata:0000000180012728 off_180012728   dq offset sub_180001070 ; DATA XREF: sub_180001170+2A↑o
.rdata:0000000180012728                                         ; sub_180010CF0+10↑o
.rdata:0000000180012730                 dq offset sub_180001050
.rdata:0000000180012738                 dq offset unk_180014120
.rdata:0000000180012740 off_180012740   dq offset sub_180001070 ; DATA XREF: sub_1800010E0+13↑o
.rdata:0000000180012740                                         ; sub_180001130+2A↑o
.rdata:0000000180012748                 dq offset sub_180001050
.rdata:0000000180012750 ; const CHAR Src[8]
.rdata:0000000180012750 Src             db 8 dup(0)             ; DATA XREF: sub_18000DF60:loc_18000DFFA↑o
.rdata:0000000180012750                                         ; sub_18000E360+27↑o ...
.rdata:0000000180012758                 dq offset unk_180013E80
.rdata:0000000180012760 off_180012760   dq offset sub_18000CA30 ; DATA XREF: sub_18000C8B0+1D↑o
.rdata:0000000180012760                                         ; sub_18000CA30+F↑o
.rdata:0000000180012768                 dq offset sub_18000E590
.rdata:0000000180012770                 dq offset sub_18000CC50
.rdata:0000000180012778                 dq offset sub_18000E470
.rdata:0000000180012780                 dq offset _guard_check_icall_nop
.rdata:0000000180012788 ; const CHAR ProcName[]
.rdata:0000000180012788 ProcName        db 'FlightSimGetMainHwnd',0
.rdata:0000000180012788                                         ; DATA XREF: sub_18000CFD0+204↑o
.rdata:000000018001279D                 align 20h
.rdata:00000001800127A0 ; const CHAR aFlightsimgetpr[]
.rdata:00000001800127A0 aFlightsimgetpr db 'FlightSimGetProcessId',0
.rdata:00000001800127A0                                         ; DATA XREF: sub_18000CFD0+21F↑o
.rdata:00000001800127B6                 align 8
.rdata:00000001800127B8 ; const CHAR SubKey[]
.rdata:00000001800127B8 SubKey          db 'SOFTWARE\Microsoft\Microsoft Games\KittyHawk',0
.rdata:00000001800127B8                                         ; DATA XREF: sub_18000E360+54↑o
.rdata:00000001800127E5                 align 8
.rdata:00000001800127E8 ; const CHAR KeyName[]
.rdata:00000001800127E8 KeyName         db 'Protocol',0         ; DATA XREF: sub_18000EAF0+ED↑o
.rdata:00000001800127F1                 align 8
.rdata:00000001800127F8 ; const CHAR aAddress[]
.rdata:00000001800127F8 aAddress        db 'Address',0          ; DATA XREF: sub_18000EAF0+214↑o
.rdata:0000000180012800 ; const CHAR aPort[]
.rdata:0000000180012800 aPort           db 'Port',0             ; DATA XREF: sub_18000EAF0+2A0↑o
.rdata:0000000180012805                 align 8
.rdata:0000000180012808 ; const CHAR aMaxreceivesize[]
.rdata:0000000180012808 aMaxreceivesize db 'MaxReceiveSize',0   ; DATA XREF: sub_18000EAF0+330↑o
.rdata:0000000180012817                 align 8
.rdata:0000000180012818 ; const CHAR aDisablenagle[]
.rdata:0000000180012818 aDisablenagle   db 'DisableNagle',0     ; DATA XREF: sub_18000EAF0+3BC↑o
.rdata:0000000180012825                 align 8
.rdata:0000000180012828 a127001_0       db '127.0.0.1',0        ; DATA XREF: sub_18000F960+93↑o
.rdata:0000000180012832                 align 4
.rdata:0000000180012834 ; const CHAR pNodeName[]
.rdata:0000000180012834 pNodeName       db '::1',0              ; DATA XREF: sub_18000F960+7A↑o
.rdata:0000000180012838                 dq offset unk_180013F50
.rdata:0000000180012840 off_180012840   dq offset sub_18000F2E0 ; DATA XREF: sub_18000F180+18↑o
.rdata:0000000180012840                                         ; sub_18000F280+A↑o ...
.rdata:0000000180012848                 dq offset sub_18000FEA0
.rdata:0000000180012850                 dq offset sub_18000F360
.rdata:0000000180012858                 dq offset sub_18000FC10
.rdata:0000000180012860                 dq offset _guard_check_icall_nop
.rdata:0000000180012868 aCreateeventFai db 'CreateEvent failed with %d.',0Ah,0
.rdata:0000000180012868                                         ; DATA XREF: sub_18000FEA0+B9↑o
.rdata:0000000180012868                                         ; sub_18000FEA0+E9↑o
.rdata:0000000180012885                 align 8
.rdata:0000000180012888                 dq offset unk_180013F78
.rdata:0000000180012890 off_180012890   dq offset sub_180010364 ; DATA XREF: sub_180010364+6↑o
.rdata:0000000180012890                                         ; .data:0000000180019050↓o ...
.rdata:0000000180012898 qword_180012898 dq 0                    ; DATA XREF: dllmain_dispatch(HINSTANCE__ * const,ulong,void * const)+3D↑r
.rdata:0000000180012898                                         ; dllmain_dispatch(HINSTANCE__ * const,ulong,void * const)+B6↑r ...
.rdata:00000001800128A0 xmmword_1800128A0 xmmword 0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFh
.rdata:00000001800128A0                                         ; DATA XREF: __scrt_initialize_onexit_tables:loc_1800109F3↑r
.rdata:00000001800128B0 ; const struct _EXCEPTION_POINTERS ExceptionInfo
.rdata:00000001800128B0 ExceptionInfo   _EXCEPTION_POINTERS <offset dword_180019530, offset ContextRecord>
.rdata:00000001800128B0                                         ; DATA XREF: __report_gsfailure+C1↑o
.rdata:00000001800128C0 aBadAllocation  db 'bad allocation',0   ; DATA XREF: sub_180010CF0+5↑o
.rdata:00000001800128CF                 align 10h
.rdata:00000001800128D0 aUnknownExcepti db 'Unknown exception',0
.rdata:00000001800128D0                                         ; DATA XREF: sub_180001050+4↑o
.rdata:00000001800128E2                 align 8
.rdata:00000001800128E8 aBadArrayNewLen db 'bad array new length',0
.rdata:00000001800128E8                                         ; DATA XREF: sub_1800010E0↑o
.rdata:00000001800128FD                 db    0
.rdata:00000001800128FE                 db    0
.rdata:00000001800128FF                 db    0
.rdata:0000000180012900                 db    0
.rdata:0000000180012901                 db    0
.rdata:0000000180012902                 db    0
.rdata:0000000180012903                 db    0
.rdata:0000000180012904                 db    0
.rdata:0000000180012905                 db    0
.rdata:0000000180012906                 db    0
.rdata:0000000180012907                 db    0
.rdata:0000000180012908 aMapSetTooLong  db 'map/set too long',0 ; DATA XREF: sub_180002AA0+4↑o
.rdata:0000000180012919                 align 20h
.rdata:0000000180012920 aStringTooLong  db 'string too long',0  ; DATA XREF: sub_180002AC0+4↑o
.rdata:0000000180012930 aFsuipcWasmif   db '.\FSUIPC_WASMIF',0  ; DATA XREF: fsuipcw_init+88↑o
.rdata:0000000180012940 aFsuipcSetlvar  db 'FSUIPC.SetLvar',0   ; DATA XREF: sub_180002E20+24↑o
.rdata:000000018001294F                 align 10h
.rdata:0000000180012950 aFsuipcSethvar  db 'FSUIPC.SetHvar',0   ; DATA XREF: sub_180002E20+38↑o
.rdata:000000018001295F                 align 20h
.rdata:0000000180012960 aFsuipcUpdatecd db 'FSUIPC.UpdateCDAs',0
.rdata:0000000180012960                                         ; DATA XREF: sub_180002E20+4C↑o
.rdata:0000000180012972                 align 8
.rdata:0000000180012978 aFsuipcListlvar db 'FSUIPC.ListLvars',0 ; DATA XREF: sub_180002E20+60↑o
.rdata:0000000180012989                 align 10h
.rdata:0000000180012990 aFsuipcReload   db 'FSUIPC.Reload',0    ; DATA XREF: sub_180002E20+74↑o
.rdata:000000018001299E                 align 20h
.rdata:00000001800129A0 aFsuipcSetlvars db 'FSUIPC.SetLvarS',0  ; DATA XREF: sub_180002E20+88↑o
.rdata:00000001800129B0 aFsuipcConfig   db 'FSUIPC_config',0    ; DATA XREF: sub_180002E20+B2↑o
.rdata:00000001800129BE                 align 20h
.rdata:00000001800129C0 aSimconnectMapc db 'SimConnect_MapClientDataNameToID failed!!!!',0
.rdata:00000001800129C0                                         ; DATA XREF: sub_180002E20+CD↑o
.rdata:00000001800129C0                                         ; sub_180002E20+144↑o ...
.rdata:00000001800129EC                 align 10h
.rdata:00000001800129F0 aSimconnectAddt db 'SimConnect_AddToClientDataDefinition failed!!!!',0
.rdata:00000001800129F0                                         ; DATA XREF: sub_180002E20+117↑o
.rdata:00000001800129F0                                         ; sub_180002E20+189↑o ...
.rdata:0000000180012A20 aFsuipcSetlvar_0 db 'FSUIPC_SetLvar',0  ; DATA XREF: sub_180002E20+129↑o
.rdata:0000000180012A2F                 align 10h
.rdata:0000000180012A30 aFsuipcCalccode db 'FSUIPC_CalcCode',0  ; DATA XREF: sub_180002E20+19B↑o
.rdata:0000000180012A40 aStartingConfig db 'Starting config request timer...',0
.rdata:0000000180012A40                                         ; DATA XREF: sub_180002E20+29F↑o
.rdata:0000000180012A61                 align 8
.rdata:0000000180012A68 aStartingMessag db 'Starting message loop...',0
.rdata:0000000180012A68                                         ; DATA XREF: sub_180002E20+2D9↑o
.rdata:0000000180012A81                 align 8
.rdata:0000000180012A88 aWaitforsingleo db 'WaitForSingleObject returned with error, quitting now.',0
.rdata:0000000180012A88                                         ; DATA XREF: sub_180002E20+30E↑o
.rdata:0000000180012ABF                 align 20h
.rdata:0000000180012AC0 aMessageLoopFin db 'Message loop finished - calling SimConnectEnd()...',0
.rdata:0000000180012AC0                                         ; DATA XREF: sub_180002E20+322↑o
.rdata:0000000180012AF3                 align 8
.rdata:0000000180012AF8 aSimconnectRequ db 'SimConnect_RequestClientData for config failed!!!!',0
.rdata:0000000180012AF8                                         ; DATA XREF: Callback+3E↑o
.rdata:0000000180012B2B                 align 10h
.rdata:0000000180012B30 aConfigDataRequ db 'Config data requested...',0
.rdata:0000000180012B30                                         ; DATA XREF: Callback+56↑o
.rdata:0000000180012B49                 align 10h
.rdata:0000000180012B50 aSimconnectRequ_0 db 'SimConnect_RequestClientData for lvars failed!!!!',0
.rdata:0000000180012B50                                         ; DATA XREF: sub_180003200+31↑o
.rdata:0000000180012B82                 align 8
.rdata:0000000180012B88 aAlreadyStarted db 'Already started!',0 ; DATA XREF: fsuipcw_start+46↑o
.rdata:0000000180012B99                 align 4
.rdata:0000000180012B9C a102            db '1.0.2',0            ; DATA XREF: fsuipcw_start+5D↑o
.rdata:0000000180012B9C                                         ; sub_1800034B0+3F1↑o
.rdata:0000000180012BA2                 align 10h
.rdata:0000000180012BB0 ; const char aStartingFsuipc[]
.rdata:0000000180012BB0 aStartingFsuipc db '**** Starting FSUIPC7 WASM Interface (WAPI) version %s (WASM vers'
.rdata:0000000180012BB0                                         ; DATA XREF: fsuipcw_start+68↑o
.rdata:0000000180012BB0                 db 'ion %s) using connection %d',0
.rdata:0000000180012C0D                 align 10h
.rdata:0000000180012C10 aFsuipcWasmIf   db 'FSUIPC-WASM-IF',0   ; DATA XREF: fsuipcw_start+B8↑o
.rdata:0000000180012C1F                 align 20h
.rdata:0000000180012C20 aConnectedToMsf db 'Connected to MSFS',0
.rdata:0000000180012C20                                         ; DATA XREF: fsuipcw_start+EA↑o
.rdata:0000000180012C32                 align 8
.rdata:0000000180012C38 aErrorCreatingS db 'Error creating SimConnect thread',0
.rdata:0000000180012C38                                         ; DATA XREF: fsuipcw_start+136↑o
.rdata:0000000180012C59                 align 20h
.rdata:0000000180012C60 aSimconnectThre db '**** SimConnect thread already running ****',0
.rdata:0000000180012C60                                         ; DATA XREF: fsuipcw_start+154↑o
.rdata:0000000180012C8C                 align 10h
.rdata:0000000180012C90 aEInvalidarg    db 'E_INVALIDARG',0     ; DATA XREF: fsuipcw_start+167↑o
.rdata:0000000180012C9D                 align 20h
.rdata:0000000180012CA0 aEFail          db 'E_FAIL',0           ; DATA XREF: fsuipcw_start+16E↑o
.rdata:0000000180012CA7                 align 8
.rdata:0000000180012CA8 ; const char aFailedOnSimcon[]
.rdata:0000000180012CA8 aFailedOnSimcon db 'Failed on SimConnect Open: cannot connect: %s',0
.rdata:0000000180012CA8                                         ; DATA XREF: fsuipcw_start+17E↑o
.rdata:0000000180012CD6                 align 8
.rdata:0000000180012CD8 ; const char aErrorClearingL[]
.rdata:0000000180012CD8 aErrorClearingL db 'Error clearing lvar value data definition with id=%d',0
.rdata:0000000180012CD8                                         ; DATA XREF: sub_180003260+92↑o
.rdata:0000000180012CD8                                         ; sub_1800034B0+1D4↑o
.rdata:0000000180012D0D                 align 10h
.rdata:0000000180012D10 ; const char aErrorClearingC[]
.rdata:0000000180012D10 aErrorClearingC db 'Error clearing config data definition',0
.rdata:0000000180012D10                                         ; DATA XREF: sub_180003260+19E↑o
.rdata:0000000180012D36                 align 8
.rdata:0000000180012D38 aSimconnectClos db 'SimConnect_Close done',0
.rdata:0000000180012D38                                         ; DATA XREF: sub_180003260+1D6↑o
.rdata:0000000180012D4E                 align 10h
.rdata:0000000180012D50 aIgnoringEventC db 'Ignoring EVENT_CONFIG_RECEIVED event as no change',0
.rdata:0000000180012D50                                         ; DATA XREF: sub_1800034B0+344↑o
.rdata:0000000180012D82                 align 8
.rdata:0000000180012D88 ; const char aConfigDataDNam[]
.rdata:0000000180012D88 aConfigDataDNam db 'Config Data %d: name=%s, size=%d, type=%d',0
.rdata:0000000180012D88                                         ; DATA XREF: sub_1800034B0+2EE↑o
.rdata:0000000180012DB2                 align 20h
.rdata:0000000180012DC0 aSimconnectRecv db 'SIMCONNECT_RECV_ID_CLIENT_DATA received: Empty EVENT_CONFIG_RECEI'
.rdata:0000000180012DC0                                         ; DATA XREF: sub_1800034B0+393↑o
.rdata:0000000180012DC0                 db 'VED - requesting again',0
.rdata:0000000180012E18 aSimconnectRecv_0 db 'SIMCONNECT_RECV_ID_CLIENT_DATA received: EVENT_CONFIG_RECEIVED',0
.rdata:0000000180012E18                                         ; DATA XREF: sub_1800034B0+3E1↑o
.rdata:0000000180012E57                 align 20h
.rdata:0000000180012E60 ; const char aTheInstalledWa[]
.rdata:0000000180012E60 aTheInstalledWa db '**** The installed WASM version is %s while the WAPI is expecting'
.rdata:0000000180012E60                                         ; DATA XREF: sub_1800034B0+41E↑o
.rdata:0000000180012E60                 db ' WASM version %s. Please update the WASM module as this may cause'
.rdata:0000000180012E60                 db ' issues.',0
.rdata:0000000180012EEB                 align 10h
.rdata:0000000180012EF0 ; const char aErrorAddingCli[]
.rdata:0000000180012EF0 aErrorAddingCli db 'Error adding client data definition id %d (%d)',0
.rdata:0000000180012EF0                                         ; DATA XREF: sub_1800034B0+66D↑o
.rdata:0000000180012F1F                 align 20h
.rdata:0000000180012F20 ; const char aClientDataDefi[]
.rdata:0000000180012F20 aClientDataDefi db 'Client data definition added with id=%d (size=%d)',0
.rdata:0000000180012F20                                         ; DATA XREF: sub_1800034B0+6C7↑o
.rdata:0000000180012F52                 align 8
.rdata:0000000180012F58 ; const char aErrorRequestin[]
.rdata:0000000180012F58 aErrorRequestin db 'Error requesting CDA ',27h,'%s',27h,' with id=%d and definitionId'
.rdata:0000000180012F58                                         ; DATA XREF: sub_1800034B0+874↑o
.rdata:0000000180012F58                 db '=%d',0
.rdata:0000000180012F91                 align 8
.rdata:0000000180012F98 ; const char aCdaSWithIdDAnd[]
.rdata:0000000180012F98 aCdaSWithIdDAnd db 'CDA ',27h,'%s',27h,' with id=%d and definitionId=%d requested',0
.rdata:0000000180012F98                                         ; DATA XREF: sub_1800034B0+7E6↑o
.rdata:0000000180012FCA                 align 10h
.rdata:0000000180012FD0 aSimconnectRequ_1 db 'SimConnect_RequestClientData for config updates failed!',0
.rdata:0000000180012FD0                                         ; DATA XREF: sub_1800034B0+946↑o
.rdata:0000000180013008 aConfigDataUpda db 'Config data updates requested.',0
.rdata:0000000180013008                                         ; DATA XREF: sub_1800034B0+95C↑o
.rdata:0000000180013027                 align 8
.rdata:0000000180013028 ; const char aCdaDNolvarcdas[]
.rdata:0000000180013028 aCdaDNolvarcdas db 'cda=%d (noLvarCDAs=%d)',0
.rdata:0000000180013028                                         ; DATA XREF: sub_1800034B0+9C5↑o
.rdata:000000018001303F                 align 20h
.rdata:0000000180013040 ; const char aEventLvarsRece[]
.rdata:0000000180013040 aEventLvarsRece db 'EVENT_LVARS_RECEIVED:%d of %d: dwObjectID=%d, dwDefineID=%d, dwDe'
.rdata:0000000180013040                                         ; DATA XREF: sub_1800034B0+A3D↑o
.rdata:0000000180013040                 db 'fineCount=%d, dwentrynumber=%d, dwoutof=%d',0
.rdata:00000001800130AC                 align 10h
.rdata:00000001800130B0 ; const char aLvarDataNameS[]
.rdata:00000001800130B0 aLvarDataNameS  db 'LVAR Data: name=',27h,'%s',27h,0
.rdata:00000001800130B0                                         ; DATA XREF: sub_1800034B0+A8E↑o
.rdata:00000001800130C5                 align 8
.rdata:00000001800130C8 ; const char aErrorClearingL_0[]
.rdata:00000001800130C8 aErrorClearingL_0 db 'Error clearing lvar data definition with id=%d',0
.rdata:00000001800130C8                                         ; DATA XREF: sub_1800034B0+C60↑o
.rdata:00000001800130F7                 align 20h
.rdata:0000000180013100 ; const char aEventLvarsRece_0[]
.rdata:0000000180013100 aEventLvarsRece_0 db 'EVENT_LVARS_RECEIVED but id not found:%d of %d: dwObjectID=%d, dw'
.rdata:0000000180013100                                         ; DATA XREF: sub_1800034B0:loc_1800041FB↑o
.rdata:0000000180013100                 db 'DefineID=%d, dwDefineCount=%d, dwentrynumber=%d, dwoutof=%d',0
.rdata:000000018001317D                 align 20h
.rdata:0000000180013180 ; const char aErrorCdaWithId[]
.rdata:0000000180013180 aErrorCdaWithId db 'Error: CDA with id=%d not found',0
.rdata:0000000180013180                                         ; DATA XREF: sub_1800034B0+D6C↑o
.rdata:0000000180013180                                         ; sub_1800034B0+1028↑o
.rdata:00000001800131A0 ; const char aEventHvarsRece[]
.rdata:00000001800131A0 aEventHvarsRece db 'EVENT_HVARS_RECEIVED: dwObjectID=%d, dwDefineID=%d, dwDefineCount'
.rdata:00000001800131A0                                         ; DATA XREF: sub_1800034B0+DCD↑o
.rdata:00000001800131A0                 db '=%d, dwentrynumber=%d, dwoutof=%d',0
.rdata:0000000180013203                 align 8
.rdata:0000000180013208 ; const char aHvarDataId03dN[]
.rdata:0000000180013208 aHvarDataId03dN db 'HVAR Data: ID=%03d, name=',27h,'%s',27h,0
.rdata:0000000180013208                                         ; DATA XREF: sub_1800034B0+E66↑o
.rdata:0000000180013226                 align 8
.rdata:0000000180013228 ; const char aErrorClearingH[]
.rdata:0000000180013228 aErrorClearingH db 'Error clearing hvar data definition with id=%d',0
.rdata:0000000180013228                                         ; DATA XREF: sub_1800034B0+F61↑o
.rdata:0000000180013257                 align 20h
.rdata:0000000180013260 ; const char aEventValuesRec[]
.rdata:0000000180013260 aEventValuesRec db 'EVENT_VALUES_RECEIVED+%d: Ignoring as we only have %llu lvars (dw'
.rdata:0000000180013260                                         ; DATA XREF: sub_1800034B0+10DF↑o
.rdata:0000000180013260                 db 'ObjectID=%d, dwDefineID=%d, dwDefineCount=%d, dwentrynumber=%d, d'
.rdata:0000000180013260                 db 'woutof=%d)',0
.rdata:00000001800132ED                 align 10h
.rdata:00000001800132F0 ; const char aEventValuesRec_0[]
.rdata:00000001800132F0 aEventValuesRec_0 db 'EVENT_VALUES_RECEIVED+%d: dwObjectID=%d, dwDefineID=%d, dwDefineC'
.rdata:00000001800132F0                                         ; DATA XREF: sub_1800034B0+114F↑o
.rdata:00000001800132F0                 db 'ount=%d, dwentrynumber=%d, dwoutof=%d',0
.rdata:0000000180013357                 align 8
.rdata:0000000180013358 ; const char aLvarValueId03d[]
.rdata:0000000180013358 aLvarValueId03d db 'Lvar value: ID=%03d, value=%lf',0
.rdata:0000000180013358                                         ; DATA XREF: sub_1800034B0+124D↑o
.rdata:0000000180013377                 align 8
.rdata:0000000180013378 ; const char aFlaggingLvarFo[]
.rdata:0000000180013378 aFlaggingLvarFo db 'Flagging lvar for callback: id=%d',0
.rdata:0000000180013378                                         ; DATA XREF: sub_1800034B0+131F↑o
.rdata:000000018001339A                 align 20h
.rdata:00000001800133A0 aCallingLvarCda db 'Calling Lvar CDAs loaded callback function...',0
.rdata:00000001800133A0                                         ; DATA XREF: sub_1800034B0+14D7↑o
.rdata:00000001800133CE                 align 10h
.rdata:00000001800133D0 ; const char aSimconnectExce[]
.rdata:00000001800133D0 aSimconnectExce db 'Simconnect Exception received: %d (dwSendID=%d)',0
.rdata:00000001800133D0                                         ; DATA XREF: sub_1800034B0+1752↑o
.rdata:0000000180013400 aSimconnectRecv_1 db 'SIMCONNECT_RECV_ID_CLIENT_DATA received: default',0
.rdata:0000000180013400                                         ; DATA XREF: sub_1800034B0+1782↑o
.rdata:0000000180013431                 align 8
.rdata:0000000180013438 aSimconnectTran db 'SimConnect_TransmitClientEvent for EVENT_LIST_LVARS failed!!!!',0
.rdata:0000000180013438                                         ; DATA XREF: fsuipcw_createAircraftLvarFile+3D↑o
.rdata:0000000180013477                 align 8
.rdata:0000000180013478 aSimconnectTran_0 db 'SimConnect_TransmitClientEvent for EVENT_RELOAD failed!!!!',0
.rdata:0000000180013478                                         ; DATA XREF: fsuipcw_reload+3D↑o
.rdata:00000001800134B3                 align 8
.rdata:00000001800134B8 ; const char aSettingLvarVal[]
.rdata:00000001800134B8 aSettingLvarVal db 'Setting lvar value as string: %.*s',0
.rdata:00000001800134B8                                         ; DATA XREF: sub_180004D10+73↑o
.rdata:00000001800134DB                 align 4
.rdata:00000001800134DC ; const char aDN[]
.rdata:00000001800134DC aDN             db '%d%n',0             ; DATA XREF: sub_180004D10+A0↑o
.rdata:00000001800134E1                 align 8
.rdata:00000001800134E8 ; const char aSettingLvarVal_0[]
.rdata:00000001800134E8 aSettingLvarVal_0 db 'Setting lvar value as unsigned short: %u',0
.rdata:00000001800134E8                                         ; DATA XREF: sub_180004D10+111↑o
.rdata:0000000180013511                 align 8
.rdata:0000000180013518 aSettingLvarVal_1 db 'Setting lvar value as short: %d',0
.rdata:0000000180013518                                         ; DATA XREF: sub_180004D10+14E↑o
.rdata:0000000180013538 ; const char aSettingLvarVal_2[]
.rdata:0000000180013538 aSettingLvarVal_2 db 'Setting lvar value as double: %f',0
.rdata:0000000180013538                                         ; DATA XREF: sub_180004D10+168↑o
.rdata:0000000180013559                 align 20h
.rdata:0000000180013560 ; const char aErrorSettingCl[]
.rdata:0000000180013560 aErrorSettingCl db 'Error setting Client Data lvar value: %d=%f',0
.rdata:0000000180013560                                         ; DATA XREF: sub_180004ED0+62↑o
.rdata:000000018001358C                 align 10h
.rdata:0000000180013590 ; const char aLvarSetClientD[]
.rdata:0000000180013590 aLvarSetClientD db 'Lvar set Client Data Area updated [requestID=%d]',0
.rdata:0000000180013590                                         ; DATA XREF: sub_180004ED0+A9↑o
.rdata:00000001800135C1                 align 8
.rdata:00000001800135C8 aSimconnectTran_3 db 'SimConnect_TransmitClientEvent for EVENT_SET_LVAR failed!!!!',0
.rdata:00000001800135C8                                         ; DATA XREF: sub_1800050E0+66↑o
.rdata:0000000180013605                 align 10h
.rdata:0000000180013610 ; const char aControlSentToS_1[]
.rdata:0000000180013610 aControlSentToS_1 db 'Control sent to set lvars with parameter %d (%X): lvarId=%u (%X),'
.rdata:0000000180013610                                         ; DATA XREF: sub_1800050E0+76↑o
.rdata:0000000180013610                 db ' value=%u (%X)',0
.rdata:0000000180013660 aSimconnectTran_2 db 'SimConnect_TransmitClientEvent for EVENT_SET_LVARS failed!!!!',0
.rdata:0000000180013660                                         ; DATA XREF: sub_180005000+66↑o
.rdata:000000018001369E                 align 20h
.rdata:00000001800136A0 ; const char aControlSentToS_0[]
.rdata:00000001800136A0 aControlSentToS_0 db 'Control sent to set lvars with parameter %d (%X): lvarId=%u (%X),'
.rdata:00000001800136A0                                         ; DATA XREF: sub_180005000+76↑o
.rdata:00000001800136A0                 db ' value=%d (%X)',0
.rdata:00000001800136F0 ; const char aErrorSettingCl_1[]
.rdata:00000001800136F0 aErrorSettingCl_1 db 'Error setting Client Data Calculator Code: code contains %zd char'
.rdata:00000001800136F0                                         ; DATA XREF: sub_1800051C0+178↑o
.rdata:00000001800136F0                 db 'acters, max allowed is %d',0
.rdata:000000018001374B                 align 10h
.rdata:0000000180013750 ; const char aErrorSettingCl_0[]
.rdata:0000000180013750 aErrorSettingCl_0 db 'Error setting Client Data Calculator Code: ',27h,'%s',27h,0
.rdata:0000000180013750                                         ; DATA XREF: sub_1800051C0+BD↑o
.rdata:0000000180013780 ; const char aCalcultorCodeC[]
.rdata:0000000180013780 aCalcultorCodeC db 'Calcultor Code Client Data Area updated [requestID=%d]',0
.rdata:0000000180013780                                         ; DATA XREF: sub_1800051C0+E8↑o
.rdata:00000001800137B7                 align 8
.rdata:00000001800137B8 ; const char Source[]
.rdata:00000001800137B8 Source          db '1',0                ; DATA XREF: sub_1800051C0+116↑o
.rdata:00000001800137BA                 align 20h
.rdata:00000001800137C0 ; const char Format[]
.rdata:00000001800137C0 Format          db 'We have %03llu lvars: ',0
.rdata:00000001800137C0                                         ; DATA XREF: fsuipcw_logLvars+62↑o
.rdata:00000001800137D7                 align 8
.rdata:00000001800137D8 ; const char aId03dSF[]
.rdata:00000001800137D8 aId03dSF        db '    ID=%03d %s = %f',0
.rdata:00000001800137D8                                         ; DATA XREF: fsuipcw_logLvars+102↑o
.rdata:00000001800137EC                 align 10h
.rdata:00000001800137F0 aSimconnectTran_1 db 'SimConnect_TransmitClientEvent for EVENT_SET_HVAR failed!!!!',0
.rdata:00000001800137F0                                         ; DATA XREF: fsuipcw_setHvar+56↑o
.rdata:000000018001382D                 align 10h
.rdata:0000000180013830 ; const char aControlSentToS[]
.rdata:0000000180013830 aControlSentToS db 'Control sent to set hvar with id=%d (%X)',0
.rdata:0000000180013830                                         ; DATA XREF: fsuipcw_setHvar+6B↑o
.rdata:0000000180013859                 align 20h
.rdata:0000000180013860 ; const char aId03dS[]
.rdata:0000000180013860 aId03dS         db 'ID=%03d %s',0       ; DATA XREF: fsuipcw_logHvars+97↑o
.rdata:000000018001386B                 align 10h
.rdata:0000000180013870 ; const char aSLf[]
.rdata:0000000180013870 aSLf            db '::%s = %lf',0       ; DATA XREF: fsuipcw_createLvar+52↑o
.rdata:000000018001387B                 align 20h
.rdata:0000000180013880 ; const char aErrorFlaggingL[]
.rdata:0000000180013880 aErrorFlaggingL db 'Error flagging lvar for update callback: %s (No lvar with that na'
.rdata:0000000180013880                                         ; DATA XREF: fsuipcw_flagLvarForUpdateCallbackByName+40↑o
.rdata:0000000180013880                 db 'me found)',0
.rdata:00000001800138CB                 align 10h
.rdata:00000001800138D0 aInvalidVectorB db 'invalid vector<bool> subscript',0
.rdata:00000001800138D0                                         ; DATA XREF: sub_180005890+4↑o
.rdata:00000001800138EF                 align 10h
.rdata:00000001800138F0 aInvalidVectorS db 'invalid vector subscript',0
.rdata:00000001800138F0                                         ; DATA XREF: sub_1800058B0+4↑o
.rdata:0000000180013909                 align 10h
.rdata:0000000180013910 aVectorBoolTooL db 'vector<bool> too long',0
.rdata:0000000180013910                                         ; DATA XREF: sub_180005C60+4↑o
.rdata:0000000180013926                 align 8
.rdata:0000000180013928 aUnorderedMapSe db 'unordered_map/set too long',0
.rdata:0000000180013928                                         ; DATA XREF: sub_180005D10+DA↑o
.rdata:0000000180013943                 align 8
.rdata:0000000180013948 ; const char aVectorTooLong[]
.rdata:0000000180013948 aVectorTooLong  db 'vector too long',0  ; DATA XREF: sub_1800067C0+4↑o
.rdata:0000000180013948                                         ; std::vector<void *,std::allocator<void *>>::_Xlen(void)+4↑o
.rdata:0000000180013958 aInvalidHashBuc db 'invalid hash bucket count',0
.rdata:0000000180013958                                         ; DATA XREF: sub_180006800+27↑o
.rdata:0000000180013972                 align 8
.rdata:0000000180013978 aBadCast        db 'bad cast',0         ; DATA XREF: sub_180006EB0↑o
.rdata:0000000180013981                 align 4
.rdata:0000000180013984 aLog            db '.log',0             ; DATA XREF: sub_180007030+DC↑o
.rdata:0000000180013989                 align 10h
.rdata:0000000180013990 aPrevLog        db '_prev.log',0        ; DATA XREF: sub_180007030+254↑o
.rdata:0000000180013990                                         ; sub_180007030+272↑o
.rdata:000000018001399A                 align 4
.rdata:000000018001399C asc_18001399C   db '  ',0               ; DATA XREF: sub_180009A90+ED↑o
.rdata:000000018001399F                 align 20h
.rdata:00000001800139A0 aABDYT          db '%a %b %d %Y %T',0   ; DATA XREF: sub_180007600+155↑o
.rdata:00000001800139AF                 align 10h
.rdata:00000001800139B0 qword_1800139B0 dq 5D524F5252455B20h    ; DATA XREF: sub_180007930+32↑r
.rdata:00000001800139B8 word_1800139B8  dw 203Ah                ; DATA XREF: sub_180007930+19↑r
.rdata:00000001800139BA                 align 20h
.rdata:00000001800139C0 qword_1800139C0 dq 5D4F464E495B2020h    ; DATA XREF: sub_180007B30+30↑r
.rdata:00000001800139C8 word_1800139C8  dw 203Ah                ; DATA XREF: sub_180007B30+18↑r
.rdata:00000001800139CA                 align 10h
.rdata:00000001800139D0 qword_1800139D0 dq 5D45434152545B20h    ; DATA XREF: sub_180007D40+30↑r
.rdata:00000001800139D8 word_1800139D8  dw 203Ah                ; DATA XREF: sub_180007D40+18↑r
.rdata:00000001800139DA                 align 20h
.rdata:00000001800139E0 qword_1800139E0 dq 5D47554245445B20h    ; DATA XREF: sub_180007F50+30↑r
.rdata:00000001800139E8 word_1800139E8  dw 203Ah                ; DATA XREF: sub_180007F50+18↑r
.rdata:00000001800139EA                 align 4
.rdata:00000001800139EC ; const char Mode[2]
.rdata:00000001800139EC Mode            db 'r',0                ; DATA XREF: sub_180007030:loc_180007224↑o
.rdata:00000001800139EC                                         ; sub_180007030+302↑o
.rdata:00000001800139EE                 align 10h
.rdata:00000001800139F0 aInvalidStringP db 'invalid string position',0
.rdata:00000001800139F0                                         ; DATA XREF: sub_180009A70+4↑o
.rdata:0000000180013A08                 dq offset unk_180014400
.rdata:0000000180013A10 off_180013A10   dq offset sub_180009630 ; DATA XREF: sub_180006F70+42↑o
.rdata:0000000180013A10                                         ; sub_180009480+83↑o ...
.rdata:0000000180013A18                 dq offset sub_1800092E0
.rdata:0000000180013A20                 dq offset sub_1800092C0
.rdata:0000000180013A28                 dq offset sub_180009110
.rdata:0000000180013A30                 dq offset sub_180009030
.rdata:0000000180013A38                 dq offset ?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ ; std::basic_streambuf<char,std::char_traits<char>>::showmanyc(void)
.rdata:0000000180013A40                 dq offset sub_180008FC0
.rdata:0000000180013A48                 dq offset sub_180008D10
.rdata:0000000180013A50                 dq offset sub_180008BC0
.rdata:0000000180013A58                 dq offset sub_180008AF0
.rdata:0000000180013A60                 dq offset sub_1800089E0
.rdata:0000000180013A68                 dq offset sub_180008900
.rdata:0000000180013A70                 dq offset sub_180008800
.rdata:0000000180013A78                 dq offset sub_1800087B0
.rdata:0000000180013A80                 dq offset sub_180008760
.rdata:0000000180013A88 unk_180013A88   db    0                 ; DATA XREF: sub_180007600+CB↑o
.rdata:0000000180013A89                 db    0
.rdata:0000000180013A8A                 db    0
.rdata:0000000180013A8B                 db    0
.rdata:0000000180013A8C                 db  88h
.rdata:0000000180013A8D                 db    0
.rdata:0000000180013A8E                 db    0
.rdata:0000000180013A8F                 db    0
.rdata:0000000180013A90                 dq offset unk_1800141A0
.rdata:0000000180013A98 off_180013A98   dq offset loc_18000A6B0 ; DATA XREF: sub_180006F70+18↑o
.rdata:0000000180013A98                                         ; sub_180009480+58↑o
.rdata:0000000180013AA0                 dq offset unk_180014558
.rdata:0000000180013AA8 off_180013AA8   dq offset sub_180001070 ; DATA XREF: sub_180006EB0+13↑o
.rdata:0000000180013AA8                                         ; sub_180006F00+2A↑o
.rdata:0000000180013AB0                 dq offset sub_180001050
.rdata:0000000180013AB8 unk_180013AB8   db    0                 ; DATA XREF: sub_180009480+1A↑o
.rdata:0000000180013AB9                 db    0
.rdata:0000000180013ABA                 db    0
.rdata:0000000180013ABB                 db    0
.rdata:0000000180013ABC                 db 0A8h
.rdata:0000000180013ABD                 db    0
.rdata:0000000180013ABE                 db    0
.rdata:0000000180013ABF                 db    0
.rdata:0000000180013AC0                 dq offset unk_180014580
.rdata:0000000180013AC8 off_180013AC8   dq offset ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
.rdata:0000000180013AC8                                         ; DATA XREF: sub_180007600+131↑o
.rdata:0000000180013AC8                                         ; sub_1800086A0+A↑o
.rdata:0000000180013AC8                                         ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char>>::`scalar deleting destructor'(uint)
.rdata:0000000180013AD0                 dq offset ?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Lock(void)
.rdata:0000000180013AD8                 dq offset ?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ; std::basic_streambuf<char,std::char_traits<char>>::_Unlock(void)
.rdata:0000000180013AE0                 dq offset sub_1800084B0
.rdata:0000000180013AE8                 dq offset sub_180008450
.rdata:0000000180013AF0                 dq offset ?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ ; std::basic_streambuf<char,std::char_traits<char>>::showmanyc(void)
.rdata:0000000180013AF8                 dq offset sub_1800083D0
.rdata:0000000180013B00                 dq offset ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_streambuf<char,std::char_traits<char>>::uflow(void)
.rdata:0000000180013B08                 dq offset ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ; std::basic_streambuf<char,std::char_traits<char>>::xsgetn(char *,__int64)
.rdata:0000000180013B10                 dq offset ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ; std::basic_streambuf<char,std::char_traits<char>>::xsputn(char const *,__int64)
.rdata:0000000180013B18                 dq offset sub_180008260
.rdata:0000000180013B20                 dq offset sub_180008160
.rdata:0000000180013B28                 dq offset ?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z ; std::basic_streambuf<char,std::char_traits<char>>::setbuf(char *,__int64)
.rdata:0000000180013B30                 dq offset ?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_streambuf<char,std::char_traits<char>>::sync(void)
.rdata:0000000180013B38                 dq offset ?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z ; std::basic_streambuf<char,std::char_traits<char>>::imbue(std::locale const &)
.rdata:0000000180013B40                 dq offset unk_1800145A8
.rdata:0000000180013B48 off_180013B48   dq offset sub_18000A6A4 ; DATA XREF: sub_180007600+107↑o
.rdata:0000000180013B48                                         ; sub_1800078D0+14↑o ...
.rdata:0000000180013B50 unk_180013B50   db    0                 ; DATA XREF: sub_180007600+BF↑o
.rdata:0000000180013B51                 db    0
.rdata:0000000180013B52                 db    0
.rdata:0000000180013B53                 db    0
.rdata:0000000180013B54                 db  98h
.rdata:0000000180013B55                 db    0
.rdata:0000000180013B56                 db    0
.rdata:0000000180013B57                 db    0
.rdata:0000000180013B58 ; const char aErrorMappingCd[]
.rdata:0000000180013B58 aErrorMappingCd db 'Error mapping CDA name %s to ID %d',0
.rdata:0000000180013B58                                         ; DATA XREF: sub_18000A6F0+4CD↑o
.rdata:0000000180013B7B                 align 20h
.rdata:0000000180013B80 ; const char aCdaNameSMapped[]
.rdata:0000000180013B80 aCdaNameSMapped db 'CDA name %s mapped to ID %d [requestId=%lu]',0
.rdata:0000000180013B80                                         ; DATA XREF: sub_18000A6F0+521↑o
.rdata:0000000180013BAC                 align 10h
.rdata:0000000180013BB0 ; const char aErrorCreatingC[]
.rdata:0000000180013BB0 aErrorCreatingC db 'Error creating client data area with id=%d and size=%d',0
.rdata:0000000180013BB0                                         ; DATA XREF: sub_18000A6F0+569↑o
.rdata:0000000180013BE7                 align 8
.rdata:0000000180013BE8 ; const char aClientDataArea[]
.rdata:0000000180013BE8 aClientDataArea db 'Client data area created with id=%d (size=%d) [requestID=%lu]',0
.rdata:0000000180013BE8                                         ; DATA XREF: sub_18000A6F0+5AF↑o
.rdata:0000000180013C26                 align 8
.rdata:0000000180013C28 aInvalidMapKTKe db 'invalid map<K, T> key',0
.rdata:0000000180013C28                                         ; DATA XREF: sub_18000ADD0:loc_18000B19E↑o
.rdata:0000000180013C3E                 align 20h
.rdata:0000000180013C40 dword_180013C40 dd 3F800000h            ; DATA XREF: fsuipcw_getLvarList+6A↑r
.rdata:0000000180013C40                                         ; fsuipcw_getHvarList+6A↑r
.rdata:0000000180013C44                 align 8
.rdata:0000000180013C48 qword_180013C48 dq 40E0000000000000h    ; DATA XREF: sub_180004D10:loc_180004E39↑r
.rdata:0000000180013C50 qword_180013C50 dq 40F0000000000000h    ; DATA XREF: sub_180004D10+D9↑r
.rdata:0000000180013C58 dword_180013C58 dd 5F000000h            ; DATA XREF: sub_180005D10+1B6↑r
.rdata:0000000180013C5C                 align 20h
.rdata:0000000180013C60 qword_180013C60 dq 0BFF0000000000000h   ; DATA XREF: sub_1800034B0:loc_180004A03↑r
.rdata:0000000180013C60                                         ; sub_1800034B0+160B↑r
.rdata:0000000180013C68 qword_180013C68 dq 0C0E0002000000000h   ; DATA XREF: sub_180004D10+E7↑r
.rdata:0000000180013C70 xmmword_180013C70 xmmword 0F0000000000000000h
.rdata:0000000180013C70                                         ; DATA XREF: sub_18000A6F0:loc_18000AD47↑r
.rdata:0000000180013C80 _load_config_used dd 140h               ; Size
.rdata:0000000180013C84                 dd 0                    ; Time stamp
.rdata:0000000180013C88                 dw 2 dup(0)             ; Version: 0.0
.rdata:0000000180013C8C                 dd 0                    ; GlobalFlagsClear
.rdata:0000000180013C90                 dd 0                    ; GlobalFlagsSet
.rdata:0000000180013C94                 dd 0                    ; CriticalSectionDefaultTimeout
.rdata:0000000180013C98                 dq 0                    ; DeCommitFreeBlockThreshold
.rdata:0000000180013CA0                 dq 0                    ; DeCommitTotalFreeThreshold
.rdata:0000000180013CA8                 dq 0                    ; LockPrefixTable
.rdata:0000000180013CB0                 dq 0                    ; MaximumAllocationSize
.rdata:0000000180013CB8                 dq 0                    ; VirtualMemoryThreshold
.rdata:0000000180013CC0                 dq 0                    ; ProcessAffinityMask
.rdata:0000000180013CC8                 dd 0                    ; ProcessHeapFlags
.rdata:0000000180013CCC                 dw 0                    ; CSDVersion
.rdata:0000000180013CCE                 dw 0                    ; Reserved1
.rdata:0000000180013CD0                 dq 0                    ; EditList
.rdata:0000000180013CD8                 dq offset __security_cookie ; SecurityCookie
.rdata:0000000180013CE0                 dq 0                    ; SEHandlerTable
.rdata:0000000180013CE8                 dq 0                    ; SEHandlerCount
.rdata:0000000180013CF0                 dq offset __guard_check_icall_fptr ; GuardCFCheckFunctionPointer
.rdata:0000000180013CF8                 dq offset __guard_dispatch_icall_fptr ; GuardCFDispatchFunctionPointer
.rdata:0000000180013D00                 dq 0                    ; GuardCFFunctionTable
.rdata:0000000180013D08                 dq 0                    ; GuardCFFunctionCount
.rdata:0000000180013D10                 dd 100h                 ; GuardFlags
.rdata:0000000180013D14                 dw 0                    ; CodeIntegrity.Flags
.rdata:0000000180013D16                 dw 0                    ; CodeIntegrity.Catalog
.rdata:0000000180013D18                 dd 0                    ; CodeIntegrity.CatalogOffset
.rdata:0000000180013D1C                 dd 0                    ; CodeIntegrity.Reserved
.rdata:0000000180013D20                 dq 0                    ; GuardAddressTakenIatEntryTable
.rdata:0000000180013D28                 dq 0                    ; GuardAddressTakenIatEntryCount
.rdata:0000000180013D30                 dq 0                    ; GuardLongJumpTargetTable
.rdata:0000000180013D38                 dq 0                    ; GuardLongJumpTargetCount
.rdata:0000000180013D40                 dq 0                    ; DynamicValueRelocTable
.rdata:0000000180013D48                 dq 0                    ; CHPEMetadataPointer
.rdata:0000000180013D50                 dq 0                    ; GuardRFFailureRoutine
.rdata:0000000180013D58                 dq 0                    ; GuardRFFailureRoutineFunctionPointer
.rdata:0000000180013D60                 dd 0                    ; DynamicValueRelocTableOffset
.rdata:0000000180013D64                 dw 0                    ; DynamicValueRelocTableSection
.rdata:0000000180013D66                 dw 0                    ; Reserved2
.rdata:0000000180013D68                 dq 0                    ; GuardRFVerifyStackPointerFunctionPointer
.rdata:0000000180013D70                 dd 0                    ; HotPatchTableOffset
.rdata:0000000180013D74                 dd 0                    ; Reserved3
.rdata:0000000180013D78                 dq 0                    ; EnclaveConfigurationPointer
.rdata:0000000180013D80                 dq offset __volatile_metadata ; VolatileMetadataPointer
.rdata:0000000180013D88                 dq 0                    ; GuardEHContinuationTable
.rdata:0000000180013D90                 dq 0                    ; GuardEHContinuationCount
.rdata:0000000180013D98                 dq offset __guard_xfg_check_icall_fptr ; GuardXFGCheckFunctionPointer
.rdata:0000000180013DA0                 dq offset __guard_xfg_dispatch_icall_fptr ; GuardXFGDispatchFunctionPointer
.rdata:0000000180013DA8                 dq offset __guard_xfg_table_dispatch_icall_fptr ; GuardXFGTableDispatchFunctionPointer
.rdata:0000000180013DB0                 dq offset __castguard_check_failure_os_handled_fptr ; CastGuardOsDeterminedFailureMode
.rdata:0000000180013DB8                 dq offset off_1800125D8
.rdata:0000000180013DC0 ; Debug Directory entries
.rdata:0000000180013DC0                 dd 0                    ; Characteristics
.rdata:0000000180013DC4                 dd 6411D53Bh            ; TimeDateStamp: Wed Mar 15 14:24:59 2023
.rdata:0000000180013DC8                 dw 0                    ; MajorVersion
.rdata:0000000180013DCA                 dw 0                    ; MinorVersion
.rdata:0000000180013DCC                 dd 2                    ; Type: IMAGE_DEBUG_TYPE_CODEVIEW
.rdata:0000000180013DD0                 dd 4Ah                  ; SizeOfData
.rdata:0000000180013DD4                 dd rva asc_180014840    ; AddressOfRawData
.rdata:0000000180013DD8                 dd 13640h               ; PointerToRawData
.rdata:0000000180013DDC                 dd 0                    ; Characteristics
.rdata:0000000180013DE0                 dd 6411D53Bh            ; TimeDateStamp: Wed Mar 15 14:24:59 2023
.rdata:0000000180013DE4                 dw 0                    ; MajorVersion
.rdata:0000000180013DE6                 dw 0                    ; MinorVersion
.rdata:0000000180013DE8                 dd 0Ch                  ; Type: IMAGE_DEBUG_TYPE_VC_FEATURE
.rdata:0000000180013DEC                 dd 14h                  ; SizeOfData
.rdata:0000000180013DF0                 dd rva unk_18001488C    ; AddressOfRawData
.rdata:0000000180013DF4                 dd 1368Ch               ; PointerToRawData
.rdata:0000000180013DF8                 dd 0                    ; Characteristics
.rdata:0000000180013DFC                 dd 6411D53Bh            ; TimeDateStamp: Wed Mar 15 14:24:59 2023
.rdata:0000000180013E00                 dw 0                    ; MajorVersion
.rdata:0000000180013E02                 dw 0                    ; MinorVersion
.rdata:0000000180013E04                 dd 0Dh                  ; Type: IMAGE_DEBUG_TYPE_POGO
.rdata:0000000180013E08                 dd 2E0h                 ; SizeOfData
.rdata:0000000180013E0C                 dd rva aGctl            ; AddressOfRawData
.rdata:0000000180013E10                 dd 136A0h               ; PointerToRawData
.rdata:0000000180013E14                 dd 0                    ; Characteristics
.rdata:0000000180013E18                 dd 6411D53Bh            ; TimeDateStamp: Wed Mar 15 14:24:59 2023
.rdata:0000000180013E1C                 dw 0                    ; MajorVersion
.rdata:0000000180013E1E                 dw 0                    ; MinorVersion
.rdata:0000000180013E20                 dd 0Eh                  ; Type: IMAGE_DEBUG_TYPE_ILTCG
.rdata:0000000180013E24                 dd 0                    ; SizeOfData
.rdata:0000000180013E28                 dd 0                    ; AddressOfRawData
.rdata:0000000180013E2C                 dd 0                    ; PointerToRawData
.rdata:0000000180013E30                 align 80h
.rdata:0000000180013E80 unk_180013E80   db    1                 ; DATA XREF: .rdata:0000000180012758↑o
.rdata:0000000180013E81                 db    0
.rdata:0000000180013E82                 db    0
.rdata:0000000180013E83                 db    0
.rdata:0000000180013E84                 db    0
.rdata:0000000180013E85                 db    0
.rdata:0000000180013E86                 db    0
.rdata:0000000180013E87                 db    0
.rdata:0000000180013E88                 db    0
.rdata:0000000180013E89                 db    0
.rdata:0000000180013E8A                 db    0
.rdata:0000000180013E8B                 db    0
.rdata:0000000180013E8C                 db    0
.rdata:0000000180013E8D                 db  91h
.rdata:0000000180013E8E                 db    1
.rdata:0000000180013E8F                 db    0
.rdata:0000000180013E90                 db 0A8h
.rdata:0000000180013E91                 db  3Eh ; >
.rdata:0000000180013E92                 db    1
.rdata:0000000180013E93                 db    0
.rdata:0000000180013E94                 db  80h
.rdata:0000000180013E95                 db  3Eh ; >
.rdata:0000000180013E96                 db    1
.rdata:0000000180013E97                 db    0
.rdata:0000000180013E98                 db    0
.rdata:0000000180013E99                 db    0
.rdata:0000000180013E9A                 db    0
.rdata:0000000180013E9B                 db    0
.rdata:0000000180013E9C                 db    0
.rdata:0000000180013E9D                 db    0
.rdata:0000000180013E9E                 db    0
.rdata:0000000180013E9F                 db    0
.rdata:0000000180013EA0                 db    0
.rdata:0000000180013EA1                 db    0
.rdata:0000000180013EA2                 db    0
.rdata:0000000180013EA3                 db    0
.rdata:0000000180013EA4                 db    0
.rdata:0000000180013EA5                 db    0
.rdata:0000000180013EA6                 db    0
.rdata:0000000180013EA7                 db    0
.rdata:0000000180013EA8                 db    0
.rdata:0000000180013EA9                 db    0
.rdata:0000000180013EAA                 db    0
.rdata:0000000180013EAB                 db    0
.rdata:0000000180013EAC                 db    0
.rdata:0000000180013EAD                 db    0
.rdata:0000000180013EAE                 db    0
.rdata:0000000180013EAF                 db    0
.rdata:0000000180013EB0                 db    2
.rdata:0000000180013EB1                 db    0
.rdata:0000000180013EB2                 db    0
.rdata:0000000180013EB3                 db    0
.rdata:0000000180013EB4                 db 0C0h
.rdata:0000000180013EB5                 db  3Eh ; >
.rdata:0000000180013EB6                 db    1
.rdata:0000000180013EB7                 db    0
.rdata:0000000180013EB8                 db    0
.rdata:0000000180013EB9                 db    0
.rdata:0000000180013EBA                 db    0
.rdata:0000000180013EBB                 db    0
.rdata:0000000180013EBC                 db    0
.rdata:0000000180013EBD                 db    0
.rdata:0000000180013EBE                 db    0
.rdata:0000000180013EBF                 db    0
.rdata:0000000180013EC0                 db 0D8h
.rdata:0000000180013EC1                 db  3Eh ; >
.rdata:0000000180013EC2                 db    1
.rdata:0000000180013EC3                 db    0
.rdata:0000000180013EC4                 db    0
.rdata:0000000180013EC5                 db  3Fh ; ?
.rdata:0000000180013EC6                 db    1
.rdata:0000000180013EC7                 db    0
.rdata:0000000180013EC8                 db    0
.rdata:0000000180013EC9                 db    0
.rdata:0000000180013ECA                 db    0
.rdata:0000000180013ECB                 db    0
.rdata:0000000180013ECC                 db    0
.rdata:0000000180013ECD                 db    0
.rdata:0000000180013ECE                 db    0
.rdata:0000000180013ECF                 db    0
.rdata:0000000180013ED0                 db    0
.rdata:0000000180013ED1                 db    0
.rdata:0000000180013ED2                 db    0
.rdata:0000000180013ED3                 db    0
.rdata:0000000180013ED4                 db    0
.rdata:0000000180013ED5                 db    0
.rdata:0000000180013ED6                 db    0
.rdata:0000000180013ED7                 db    0
.rdata:0000000180013ED8                 db    0
.rdata:0000000180013ED9                 db  91h
.rdata:0000000180013EDA                 db    1
.rdata:0000000180013EDB                 db    0
.rdata:0000000180013EDC                 db    1
.rdata:0000000180013EDD                 db    0
.rdata:0000000180013EDE                 db    0
.rdata:0000000180013EDF                 db    0
.rdata:0000000180013EE0                 db    0
.rdata:0000000180013EE1                 db    0
.rdata:0000000180013EE2                 db    0
.rdata:0000000180013EE3                 db    0
.rdata:0000000180013EE4                 db 0FFh
.rdata:0000000180013EE5                 db 0FFh
.rdata:0000000180013EE6                 db 0FFh
.rdata:0000000180013EE7                 db 0FFh
.rdata:0000000180013EE8                 db    0
.rdata:0000000180013EE9                 db    0
.rdata:0000000180013EEA                 db    0
.rdata:0000000180013EEB                 db    0
.rdata:0000000180013EEC                 db  40h ; @
.rdata:0000000180013EED                 db    0
.rdata:0000000180013EEE                 db    0
.rdata:0000000180013EEF                 db    0
.rdata:0000000180013EF0                 db 0A8h
.rdata:0000000180013EF1                 db  3Eh ; >
.rdata:0000000180013EF2                 db    1
.rdata:0000000180013EF3                 db    0
.rdata:0000000180013EF4                 db    0
.rdata:0000000180013EF5                 db    0
.rdata:0000000180013EF6                 db    0
.rdata:0000000180013EF7                 db    0
.rdata:0000000180013EF8                 db    0
.rdata:0000000180013EF9                 db    0
.rdata:0000000180013EFA                 db    0
.rdata:0000000180013EFB                 db    0
.rdata:0000000180013EFC                 db    0
.rdata:0000000180013EFD                 db    0
.rdata:0000000180013EFE                 db    0
.rdata:0000000180013EFF                 db    0
.rdata:0000000180013F00                 db  28h ; (
.rdata:0000000180013F01                 db  91h
.rdata:0000000180013F02                 db    1
.rdata:0000000180013F03                 db    0
.rdata:0000000180013F04                 db    0
.rdata:0000000180013F05                 db    0
.rdata:0000000180013F06                 db    0
.rdata:0000000180013F07                 db    0
.rdata:0000000180013F08                 db    0
.rdata:0000000180013F09                 db    0
.rdata:0000000180013F0A                 db    0
.rdata:0000000180013F0B                 db    0
.rdata:0000000180013F0C                 db 0FFh
.rdata:0000000180013F0D                 db 0FFh
.rdata:0000000180013F0E                 db 0FFh
.rdata:0000000180013F0F                 db 0FFh
.rdata:0000000180013F10                 db    0
.rdata:0000000180013F11                 db    0
.rdata:0000000180013F12                 db    0
.rdata:0000000180013F13                 db    0
.rdata:0000000180013F14                 db  40h ; @
.rdata:0000000180013F15                 db    0
.rdata:0000000180013F16                 db    0
.rdata:0000000180013F17                 db    0
.rdata:0000000180013F18                 db  28h ; (
.rdata:0000000180013F19                 db  3Fh ; ?
.rdata:0000000180013F1A                 db    1
.rdata:0000000180013F1B                 db    0
.rdata:0000000180013F1C                 db    0
.rdata:0000000180013F1D                 db    0
.rdata:0000000180013F1E                 db    0
.rdata:0000000180013F1F                 db    0
.rdata:0000000180013F20                 db    0
.rdata:0000000180013F21                 db    0
.rdata:0000000180013F22                 db    0
.rdata:0000000180013F23                 db    0
.rdata:0000000180013F24                 db    0
.rdata:0000000180013F25                 db    0
.rdata:0000000180013F26                 db    0
.rdata:0000000180013F27                 db    0
.rdata:0000000180013F28                 db    0
.rdata:0000000180013F29                 db    0
.rdata:0000000180013F2A                 db    0
.rdata:0000000180013F2B                 db    0
.rdata:0000000180013F2C                 db    0
.rdata:0000000180013F2D                 db    0
.rdata:0000000180013F2E                 db    0
.rdata:0000000180013F2F                 db    0
.rdata:0000000180013F30                 db    1
.rdata:0000000180013F31                 db    0
.rdata:0000000180013F32                 db    0
.rdata:0000000180013F33                 db    0
.rdata:0000000180013F34                 db  40h ; @
.rdata:0000000180013F35                 db  3Fh ; ?
.rdata:0000000180013F36                 db    1
.rdata:0000000180013F37                 db    0
.rdata:0000000180013F38                 db    0
.rdata:0000000180013F39                 db    0
.rdata:0000000180013F3A                 db    0
.rdata:0000000180013F3B                 db    0
.rdata:0000000180013F3C                 db    0
.rdata:0000000180013F3D                 db    0
.rdata:0000000180013F3E                 db    0
.rdata:0000000180013F3F                 db    0
.rdata:0000000180013F40                 db    0
.rdata:0000000180013F41                 db  3Fh ; ?
.rdata:0000000180013F42                 db    1
.rdata:0000000180013F43                 db    0
.rdata:0000000180013F44                 db    0
.rdata:0000000180013F45                 db    0
.rdata:0000000180013F46                 db    0
.rdata:0000000180013F47                 db    0
.rdata:0000000180013F48                 db    0
.rdata:0000000180013F49                 db    0
.rdata:0000000180013F4A                 db    0
.rdata:0000000180013F4B                 db    0
.rdata:0000000180013F4C                 db    0
.rdata:0000000180013F4D                 db    0
.rdata:0000000180013F4E                 db    0
.rdata:0000000180013F4F                 db    0
.rdata:0000000180013F50 unk_180013F50   db    1                 ; DATA XREF: .rdata:0000000180012838↑o
.rdata:0000000180013F51                 db    0
.rdata:0000000180013F52                 db    0
.rdata:0000000180013F53                 db    0
.rdata:0000000180013F54                 db    0
.rdata:0000000180013F55                 db    0
.rdata:0000000180013F56                 db    0
.rdata:0000000180013F57                 db    0
.rdata:0000000180013F58                 db    0
.rdata:0000000180013F59                 db    0
.rdata:0000000180013F5A                 db    0
.rdata:0000000180013F5B                 db    0
.rdata:0000000180013F5C                 db  28h ; (
.rdata:0000000180013F5D                 db  91h
.rdata:0000000180013F5E                 db    1
.rdata:0000000180013F5F                 db    0
.rdata:0000000180013F60                 db  28h ; (
.rdata:0000000180013F61                 db  3Fh ; ?
.rdata:0000000180013F62                 db    1
.rdata:0000000180013F63                 db    0
.rdata:0000000180013F64                 db  50h ; P
.rdata:0000000180013F65                 db  3Fh ; ?
.rdata:0000000180013F66                 db    1
.rdata:0000000180013F67                 db    0
.rdata:0000000180013F68                 db    0
.rdata:0000000180013F69                 db    0
.rdata:0000000180013F6A                 db    0
.rdata:0000000180013F6B                 db    0
.rdata:0000000180013F6C                 db    0
.rdata:0000000180013F6D                 db    0
.rdata:0000000180013F6E                 db    0
.rdata:0000000180013F6F                 db    0
.rdata:0000000180013F70                 db    0
.rdata:0000000180013F71                 db    0
.rdata:0000000180013F72                 db    0
.rdata:0000000180013F73                 db    0
.rdata:0000000180013F74                 db    0
.rdata:0000000180013F75                 db    0
.rdata:0000000180013F76                 db    0
.rdata:0000000180013F77                 db    0
.rdata:0000000180013F78 unk_180013F78   db    1                 ; DATA XREF: .rdata:0000000180012888↑o
.rdata:0000000180013F79                 db    0
.rdata:0000000180013F7A                 db    0
.rdata:0000000180013F7B                 db    0
.rdata:0000000180013F7C                 db    0
.rdata:0000000180013F7D                 db    0
.rdata:0000000180013F7E                 db    0
.rdata:0000000180013F7F                 db    0
.rdata:0000000180013F80                 db    0
.rdata:0000000180013F81                 db    0
.rdata:0000000180013F82                 db    0
.rdata:0000000180013F83                 db    0
.rdata:0000000180013F84                 db  48h ; H
.rdata:0000000180013F85                 db  91h
.rdata:0000000180013F86                 db    1
.rdata:0000000180013F87                 db    0
.rdata:0000000180013F88                 db 0A0h
.rdata:0000000180013F89                 db  3Fh ; ?
.rdata:0000000180013F8A                 db    1
.rdata:0000000180013F8B                 db    0
.rdata:0000000180013F8C                 db  78h ; x
.rdata:0000000180013F8D                 db  3Fh ; ?
.rdata:0000000180013F8E                 db    1
.rdata:0000000180013F8F                 db    0
.rdata:0000000180013F90                 db    0
.rdata:0000000180013F91                 db    0
.rdata:0000000180013F92                 db    0
.rdata:0000000180013F93                 db    0
.rdata:0000000180013F94                 db    0
.rdata:0000000180013F95                 db    0
.rdata:0000000180013F96                 db    0
.rdata:0000000180013F97                 db    0
.rdata:0000000180013F98                 db    0
.rdata:0000000180013F99                 db    0
.rdata:0000000180013F9A                 db    0
.rdata:0000000180013F9B                 db    0
.rdata:0000000180013F9C                 db    0
.rdata:0000000180013F9D                 db    0
.rdata:0000000180013F9E                 db    0
.rdata:0000000180013F9F                 db    0
.rdata:0000000180013FA0                 db    0
.rdata:0000000180013FA1                 db    0
.rdata:0000000180013FA2                 db    0
.rdata:0000000180013FA3                 db    0
.rdata:0000000180013FA4                 db    0
.rdata:0000000180013FA5                 db    0
.rdata:0000000180013FA6                 db    0
.rdata:0000000180013FA7                 db    0
.rdata:0000000180013FA8                 db    1
.rdata:0000000180013FA9                 db    0
.rdata:0000000180013FAA                 db    0
.rdata:0000000180013FAB                 db    0
.rdata:0000000180013FAC                 db 0B8h
.rdata:0000000180013FAD                 db  3Fh ; ?
.rdata:0000000180013FAE                 db    1
.rdata:0000000180013FAF                 db    0
.rdata:0000000180013FB0                 db    0
.rdata:0000000180013FB1                 db    0
.rdata:0000000180013FB2                 db    0
.rdata:0000000180013FB3                 db    0
.rdata:0000000180013FB4                 db    0
.rdata:0000000180013FB5                 db    0
.rdata:0000000180013FB6                 db    0
.rdata:0000000180013FB7                 db    0
.rdata:0000000180013FB8                 db 0C8h
.rdata:0000000180013FB9                 db  3Fh ; ?
.rdata:0000000180013FBA                 db    1
.rdata:0000000180013FBB                 db    0
.rdata:0000000180013FBC                 db    0
.rdata:0000000180013FBD                 db    0
.rdata:0000000180013FBE                 db    0
.rdata:0000000180013FBF                 db    0
.rdata:0000000180013FC0                 db    0
.rdata:0000000180013FC1                 db    0
.rdata:0000000180013FC2                 db    0
.rdata:0000000180013FC3                 db    0
.rdata:0000000180013FC4                 db    0
.rdata:0000000180013FC5                 db    0
.rdata:0000000180013FC6                 db    0
.rdata:0000000180013FC7                 db    0
.rdata:0000000180013FC8                 db  48h ; H
.rdata:0000000180013FC9                 db  91h
.rdata:0000000180013FCA                 db    1
.rdata:0000000180013FCB                 db    0
.rdata:0000000180013FCC                 db    0
.rdata:0000000180013FCD                 db    0
.rdata:0000000180013FCE                 db    0
.rdata:0000000180013FCF                 db    0
.rdata:0000000180013FD0                 db    0
.rdata:0000000180013FD1                 db    0
.rdata:0000000180013FD2                 db    0
.rdata:0000000180013FD3                 db    0
.rdata:0000000180013FD4                 db 0FFh
.rdata:0000000180013FD5                 db 0FFh
.rdata:0000000180013FD6                 db 0FFh
.rdata:0000000180013FD7                 db 0FFh
.rdata:0000000180013FD8                 db    0
.rdata:0000000180013FD9                 db    0
.rdata:0000000180013FDA                 db    0
.rdata:0000000180013FDB                 db    0
.rdata:0000000180013FDC                 db  40h ; @
.rdata:0000000180013FDD                 db    0
.rdata:0000000180013FDE                 db    0
.rdata:0000000180013FDF                 db    0
.rdata:0000000180013FE0                 db 0A0h
.rdata:0000000180013FE1                 db  3Fh ; ?
.rdata:0000000180013FE2                 db    1
.rdata:0000000180013FE3                 db    0
.rdata:0000000180013FE4                 db    0
.rdata:0000000180013FE5                 db    0
.rdata:0000000180013FE6                 db    0
.rdata:0000000180013FE7                 db    0
.rdata:0000000180013FE8                 db    0
.rdata:0000000180013FE9                 db    0
.rdata:0000000180013FEA                 db    0
.rdata:0000000180013FEB                 db    0
.rdata:0000000180013FEC                 db    0
.rdata:0000000180013FED                 db    0
.rdata:0000000180013FEE                 db    0
.rdata:0000000180013FEF                 db    0
.rdata:0000000180013FF0 unk_180013FF0   db    1                 ; DATA XREF: .rdata:0000000180012708↑o
.rdata:0000000180013FF1                 db    0
.rdata:0000000180013FF2                 db    0
.rdata:0000000180013FF3                 db    0
.rdata:0000000180013FF4                 db    0
.rdata:0000000180013FF5                 db    0
.rdata:0000000180013FF6                 db    0
.rdata:0000000180013FF7                 db    0
.rdata:0000000180013FF8                 db    0
.rdata:0000000180013FF9                 db    0
.rdata:0000000180013FFA                 db    0
.rdata:0000000180013FFB                 db    0
.rdata:0000000180013FFC                 db  78h ; x
.rdata:0000000180013FFD                 db  90h
.rdata:0000000180013FFE                 db    1
.rdata:0000000180013FFF                 db    0
.rdata:0000000180014000                 db 0B0h
.rdata:0000000180014001                 db  40h ; @
.rdata:0000000180014002                 db    1
.rdata:0000000180014003                 db    0
.rdata:0000000180014004                 db 0F0h
.rdata:0000000180014005                 db  3Fh ; ?
.rdata:0000000180014006                 db    1
.rdata:0000000180014007                 db    0
.rdata:0000000180014008                 db    0
.rdata:0000000180014009                 db    0
.rdata:000000018001400A                 db    0
.rdata:000000018001400B                 db    0
.rdata:000000018001400C                 db    0
.rdata:000000018001400D                 db    0
.rdata:000000018001400E                 db    0
.rdata:000000018001400F                 db    0
.rdata:0000000180014010                 db    0
.rdata:0000000180014011                 db    0
.rdata:0000000180014012                 db    0
.rdata:0000000180014013                 db    0
.rdata:0000000180014014                 db    0
.rdata:0000000180014015                 db    0
.rdata:0000000180014016                 db    0
.rdata:0000000180014017                 db    0
.rdata:0000000180014018                 db  48h ; H
.rdata:0000000180014019                 db  41h ; A
.rdata:000000018001401A                 db    1
.rdata:000000018001401B                 db    0
.rdata:000000018001401C                 db  78h ; x
.rdata:000000018001401D                 db  40h ; @
.rdata:000000018001401E                 db    1
.rdata:000000018001401F                 db    0
.rdata:0000000180014020                 db  50h ; P
.rdata:0000000180014021                 db  40h ; @
.rdata:0000000180014022                 db    1
.rdata:0000000180014023                 db    0
.rdata:0000000180014024                 db    0
.rdata:0000000180014025                 db    0
.rdata:0000000180014026                 db    0
.rdata:0000000180014027                 db    0
.rdata:0000000180014028                 db    0
.rdata:0000000180014029                 db    0
.rdata:000000018001402A                 db    0
.rdata:000000018001402B                 db    0
.rdata:000000018001402C                 db    0
.rdata:000000018001402D                 db    0
.rdata:000000018001402E                 db    0
.rdata:000000018001402F                 db    0
.rdata:0000000180014030                 db    0
.rdata:0000000180014031                 db    0
.rdata:0000000180014032                 db    0
.rdata:0000000180014033                 db    0
.rdata:0000000180014034                 db    0
.rdata:0000000180014035                 db    0
.rdata:0000000180014036                 db    0
.rdata:0000000180014037                 db    0
.rdata:0000000180014038                 db  78h ; x
.rdata:0000000180014039                 db  40h ; @
.rdata:000000018001403A                 db    1
.rdata:000000018001403B                 db    0
.rdata:000000018001403C                 db  50h ; P
.rdata:000000018001403D                 db  40h ; @
.rdata:000000018001403E                 db    1
.rdata:000000018001403F                 db    0
.rdata:0000000180014040                 db    0
.rdata:0000000180014041                 db    0
.rdata:0000000180014042                 db    0
.rdata:0000000180014043                 db    0
.rdata:0000000180014044                 db    0
.rdata:0000000180014045                 db    0
.rdata:0000000180014046                 db    0
.rdata:0000000180014047                 db    0
.rdata:0000000180014048                 db    0
.rdata:0000000180014049                 db    0
.rdata:000000018001404A                 db    0
.rdata:000000018001404B                 db    0
.rdata:000000018001404C                 db    0
.rdata:000000018001404D                 db    0
.rdata:000000018001404E                 db    0
.rdata:000000018001404F                 db    0
.rdata:0000000180014050                 db  78h ; x
.rdata:0000000180014051                 db  90h
.rdata:0000000180014052                 db    1
.rdata:0000000180014053                 db    0
.rdata:0000000180014054                 db    0
.rdata:0000000180014055                 db    0
.rdata:0000000180014056                 db    0
.rdata:0000000180014057                 db    0
.rdata:0000000180014058                 db    0
.rdata:0000000180014059                 db    0
.rdata:000000018001405A                 db    0
.rdata:000000018001405B                 db    0
.rdata:000000018001405C                 db 0FFh
.rdata:000000018001405D                 db 0FFh
.rdata:000000018001405E                 db 0FFh
.rdata:000000018001405F                 db 0FFh
.rdata:0000000180014060                 db    0
.rdata:0000000180014061                 db    0
.rdata:0000000180014062                 db    0
.rdata:0000000180014063                 db    0
.rdata:0000000180014064                 db  40h ; @
.rdata:0000000180014065                 db    0
.rdata:0000000180014066                 db    0
.rdata:0000000180014067                 db    0
.rdata:0000000180014068                 db 0B0h
.rdata:0000000180014069                 db  40h ; @
.rdata:000000018001406A                 db    1
.rdata:000000018001406B                 db    0
.rdata:000000018001406C                 db    0
.rdata:000000018001406D                 db    0
.rdata:000000018001406E                 db    0
.rdata:000000018001406F                 db    0
.rdata:0000000180014070                 db    0
.rdata:0000000180014071                 db    0
.rdata:0000000180014072                 db    0
.rdata:0000000180014073                 db    0
.rdata:0000000180014074                 db    0
.rdata:0000000180014075                 db    0
.rdata:0000000180014076                 db    0
.rdata:0000000180014077                 db    0
.rdata:0000000180014078                 db  50h ; P
.rdata:0000000180014079                 db  90h
.rdata:000000018001407A                 db    1
.rdata:000000018001407B                 db    0
.rdata:000000018001407C                 db    1
.rdata:000000018001407D                 db    0
.rdata:000000018001407E                 db    0
.rdata:000000018001407F                 db    0
.rdata:0000000180014080                 db    0
.rdata:0000000180014081                 db    0
.rdata:0000000180014082                 db    0
.rdata:0000000180014083                 db    0
.rdata:0000000180014084                 db 0FFh
.rdata:0000000180014085                 db 0FFh
.rdata:0000000180014086                 db 0FFh
.rdata:0000000180014087                 db 0FFh
.rdata:0000000180014088                 db    0
.rdata:0000000180014089                 db    0
.rdata:000000018001408A                 db    0
.rdata:000000018001408B                 db    0
.rdata:000000018001408C                 db  40h ; @
.rdata:000000018001408D                 db    0
.rdata:000000018001408E                 db    0
.rdata:000000018001408F                 db    0
.rdata:0000000180014090                 db    8
.rdata:0000000180014091                 db  41h ; A
.rdata:0000000180014092                 db    1
.rdata:0000000180014093                 db    0
.rdata:0000000180014094                 db    0
.rdata:0000000180014095                 db    0
.rdata:0000000180014096                 db    0
.rdata:0000000180014097                 db    0
.rdata:0000000180014098                 db    0
.rdata:0000000180014099                 db    0
.rdata:000000018001409A                 db    0
.rdata:000000018001409B                 db    0
.rdata:000000018001409C                 db    0
.rdata:000000018001409D                 db    0
.rdata:000000018001409E                 db    0
.rdata:000000018001409F                 db    0
.rdata:00000001800140A0                 db  50h ; P
.rdata:00000001800140A1                 db  40h ; @
.rdata:00000001800140A2                 db    1
.rdata:00000001800140A3                 db    0
.rdata:00000001800140A4                 db    0
.rdata:00000001800140A5                 db    0
.rdata:00000001800140A6                 db    0
.rdata:00000001800140A7                 db    0
.rdata:00000001800140A8                 db    0
.rdata:00000001800140A9                 db    0
.rdata:00000001800140AA                 db    0
.rdata:00000001800140AB                 db    0
.rdata:00000001800140AC                 db    0
.rdata:00000001800140AD                 db    0
.rdata:00000001800140AE                 db    0
.rdata:00000001800140AF                 db    0
.rdata:00000001800140B0                 db    0
.rdata:00000001800140B1                 db    0
.rdata:00000001800140B2                 db    0
.rdata:00000001800140B3                 db    0
.rdata:00000001800140B4                 db    0
.rdata:00000001800140B5                 db    0
.rdata:00000001800140B6                 db    0
.rdata:00000001800140B7                 db    0
.rdata:00000001800140B8                 db    1
.rdata:00000001800140B9                 db    0
.rdata:00000001800140BA                 db    0
.rdata:00000001800140BB                 db    0
.rdata:00000001800140BC                 db 0A0h
.rdata:00000001800140BD                 db  40h ; @
.rdata:00000001800140BE                 db    1
.rdata:00000001800140BF                 db    0
.rdata:00000001800140C0                 db    0
.rdata:00000001800140C1                 db    0
.rdata:00000001800140C2                 db    0
.rdata:00000001800140C3                 db    0
.rdata:00000001800140C4                 db    0
.rdata:00000001800140C5                 db    0
.rdata:00000001800140C6                 db    0
.rdata:00000001800140C7                 db    0
.rdata:00000001800140C8 unk_1800140C8   db    1                 ; DATA XREF: .rdata:0000000180012720↑o
.rdata:00000001800140C9                 db    0
.rdata:00000001800140CA                 db    0
.rdata:00000001800140CB                 db    0
.rdata:00000001800140CC                 db    0
.rdata:00000001800140CD                 db    0
.rdata:00000001800140CE                 db    0
.rdata:00000001800140CF                 db    0
.rdata:00000001800140D0                 db    0
.rdata:00000001800140D1                 db    0
.rdata:00000001800140D2                 db    0
.rdata:00000001800140D3                 db    0
.rdata:00000001800140D4                 db  50h ; P
.rdata:00000001800140D5                 db  90h
.rdata:00000001800140D6                 db    1
.rdata:00000001800140D7                 db    0
.rdata:00000001800140D8                 db    8
.rdata:00000001800140D9                 db  41h ; A
.rdata:00000001800140DA                 db    1
.rdata:00000001800140DB                 db    0
.rdata:00000001800140DC                 db 0C8h
.rdata:00000001800140DD                 db  40h ; @
.rdata:00000001800140DE                 db    1
.rdata:00000001800140DF                 db    0
.rdata:00000001800140E0                 db    0
.rdata:00000001800140E1                 db    0
.rdata:00000001800140E2                 db    0
.rdata:00000001800140E3                 db    0
.rdata:00000001800140E4                 db    0
.rdata:00000001800140E5                 db    0
.rdata:00000001800140E6                 db    0
.rdata:00000001800140E7                 db    0
.rdata:00000001800140E8                 db    0
.rdata:00000001800140E9                 db    0
.rdata:00000001800140EA                 db    0
.rdata:00000001800140EB                 db    0
.rdata:00000001800140EC                 db    0
.rdata:00000001800140ED                 db    0
.rdata:00000001800140EE                 db    0
.rdata:00000001800140EF                 db    0
.rdata:00000001800140F0                 db    0
.rdata:00000001800140F1                 db    0
.rdata:00000001800140F2                 db    0
.rdata:00000001800140F3                 db    0
.rdata:00000001800140F4                 db    0
.rdata:00000001800140F5                 db    0
.rdata:00000001800140F6                 db    0
.rdata:00000001800140F7                 db    0
.rdata:00000001800140F8                 db    3
.rdata:00000001800140F9                 db    0
.rdata:00000001800140FA                 db    0
.rdata:00000001800140FB                 db    0
.rdata:00000001800140FC                 db  18h
.rdata:00000001800140FD                 db  40h ; @
.rdata:00000001800140FE                 db    1
.rdata:00000001800140FF                 db    0
.rdata:0000000180014100                 db    0
.rdata:0000000180014101                 db    0
.rdata:0000000180014102                 db    0
.rdata:0000000180014103                 db    0
.rdata:0000000180014104                 db    0
.rdata:0000000180014105                 db    0
.rdata:0000000180014106                 db    0
.rdata:0000000180014107                 db    0
.rdata:0000000180014108                 db    0
.rdata:0000000180014109                 db    0
.rdata:000000018001410A                 db    0
.rdata:000000018001410B                 db    0
.rdata:000000018001410C                 db    0
.rdata:000000018001410D                 db    0
.rdata:000000018001410E                 db    0
.rdata:000000018001410F                 db    0
.rdata:0000000180014110                 db    2
.rdata:0000000180014111                 db    0
.rdata:0000000180014112                 db    0
.rdata:0000000180014113                 db    0
.rdata:0000000180014114                 db  38h ; 8
.rdata:0000000180014115                 db  40h ; @
.rdata:0000000180014116                 db    1
.rdata:0000000180014117                 db    0
.rdata:0000000180014118                 db    0
.rdata:0000000180014119                 db    0
.rdata:000000018001411A                 db    0
.rdata:000000018001411B                 db    0
.rdata:000000018001411C                 db    0
.rdata:000000018001411D                 db    0
.rdata:000000018001411E                 db    0
.rdata:000000018001411F                 db    0
.rdata:0000000180014120 unk_180014120   db    1                 ; DATA XREF: .rdata:0000000180012738↑o
.rdata:0000000180014121                 db    0
.rdata:0000000180014122                 db    0
.rdata:0000000180014123                 db    0
.rdata:0000000180014124                 db    0
.rdata:0000000180014125                 db    0
.rdata:0000000180014126                 db    0
.rdata:0000000180014127                 db    0
.rdata:0000000180014128                 db    0
.rdata:0000000180014129                 db    0
.rdata:000000018001412A                 db    0
.rdata:000000018001412B                 db    0
.rdata:000000018001412C                 db 0A0h
.rdata:000000018001412D                 db  90h
.rdata:000000018001412E                 db    1
.rdata:000000018001412F                 db    0
.rdata:0000000180014130                 db 0F0h
.rdata:0000000180014131                 db  40h ; @
.rdata:0000000180014132                 db    1
.rdata:0000000180014133                 db    0
.rdata:0000000180014134                 db  20h
.rdata:0000000180014135                 db  41h ; A
.rdata:0000000180014136                 db    1
.rdata:0000000180014137                 db    0
.rdata:0000000180014138                 db    0
.rdata:0000000180014139                 db    0
.rdata:000000018001413A                 db    0
.rdata:000000018001413B                 db    0
.rdata:000000018001413C                 db    0
.rdata:000000018001413D                 db    0
.rdata:000000018001413E                 db    0
.rdata:000000018001413F                 db    0
.rdata:0000000180014140                 db    0
.rdata:0000000180014141                 db    0
.rdata:0000000180014142                 db    0
.rdata:0000000180014143                 db    0
.rdata:0000000180014144                 db    0
.rdata:0000000180014145                 db    0
.rdata:0000000180014146                 db    0
.rdata:0000000180014147                 db    0
.rdata:0000000180014148                 db 0A0h
.rdata:0000000180014149                 db  90h
.rdata:000000018001414A                 db    1
.rdata:000000018001414B                 db    0
.rdata:000000018001414C                 db    2
.rdata:000000018001414D                 db    0
.rdata:000000018001414E                 db    0
.rdata:000000018001414F                 db    0
.rdata:0000000180014150                 db    0
.rdata:0000000180014151                 db    0
.rdata:0000000180014152                 db    0
.rdata:0000000180014153                 db    0
.rdata:0000000180014154                 db 0FFh
.rdata:0000000180014155                 db 0FFh
.rdata:0000000180014156                 db 0FFh
.rdata:0000000180014157                 db 0FFh
.rdata:0000000180014158                 db    0
.rdata:0000000180014159                 db    0
.rdata:000000018001415A                 db    0
.rdata:000000018001415B                 db    0
.rdata:000000018001415C                 db  40h ; @
.rdata:000000018001415D                 db    0
.rdata:000000018001415E                 db    0
.rdata:000000018001415F                 db    0
.rdata:0000000180014160                 db 0F0h
.rdata:0000000180014161                 db  40h ; @
.rdata:0000000180014162                 db    1
.rdata:0000000180014163                 db    0
.rdata:0000000180014164                 db    0
.rdata:0000000180014165                 db    0
.rdata:0000000180014166                 db    0
.rdata:0000000180014167                 db    0
.rdata:0000000180014168                 db    0
.rdata:0000000180014169                 db    0
.rdata:000000018001416A                 db    0
.rdata:000000018001416B                 db    0
.rdata:000000018001416C                 db    0
.rdata:000000018001416D                 db    0
.rdata:000000018001416E                 db    0
.rdata:000000018001416F                 db    0
.rdata:0000000180014170                 db    0
.rdata:0000000180014171                 db    0
.rdata:0000000180014172                 db    0
.rdata:0000000180014173                 db    0
.rdata:0000000180014174                 db    0
.rdata:0000000180014175                 db    0
.rdata:0000000180014176                 db    0
.rdata:0000000180014177                 db    0
.rdata:0000000180014178                 db    4
.rdata:0000000180014179                 db    0
.rdata:000000018001417A                 db    0
.rdata:000000018001417B                 db    0
.rdata:000000018001417C                 db 0F0h
.rdata:000000018001417D                 db  42h ; B
.rdata:000000018001417E                 db    1
.rdata:000000018001417F                 db    0
.rdata:0000000180014180                 db    0
.rdata:0000000180014181                 db    0
.rdata:0000000180014182                 db    0
.rdata:0000000180014183                 db    0
.rdata:0000000180014184                 db    0
.rdata:0000000180014185                 db    0
.rdata:0000000180014186                 db    0
.rdata:0000000180014187                 db    0
.rdata:0000000180014188                 db    0
.rdata:0000000180014189                 db    0
.rdata:000000018001418A                 db    0
.rdata:000000018001418B                 db    0
.rdata:000000018001418C                 db    3
.rdata:000000018001418D                 db    0
.rdata:000000018001418E                 db    0
.rdata:000000018001418F                 db    0
.rdata:0000000180014190                 db    9
.rdata:0000000180014191                 db    0
.rdata:0000000180014192                 db    0
.rdata:0000000180014193                 db    0
.rdata:0000000180014194                 db  90h
.rdata:0000000180014195                 db  44h ; D
.rdata:0000000180014196                 db    1
.rdata:0000000180014197                 db    0
.rdata:0000000180014198                 db    0
.rdata:0000000180014199                 db    0
.rdata:000000018001419A                 db    0
.rdata:000000018001419B                 db    0
.rdata:000000018001419C                 db    0
.rdata:000000018001419D                 db    0
.rdata:000000018001419E                 db    0
.rdata:000000018001419F                 db    0
.rdata:00000001800141A0 unk_1800141A0   db    1                 ; DATA XREF: .rdata:0000000180013A90↑o
.rdata:00000001800141A1                 db    0
.rdata:00000001800141A2                 db    0
.rdata:00000001800141A3                 db    0
.rdata:00000001800141A4                 db 0A8h
.rdata:00000001800141A5                 db    0
.rdata:00000001800141A6                 db    0
.rdata:00000001800141A7                 db    0
.rdata:00000001800141A8                 db    4
.rdata:00000001800141A9                 db    0
.rdata:00000001800141AA                 db    0
.rdata:00000001800141AB                 db    0
.rdata:00000001800141AC                 db  10h
.rdata:00000001800141AD                 db  93h
.rdata:00000001800141AE                 db    1
.rdata:00000001800141AF                 db    0
.rdata:00000001800141B0                 db 0C8h
.rdata:00000001800141B1                 db  41h ; A
.rdata:00000001800141B2                 db    1
.rdata:00000001800141B3                 db    0
.rdata:00000001800141B4                 db 0A0h
.rdata:00000001800141B5                 db  41h ; A
.rdata:00000001800141B6                 db    1
.rdata:00000001800141B7                 db    0
.rdata:00000001800141B8                 db    0
.rdata:00000001800141B9                 db    0
.rdata:00000001800141BA                 db    0
.rdata:00000001800141BB                 db    0
.rdata:00000001800141BC                 db    0
.rdata:00000001800141BD                 db    0
.rdata:00000001800141BE                 db    0
.rdata:00000001800141BF                 db    0
.rdata:00000001800141C0                 db    0
.rdata:00000001800141C1                 db    0
.rdata:00000001800141C2                 db    0
.rdata:00000001800141C3                 db    0
.rdata:00000001800141C4                 db    0
.rdata:00000001800141C5                 db    0
.rdata:00000001800141C6                 db    0
.rdata:00000001800141C7                 db    0
.rdata:00000001800141C8                 db    0
.rdata:00000001800141C9                 db    0
.rdata:00000001800141CA                 db    0
.rdata:00000001800141CB                 db    0
.rdata:00000001800141CC                 db    0
.rdata:00000001800141CD                 db    0
.rdata:00000001800141CE                 db    0
.rdata:00000001800141CF                 db    0
.rdata:00000001800141D0                 db    5
.rdata:00000001800141D1                 db    0
.rdata:00000001800141D2                 db    0
.rdata:00000001800141D3                 db    0
.rdata:00000001800141D4                 db  98h
.rdata:00000001800141D5                 db  42h ; B
.rdata:00000001800141D6                 db    1
.rdata:00000001800141D7                 db    0
.rdata:00000001800141D8                 db    0
.rdata:00000001800141D9                 db    0
.rdata:00000001800141DA                 db    0
.rdata:00000001800141DB                 db    0
.rdata:00000001800141DC                 db    0
.rdata:00000001800141DD                 db    0
.rdata:00000001800141DE                 db    0
.rdata:00000001800141DF                 db    0
.rdata:00000001800141E0                 db 0B0h
.rdata:00000001800141E1                 db  93h
.rdata:00000001800141E2                 db    1
.rdata:00000001800141E3                 db    0
.rdata:00000001800141E4                 db    3
.rdata:00000001800141E5                 db    0
.rdata:00000001800141E6                 db    0
.rdata:00000001800141E7                 db    0
.rdata:00000001800141E8                 db    0
.rdata:00000001800141E9                 db    0
.rdata:00000001800141EA                 db    0
.rdata:00000001800141EB                 db    0
.rdata:00000001800141EC                 db 0FFh
.rdata:00000001800141ED                 db 0FFh
.rdata:00000001800141EE                 db 0FFh
.rdata:00000001800141EF                 db 0FFh
.rdata:00000001800141F0                 db    0
.rdata:00000001800141F1                 db    0
.rdata:00000001800141F2                 db    0
.rdata:00000001800141F3                 db    0
.rdata:00000001800141F4                 db  40h ; @
.rdata:00000001800141F5                 db    0
.rdata:00000001800141F6                 db    0
.rdata:00000001800141F7                 db    0
.rdata:00000001800141F8                 db  70h ; p
.rdata:00000001800141F9                 db  41h ; A
.rdata:00000001800141FA                 db    1
.rdata:00000001800141FB                 db    0
.rdata:00000001800141FC                 db    0
.rdata:00000001800141FD                 db    0
.rdata:00000001800141FE                 db    0
.rdata:00000001800141FF                 db    0
.rdata:0000000180014200                 db    0
.rdata:0000000180014201                 db    0
.rdata:0000000180014202                 db    0
.rdata:0000000180014203                 db    0
.rdata:0000000180014204                 db    0
.rdata:0000000180014205                 db    0
.rdata:0000000180014206                 db    0
.rdata:0000000180014207                 db    0
.rdata:0000000180014208                 db 0D0h
.rdata:0000000180014209                 db  90h
.rdata:000000018001420A                 db    1
.rdata:000000018001420B                 db    0
.rdata:000000018001420C                 db    1
.rdata:000000018001420D                 db    0
.rdata:000000018001420E                 db    0
.rdata:000000018001420F                 db    0
.rdata:0000000180014210                 db    0
.rdata:0000000180014211                 db    0
.rdata:0000000180014212                 db    0
.rdata:0000000180014213                 db    0
.rdata:0000000180014214                 db 0FFh
.rdata:0000000180014215                 db 0FFh
.rdata:0000000180014216                 db 0FFh
.rdata:0000000180014217                 db 0FFh
.rdata:0000000180014218                 db    0
.rdata:0000000180014219                 db    0
.rdata:000000018001421A                 db    0
.rdata:000000018001421B                 db    0
.rdata:000000018001421C                 db  40h ; @
.rdata:000000018001421D                 db    0
.rdata:000000018001421E                 db    0
.rdata:000000018001421F                 db    0
.rdata:0000000180014220                 db 0E0h
.rdata:0000000180014221                 db  44h ; D
.rdata:0000000180014222                 db    1
.rdata:0000000180014223                 db    0
.rdata:0000000180014224                 db    0
.rdata:0000000180014225                 db    0
.rdata:0000000180014226                 db    0
.rdata:0000000180014227                 db    0
.rdata:0000000180014228                 db    0
.rdata:0000000180014229                 db    0
.rdata:000000018001422A                 db    0
.rdata:000000018001422B                 db    0
.rdata:000000018001422C                 db    0
.rdata:000000018001422D                 db    0
.rdata:000000018001422E                 db    0
.rdata:000000018001422F                 db    0
.rdata:0000000180014230                 db  60h ; `
.rdata:0000000180014231                 db  44h ; D
.rdata:0000000180014232                 db    1
.rdata:0000000180014233                 db    0
.rdata:0000000180014234                 db 0C8h
.rdata:0000000180014235                 db  42h ; B
.rdata:0000000180014236                 db    1
.rdata:0000000180014237                 db    0
.rdata:0000000180014238                 db    0
.rdata:0000000180014239                 db    0
.rdata:000000018001423A                 db    0
.rdata:000000018001423B                 db    0
.rdata:000000018001423C                 db    0
.rdata:000000018001423D                 db    0
.rdata:000000018001423E                 db    0
.rdata:000000018001423F                 db    0
.rdata:0000000180014240                 db    0
.rdata:0000000180014241                 db    0
.rdata:0000000180014242                 db    0
.rdata:0000000180014243                 db    0
.rdata:0000000180014244                 db    0
.rdata:0000000180014245                 db    0
.rdata:0000000180014246                 db    0
.rdata:0000000180014247                 db    0
.rdata:0000000180014248                 db 0E8h
.rdata:0000000180014249                 db  92h
.rdata:000000018001424A                 db    1
.rdata:000000018001424B                 db    0
.rdata:000000018001424C                 db    0
.rdata:000000018001424D                 db    0
.rdata:000000018001424E                 db    0
.rdata:000000018001424F                 db    0
.rdata:0000000180014250                 db    8
.rdata:0000000180014251                 db    0
.rdata:0000000180014252                 db    0
.rdata:0000000180014253                 db    0
.rdata:0000000180014254                 db    0
.rdata:0000000180014255                 db    0
.rdata:0000000180014256                 db    0
.rdata:0000000180014257                 db    0
.rdata:0000000180014258                 db    4
.rdata:0000000180014259                 db    0
.rdata:000000018001425A                 db    0
.rdata:000000018001425B                 db    0
.rdata:000000018001425C                 db  40h ; @
.rdata:000000018001425D                 db    0
.rdata:000000018001425E                 db    0
.rdata:000000018001425F                 db    0
.rdata:0000000180014260                 db  78h ; x
.rdata:0000000180014261                 db  47h ; G
.rdata:0000000180014262                 db    1
.rdata:0000000180014263                 db    0
.rdata:0000000180014264                 db    0
.rdata:0000000180014265                 db    0
.rdata:0000000180014266                 db    0
.rdata:0000000180014267                 db    0
.rdata:0000000180014268                 db    0
.rdata:0000000180014269                 db    0
.rdata:000000018001426A                 db    0
.rdata:000000018001426B                 db    0
.rdata:000000018001426C                 db    0
.rdata:000000018001426D                 db    0
.rdata:000000018001426E                 db    0
.rdata:000000018001426F                 db    0
.rdata:0000000180014270                 db  70h ; p
.rdata:0000000180014271                 db  91h
.rdata:0000000180014272                 db    1
.rdata:0000000180014273                 db    0
.rdata:0000000180014274                 db    9
.rdata:0000000180014275                 db    0
.rdata:0000000180014276                 db    0
.rdata:0000000180014277                 db    0
.rdata:0000000180014278                 db    0
.rdata:0000000180014279                 db    0
.rdata:000000018001427A                 db    0
.rdata:000000018001427B                 db    0
.rdata:000000018001427C                 db 0FFh
.rdata:000000018001427D                 db 0FFh
.rdata:000000018001427E                 db 0FFh
.rdata:000000018001427F                 db 0FFh
.rdata:0000000180014280                 db    0
.rdata:0000000180014281                 db    0
.rdata:0000000180014282                 db    0
.rdata:0000000180014283                 db    0
.rdata:0000000180014284                 db  40h ; @
.rdata:0000000180014285                 db    0
.rdata:0000000180014286                 db    0
.rdata:0000000180014287                 db    0
.rdata:0000000180014288                 db    0
.rdata:0000000180014289                 db  47h ; G
.rdata:000000018001428A                 db    1
.rdata:000000018001428B                 db    0
.rdata:000000018001428C                 db    0
.rdata:000000018001428D                 db    0
.rdata:000000018001428E                 db    0
.rdata:000000018001428F                 db    0
.rdata:0000000180014290                 db    0
.rdata:0000000180014291                 db    0
.rdata:0000000180014292                 db    0
.rdata:0000000180014293                 db    0
.rdata:0000000180014294                 db    0
.rdata:0000000180014295                 db    0
.rdata:0000000180014296                 db    0
.rdata:0000000180014297                 db    0
.rdata:0000000180014298                 db 0D0h
.rdata:0000000180014299                 db  45h ; E
.rdata:000000018001429A                 db    1
.rdata:000000018001429B                 db    0
.rdata:000000018001429C                 db 0D8h
.rdata:000000018001429D                 db  43h ; C
.rdata:000000018001429E                 db    1
.rdata:000000018001429F                 db    0
.rdata:00000001800142A0                 db  20h
.rdata:00000001800142A1                 db  46h ; F
.rdata:00000001800142A2                 db    1
.rdata:00000001800142A3                 db    0
.rdata:00000001800142A4                 db  28h ; (
.rdata:00000001800142A5                 db  47h ; G
.rdata:00000001800142A6                 db    1
.rdata:00000001800142A7                 db    0
.rdata:00000001800142A8                 db  48h ; H
.rdata:00000001800142A9                 db  42h ; B
.rdata:00000001800142AA                 db    1
.rdata:00000001800142AB                 db    0
.rdata:00000001800142AC                 db    0
.rdata:00000001800142AD                 db    0
.rdata:00000001800142AE                 db    0
.rdata:00000001800142AF                 db    0
.rdata:00000001800142B0                 db    0
.rdata:00000001800142B1                 db    0
.rdata:00000001800142B2                 db    0
.rdata:00000001800142B3                 db    0
.rdata:00000001800142B4                 db    0
.rdata:00000001800142B5                 db    0
.rdata:00000001800142B6                 db    0
.rdata:00000001800142B7                 db    0
.rdata:00000001800142B8                 db    0
.rdata:00000001800142B9                 db    0
.rdata:00000001800142BA                 db    0
.rdata:00000001800142BB                 db    0
.rdata:00000001800142BC                 db    0
.rdata:00000001800142BD                 db    0
.rdata:00000001800142BE                 db    0
.rdata:00000001800142BF                 db    0
.rdata:00000001800142C0                 db    0
.rdata:00000001800142C1                 db    0
.rdata:00000001800142C2                 db    0
.rdata:00000001800142C3                 db    0
.rdata:00000001800142C4                 db    0
.rdata:00000001800142C5                 db    0
.rdata:00000001800142C6                 db    0
.rdata:00000001800142C7                 db    0
.rdata:00000001800142C8                 db  60h ; `
.rdata:00000001800142C9                 db  93h
.rdata:00000001800142CA                 db    1
.rdata:00000001800142CB                 db    0
.rdata:00000001800142CC                 db    0
.rdata:00000001800142CD                 db    0
.rdata:00000001800142CE                 db    0
.rdata:00000001800142CF                 db    0
.rdata:00000001800142D0                 db    0
.rdata:00000001800142D1                 db    0
.rdata:00000001800142D2                 db    0
.rdata:00000001800142D3                 db    0
.rdata:00000001800142D4                 db 0FFh
.rdata:00000001800142D5                 db 0FFh
.rdata:00000001800142D6                 db 0FFh
.rdata:00000001800142D7                 db 0FFh
.rdata:00000001800142D8                 db    0
.rdata:00000001800142D9                 db    0
.rdata:00000001800142DA                 db    0
.rdata:00000001800142DB                 db    0
.rdata:00000001800142DC                 db  40h ; @
.rdata:00000001800142DD                 db    0
.rdata:00000001800142DE                 db    0
.rdata:00000001800142DF                 db    0
.rdata:00000001800142E0                 db 0E8h
.rdata:00000001800142E1                 db  46h ; F
.rdata:00000001800142E2                 db    1
.rdata:00000001800142E3                 db    0
.rdata:00000001800142E4                 db    0
.rdata:00000001800142E5                 db    0
.rdata:00000001800142E6                 db    0
.rdata:00000001800142E7                 db    0
.rdata:00000001800142E8                 db    0
.rdata:00000001800142E9                 db    0
.rdata:00000001800142EA                 db    0
.rdata:00000001800142EB                 db    0
.rdata:00000001800142EC                 db    0
.rdata:00000001800142ED                 db    0
.rdata:00000001800142EE                 db    0
.rdata:00000001800142EF                 db    0
.rdata:00000001800142F0                 db 0E0h
.rdata:00000001800142F1                 db  41h ; A
.rdata:00000001800142F2                 db    1
.rdata:00000001800142F3                 db    0
.rdata:00000001800142F4                 db  20h
.rdata:00000001800142F5                 db  46h ; F
.rdata:00000001800142F6                 db    1
.rdata:00000001800142F7                 db    0
.rdata:00000001800142F8                 db  28h ; (
.rdata:00000001800142F9                 db  47h ; G
.rdata:00000001800142FA                 db    1
.rdata:00000001800142FB                 db    0
.rdata:00000001800142FC                 db  48h ; H
.rdata:00000001800142FD                 db  42h ; B
.rdata:00000001800142FE                 db    1
.rdata:00000001800142FF                 db    0
.rdata:0000000180014300                 db    0
.rdata:0000000180014301                 db    0
.rdata:0000000180014302                 db    0
.rdata:0000000180014303                 db    0
.rdata:0000000180014304                 db    0
.rdata:0000000180014305                 db    0
.rdata:0000000180014306                 db    0
.rdata:0000000180014307                 db    0
.rdata:0000000180014308                 db    0
.rdata:0000000180014309                 db    0
.rdata:000000018001430A                 db    0
.rdata:000000018001430B                 db    0
.rdata:000000018001430C                 db    0
.rdata:000000018001430D                 db    0
.rdata:000000018001430E                 db    0
.rdata:000000018001430F                 db    0
.rdata:0000000180014310                 db    0
.rdata:0000000180014311                 db    0
.rdata:0000000180014312                 db    0
.rdata:0000000180014313                 db    0
.rdata:0000000180014314                 db    0
.rdata:0000000180014315                 db    0
.rdata:0000000180014316                 db    0
.rdata:0000000180014317                 db    0
.rdata:0000000180014318                 db    0
.rdata:0000000180014319                 db    0
.rdata:000000018001431A                 db    0
.rdata:000000018001431B                 db    0
.rdata:000000018001431C                 db    0
.rdata:000000018001431D                 db    0
.rdata:000000018001431E                 db    0
.rdata:000000018001431F                 db    0
.rdata:0000000180014320                 db    2
.rdata:0000000180014321                 db    0
.rdata:0000000180014322                 db    0
.rdata:0000000180014323                 db    0
.rdata:0000000180014324                 db  30h ; 0
.rdata:0000000180014325                 db  42h ; B
.rdata:0000000180014326                 db    1
.rdata:0000000180014327                 db    0
.rdata:0000000180014328                 db    0
.rdata:0000000180014329                 db    0
.rdata:000000018001432A                 db    0
.rdata:000000018001432B                 db    0
.rdata:000000018001432C                 db    0
.rdata:000000018001432D                 db    0
.rdata:000000018001432E                 db    0
.rdata:000000018001432F                 db    0
.rdata:0000000180014330                 db    8
.rdata:0000000180014331                 db  42h ; B
.rdata:0000000180014332                 db    1
.rdata:0000000180014333                 db    0
.rdata:0000000180014334                 db  50h ; P
.rdata:0000000180014335                 db  40h ; @
.rdata:0000000180014336                 db    1
.rdata:0000000180014337                 db    0
.rdata:0000000180014338                 db    0
.rdata:0000000180014339                 db    0
.rdata:000000018001433A                 db    0
.rdata:000000018001433B                 db    0
.rdata:000000018001433C                 db    0
.rdata:000000018001433D                 db    0
.rdata:000000018001433E                 db    0
.rdata:000000018001433F                 db    0
.rdata:0000000180014340                 db    0
.rdata:0000000180014341                 db    0
.rdata:0000000180014342                 db    0
.rdata:0000000180014343                 db    0
.rdata:0000000180014344                 db    0
.rdata:0000000180014345                 db    0
.rdata:0000000180014346                 db    0
.rdata:0000000180014347                 db    0
.rdata:0000000180014348                 db 0D8h
.rdata:0000000180014349                 db  43h ; C
.rdata:000000018001434A                 db    1
.rdata:000000018001434B                 db    0
.rdata:000000018001434C                 db  20h
.rdata:000000018001434D                 db  46h ; F
.rdata:000000018001434E                 db    1
.rdata:000000018001434F                 db    0
.rdata:0000000180014350                 db  28h ; (
.rdata:0000000180014351                 db  47h ; G
.rdata:0000000180014352                 db    1
.rdata:0000000180014353                 db    0
.rdata:0000000180014354                 db  48h ; H
.rdata:0000000180014355                 db  42h ; B
.rdata:0000000180014356                 db    1
.rdata:0000000180014357                 db    0
.rdata:0000000180014358                 db    0
.rdata:0000000180014359                 db    0
.rdata:000000018001435A                 db    0
.rdata:000000018001435B                 db    0
.rdata:000000018001435C                 db    0
.rdata:000000018001435D                 db    0
.rdata:000000018001435E                 db    0
.rdata:000000018001435F                 db    0
.rdata:0000000180014360                 db    0
.rdata:0000000180014361                 db    0
.rdata:0000000180014362                 db    0
.rdata:0000000180014363                 db    0
.rdata:0000000180014364                 db    0
.rdata:0000000180014365                 db    0
.rdata:0000000180014366                 db    0
.rdata:0000000180014367                 db    0
.rdata:0000000180014368                 db    0
.rdata:0000000180014369                 db    0
.rdata:000000018001436A                 db    0
.rdata:000000018001436B                 db    0
.rdata:000000018001436C                 db    0
.rdata:000000018001436D                 db    0
.rdata:000000018001436E                 db    0
.rdata:000000018001436F                 db    0
.rdata:0000000180014370                 db    0
.rdata:0000000180014371                 db    0
.rdata:0000000180014372                 db    0
.rdata:0000000180014373                 db    0
.rdata:0000000180014374                 db    0
.rdata:0000000180014375                 db    0
.rdata:0000000180014376                 db    0
.rdata:0000000180014377                 db    0
.rdata:0000000180014378                 db    3
.rdata:0000000180014379                 db    0
.rdata:000000018001437A                 db    0
.rdata:000000018001437B                 db    0
.rdata:000000018001437C                 db 0B8h
.rdata:000000018001437D                 db  47h ; G
.rdata:000000018001437E                 db    1
.rdata:000000018001437F                 db    0
.rdata:0000000180014380                 db    0
.rdata:0000000180014381                 db    0
.rdata:0000000180014382                 db    0
.rdata:0000000180014383                 db    0
.rdata:0000000180014384                 db    0
.rdata:0000000180014385                 db    0
.rdata:0000000180014386                 db    0
.rdata:0000000180014387                 db    0
.rdata:0000000180014388                 db  40h ; @
.rdata:0000000180014389                 db  94h
.rdata:000000018001438A                 db    1
.rdata:000000018001438B                 db    0
.rdata:000000018001438C                 db    3
.rdata:000000018001438D                 db    0
.rdata:000000018001438E                 db    0
.rdata:000000018001438F                 db    0
.rdata:0000000180014390                 db  10h
.rdata:0000000180014391                 db    0
.rdata:0000000180014392                 db    0
.rdata:0000000180014393                 db    0
.rdata:0000000180014394                 db 0FFh
.rdata:0000000180014395                 db 0FFh
.rdata:0000000180014396                 db 0FFh
.rdata:0000000180014397                 db 0FFh
.rdata:0000000180014398                 db    0
.rdata:0000000180014399                 db    0
.rdata:000000018001439A                 db    0
.rdata:000000018001439B                 db    0
.rdata:000000018001439C                 db  40h ; @
.rdata:000000018001439D                 db    0
.rdata:000000018001439E                 db    0
.rdata:000000018001439F                 db    0
.rdata:00000001800143A0                 db  78h ; x
.rdata:00000001800143A1                 db  46h ; F
.rdata:00000001800143A2                 db    1
.rdata:00000001800143A3                 db    0
.rdata:00000001800143A4                 db    0
.rdata:00000001800143A5                 db    0
.rdata:00000001800143A6                 db    0
.rdata:00000001800143A7                 db    0
.rdata:00000001800143A8                 db    0
.rdata:00000001800143A9                 db    0
.rdata:00000001800143AA                 db    0
.rdata:00000001800143AB                 db    0
.rdata:00000001800143AC                 db    0
.rdata:00000001800143AD                 db    0
.rdata:00000001800143AE                 db    0
.rdata:00000001800143AF                 db    0
.rdata:00000001800143B0                 db  78h ; x
.rdata:00000001800143B1                 db  92h
.rdata:00000001800143B2                 db    1
.rdata:00000001800143B3                 db    0
.rdata:00000001800143B4                 db    1
.rdata:00000001800143B5                 db    0
.rdata:00000001800143B6                 db    0
.rdata:00000001800143B7                 db    0
.rdata:00000001800143B8                 db    0
.rdata:00000001800143B9                 db    0
.rdata:00000001800143BA                 db    0
.rdata:00000001800143BB                 db    0
.rdata:00000001800143BC                 db 0FFh
.rdata:00000001800143BD                 db 0FFh
.rdata:00000001800143BE                 db 0FFh
.rdata:00000001800143BF                 db 0FFh
.rdata:00000001800143C0                 db    0
.rdata:00000001800143C1                 db    0
.rdata:00000001800143C2                 db    0
.rdata:00000001800143C3                 db    0
.rdata:00000001800143C4                 db  40h ; @
.rdata:00000001800143C5                 db    0
.rdata:00000001800143C6                 db    0
.rdata:00000001800143C7                 db    0
.rdata:00000001800143C8                 db 0B8h
.rdata:00000001800143C9                 db  46h ; F
.rdata:00000001800143CA                 db    1
.rdata:00000001800143CB                 db    0
.rdata:00000001800143CC                 db    0
.rdata:00000001800143CD                 db    0
.rdata:00000001800143CE                 db    0
.rdata:00000001800143CF                 db    0
.rdata:00000001800143D0                 db    0
.rdata:00000001800143D1                 db    0
.rdata:00000001800143D2                 db    0
.rdata:00000001800143D3                 db    0
.rdata:00000001800143D4                 db    0
.rdata:00000001800143D5                 db    0
.rdata:00000001800143D6                 db    0
.rdata:00000001800143D7                 db    0
.rdata:00000001800143D8                 db  40h ; @
.rdata:00000001800143D9                 db  94h
.rdata:00000001800143DA                 db    1
.rdata:00000001800143DB                 db    0
.rdata:00000001800143DC                 db    3
.rdata:00000001800143DD                 db    0
.rdata:00000001800143DE                 db    0
.rdata:00000001800143DF                 db    0
.rdata:00000001800143E0                 db    0
.rdata:00000001800143E1                 db    0
.rdata:00000001800143E2                 db    0
.rdata:00000001800143E3                 db    0
.rdata:00000001800143E4                 db 0FFh
.rdata:00000001800143E5                 db 0FFh
.rdata:00000001800143E6                 db 0FFh
.rdata:00000001800143E7                 db 0FFh
.rdata:00000001800143E8                 db    0
.rdata:00000001800143E9                 db    0
.rdata:00000001800143EA                 db    0
.rdata:00000001800143EB                 db    0
.rdata:00000001800143EC                 db  40h ; @
.rdata:00000001800143ED                 db    0
.rdata:00000001800143EE                 db    0
.rdata:00000001800143EF                 db    0
.rdata:00000001800143F0                 db  78h ; x
.rdata:00000001800143F1                 db  46h ; F
.rdata:00000001800143F2                 db    1
.rdata:00000001800143F3                 db    0
.rdata:00000001800143F4                 db    0
.rdata:00000001800143F5                 db    0
.rdata:00000001800143F6                 db    0
.rdata:00000001800143F7                 db    0
.rdata:00000001800143F8                 db    0
.rdata:00000001800143F9                 db    0
.rdata:00000001800143FA                 db    0
.rdata:00000001800143FB                 db    0
.rdata:00000001800143FC                 db    0
.rdata:00000001800143FD                 db    0
.rdata:00000001800143FE                 db    0
.rdata:00000001800143FF                 db    0
.rdata:0000000180014400 unk_180014400   db    1                 ; DATA XREF: .rdata:0000000180013A08↑o
.rdata:0000000180014401                 db    0
.rdata:0000000180014402                 db    0
.rdata:0000000180014403                 db    0
.rdata:0000000180014404                 db    0
.rdata:0000000180014405                 db    0
.rdata:0000000180014406                 db    0
.rdata:0000000180014407                 db    0
.rdata:0000000180014408                 db    0
.rdata:0000000180014409                 db    0
.rdata:000000018001440A                 db    0
.rdata:000000018001440B                 db    0
.rdata:000000018001440C                 db 0D0h
.rdata:000000018001440D                 db  91h
.rdata:000000018001440E                 db    1
.rdata:000000018001440F                 db    0
.rdata:0000000180014410                 db  48h ; H
.rdata:0000000180014411                 db  46h ; F
.rdata:0000000180014412                 db    1
.rdata:0000000180014413                 db    0
.rdata:0000000180014414                 db    0
.rdata:0000000180014415                 db  44h ; D
.rdata:0000000180014416                 db    1
.rdata:0000000180014417                 db    0
.rdata:0000000180014418                 db    0
.rdata:0000000180014419                 db    0
.rdata:000000018001441A                 db    0
.rdata:000000018001441B                 db    0
.rdata:000000018001441C                 db    0
.rdata:000000018001441D                 db    0
.rdata:000000018001441E                 db    0
.rdata:000000018001441F                 db    0
.rdata:0000000180014420                 db    0
.rdata:0000000180014421                 db    0
.rdata:0000000180014422                 db    0
.rdata:0000000180014423                 db    0
.rdata:0000000180014424                 db    0
.rdata:0000000180014425                 db    0
.rdata:0000000180014426                 db    0
.rdata:0000000180014427                 db    0
.rdata:0000000180014428                 db 0C8h
.rdata:0000000180014429                 db  42h ; B
.rdata:000000018001442A                 db    1
.rdata:000000018001442B                 db    0
.rdata:000000018001442C                 db    0
.rdata:000000018001442D                 db    0
.rdata:000000018001442E                 db    0
.rdata:000000018001442F                 db    0
.rdata:0000000180014430                 db    0
.rdata:0000000180014431                 db    0
.rdata:0000000180014432                 db    0
.rdata:0000000180014433                 db    0
.rdata:0000000180014434                 db    0
.rdata:0000000180014435                 db    0
.rdata:0000000180014436                 db    0
.rdata:0000000180014437                 db    0
.rdata:0000000180014438                 db 0E8h
.rdata:0000000180014439                 db  92h
.rdata:000000018001443A                 db    1
.rdata:000000018001443B                 db    0
.rdata:000000018001443C                 db    0
.rdata:000000018001443D                 db    0
.rdata:000000018001443E                 db    0
.rdata:000000018001443F                 db    0
.rdata:0000000180014440                 db    0
.rdata:0000000180014441                 db    0
.rdata:0000000180014442                 db    0
.rdata:0000000180014443                 db    0
.rdata:0000000180014444                 db 0FFh
.rdata:0000000180014445                 db 0FFh
.rdata:0000000180014446                 db 0FFh
.rdata:0000000180014447                 db 0FFh
.rdata:0000000180014448                 db    0
.rdata:0000000180014449                 db    0
.rdata:000000018001444A                 db    0
.rdata:000000018001444B                 db    0
.rdata:000000018001444C                 db  40h ; @
.rdata:000000018001444D                 db    0
.rdata:000000018001444E                 db    0
.rdata:000000018001444F                 db    0
.rdata:0000000180014450                 db  78h ; x
.rdata:0000000180014451                 db  47h ; G
.rdata:0000000180014452                 db    1
.rdata:0000000180014453                 db    0
.rdata:0000000180014454                 db    0
.rdata:0000000180014455                 db    0
.rdata:0000000180014456                 db    0
.rdata:0000000180014457                 db    0
.rdata:0000000180014458                 db    0
.rdata:0000000180014459                 db    0
.rdata:000000018001445A                 db    0
.rdata:000000018001445B                 db    0
.rdata:000000018001445C                 db    0
.rdata:000000018001445D                 db    0
.rdata:000000018001445E                 db    0
.rdata:000000018001445F                 db    0
.rdata:0000000180014460                 db  20h
.rdata:0000000180014461                 db  92h
.rdata:0000000180014462                 db    1
.rdata:0000000180014463                 db    0
.rdata:0000000180014464                 db    1
.rdata:0000000180014465                 db    0
.rdata:0000000180014466                 db    0
.rdata:0000000180014467                 db    0
.rdata:0000000180014468                 db    0
.rdata:0000000180014469                 db    0
.rdata:000000018001446A                 db    0
.rdata:000000018001446B                 db    0
.rdata:000000018001446C                 db 0FFh
.rdata:000000018001446D                 db 0FFh
.rdata:000000018001446E                 db 0FFh
.rdata:000000018001446F                 db 0FFh
.rdata:0000000180014470                 db    0
.rdata:0000000180014471                 db    0
.rdata:0000000180014472                 db    0
.rdata:0000000180014473                 db    0
.rdata:0000000180014474                 db  40h ; @
.rdata:0000000180014475                 db    0
.rdata:0000000180014476                 db    0
.rdata:0000000180014477                 db    0
.rdata:0000000180014478                 db  18h
.rdata:0000000180014479                 db  43h ; C
.rdata:000000018001447A                 db    1
.rdata:000000018001447B                 db    0
.rdata:000000018001447C                 db    0
.rdata:000000018001447D                 db    0
.rdata:000000018001447E                 db    0
.rdata:000000018001447F                 db    0
.rdata:0000000180014480                 db    0
.rdata:0000000180014481                 db    0
.rdata:0000000180014482                 db    0
.rdata:0000000180014483                 db    0
.rdata:0000000180014484                 db    0
.rdata:0000000180014485                 db    0
.rdata:0000000180014486                 db    0
.rdata:0000000180014487                 db    0
.rdata:0000000180014488                 db    0
.rdata:0000000180014489                 db    0
.rdata:000000018001448A                 db    0
.rdata:000000018001448B                 db    0
.rdata:000000018001448C                 db    0
.rdata:000000018001448D                 db    0
.rdata:000000018001448E                 db    0
.rdata:000000018001448F                 db    0
.rdata:0000000180014490                 db  90h
.rdata:0000000180014491                 db  46h ; F
.rdata:0000000180014492                 db    1
.rdata:0000000180014493                 db    0
.rdata:0000000180014494                 db 0E0h
.rdata:0000000180014495                 db  41h ; A
.rdata:0000000180014496                 db    1
.rdata:0000000180014497                 db    0
.rdata:0000000180014498                 db  20h
.rdata:0000000180014499                 db  46h ; F
.rdata:000000018001449A                 db    1
.rdata:000000018001449B                 db    0
.rdata:000000018001449C                 db  28h ; (
.rdata:000000018001449D                 db  47h ; G
.rdata:000000018001449E                 db    1
.rdata:000000018001449F                 db    0
.rdata:00000001800144A0                 db  48h ; H
.rdata:00000001800144A1                 db  42h ; B
.rdata:00000001800144A2                 db    1
.rdata:00000001800144A3                 db    0
.rdata:00000001800144A4                 db  88h
.rdata:00000001800144A5                 db  43h ; C
.rdata:00000001800144A6                 db    1
.rdata:00000001800144A7                 db    0
.rdata:00000001800144A8                 db  20h
.rdata:00000001800144A9                 db  46h ; F
.rdata:00000001800144AA                 db    1
.rdata:00000001800144AB                 db    0
.rdata:00000001800144AC                 db  28h ; (
.rdata:00000001800144AD                 db  47h ; G
.rdata:00000001800144AE                 db    1
.rdata:00000001800144AF                 db    0
.rdata:00000001800144B0                 db  48h ; H
.rdata:00000001800144B1                 db  42h ; B
.rdata:00000001800144B2                 db    1
.rdata:00000001800144B3                 db    0
.rdata:00000001800144B4                 db    0
.rdata:00000001800144B5                 db    0
.rdata:00000001800144B6                 db    0
.rdata:00000001800144B7                 db    0
.rdata:00000001800144B8                 db    0
.rdata:00000001800144B9                 db    0
.rdata:00000001800144BA                 db    0
.rdata:00000001800144BB                 db    0
.rdata:00000001800144BC                 db    0
.rdata:00000001800144BD                 db    0
.rdata:00000001800144BE                 db    0
.rdata:00000001800144BF                 db    0
.rdata:00000001800144C0                 db    0
.rdata:00000001800144C1                 db    0
.rdata:00000001800144C2                 db    0
.rdata:00000001800144C3                 db    0
.rdata:00000001800144C4                 db    0
.rdata:00000001800144C5                 db    0
.rdata:00000001800144C6                 db    0
.rdata:00000001800144C7                 db    0
.rdata:00000001800144C8                 db    0
.rdata:00000001800144C9                 db    0
.rdata:00000001800144CA                 db    0
.rdata:00000001800144CB                 db    0
.rdata:00000001800144CC                 db    0
.rdata:00000001800144CD                 db    0
.rdata:00000001800144CE                 db    0
.rdata:00000001800144CF                 db    0
.rdata:00000001800144D0                 db    0
.rdata:00000001800144D1                 db    0
.rdata:00000001800144D2                 db    0
.rdata:00000001800144D3                 db    0
.rdata:00000001800144D4                 db    0
.rdata:00000001800144D5                 db    0
.rdata:00000001800144D6                 db    0
.rdata:00000001800144D7                 db    0
.rdata:00000001800144D8                 db    0
.rdata:00000001800144D9                 db    0
.rdata:00000001800144DA                 db    0
.rdata:00000001800144DB                 db    0
.rdata:00000001800144DC                 db    0
.rdata:00000001800144DD                 db    0
.rdata:00000001800144DE                 db    0
.rdata:00000001800144DF                 db    0
.rdata:00000001800144E0                 db    0
.rdata:00000001800144E1                 db    0
.rdata:00000001800144E2                 db    0
.rdata:00000001800144E3                 db    0
.rdata:00000001800144E4                 db    0
.rdata:00000001800144E5                 db    0
.rdata:00000001800144E6                 db    0
.rdata:00000001800144E7                 db    0
.rdata:00000001800144E8                 db    2
.rdata:00000001800144E9                 db    0
.rdata:00000001800144EA                 db    0
.rdata:00000001800144EB                 db    0
.rdata:00000001800144EC                 db  30h ; 0
.rdata:00000001800144ED                 db  43h ; C
.rdata:00000001800144EE                 db    1
.rdata:00000001800144EF                 db    0
.rdata:00000001800144F0                 db    0
.rdata:00000001800144F1                 db    0
.rdata:00000001800144F2                 db    0
.rdata:00000001800144F3                 db    0
.rdata:00000001800144F4                 db    0
.rdata:00000001800144F5                 db    0
.rdata:00000001800144F6                 db    0
.rdata:00000001800144F7                 db    0
.rdata:00000001800144F8                 db    0
.rdata:00000001800144F9                 db    0
.rdata:00000001800144FA                 db    0
.rdata:00000001800144FB                 db    0
.rdata:00000001800144FC                 db    0
.rdata:00000001800144FD                 db    0
.rdata:00000001800144FE                 db    0
.rdata:00000001800144FF                 db    0
.rdata:0000000180014500                 db  70h ; p
.rdata:0000000180014501                 db  42h ; B
.rdata:0000000180014502                 db    1
.rdata:0000000180014503                 db    0
.rdata:0000000180014504                 db  90h
.rdata:0000000180014505                 db  46h ; F
.rdata:0000000180014506                 db    1
.rdata:0000000180014507                 db    0
.rdata:0000000180014508                 db 0E0h
.rdata:0000000180014509                 db  41h ; A
.rdata:000000018001450A                 db    1
.rdata:000000018001450B                 db    0
.rdata:000000018001450C                 db  20h
.rdata:000000018001450D                 db  46h ; F
.rdata:000000018001450E                 db    1
.rdata:000000018001450F                 db    0
.rdata:0000000180014510                 db  28h ; (
.rdata:0000000180014511                 db  47h ; G
.rdata:0000000180014512                 db    1
.rdata:0000000180014513                 db    0
.rdata:0000000180014514                 db  48h ; H
.rdata:0000000180014515                 db  42h ; B
.rdata:0000000180014516                 db    1
.rdata:0000000180014517                 db    0
.rdata:0000000180014518                 db  88h
.rdata:0000000180014519                 db  43h ; C
.rdata:000000018001451A                 db    1
.rdata:000000018001451B                 db    0
.rdata:000000018001451C                 db  20h
.rdata:000000018001451D                 db  46h ; F
.rdata:000000018001451E                 db    1
.rdata:000000018001451F                 db    0
.rdata:0000000180014520                 db  28h ; (
.rdata:0000000180014521                 db  47h ; G
.rdata:0000000180014522                 db    1
.rdata:0000000180014523                 db    0
.rdata:0000000180014524                 db  48h ; H
.rdata:0000000180014525                 db  42h ; B
.rdata:0000000180014526                 db    1
.rdata:0000000180014527                 db    0
.rdata:0000000180014528                 db    0
.rdata:0000000180014529                 db    0
.rdata:000000018001452A                 db    0
.rdata:000000018001452B                 db    0
.rdata:000000018001452C                 db    0
.rdata:000000018001452D                 db    0
.rdata:000000018001452E                 db    0
.rdata:000000018001452F                 db    0
.rdata:0000000180014530                 db    0
.rdata:0000000180014531                 db    0
.rdata:0000000180014532                 db    0
.rdata:0000000180014533                 db    0
.rdata:0000000180014534                 db    0
.rdata:0000000180014535                 db    0
.rdata:0000000180014536                 db    0
.rdata:0000000180014537                 db    0
.rdata:0000000180014538                 db    0
.rdata:0000000180014539                 db    0
.rdata:000000018001453A                 db    0
.rdata:000000018001453B                 db    0
.rdata:000000018001453C                 db    0
.rdata:000000018001453D                 db    0
.rdata:000000018001453E                 db    0
.rdata:000000018001453F                 db    0
.rdata:0000000180014540                 db    0
.rdata:0000000180014541                 db    0
.rdata:0000000180014542                 db    0
.rdata:0000000180014543                 db    0
.rdata:0000000180014544                 db    0
.rdata:0000000180014545                 db    0
.rdata:0000000180014546                 db    0
.rdata:0000000180014547                 db    0
.rdata:0000000180014548                 db    0
.rdata:0000000180014549                 db    0
.rdata:000000018001454A                 db    0
.rdata:000000018001454B                 db    0
.rdata:000000018001454C                 db    0
.rdata:000000018001454D                 db    0
.rdata:000000018001454E                 db    0
.rdata:000000018001454F                 db    0
.rdata:0000000180014550                 db    0
.rdata:0000000180014551                 db    0
.rdata:0000000180014552                 db    0
.rdata:0000000180014553                 db    0
.rdata:0000000180014554                 db    0
.rdata:0000000180014555                 db    0
.rdata:0000000180014556                 db    0
.rdata:0000000180014557                 db    0
.rdata:0000000180014558 unk_180014558   db    1                 ; DATA XREF: .rdata:0000000180013AA0↑o
.rdata:0000000180014559                 db    0
.rdata:000000018001455A                 db    0
.rdata:000000018001455B                 db    0
.rdata:000000018001455C                 db    0
.rdata:000000018001455D                 db    0
.rdata:000000018001455E                 db    0
.rdata:000000018001455F                 db    0
.rdata:0000000180014560                 db    0
.rdata:0000000180014561                 db    0
.rdata:0000000180014562                 db    0
.rdata:0000000180014563                 db    0
.rdata:0000000180014564                 db 0D0h
.rdata:0000000180014565                 db  90h
.rdata:0000000180014566                 db    1
.rdata:0000000180014567                 db    0
.rdata:0000000180014568                 db 0E0h
.rdata:0000000180014569                 db  44h ; D
.rdata:000000018001456A                 db    1
.rdata:000000018001456B                 db    0
.rdata:000000018001456C                 db  58h ; X
.rdata:000000018001456D                 db  45h ; E
.rdata:000000018001456E                 db    1
.rdata:000000018001456F                 db    0
.rdata:0000000180014570                 db    0
.rdata:0000000180014571                 db    0
.rdata:0000000180014572                 db    0
.rdata:0000000180014573                 db    0
.rdata:0000000180014574                 db    0
.rdata:0000000180014575                 db    0
.rdata:0000000180014576                 db    0
.rdata:0000000180014577                 db    0
.rdata:0000000180014578                 db    0
.rdata:0000000180014579                 db    0
.rdata:000000018001457A                 db    0
.rdata:000000018001457B                 db    0
.rdata:000000018001457C                 db    0
.rdata:000000018001457D                 db    0
.rdata:000000018001457E                 db    0
.rdata:000000018001457F                 db    0
.rdata:0000000180014580 unk_180014580   db    1                 ; DATA XREF: .rdata:0000000180013AC0↑o
.rdata:0000000180014581                 db    0
.rdata:0000000180014582                 db    0
.rdata:0000000180014583                 db    0
.rdata:0000000180014584                 db    0
.rdata:0000000180014585                 db    0
.rdata:0000000180014586                 db    0
.rdata:0000000180014587                 db    0
.rdata:0000000180014588                 db    0
.rdata:0000000180014589                 db    0
.rdata:000000018001458A                 db    0
.rdata:000000018001458B                 db    0
.rdata:000000018001458C                 db  20h
.rdata:000000018001458D                 db  92h
.rdata:000000018001458E                 db    1
.rdata:000000018001458F                 db    0
.rdata:0000000180014590                 db  18h
.rdata:0000000180014591                 db  43h ; C
.rdata:0000000180014592                 db    1
.rdata:0000000180014593                 db    0
.rdata:0000000180014594                 db  80h
.rdata:0000000180014595                 db  45h ; E
.rdata:0000000180014596                 db    1
.rdata:0000000180014597                 db    0
.rdata:0000000180014598                 db    0
.rdata:0000000180014599                 db    0
.rdata:000000018001459A                 db    0
.rdata:000000018001459B                 db    0
.rdata:000000018001459C                 db    0
.rdata:000000018001459D                 db    0
.rdata:000000018001459E                 db    0
.rdata:000000018001459F                 db    0
.rdata:00000001800145A0                 db    0
.rdata:00000001800145A1                 db    0
.rdata:00000001800145A2                 db    0
.rdata:00000001800145A3                 db    0
.rdata:00000001800145A4                 db    0
.rdata:00000001800145A5                 db    0
.rdata:00000001800145A6                 db    0
.rdata:00000001800145A7                 db    0
.rdata:00000001800145A8 unk_1800145A8   db    1                 ; DATA XREF: .rdata:0000000180013B40↑o
.rdata:00000001800145A9                 db    0
.rdata:00000001800145AA                 db    0
.rdata:00000001800145AB                 db    0
.rdata:00000001800145AC                 db  98h
.rdata:00000001800145AD                 db    0
.rdata:00000001800145AE                 db    0
.rdata:00000001800145AF                 db    0
.rdata:00000001800145B0                 db    4
.rdata:00000001800145B1                 db    0
.rdata:00000001800145B2                 db    0
.rdata:00000001800145B3                 db    0
.rdata:00000001800145B4                 db  70h ; p
.rdata:00000001800145B5                 db  91h
.rdata:00000001800145B6                 db    1
.rdata:00000001800145B7                 db    0
.rdata:00000001800145B8                 db    0
.rdata:00000001800145B9                 db  47h ; G
.rdata:00000001800145BA                 db    1
.rdata:00000001800145BB                 db    0
.rdata:00000001800145BC                 db 0A8h
.rdata:00000001800145BD                 db  45h ; E
.rdata:00000001800145BE                 db    1
.rdata:00000001800145BF                 db    0
.rdata:00000001800145C0                 db    0
.rdata:00000001800145C1                 db    0
.rdata:00000001800145C2                 db    0
.rdata:00000001800145C3                 db    0
.rdata:00000001800145C4                 db    0
.rdata:00000001800145C5                 db    0
.rdata:00000001800145C6                 db    0
.rdata:00000001800145C7                 db    0
.rdata:00000001800145C8                 db    0
.rdata:00000001800145C9                 db    0
.rdata:00000001800145CA                 db    0
.rdata:00000001800145CB                 db    0
.rdata:00000001800145CC                 db    0
.rdata:00000001800145CD                 db    0
.rdata:00000001800145CE                 db    0
.rdata:00000001800145CF                 db    0
.rdata:00000001800145D0                 db  10h
.rdata:00000001800145D1                 db  93h
.rdata:00000001800145D2                 db    1
.rdata:00000001800145D3                 db    0
.rdata:00000001800145D4                 db    4
.rdata:00000001800145D5                 db    0
.rdata:00000001800145D6                 db    0
.rdata:00000001800145D7                 db    0
.rdata:00000001800145D8                 db    0
.rdata:00000001800145D9                 db    0
.rdata:00000001800145DA                 db    0
.rdata:00000001800145DB                 db    0
.rdata:00000001800145DC                 db 0FFh
.rdata:00000001800145DD                 db 0FFh
.rdata:00000001800145DE                 db 0FFh
.rdata:00000001800145DF                 db 0FFh
.rdata:00000001800145E0                 db    0
.rdata:00000001800145E1                 db    0
.rdata:00000001800145E2                 db    0
.rdata:00000001800145E3                 db    0
.rdata:00000001800145E4                 db  40h ; @
.rdata:00000001800145E5                 db    0
.rdata:00000001800145E6                 db    0
.rdata:00000001800145E7                 db    0
.rdata:00000001800145E8                 db 0C8h
.rdata:00000001800145E9                 db  41h ; A
.rdata:00000001800145EA                 db    1
.rdata:00000001800145EB                 db    0
.rdata:00000001800145EC                 db    0
.rdata:00000001800145ED                 db    0
.rdata:00000001800145EE                 db    0
.rdata:00000001800145EF                 db    0
.rdata:00000001800145F0                 db    0
.rdata:00000001800145F1                 db    0
.rdata:00000001800145F2                 db    0
.rdata:00000001800145F3                 db    0
.rdata:00000001800145F4                 db    0
.rdata:00000001800145F5                 db    0
.rdata:00000001800145F6                 db    0
.rdata:00000001800145F7                 db    0
.rdata:00000001800145F8                 db 0D0h
.rdata:00000001800145F9                 db  91h
.rdata:00000001800145FA                 db    1
.rdata:00000001800145FB                 db    0
.rdata:00000001800145FC                 db    1
.rdata:00000001800145FD                 db    0
.rdata:00000001800145FE                 db    0
.rdata:00000001800145FF                 db    0
.rdata:0000000180014600                 db    0
.rdata:0000000180014601                 db    0
.rdata:0000000180014602                 db    0
.rdata:0000000180014603                 db    0
.rdata:0000000180014604                 db 0FFh
.rdata:0000000180014605                 db 0FFh
.rdata:0000000180014606                 db 0FFh
.rdata:0000000180014607                 db 0FFh
.rdata:0000000180014608                 db    0
.rdata:0000000180014609                 db    0
.rdata:000000018001460A                 db    0
.rdata:000000018001460B                 db    0
.rdata:000000018001460C                 db  40h ; @
.rdata:000000018001460D                 db    0
.rdata:000000018001460E                 db    0
.rdata:000000018001460F                 db    0
.rdata:0000000180014610                 db  48h ; H
.rdata:0000000180014611                 db  46h ; F
.rdata:0000000180014612                 db    1
.rdata:0000000180014613                 db    0
.rdata:0000000180014614                 db    0
.rdata:0000000180014615                 db    0
.rdata:0000000180014616                 db    0
.rdata:0000000180014617                 db    0
.rdata:0000000180014618                 db    0
.rdata:0000000180014619                 db    0
.rdata:000000018001461A                 db    0
.rdata:000000018001461B                 db    0
.rdata:000000018001461C                 db    0
.rdata:000000018001461D                 db    0
.rdata:000000018001461E                 db    0
.rdata:000000018001461F                 db    0
.rdata:0000000180014620                 db 0F8h
.rdata:0000000180014621                 db  93h
.rdata:0000000180014622                 db    1
.rdata:0000000180014623                 db    0
.rdata:0000000180014624                 db    2
.rdata:0000000180014625                 db    0
.rdata:0000000180014626                 db    0
.rdata:0000000180014627                 db    0
.rdata:0000000180014628                 db    0
.rdata:0000000180014629                 db    0
.rdata:000000018001462A                 db    0
.rdata:000000018001462B                 db    0
.rdata:000000018001462C                 db    0
.rdata:000000018001462D                 db    0
.rdata:000000018001462E                 db    0
.rdata:000000018001462F                 db    0
.rdata:0000000180014630                 db    4
.rdata:0000000180014631                 db    0
.rdata:0000000180014632                 db    0
.rdata:0000000180014633                 db    0
.rdata:0000000180014634                 db  50h ; P
.rdata:0000000180014635                 db    0
.rdata:0000000180014636                 db    0
.rdata:0000000180014637                 db    0
.rdata:0000000180014638                 db  70h ; p
.rdata:0000000180014639                 db  43h ; C
.rdata:000000018001463A                 db    1
.rdata:000000018001463B                 db    0
.rdata:000000018001463C                 db    0
.rdata:000000018001463D                 db    0
.rdata:000000018001463E                 db    0
.rdata:000000018001463F                 db    0
.rdata:0000000180014640                 db    0
.rdata:0000000180014641                 db    0
.rdata:0000000180014642                 db    0
.rdata:0000000180014643                 db    0
.rdata:0000000180014644                 db    0
.rdata:0000000180014645                 db    0
.rdata:0000000180014646                 db    0
.rdata:0000000180014647                 db    0
.rdata:0000000180014648                 db    0
.rdata:0000000180014649                 db    0
.rdata:000000018001464A                 db    0
.rdata:000000018001464B                 db    0
.rdata:000000018001464C                 db    0
.rdata:000000018001464D                 db    0
.rdata:000000018001464E                 db    0
.rdata:000000018001464F                 db    0
.rdata:0000000180014650                 db    2
.rdata:0000000180014651                 db    0
.rdata:0000000180014652                 db    0
.rdata:0000000180014653                 db    0
.rdata:0000000180014654                 db 0D0h
.rdata:0000000180014655                 db  46h ; F
.rdata:0000000180014656                 db    1
.rdata:0000000180014657                 db    0
.rdata:0000000180014658                 db    0
.rdata:0000000180014659                 db    0
.rdata:000000018001465A                 db    0
.rdata:000000018001465B                 db    0
.rdata:000000018001465C                 db    0
.rdata:000000018001465D                 db    0
.rdata:000000018001465E                 db    0
.rdata:000000018001465F                 db    0
.rdata:0000000180014660                 db 0B0h
.rdata:0000000180014661                 db  43h ; C
.rdata:0000000180014662                 db    1
.rdata:0000000180014663                 db    0
.rdata:0000000180014664                 db  90h
.rdata:0000000180014665                 db  47h ; G
.rdata:0000000180014666                 db    1
.rdata:0000000180014667                 db    0
.rdata:0000000180014668                 db    0
.rdata:0000000180014669                 db    0
.rdata:000000018001466A                 db    0
.rdata:000000018001466B                 db    0
.rdata:000000018001466C                 db    0
.rdata:000000018001466D                 db    0
.rdata:000000018001466E                 db    0
.rdata:000000018001466F                 db    0
.rdata:0000000180014670                 db    0
.rdata:0000000180014671                 db    0
.rdata:0000000180014672                 db    0
.rdata:0000000180014673                 db    0
.rdata:0000000180014674                 db    0
.rdata:0000000180014675                 db    0
.rdata:0000000180014676                 db    0
.rdata:0000000180014677                 db    0
.rdata:0000000180014678                 db    0
.rdata:0000000180014679                 db    0
.rdata:000000018001467A                 db    0
.rdata:000000018001467B                 db    0
.rdata:000000018001467C                 db    0
.rdata:000000018001467D                 db    0
.rdata:000000018001467E                 db    0
.rdata:000000018001467F                 db    0
.rdata:0000000180014680                 db    4
.rdata:0000000180014681                 db    0
.rdata:0000000180014682                 db    0
.rdata:0000000180014683                 db    0
.rdata:0000000180014684                 db  48h ; H
.rdata:0000000180014685                 db  43h ; C
.rdata:0000000180014686                 db    1
.rdata:0000000180014687                 db    0
.rdata:0000000180014688                 db    0
.rdata:0000000180014689                 db    0
.rdata:000000018001468A                 db    0
.rdata:000000018001468B                 db    0
.rdata:000000018001468C                 db    0
.rdata:000000018001468D                 db    0
.rdata:000000018001468E                 db    0
.rdata:000000018001468F                 db    0
.rdata:0000000180014690                 db 0A0h
.rdata:0000000180014691                 db  92h
.rdata:0000000180014692                 db    1
.rdata:0000000180014693                 db    0
.rdata:0000000180014694                 db    8
.rdata:0000000180014695                 db    0
.rdata:0000000180014696                 db    0
.rdata:0000000180014697                 db    0
.rdata:0000000180014698                 db    0
.rdata:0000000180014699                 db    0
.rdata:000000018001469A                 db    0
.rdata:000000018001469B                 db    0
.rdata:000000018001469C                 db 0FFh
.rdata:000000018001469D                 db 0FFh
.rdata:000000018001469E                 db 0FFh
.rdata:000000018001469F                 db 0FFh
.rdata:00000001800146A0                 db    0
.rdata:00000001800146A1                 db    0
.rdata:00000001800146A2                 db    0
.rdata:00000001800146A3                 db    0
.rdata:00000001800146A4                 db  40h ; @
.rdata:00000001800146A5                 db    0
.rdata:00000001800146A6                 db    0
.rdata:00000001800146A7                 db    0
.rdata:00000001800146A8                 db  88h
.rdata:00000001800146A9                 db  41h ; A
.rdata:00000001800146AA                 db    1
.rdata:00000001800146AB                 db    0
.rdata:00000001800146AC                 db    0
.rdata:00000001800146AD                 db    0
.rdata:00000001800146AE                 db    0
.rdata:00000001800146AF                 db    0
.rdata:00000001800146B0                 db    0
.rdata:00000001800146B1                 db    0
.rdata:00000001800146B2                 db    0
.rdata:00000001800146B3                 db    0
.rdata:00000001800146B4                 db    0
.rdata:00000001800146B5                 db    0
.rdata:00000001800146B6                 db    0
.rdata:00000001800146B7                 db    0
.rdata:00000001800146B8                 db    0
.rdata:00000001800146B9                 db    0
.rdata:00000001800146BA                 db    0
.rdata:00000001800146BB                 db    0
.rdata:00000001800146BC                 db    0
.rdata:00000001800146BD                 db    0
.rdata:00000001800146BE                 db    0
.rdata:00000001800146BF                 db    0
.rdata:00000001800146C0                 db    2
.rdata:00000001800146C1                 db    0
.rdata:00000001800146C2                 db    0
.rdata:00000001800146C3                 db    0
.rdata:00000001800146C4                 db  60h ; `
.rdata:00000001800146C5                 db  46h ; F
.rdata:00000001800146C6                 db    1
.rdata:00000001800146C7                 db    0
.rdata:00000001800146C8                 db    0
.rdata:00000001800146C9                 db    0
.rdata:00000001800146CA                 db    0
.rdata:00000001800146CB                 db    0
.rdata:00000001800146CC                 db    0
.rdata:00000001800146CD                 db    0
.rdata:00000001800146CE                 db    0
.rdata:00000001800146CF                 db    0
.rdata:00000001800146D0                 db 0F8h
.rdata:00000001800146D1                 db  45h ; E
.rdata:00000001800146D2                 db    1
.rdata:00000001800146D3                 db    0
.rdata:00000001800146D4                 db 0C8h
.rdata:00000001800146D5                 db  42h ; B
.rdata:00000001800146D6                 db    1
.rdata:00000001800146D7                 db    0
.rdata:00000001800146D8                 db    0
.rdata:00000001800146D9                 db    0
.rdata:00000001800146DA                 db    0
.rdata:00000001800146DB                 db    0
.rdata:00000001800146DC                 db    0
.rdata:00000001800146DD                 db    0
.rdata:00000001800146DE                 db    0
.rdata:00000001800146DF                 db    0
.rdata:00000001800146E0                 db    0
.rdata:00000001800146E1                 db    0
.rdata:00000001800146E2                 db    0
.rdata:00000001800146E3                 db    0
.rdata:00000001800146E4                 db    0
.rdata:00000001800146E5                 db    0
.rdata:00000001800146E6                 db    0
.rdata:00000001800146E7                 db    0
.rdata:00000001800146E8                 db    0
.rdata:00000001800146E9                 db    0
.rdata:00000001800146EA                 db    0
.rdata:00000001800146EB                 db    0
.rdata:00000001800146EC                 db    0
.rdata:00000001800146ED                 db    0
.rdata:00000001800146EE                 db    0
.rdata:00000001800146EF                 db    0
.rdata:00000001800146F0                 db    1
.rdata:00000001800146F1                 db    0
.rdata:00000001800146F2                 db    0
.rdata:00000001800146F3                 db    0
.rdata:00000001800146F4                 db  28h ; (
.rdata:00000001800146F5                 db  44h ; D
.rdata:00000001800146F6                 db    1
.rdata:00000001800146F7                 db    0
.rdata:00000001800146F8                 db    0
.rdata:00000001800146F9                 db    0
.rdata:00000001800146FA                 db    0
.rdata:00000001800146FB                 db    0
.rdata:00000001800146FC                 db    0
.rdata:00000001800146FD                 db    0
.rdata:00000001800146FE                 db    0
.rdata:00000001800146FF                 db    0
.rdata:0000000180014700                 db    0
.rdata:0000000180014701                 db    0
.rdata:0000000180014702                 db    0
.rdata:0000000180014703                 db    0
.rdata:0000000180014704                 db    3
.rdata:0000000180014705                 db    0
.rdata:0000000180014706                 db    0
.rdata:0000000180014707                 db    0
.rdata:0000000180014708                 db  0Ah
.rdata:0000000180014709                 db    0
.rdata:000000018001470A                 db    0
.rdata:000000018001470B                 db    0
.rdata:000000018001470C                 db    0
.rdata:000000018001470D                 db  45h ; E
.rdata:000000018001470E                 db    1
.rdata:000000018001470F                 db    0
.rdata:0000000180014710                 db    0
.rdata:0000000180014711                 db    0
.rdata:0000000180014712                 db    0
.rdata:0000000180014713                 db    0
.rdata:0000000180014714                 db    0
.rdata:0000000180014715                 db    0
.rdata:0000000180014716                 db    0
.rdata:0000000180014717                 db    0
.rdata:0000000180014718                 db  38h ; 8
.rdata:0000000180014719                 db  44h ; D
.rdata:000000018001471A                 db    1
.rdata:000000018001471B                 db    0
.rdata:000000018001471C                 db    0
.rdata:000000018001471D                 db    0
.rdata:000000018001471E                 db    0
.rdata:000000018001471F                 db    0
.rdata:0000000180014720                 db    0
.rdata:0000000180014721                 db    0
.rdata:0000000180014722                 db    0
.rdata:0000000180014723                 db    0
.rdata:0000000180014724                 db    0
.rdata:0000000180014725                 db    0
.rdata:0000000180014726                 db    0
.rdata:0000000180014727                 db    0
.rdata:0000000180014728                 db  78h ; x
.rdata:0000000180014729                 db  92h
.rdata:000000018001472A                 db    1
.rdata:000000018001472B                 db    0
.rdata:000000018001472C                 db    1
.rdata:000000018001472D                 db    0
.rdata:000000018001472E                 db    0
.rdata:000000018001472F                 db    0
.rdata:0000000180014730                 db    0
.rdata:0000000180014731                 db    0
.rdata:0000000180014732                 db    0
.rdata:0000000180014733                 db    0
.rdata:0000000180014734                 db    0
.rdata:0000000180014735                 db    0
.rdata:0000000180014736                 db    0
.rdata:0000000180014737                 db    0
.rdata:0000000180014738                 db    4
.rdata:0000000180014739                 db    0
.rdata:000000018001473A                 db    0
.rdata:000000018001473B                 db    0
.rdata:000000018001473C                 db  40h ; @
.rdata:000000018001473D                 db    0
.rdata:000000018001473E                 db    0
.rdata:000000018001473F                 db    0
.rdata:0000000180014740                 db 0B8h
.rdata:0000000180014741                 db  46h ; F
.rdata:0000000180014742                 db    1
.rdata:0000000180014743                 db    0
.rdata:0000000180014744                 db    0
.rdata:0000000180014745                 db    0
.rdata:0000000180014746                 db    0
.rdata:0000000180014747                 db    0
.rdata:0000000180014748                 db    0
.rdata:0000000180014749                 db    0
.rdata:000000018001474A                 db    0
.rdata:000000018001474B                 db    0
.rdata:000000018001474C                 db    0
.rdata:000000018001474D                 db    0
.rdata:000000018001474E                 db    0
.rdata:000000018001474F                 db    0
.rdata:0000000180014750                 db 0F8h
.rdata:0000000180014751                 db  93h
.rdata:0000000180014752                 db    1
.rdata:0000000180014753                 db    0
.rdata:0000000180014754                 db    2
.rdata:0000000180014755                 db    0
.rdata:0000000180014756                 db    0
.rdata:0000000180014757                 db    0
.rdata:0000000180014758                 db    0
.rdata:0000000180014759                 db    0
.rdata:000000018001475A                 db    0
.rdata:000000018001475B                 db    0
.rdata:000000018001475C                 db 0FFh
.rdata:000000018001475D                 db 0FFh
.rdata:000000018001475E                 db 0FFh
.rdata:000000018001475F                 db 0FFh
.rdata:0000000180014760                 db    0
.rdata:0000000180014761                 db    0
.rdata:0000000180014762                 db    0
.rdata:0000000180014763                 db    0
.rdata:0000000180014764                 db  40h ; @
.rdata:0000000180014765                 db    0
.rdata:0000000180014766                 db    0
.rdata:0000000180014767                 db    0
.rdata:0000000180014768                 db  70h ; p
.rdata:0000000180014769                 db  43h ; C
.rdata:000000018001476A                 db    1
.rdata:000000018001476B                 db    0
.rdata:000000018001476C                 db    0
.rdata:000000018001476D                 db    0
.rdata:000000018001476E                 db    0
.rdata:000000018001476F                 db    0
.rdata:0000000180014770                 db    0
.rdata:0000000180014771                 db    0
.rdata:0000000180014772                 db    0
.rdata:0000000180014773                 db    0
.rdata:0000000180014774                 db    0
.rdata:0000000180014775                 db    0
.rdata:0000000180014776                 db    0
.rdata:0000000180014777                 db    0
.rdata:0000000180014778                 db    0
.rdata:0000000180014779                 db    0
.rdata:000000018001477A                 db    0
.rdata:000000018001477B                 db    0
.rdata:000000018001477C                 db    0
.rdata:000000018001477D                 db    0
.rdata:000000018001477E                 db    0
.rdata:000000018001477F                 db    0
.rdata:0000000180014780                 db    1
.rdata:0000000180014781                 db    0
.rdata:0000000180014782                 db    0
.rdata:0000000180014783                 db    0
.rdata:0000000180014784                 db  18h
.rdata:0000000180014785                 db  47h ; G
.rdata:0000000180014786                 db    1
.rdata:0000000180014787                 db    0
.rdata:0000000180014788                 db    0
.rdata:0000000180014789                 db    0
.rdata:000000018001478A                 db    0
.rdata:000000018001478B                 db    0
.rdata:000000018001478C                 db    0
.rdata:000000018001478D                 db    0
.rdata:000000018001478E                 db    0
.rdata:000000018001478F                 db    0
.rdata:0000000180014790                 db 0E8h
.rdata:0000000180014791                 db  92h
.rdata:0000000180014792                 db    1
.rdata:0000000180014793                 db    0
.rdata:0000000180014794                 db    0
.rdata:0000000180014795                 db    0
.rdata:0000000180014796                 db    0
.rdata:0000000180014797                 db    0
.rdata:0000000180014798                 db    8
.rdata:0000000180014799                 db    0
.rdata:000000018001479A                 db    0
.rdata:000000018001479B                 db    0
.rdata:000000018001479C                 db 0FFh
.rdata:000000018001479D                 db 0FFh
.rdata:000000018001479E                 db 0FFh
.rdata:000000018001479F                 db 0FFh
.rdata:00000001800147A0                 db    0
.rdata:00000001800147A1                 db    0
.rdata:00000001800147A2                 db    0
.rdata:00000001800147A3                 db    0
.rdata:00000001800147A4                 db  40h ; @
.rdata:00000001800147A5                 db    0
.rdata:00000001800147A6                 db    0
.rdata:00000001800147A7                 db    0
.rdata:00000001800147A8                 db  78h ; x
.rdata:00000001800147A9                 db  47h ; G
.rdata:00000001800147AA                 db    1
.rdata:00000001800147AB                 db    0
.rdata:00000001800147AC                 db    0
.rdata:00000001800147AD                 db    0
.rdata:00000001800147AE                 db    0
.rdata:00000001800147AF                 db    0
.rdata:00000001800147B0                 db    0
.rdata:00000001800147B1                 db    0
.rdata:00000001800147B2                 db    0
.rdata:00000001800147B3                 db    0
.rdata:00000001800147B4                 db    0
.rdata:00000001800147B5                 db    0
.rdata:00000001800147B6                 db    0
.rdata:00000001800147B7                 db    0
.rdata:00000001800147B8                 db  50h ; P
.rdata:00000001800147B9                 db  47h ; G
.rdata:00000001800147BA                 db    1
.rdata:00000001800147BB                 db    0
.rdata:00000001800147BC                 db 0B0h
.rdata:00000001800147BD                 db  43h ; C
.rdata:00000001800147BE                 db    1
.rdata:00000001800147BF                 db    0
.rdata:00000001800147C0                 db  90h
.rdata:00000001800147C1                 db  47h ; G
.rdata:00000001800147C2                 db    1
.rdata:00000001800147C3                 db    0
.rdata:00000001800147C4                 db    0
.rdata:00000001800147C5                 db    0
.rdata:00000001800147C6                 db    0
.rdata:00000001800147C7                 db    0
.rdata:00000001800147C8                 db    0
.rdata:00000001800147C9                 db    0
.rdata:00000001800147CA                 db    0
.rdata:00000001800147CB                 db    0
.rdata:00000001800147CC                 db    0
.rdata:00000001800147CD                 db    0
.rdata:00000001800147CE                 db    0
.rdata:00000001800147CF                 db    0
.rdata:00000001800147D0                 db    0
.rdata:00000001800147D1                 db    0
.rdata:00000001800147D2                 db    0
.rdata:00000001800147D3                 db    0
.rdata:00000001800147D4 __volatile_metadata db  18h             ; DATA XREF: .rdata:0000000180013D80↑o
.rdata:00000001800147D5                 db    0
.rdata:00000001800147D6                 db    0
.rdata:00000001800147D7                 db    0
.rdata:00000001800147D8                 db    2
.rdata:00000001800147D9                 db  80h
.rdata:00000001800147DA                 db    2
.rdata:00000001800147DB                 db  80h
.rdata:00000001800147DC                 db 0ECh
.rdata:00000001800147DD                 db  47h ; G
.rdata:00000001800147DE                 db    1
.rdata:00000001800147DF                 db    0
.rdata:00000001800147E0                 db  2Ch ; ,
.rdata:00000001800147E1                 db    0
.rdata:00000001800147E2                 db    0
.rdata:00000001800147E3                 db    0
.rdata:00000001800147E4                 db  18h
.rdata:00000001800147E5                 db  48h ; H
.rdata:00000001800147E6                 db    1
.rdata:00000001800147E7                 db    0
.rdata:00000001800147E8                 db  28h ; (
.rdata:00000001800147E9                 db    0
.rdata:00000001800147EA                 db    0
.rdata:00000001800147EB                 db    0
.rdata:00000001800147EC                 db    1
.rdata:00000001800147ED                 db    8
.rdata:00000001800147EE                 db    1
.rdata:00000001800147EF                 db    0
.rdata:00000001800147F0                 db  17h
.rdata:00000001800147F1                 db    8
.rdata:00000001800147F2                 db    1
.rdata:00000001800147F3                 db    0
.rdata:00000001800147F4                 db 0E7h
.rdata:00000001800147F5                 db  0Ah
.rdata:00000001800147F6                 db    1
.rdata:00000001800147F7                 db    0
.rdata:00000001800147F8                 db 0D3h
.rdata:00000001800147F9                 db  0Bh
.rdata:00000001800147FA                 db    1
.rdata:00000001800147FB                 db    0
.rdata:00000001800147FC                 db  4Fh ; O
.rdata:00000001800147FD                 db  0Ch
.rdata:00000001800147FE                 db    1
.rdata:00000001800147FF                 db    0
.rdata:0000000180014800                 db  64h ; d
.rdata:0000000180014801                 db  0Ch
.rdata:0000000180014802                 db    1
.rdata:0000000180014803                 db    0
.rdata:0000000180014804                 db 0FAh
.rdata:0000000180014805                 db  0Eh
.rdata:0000000180014806                 db    1
.rdata:0000000180014807                 db    0
.rdata:0000000180014808                 db  2Ch ; ,
.rdata:0000000180014809                 db  0Fh
.rdata:000000018001480A                 db    1
.rdata:000000018001480B                 db    0
.rdata:000000018001480C                 db  47h ; G
.rdata:000000018001480D                 db  11h
.rdata:000000018001480E                 db    1
.rdata:000000018001480F                 db    0
.rdata:0000000180014810                 db  4Ch ; L
.rdata:0000000180014811                 db  11h
.rdata:0000000180014812                 db    1
.rdata:0000000180014813                 db    0
.rdata:0000000180014814                 db  96h
.rdata:0000000180014815                 db  11h
.rdata:0000000180014816                 db    1
.rdata:0000000180014817                 db    0
.rdata:0000000180014818                 db    0
.rdata:0000000180014819                 db  10h
.rdata:000000018001481A                 db    0
.rdata:000000018001481B                 db    0
.rdata:000000018001481C                 db  10h
.rdata:000000018001481D                 db    0
.rdata:000000018001481E                 db    0
.rdata:000000018001481F                 db    0
.rdata:0000000180014820                 db  70h ; p
.rdata:0000000180014821                 db    2
.rdata:0000000180014822                 db    1
.rdata:0000000180014823                 db    0
.rdata:0000000180014824                 db  38h ; 8
.rdata:0000000180014825                 db    0
.rdata:0000000180014826                 db    0
.rdata:0000000180014827                 db    0
.rdata:0000000180014828                 db  20h
.rdata:0000000180014829                 db    3
.rdata:000000018001482A                 db    1
.rdata:000000018001482B                 db    0
.rdata:000000018001482C                 db 0C0h
.rdata:000000018001482D                 db  0Eh
.rdata:000000018001482E                 db    0
.rdata:000000018001482F                 db    0
.rdata:0000000180014830                 db  64h ; d
.rdata:0000000180014831                 db  12h
.rdata:0000000180014832                 db    1
.rdata:0000000180014833                 db    0
.rdata:0000000180014834                 db  0Ch
.rdata:0000000180014835                 db    0
.rdata:0000000180014836                 db    0
.rdata:0000000180014837                 db    0
.rdata:0000000180014838                 db  3Ch ; <
.rdata:0000000180014839                 db  18h
.rdata:000000018001483A                 db    1
.rdata:000000018001483B                 db    0
.rdata:000000018001483C                 db 0EFh
.rdata:000000018001483D                 db    0
.rdata:000000018001483E                 db    0
.rdata:000000018001483F                 db    0
.rdata:0000000180014840 ; Debug information (IMAGE_DEBUG_TYPE_CODEVIEW)
.rdata:0000000180014840 asc_180014840   db 'RSDS'               ; DATA XREF: .rdata:0000000180013DD4↑o
.rdata:0000000180014840                                         ; CV signature
.rdata:0000000180014844                 dd 190175B7h            ; Data1 ; GUID
.rdata:0000000180014848                 dw 1D84h                ; Data2
.rdata:000000018001484A                 dw 4191h                ; Data3
.rdata:000000018001484C                 db 8Ch, 45h, 0Ah, 40h, 35h, 94h, 9, 55h; Data4
.rdata:0000000180014854                 dd 3                    ; Age
.rdata:0000000180014858                 text "UTF-8", 'E:\Repos\FSUIPC_WDLL\x64\Release\FSUIPC_WAPID.pdb',0 ; PdbFileName
.rdata:000000018001488A                 align 4
.rdata:000000018001488C ; Debug information (IMAGE_DEBUG_TYPE_VC_FEATURE)
.rdata:000000018001488C unk_18001488C   db    0                 ; DATA XREF: .rdata:0000000180013DF0↑o
.rdata:000000018001488D                 db    0
.rdata:000000018001488E                 db    0
.rdata:000000018001488F                 db    0
.rdata:0000000180014890                 db  26h ; &
.rdata:0000000180014891                 db    0
.rdata:0000000180014892                 db    0
.rdata:0000000180014893                 db    0
.rdata:0000000180014894                 db  26h ; &
.rdata:0000000180014895                 db    0
.rdata:0000000180014896                 db    0
.rdata:0000000180014897                 db    0
.rdata:0000000180014898                 db    5
.rdata:0000000180014899                 db    0
.rdata:000000018001489A                 db    0
.rdata:000000018001489B                 db    0
.rdata:000000018001489C                 db  1Eh
.rdata:000000018001489D                 db    0
.rdata:000000018001489E                 db    0
.rdata:000000018001489F                 db    0
.rdata:00000001800148A0 ; Debug information (IMAGE_DEBUG_TYPE_POGO)
.rdata:00000001800148A0 aGctl           db 'GCTL',0             ; DATA XREF: .rdata:0000000180013E0C↑o
.rdata:00000001800148A5                 db  10h
.rdata:00000001800148A6                 db    0
.rdata:00000001800148A7                 db    0
.rdata:00000001800148A8                 db  10h
.rdata:00000001800148A9                 db    0
.rdata:00000001800148AA                 db    0
.rdata:00000001800148AB                 db    0
.rdata:00000001800148AC                 db  2Eh ; .
.rdata:00000001800148AD                 db  74h ; t
.rdata:00000001800148AE                 db  65h ; e
.rdata:00000001800148AF                 db  78h ; x
.rdata:00000001800148B0                 db  74h ; t
.rdata:00000001800148B1                 db  24h ; $
.rdata:00000001800148B2                 db  64h ; d
.rdata:00000001800148B3                 db  69h ; i
.rdata:00000001800148B4                 db    0
.rdata:00000001800148B5                 db    0
.rdata:00000001800148B6                 db    0
.rdata:00000001800148B7                 db    0
.rdata:00000001800148B8                 db  10h
.rdata:00000001800148B9                 db  10h
.rdata:00000001800148BA                 db    0
.rdata:00000001800148BB                 db    0
.rdata:00000001800148BC                 db 0D0h
.rdata:00000001800148BD                 db    2
.rdata:00000001800148BE                 db    1
.rdata:00000001800148BF                 db    0
.rdata:00000001800148C0                 db  2Eh ; .
.rdata:00000001800148C1                 db  74h ; t
.rdata:00000001800148C2                 db  65h ; e
.rdata:00000001800148C3                 db  78h ; x
.rdata:00000001800148C4                 db  74h ; t
.rdata:00000001800148C5                 db  24h ; $
.rdata:00000001800148C6                 db  6Dh ; m
.rdata:00000001800148C7                 db  6Eh ; n
.rdata:00000001800148C8                 db    0
.rdata:00000001800148C9                 db    0
.rdata:00000001800148CA                 db    0
.rdata:00000001800148CB                 db    0
.rdata:00000001800148CC                 db 0E0h
.rdata:00000001800148CD                 db  12h
.rdata:00000001800148CE                 db    1
.rdata:00000001800148CF                 db    0
.rdata:00000001800148D0                 db  40h ; @
.rdata:00000001800148D1                 db    0
.rdata:00000001800148D2                 db    0
.rdata:00000001800148D3                 db    0
.rdata:00000001800148D4                 db  2Eh ; .
.rdata:00000001800148D5                 db  74h ; t
.rdata:00000001800148D6                 db  65h ; e
.rdata:00000001800148D7                 db  78h ; x
.rdata:00000001800148D8                 db  74h ; t
.rdata:00000001800148D9                 db  24h ; $
.rdata:00000001800148DA                 db  6Dh ; m
.rdata:00000001800148DB                 db  6Eh ; n
.rdata:00000001800148DC                 db  24h ; $
.rdata:00000001800148DD                 db  30h ; 0
.rdata:00000001800148DE                 db  30h ; 0
.rdata:00000001800148DF                 db    0
.rdata:00000001800148E0                 db  20h
.rdata:00000001800148E1                 db  13h
.rdata:00000001800148E2                 db    1
.rdata:00000001800148E3                 db    0
.rdata:00000001800148E4                 db 0B0h
.rdata:00000001800148E5                 db    5
.rdata:00000001800148E6                 db    0
.rdata:00000001800148E7                 db    0
.rdata:00000001800148E8                 db  2Eh ; .
.rdata:00000001800148E9                 db  74h ; t
.rdata:00000001800148EA                 db  65h ; e
.rdata:00000001800148EB                 db  78h ; x
.rdata:00000001800148EC                 db  74h ; t
.rdata:00000001800148ED                 db  24h ; $
.rdata:00000001800148EE                 db  78h ; x
.rdata:00000001800148EF                 db    0
.rdata:00000001800148F0                 db 0D0h
.rdata:00000001800148F1                 db  18h
.rdata:00000001800148F2                 db    1
.rdata:00000001800148F3                 db    0
.rdata:00000001800148F4                 db  5Bh ; [
.rdata:00000001800148F5                 db    0
.rdata:00000001800148F6                 db    0
.rdata:00000001800148F7                 db    0
.rdata:00000001800148F8                 db  2Eh ; .
.rdata:00000001800148F9                 db  74h ; t
.rdata:00000001800148FA                 db  65h ; e
.rdata:00000001800148FB                 db  78h ; x
.rdata:00000001800148FC                 db  74h ; t
.rdata:00000001800148FD                 db  24h ; $
.rdata:00000001800148FE                 db  79h ; y
.rdata:00000001800148FF                 db  64h ; d
.rdata:0000000180014900                 db    0
.rdata:0000000180014901                 db    0
.rdata:0000000180014902                 db    0
.rdata:0000000180014903                 db    0
.rdata:0000000180014904                 db    0
.rdata:0000000180014905                 db  20h
.rdata:0000000180014906                 db    1
.rdata:0000000180014907                 db    0
.rdata:0000000180014908                 db 0A8h
.rdata:0000000180014909                 db    5
.rdata:000000018001490A                 db    0
.rdata:000000018001490B                 db    0
.rdata:000000018001490C                 db  2Eh ; .
.rdata:000000018001490D                 db  69h ; i
.rdata:000000018001490E                 db  64h ; d
.rdata:000000018001490F                 db  61h ; a
.rdata:0000000180014910                 db  74h ; t
.rdata:0000000180014911                 db  61h ; a
.rdata:0000000180014912                 db  24h ; $
.rdata:0000000180014913                 db  35h ; 5
.rdata:0000000180014914                 db    0
.rdata:0000000180014915                 db    0
.rdata:0000000180014916                 db    0
.rdata:0000000180014917                 db    0
.rdata:0000000180014918                 db 0A8h
.rdata:0000000180014919                 db  25h ; %
.rdata:000000018001491A                 db    1
.rdata:000000018001491B                 db    0
.rdata:000000018001491C                 db  38h ; 8
.rdata:000000018001491D                 db    0
.rdata:000000018001491E                 db    0
.rdata:000000018001491F                 db    0
.rdata:0000000180014920                 db  2Eh ; .
.rdata:0000000180014921                 db  30h ; 0
.rdata:0000000180014922                 db  30h ; 0
.rdata:0000000180014923                 db  63h ; c
.rdata:0000000180014924                 db  66h ; f
.rdata:0000000180014925                 db  67h ; g
.rdata:0000000180014926                 db    0
.rdata:0000000180014927                 db    0
.rdata:0000000180014928                 db 0E0h
.rdata:0000000180014929                 db  25h ; %
.rdata:000000018001492A                 db    1
.rdata:000000018001492B                 db    0
.rdata:000000018001492C                 db    8
.rdata:000000018001492D                 db    0
.rdata:000000018001492E                 db    0
.rdata:000000018001492F                 db    0
.rdata:0000000180014930                 db  2Eh ; .
.rdata:0000000180014931                 db  43h ; C
.rdata:0000000180014932                 db  52h ; R
.rdata:0000000180014933                 db  54h ; T
.rdata:0000000180014934                 db  24h ; $
.rdata:0000000180014935                 db  58h ; X
.rdata:0000000180014936                 db  43h ; C
.rdata:0000000180014937                 db  41h ; A
.rdata:0000000180014938                 db    0
.rdata:0000000180014939                 db    0
.rdata:000000018001493A                 db    0
.rdata:000000018001493B                 db    0
.rdata:000000018001493C                 db 0E8h
.rdata:000000018001493D                 db  25h ; %
.rdata:000000018001493E                 db    1
.rdata:000000018001493F                 db    0
.rdata:0000000180014940                 db    8
.rdata:0000000180014941                 db    0
.rdata:0000000180014942                 db    0
.rdata:0000000180014943                 db    0
.rdata:0000000180014944                 db  2Eh ; .
.rdata:0000000180014945                 db  43h ; C
.rdata:0000000180014946                 db  52h ; R
.rdata:0000000180014947                 db  54h ; T
.rdata:0000000180014948                 db  24h ; $
.rdata:0000000180014949                 db  58h ; X
.rdata:000000018001494A                 db  43h ; C
.rdata:000000018001494B                 db  4Ch ; L
.rdata:000000018001494C                 db    0
.rdata:000000018001494D                 db    0
.rdata:000000018001494E                 db    0
.rdata:000000018001494F                 db    0
.rdata:0000000180014950                 db 0F0h
.rdata:0000000180014951                 db  25h ; %
.rdata:0000000180014952                 db    1
.rdata:0000000180014953                 db    0
.rdata:0000000180014954                 db    8
.rdata:0000000180014955                 db    0
.rdata:0000000180014956                 db    0
.rdata:0000000180014957                 db    0
.rdata:0000000180014958                 db  2Eh ; .
.rdata:0000000180014959                 db  43h ; C
.rdata:000000018001495A                 db  52h ; R
.rdata:000000018001495B                 db  54h ; T
.rdata:000000018001495C                 db  24h ; $
.rdata:000000018001495D                 db  58h ; X
.rdata:000000018001495E                 db  43h ; C
.rdata:000000018001495F                 db  5Ah ; Z
.rdata:0000000180014960                 db    0
.rdata:0000000180014961                 db    0
.rdata:0000000180014962                 db    0
.rdata:0000000180014963                 db    0
.rdata:0000000180014964                 db 0F8h
.rdata:0000000180014965                 db  25h ; %
.rdata:0000000180014966                 db    1
.rdata:0000000180014967                 db    0
.rdata:0000000180014968                 db    8
.rdata:0000000180014969                 db    0
.rdata:000000018001496A                 db    0
.rdata:000000018001496B                 db    0
.rdata:000000018001496C                 db  2Eh ; .
.rdata:000000018001496D                 db  43h ; C
.rdata:000000018001496E                 db  52h ; R
.rdata:000000018001496F                 db  54h ; T
.rdata:0000000180014970                 db  24h ; $
.rdata:0000000180014971                 db  58h ; X
.rdata:0000000180014972                 db  49h ; I
.rdata:0000000180014973                 db  41h ; A
.rdata:0000000180014974                 db    0
.rdata:0000000180014975                 db    0
.rdata:0000000180014976                 db    0
.rdata:0000000180014977                 db    0
.rdata:0000000180014978                 db    0
.rdata:0000000180014979                 db  26h ; &
.rdata:000000018001497A                 db    1
.rdata:000000018001497B                 db    0
.rdata:000000018001497C                 db    8
.rdata:000000018001497D                 db    0
.rdata:000000018001497E                 db    0
.rdata:000000018001497F                 db    0
.rdata:0000000180014980                 db  2Eh ; .
.rdata:0000000180014981                 db  43h ; C
.rdata:0000000180014982                 db  52h ; R
.rdata:0000000180014983                 db  54h ; T
.rdata:0000000180014984                 db  24h ; $
.rdata:0000000180014985                 db  58h ; X
.rdata:0000000180014986                 db  49h ; I
.rdata:0000000180014987                 db  5Ah ; Z
.rdata:0000000180014988                 db    0
.rdata:0000000180014989                 db    0
.rdata:000000018001498A                 db    0
.rdata:000000018001498B                 db    0
.rdata:000000018001498C                 db    8
.rdata:000000018001498D                 db  26h ; &
.rdata:000000018001498E                 db    1
.rdata:000000018001498F                 db    0
.rdata:0000000180014990                 db    8
.rdata:0000000180014991                 db    0
.rdata:0000000180014992                 db    0
.rdata:0000000180014993                 db    0
.rdata:0000000180014994                 db  2Eh ; .
.rdata:0000000180014995                 db  43h ; C
.rdata:0000000180014996                 db  52h ; R
.rdata:0000000180014997                 db  54h ; T
.rdata:0000000180014998                 db  24h ; $
.rdata:0000000180014999                 db  58h ; X
.rdata:000000018001499A                 db  50h ; P
.rdata:000000018001499B                 db  41h ; A
.rdata:000000018001499C                 db    0
.rdata:000000018001499D                 db    0
.rdata:000000018001499E                 db    0
.rdata:000000018001499F                 db    0
.rdata:00000001800149A0                 db  10h
.rdata:00000001800149A1                 db  26h ; &
.rdata:00000001800149A2                 db    1
.rdata:00000001800149A3                 db    0
.rdata:00000001800149A4                 db    8
.rdata:00000001800149A5                 db    0
.rdata:00000001800149A6                 db    0
.rdata:00000001800149A7                 db    0
.rdata:00000001800149A8                 db  2Eh ; .
.rdata:00000001800149A9                 db  43h ; C
.rdata:00000001800149AA                 db  52h ; R
.rdata:00000001800149AB                 db  54h ; T
.rdata:00000001800149AC                 db  24h ; $
.rdata:00000001800149AD                 db  58h ; X
.rdata:00000001800149AE                 db  50h ; P
.rdata:00000001800149AF                 db  5Ah ; Z
.rdata:00000001800149B0                 db    0
.rdata:00000001800149B1                 db    0
.rdata:00000001800149B2                 db    0
.rdata:00000001800149B3                 db    0
.rdata:00000001800149B4                 db  18h
.rdata:00000001800149B5                 db  26h ; &
.rdata:00000001800149B6                 db    1
.rdata:00000001800149B7                 db    0
.rdata:00000001800149B8                 db    8
.rdata:00000001800149B9                 db    0
.rdata:00000001800149BA                 db    0
.rdata:00000001800149BB                 db    0
.rdata:00000001800149BC                 db  2Eh ; .
.rdata:00000001800149BD                 db  43h ; C
.rdata:00000001800149BE                 db  52h ; R
.rdata:00000001800149BF                 db  54h ; T
.rdata:00000001800149C0                 db  24h ; $
.rdata:00000001800149C1                 db  58h ; X
.rdata:00000001800149C2                 db  54h ; T
.rdata:00000001800149C3                 db  41h ; A
.rdata:00000001800149C4                 db    0
.rdata:00000001800149C5                 db    0
.rdata:00000001800149C6                 db    0
.rdata:00000001800149C7                 db    0
.rdata:00000001800149C8                 db  20h
.rdata:00000001800149C9                 db  26h ; &
.rdata:00000001800149CA                 db    1
.rdata:00000001800149CB                 db    0
.rdata:00000001800149CC                 db  10h
.rdata:00000001800149CD                 db    0
.rdata:00000001800149CE                 db    0
.rdata:00000001800149CF                 db    0
.rdata:00000001800149D0                 db  2Eh ; .
.rdata:00000001800149D1                 db  43h ; C
.rdata:00000001800149D2                 db  52h ; R
.rdata:00000001800149D3                 db  54h ; T
.rdata:00000001800149D4                 db  24h ; $
.rdata:00000001800149D5                 db  58h ; X
.rdata:00000001800149D6                 db  54h ; T
.rdata:00000001800149D7                 db  5Ah ; Z
.rdata:00000001800149D8                 db    0
.rdata:00000001800149D9                 db    0
.rdata:00000001800149DA                 db    0
.rdata:00000001800149DB                 db    0
.rdata:00000001800149DC                 db  30h ; 0
.rdata:00000001800149DD                 db  26h ; &
.rdata:00000001800149DE                 db    1
.rdata:00000001800149DF                 db    0
.rdata:00000001800149E0                 db  50h ; P
.rdata:00000001800149E1                 db  18h
.rdata:00000001800149E2                 db    0
.rdata:00000001800149E3                 db    0
.rdata:00000001800149E4                 db  2Eh ; .
.rdata:00000001800149E5                 db  72h ; r
.rdata:00000001800149E6                 db  64h ; d
.rdata:00000001800149E7                 db  61h ; a
.rdata:00000001800149E8                 db  74h ; t
.rdata:00000001800149E9                 db  61h ; a
.rdata:00000001800149EA                 db    0
.rdata:00000001800149EB                 db    0
.rdata:00000001800149EC                 db  80h
.rdata:00000001800149ED                 db  3Eh ; >
.rdata:00000001800149EE                 db    1
.rdata:00000001800149EF                 db    0
.rdata:00000001800149F0                 db  54h ; T
.rdata:00000001800149F1                 db    9
.rdata:00000001800149F2                 db    0
.rdata:00000001800149F3                 db    0
.rdata:00000001800149F4                 db  2Eh ; .
.rdata:00000001800149F5                 db  72h ; r
.rdata:00000001800149F6                 db  64h ; d
.rdata:00000001800149F7                 db  61h ; a
.rdata:00000001800149F8                 db  74h ; t
.rdata:00000001800149F9                 db  61h ; a
.rdata:00000001800149FA                 db  24h ; $
.rdata:00000001800149FB                 db  72h ; r
.rdata:00000001800149FC                 db    0
.rdata:00000001800149FD                 db    0
.rdata:00000001800149FE                 db    0
.rdata:00000001800149FF                 db    0
.rdata:0000000180014A00                 db 0D4h
.rdata:0000000180014A01                 db  47h ; G
.rdata:0000000180014A02                 db    1
.rdata:0000000180014A03                 db    0
.rdata:0000000180014A04                 db  6Ch ; l
.rdata:0000000180014A05                 db    0
.rdata:0000000180014A06                 db    0
.rdata:0000000180014A07                 db    0
.rdata:0000000180014A08                 db  2Eh ; .
.rdata:0000000180014A09                 db  72h ; r
.rdata:0000000180014A0A                 db  64h ; d
.rdata:0000000180014A0B                 db  61h ; a
.rdata:0000000180014A0C                 db  74h ; t
.rdata:0000000180014A0D                 db  61h ; a
.rdata:0000000180014A0E                 db  24h ; $
.rdata:0000000180014A0F                 db  76h ; v
.rdata:0000000180014A10                 db  6Fh ; o
.rdata:0000000180014A11                 db  6Ch ; l
.rdata:0000000180014A12                 db  74h ; t
.rdata:0000000180014A13                 db  6Dh ; m
.rdata:0000000180014A14                 db  64h ; d
.rdata:0000000180014A15                 db    0
.rdata:0000000180014A16                 db    0
.rdata:0000000180014A17                 db    0
.rdata:0000000180014A18                 db  40h ; @
.rdata:0000000180014A19                 db  48h ; H
.rdata:0000000180014A1A                 db    1
.rdata:0000000180014A1B                 db    0
.rdata:0000000180014A1C                 db  40h ; @
.rdata:0000000180014A1D                 db    3
.rdata:0000000180014A1E                 db    0
.rdata:0000000180014A1F                 db    0
.rdata:0000000180014A20                 db  2Eh ; .
.rdata:0000000180014A21                 db  72h ; r
.rdata:0000000180014A22                 db  64h ; d
.rdata:0000000180014A23                 db  61h ; a
.rdata:0000000180014A24                 db  74h ; t
.rdata:0000000180014A25                 db  61h ; a
.rdata:0000000180014A26                 db  24h ; $
.rdata:0000000180014A27                 db  7Ah ; z
.rdata:0000000180014A28                 db  7Ah ; z
.rdata:0000000180014A29                 db  7Ah ; z
.rdata:0000000180014A2A                 db  64h ; d
.rdata:0000000180014A2B                 db  62h ; b
.rdata:0000000180014A2C                 db  67h ; g
.rdata:0000000180014A2D                 db    0
.rdata:0000000180014A2E                 db    0
.rdata:0000000180014A2F                 db    0
.rdata:0000000180014A30                 db  80h
.rdata:0000000180014A31                 db  4Bh ; K
.rdata:0000000180014A32                 db    1
.rdata:0000000180014A33                 db    0
.rdata:0000000180014A34                 db    8
.rdata:0000000180014A35                 db    0
.rdata:0000000180014A36                 db    0
.rdata:0000000180014A37                 db    0
.rdata:0000000180014A38                 db  2Eh ; .
.rdata:0000000180014A39                 db  72h ; r
.rdata:0000000180014A3A                 db  74h ; t
.rdata:0000000180014A3B                 db  63h ; c
.rdata:0000000180014A3C                 db  24h ; $
.rdata:0000000180014A3D                 db  49h ; I
.rdata:0000000180014A3E                 db  41h ; A
.rdata:0000000180014A3F                 db  41h ; A
.rdata:0000000180014A40                 db    0
.rdata:0000000180014A41                 db    0
.rdata:0000000180014A42                 db    0
.rdata:0000000180014A43                 db    0
.rdata:0000000180014A44                 db  88h
.rdata:0000000180014A45                 db  4Bh ; K
.rdata:0000000180014A46                 db    1
.rdata:0000000180014A47                 db    0
.rdata:0000000180014A48                 db    8
.rdata:0000000180014A49                 db    0
.rdata:0000000180014A4A                 db    0
.rdata:0000000180014A4B                 db    0
.rdata:0000000180014A4C                 db  2Eh ; .
.rdata:0000000180014A4D                 db  72h ; r
.rdata:0000000180014A4E                 db  74h ; t
.rdata:0000000180014A4F                 db  63h ; c
.rdata:0000000180014A50                 db  24h ; $
.rdata:0000000180014A51                 db  49h ; I
.rdata:0000000180014A52                 db  5Ah ; Z
.rdata:0000000180014A53                 db  5Ah ; Z
.rdata:0000000180014A54                 db    0
.rdata:0000000180014A55                 db    0
.rdata:0000000180014A56                 db    0
.rdata:0000000180014A57                 db    0
.rdata:0000000180014A58                 db  90h
.rdata:0000000180014A59                 db  4Bh ; K
.rdata:0000000180014A5A                 db    1
.rdata:0000000180014A5B                 db    0
.rdata:0000000180014A5C                 db    8
.rdata:0000000180014A5D                 db    0
.rdata:0000000180014A5E                 db    0
.rdata:0000000180014A5F                 db    0
.rdata:0000000180014A60                 db  2Eh ; .
.rdata:0000000180014A61                 db  72h ; r
.rdata:0000000180014A62                 db  74h ; t
.rdata:0000000180014A63                 db  63h ; c
.rdata:0000000180014A64                 db  24h ; $
.rdata:0000000180014A65                 db  54h ; T
.rdata:0000000180014A66                 db  41h ; A
.rdata:0000000180014A67                 db  41h ; A
.rdata:0000000180014A68                 db    0
.rdata:0000000180014A69                 db    0
.rdata:0000000180014A6A                 db    0
.rdata:0000000180014A6B                 db    0
.rdata:0000000180014A6C                 db  98h
.rdata:0000000180014A6D                 db  4Bh ; K
.rdata:0000000180014A6E                 db    1
.rdata:0000000180014A6F                 db    0
.rdata:0000000180014A70                 db    8
.rdata:0000000180014A71                 db    0
.rdata:0000000180014A72                 db    0
.rdata:0000000180014A73                 db    0
.rdata:0000000180014A74                 db  2Eh ; .
.rdata:0000000180014A75                 db  72h ; r
.rdata:0000000180014A76                 db  74h ; t
.rdata:0000000180014A77                 db  63h ; c
.rdata:0000000180014A78                 db  24h ; $
.rdata:0000000180014A79                 db  54h ; T
.rdata:0000000180014A7A                 db  5Ah ; Z
.rdata:0000000180014A7B                 db  5Ah ; Z
.rdata:0000000180014A7C                 db    0
.rdata:0000000180014A7D                 db    0
.rdata:0000000180014A7E                 db    0
.rdata:0000000180014A7F                 db    0
.rdata:0000000180014A80                 db 0A0h
.rdata:0000000180014A81                 db  4Bh ; K
.rdata:0000000180014A82                 db    1
.rdata:0000000180014A83                 db    0
.rdata:0000000180014A84                 db 0D0h
.rdata:0000000180014A85                 db  19h
.rdata:0000000180014A86                 db    0
.rdata:0000000180014A87                 db    0
.rdata:0000000180014A88                 db  2Eh ; .
.rdata:0000000180014A89                 db  78h ; x
.rdata:0000000180014A8A                 db  64h ; d
.rdata:0000000180014A8B                 db  61h ; a
.rdata:0000000180014A8C                 db  74h ; t
.rdata:0000000180014A8D                 db  61h ; a
.rdata:0000000180014A8E                 db    0
.rdata:0000000180014A8F                 db    0
.rdata:0000000180014A90                 db  70h ; p
.rdata:0000000180014A91                 db  65h ; e
.rdata:0000000180014A92                 db    1
.rdata:0000000180014A93                 db    0
.rdata:0000000180014A94                 db  50h ; P
.rdata:0000000180014A95                 db    1
.rdata:0000000180014A96                 db    0
.rdata:0000000180014A97                 db    0
.rdata:0000000180014A98                 db  2Eh ; .
.rdata:0000000180014A99                 db  78h ; x
.rdata:0000000180014A9A                 db  64h ; d
.rdata:0000000180014A9B                 db  61h ; a
.rdata:0000000180014A9C                 db  74h ; t
.rdata:0000000180014A9D                 db  61h ; a
.rdata:0000000180014A9E                 db  24h ; $
.rdata:0000000180014A9F                 db  78h ; x
.rdata:0000000180014AA0                 db    0
.rdata:0000000180014AA1                 db    0
.rdata:0000000180014AA2                 db    0
.rdata:0000000180014AA3                 db    0
.rdata:0000000180014AA4                 db 0C0h
.rdata:0000000180014AA5                 db  66h ; f
.rdata:0000000180014AA6                 db    1
.rdata:0000000180014AA7                 db    0
.rdata:0000000180014AA8                 db  88h
.rdata:0000000180014AA9                 db    4
.rdata:0000000180014AAA                 db    0
.rdata:0000000180014AAB                 db    0
.rdata:0000000180014AAC                 db  2Eh ; .
.rdata:0000000180014AAD                 db  65h ; e
.rdata:0000000180014AAE                 db  64h ; d
.rdata:0000000180014AAF                 db  61h ; a
.rdata:0000000180014AB0                 db  74h ; t
.rdata:0000000180014AB1                 db  61h ; a
.rdata:0000000180014AB2                 db    0
.rdata:0000000180014AB3                 db    0
.rdata:0000000180014AB4                 db  48h ; H
.rdata:0000000180014AB5                 db  6Bh ; k
.rdata:0000000180014AB6                 db    1
.rdata:0000000180014AB7                 db    0
.rdata:0000000180014AB8                 db  54h ; T
.rdata:0000000180014AB9                 db    1
.rdata:0000000180014ABA                 db    0
.rdata:0000000180014ABB                 db    0
.rdata:0000000180014ABC                 db  2Eh ; .
.rdata:0000000180014ABD                 db  69h ; i
.rdata:0000000180014ABE                 db  64h ; d
.rdata:0000000180014ABF                 db  61h ; a
.rdata:0000000180014AC0                 db  74h ; t
.rdata:0000000180014AC1                 db  61h ; a
.rdata:0000000180014AC2                 db  24h ; $
.rdata:0000000180014AC3                 db  32h ; 2
.rdata:0000000180014AC4                 db    0
.rdata:0000000180014AC5                 db    0
.rdata:0000000180014AC6                 db    0
.rdata:0000000180014AC7                 db    0
.rdata:0000000180014AC8                 db  9Ch
.rdata:0000000180014AC9                 db  6Ch ; l
.rdata:0000000180014ACA                 db    1
.rdata:0000000180014ACB                 db    0
.rdata:0000000180014ACC                 db  14h
.rdata:0000000180014ACD                 db    0
.rdata:0000000180014ACE                 db    0
.rdata:0000000180014ACF                 db    0
.rdata:0000000180014AD0                 db  2Eh ; .
.rdata:0000000180014AD1                 db  69h ; i
.rdata:0000000180014AD2                 db  64h ; d
.rdata:0000000180014AD3                 db  61h ; a
.rdata:0000000180014AD4                 db  74h ; t
.rdata:0000000180014AD5                 db  61h ; a
.rdata:0000000180014AD6                 db  24h ; $
.rdata:0000000180014AD7                 db  33h ; 3
.rdata:0000000180014AD8                 db    0
.rdata:0000000180014AD9                 db    0
.rdata:0000000180014ADA                 db    0
.rdata:0000000180014ADB                 db    0
.rdata:0000000180014ADC                 db 0B0h
.rdata:0000000180014ADD                 db  6Ch ; l
.rdata:0000000180014ADE                 db    1
.rdata:0000000180014ADF                 db    0
.rdata:0000000180014AE0                 db 0A8h
.rdata:0000000180014AE1                 db    5
.rdata:0000000180014AE2                 db    0
.rdata:0000000180014AE3                 db    0
.rdata:0000000180014AE4                 db  2Eh ; .
.rdata:0000000180014AE5                 db  69h ; i
.rdata:0000000180014AE6                 db  64h ; d
.rdata:0000000180014AE7                 db  61h ; a
.rdata:0000000180014AE8                 db  74h ; t
.rdata:0000000180014AE9                 db  61h ; a
.rdata:0000000180014AEA                 db  24h ; $
.rdata:0000000180014AEB                 db  34h ; 4
.rdata:0000000180014AEC                 db    0
.rdata:0000000180014AED                 db    0
.rdata:0000000180014AEE                 db    0
.rdata:0000000180014AEF                 db    0
.rdata:0000000180014AF0                 db  58h ; X
.rdata:0000000180014AF1                 db  72h ; r
.rdata:0000000180014AF2                 db    1
.rdata:0000000180014AF3                 db    0
.rdata:0000000180014AF4                 db 0C8h
.rdata:0000000180014AF5                 db  15h
.rdata:0000000180014AF6                 db    0
.rdata:0000000180014AF7                 db    0
.rdata:0000000180014AF8                 db  2Eh ; .
.rdata:0000000180014AF9                 db  69h ; i
.rdata:0000000180014AFA                 db  64h ; d
.rdata:0000000180014AFB                 db  61h ; a
.rdata:0000000180014AFC                 db  74h ; t
.rdata:0000000180014AFD                 db  61h ; a
.rdata:0000000180014AFE                 db  24h ; $
.rdata:0000000180014AFF                 db  36h ; 6
.rdata:0000000180014B00                 db    0
.rdata:0000000180014B01                 db    0
.rdata:0000000180014B02                 db    0
.rdata:0000000180014B03                 db    0
.rdata:0000000180014B04                 db    0
.rdata:0000000180014B05                 db  90h
.rdata:0000000180014B06                 db    1
.rdata:0000000180014B07                 db    0
.rdata:0000000180014B08                 db  50h ; P
.rdata:0000000180014B09                 db    0
.rdata:0000000180014B0A                 db    0
.rdata:0000000180014B0B                 db    0
.rdata:0000000180014B0C                 db  2Eh ; .
.rdata:0000000180014B0D                 db  64h ; d
.rdata:0000000180014B0E                 db  61h ; a
.rdata:0000000180014B0F                 db  74h ; t
.rdata:0000000180014B10                 db  61h ; a
.rdata:0000000180014B11                 db    0
.rdata:0000000180014B12                 db    0
.rdata:0000000180014B13                 db    0
.rdata:0000000180014B14                 db  50h ; P
.rdata:0000000180014B15                 db  90h
.rdata:0000000180014B16                 db    1
.rdata:0000000180014B17                 db    0
.rdata:0000000180014B18                 db 0B0h
.rdata:0000000180014B19                 db    0
.rdata:0000000180014B1A                 db    0
.rdata:0000000180014B1B                 db    0
.rdata:0000000180014B1C                 db  2Eh ; .
.rdata:0000000180014B1D                 db  64h ; d
.rdata:0000000180014B1E                 db  61h ; a
.rdata:0000000180014B1F                 db  74h ; t
.rdata:0000000180014B20                 db  61h ; a
.rdata:0000000180014B21                 db  24h ; $
.rdata:0000000180014B22                 db  72h ; r
.rdata:0000000180014B23                 db    0
.rdata:0000000180014B24                 db    0
.rdata:0000000180014B25                 db  91h
.rdata:0000000180014B26                 db    1
.rdata:0000000180014B27                 db    0
.rdata:0000000180014B28                 db  90h
.rdata:0000000180014B29                 db    3
.rdata:0000000180014B2A                 db    0
.rdata:0000000180014B2B                 db    0
.rdata:0000000180014B2C                 db  2Eh ; .
.rdata:0000000180014B2D                 db  64h ; d
.rdata:0000000180014B2E                 db  61h ; a
.rdata:0000000180014B2F                 db  74h ; t
.rdata:0000000180014B30                 db  61h ; a
.rdata:0000000180014B31                 db  24h ; $
.rdata:0000000180014B32                 db  72h ; r
.rdata:0000000180014B33                 db  73h ; s
.rdata:0000000180014B34                 db    0
.rdata:0000000180014B35                 db    0
.rdata:0000000180014B36                 db    0
.rdata:0000000180014B37                 db    0
.rdata:0000000180014B38                 db  90h
.rdata:0000000180014B39                 db  94h
.rdata:0000000180014B3A                 db    1
.rdata:0000000180014B3B                 db    0
.rdata:0000000180014B3C                 db  40h ; @
.rdata:0000000180014B3D                 db  1Eh
.rdata:0000000180014B3E                 db    0
.rdata:0000000180014B3F                 db    0
.rdata:0000000180014B40                 db  2Eh ; .
.rdata:0000000180014B41                 db  62h ; b
.rdata:0000000180014B42                 db  73h ; s
.rdata:0000000180014B43                 db  73h ; s
.rdata:0000000180014B44                 db    0
.rdata:0000000180014B45                 db    0
.rdata:0000000180014B46                 db    0
.rdata:0000000180014B47                 db    0
.rdata:0000000180014B48                 db    0
.rdata:0000000180014B49                 db 0C0h
.rdata:0000000180014B4A                 db    1
.rdata:0000000180014B4B                 db    0
.rdata:0000000180014B4C                 db  88h
.rdata:0000000180014B4D                 db  11h
.rdata:0000000180014B4E                 db    0
.rdata:0000000180014B4F                 db    0
.rdata:0000000180014B50                 db  2Eh ; .
.rdata:0000000180014B51                 db  70h ; p
.rdata:0000000180014B52                 db  64h ; d
.rdata:0000000180014B53                 db  61h ; a
.rdata:0000000180014B54                 db  74h ; t
.rdata:0000000180014B55                 db  61h ; a
.rdata:0000000180014B56                 db    0
.rdata:0000000180014B57                 db    0
.rdata:0000000180014B58                 db    0
.rdata:0000000180014B59                 db 0E0h
.rdata:0000000180014B5A                 db    1
.rdata:0000000180014B5B                 db    0
.rdata:0000000180014B5C                 db  60h ; `
.rdata:0000000180014B5D                 db    0
.rdata:0000000180014B5E                 db    0
.rdata:0000000180014B5F                 db    0
.rdata:0000000180014B60                 db  2Eh ; .
.rdata:0000000180014B61                 db  72h ; r
.rdata:0000000180014B62                 db  73h ; s
.rdata:0000000180014B63                 db  72h ; r
.rdata:0000000180014B64                 db  63h ; c
.rdata:0000000180014B65                 db  24h ; $
.rdata:0000000180014B66                 db  30h ; 0
.rdata:0000000180014B67                 db  31h ; 1
.rdata:0000000180014B68                 db    0
.rdata:0000000180014B69                 db    0
.rdata:0000000180014B6A                 db    0
.rdata:0000000180014B6B                 db    0
.rdata:0000000180014B6C                 db  60h ; `
.rdata:0000000180014B6D                 db 0E0h
.rdata:0000000180014B6E                 db    1
.rdata:0000000180014B6F                 db    0
.rdata:0000000180014B70                 db  98h
.rdata:0000000180014B71                 db    0
.rdata:0000000180014B72                 db    0
.rdata:0000000180014B73                 db    0
.rdata:0000000180014B74                 db  2Eh ; .
.rdata:0000000180014B75                 db  72h ; r
.rdata:0000000180014B76                 db  73h ; s
.rdata:0000000180014B77                 db  72h ; r
.rdata:0000000180014B78                 db  63h ; c
.rdata:0000000180014B79                 db  24h ; $
.rdata:0000000180014B7A                 db  30h ; 0
.rdata:0000000180014B7B                 db  32h ; 2
.rdata:0000000180014B7C                 db    0
.rdata:0000000180014B7D                 db    0
.rdata:0000000180014B7E                 db    0
.rdata:0000000180014B7F                 db    0
.rdata:0000000180014B80                 db    0
.rdata:0000000180014B81                 db    0
.rdata:0000000180014B82                 db    0
.rdata:0000000180014B83                 db    0
.rdata:0000000180014B84                 db    0
.rdata:0000000180014B85                 db    0
.rdata:0000000180014B86                 db    0
.rdata:0000000180014B87                 db    0
.rdata:0000000180014B88 unk_180014B88   db    0                 ; DATA XREF: sub_180010F9C+A↑o
.rdata:0000000180014B88                                         ; sub_180010F9C+11↑o
.rdata:0000000180014B89                 db    0
.rdata:0000000180014B8A                 db    0
.rdata:0000000180014B8B                 db    0
.rdata:0000000180014B8C                 db    0
.rdata:0000000180014B8D                 db    0
.rdata:0000000180014B8E                 db    0
.rdata:0000000180014B8F                 db    0
.rdata:0000000180014B90                 db    0
.rdata:0000000180014B91                 db    0
.rdata:0000000180014B92                 db    0
.rdata:0000000180014B93                 db    0
.rdata:0000000180014B94                 db    0
.rdata:0000000180014B95                 db    0
.rdata:0000000180014B96                 db    0
.rdata:0000000180014B97                 db    0
.rdata:0000000180014B98 unk_180014B98   db    0                 ; DATA XREF: sub_180010FD8+A↑o
.rdata:0000000180014B98                                         ; sub_180010FD8+11↑o
.rdata:0000000180014B99                 db    0
.rdata:0000000180014B9A                 db    0
.rdata:0000000180014B9B                 db    0
.rdata:0000000180014B9C                 db    0
.rdata:0000000180014B9D                 db    0
.rdata:0000000180014B9E                 db    0
.rdata:0000000180014B9F                 db    0
.rdata:0000000180014BA0 stru_180014BA0  UNWIND_INFO_HDR <1, 6, 2, 0>
.rdata:0000000180014BA0                                         ; DATA XREF: .rdata:0000000180015888↓o
.rdata:0000000180014BA0                                         ; .rdata:000000018001589C↓o ...
.rdata:0000000180014BA4                 UNWIND_CODE <6, 32h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180014BA6                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014BA8 stru_180014BA8  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
.rdata:0000000180014BA8                                         ; DATA XREF: .pdata:000000018001C00C↓o
.rdata:0000000180014BA8                                         ; .pdata:000000018001C330↓o ...
.rdata:0000000180014BAC                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014BAE                 dw 6
.rdata:0000000180014BB0                 UNWIND_CODE <0Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180014BB2                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014BB4 stru_180014BB4  UNWIND_INFO_HDR <1, 4, 1, 0>
.rdata:0000000180014BB4                                         ; DATA XREF: .pdata:000000018001C018↓o
.rdata:0000000180014BB4                                         ; .pdata:000000018001C5E8↓o ...
.rdata:0000000180014BB8                 UNWIND_CODE <4, 82h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180014BBA                 align 4
.rdata:0000000180014BBC stru_180014BBC  UNWIND_INFO_HDR <1, 6, 2, 0>
.rdata:0000000180014BBC                                         ; DATA XREF: .rdata:0000000180014BCC↓o
.rdata:0000000180014BBC                                         ; .rdata:0000000180014BDC↓o ...
.rdata:0000000180014BC0                 UNWIND_CODE <6, 32h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180014BC2                 UNWIND_CODE <2, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014BC4 stru_180014BC4  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180014BC4                                         ; DATA XREF: .pdata:000000018001C048↓o
.rdata:0000000180014BC8                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014BCA                 dw 6
.rdata:0000000180014BCC                 RUNTIME_FUNCTION <rva fsuipcw_init, rva loc_1800011DA, \
.rdata:0000000180014BCC                                   rva stru_180014BBC>
.rdata:0000000180014BD8 stru_180014BD8  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014BD8                                         ; DATA XREF: .pdata:000000018001C054↓o
.rdata:0000000180014BDC                 RUNTIME_FUNCTION <rva fsuipcw_init, rva loc_1800011DA, \
.rdata:0000000180014BDC                                   rva stru_180014BBC>
.rdata:0000000180014BE8 stru_180014BE8  UNWIND_INFO_HDR <19h, 1Bh, 3, 0>
.rdata:0000000180014BE8                                         ; DATA XREF: .rdata:0000000180014C04↓o
.rdata:0000000180014BE8                                         ; .rdata:0000000180014C14↓o ...
.rdata:0000000180014BEC                 UNWIND_CODE <9, 1>      ; UWOP_ALLOC_LARGE
.rdata:0000000180014BEE                 dw 2Ah
.rdata:0000000180014BF0                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014BF2                 align 4
.rdata:0000000180014BF4                 dd rva __GSHandlerCheck
.rdata:0000000180014BF8                 dd 140h
.rdata:0000000180014BFC stru_180014BFC  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:0000000180014BFC                                         ; DATA XREF: .pdata:000000018001C06C↓o
.rdata:0000000180014C00                 UNWIND_CODE <8, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014C02                 dw 2Ch
.rdata:0000000180014C04                 RUNTIME_FUNCTION <rva fsuipcw_start, rva loc_18000132B, \
.rdata:0000000180014C04                                   rva stru_180014BE8>
.rdata:0000000180014C10 stru_180014C10  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014C10                                         ; DATA XREF: .pdata:000000018001C078↓o
.rdata:0000000180014C14                 RUNTIME_FUNCTION <rva fsuipcw_start, rva loc_18000132B, \
.rdata:0000000180014C14                                   rva stru_180014BE8>
.rdata:0000000180014C20 stru_180014C20  UNWIND_INFO_HDR <1, 4, 1, 0>
.rdata:0000000180014C20                                         ; DATA XREF: .pdata:000000018001C084↓o
.rdata:0000000180014C20                                         ; .pdata:000000018001C090↓o ...
.rdata:0000000180014C24                 UNWIND_CODE <4, 62h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180014C26                 align 4
.rdata:0000000180014C28 stru_180014C28  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
.rdata:0000000180014C28                                         ; DATA XREF: .rdata:0000000180014C40↓o
.rdata:0000000180014C28                                         ; .rdata:0000000180014C58↓o ...
.rdata:0000000180014C2C                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014C2E                 dw 9
.rdata:0000000180014C30                 UNWIND_CODE <0Ah, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180014C32                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014C34 stru_180014C34  UNWIND_INFO_HDR <21h, 11h, 4, 0>
.rdata:0000000180014C34                                         ; DATA XREF: .pdata:000000018001C0A8↓o
.rdata:0000000180014C38                 UNWIND_CODE <11h, 68h>  ; UWOP_SAVE_XMM128
.rdata:0000000180014C3A                 dw 2
.rdata:0000000180014C3C                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014C3E                 dw 8
.rdata:0000000180014C40                 RUNTIME_FUNCTION <rva fsuipcw_getLvarFromId, rva loc_18000163D, \
.rdata:0000000180014C40                                   rva stru_180014C28>
.rdata:0000000180014C4C stru_180014C4C  UNWIND_INFO_HDR <21h, 0, 4, 0>
.rdata:0000000180014C4C                                         ; DATA XREF: .pdata:000000018001C0B4↓o
.rdata:0000000180014C50                 UNWIND_CODE <0, 68h>    ; UWOP_SAVE_XMM128
.rdata:0000000180014C52                 dw 2
.rdata:0000000180014C54                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014C56                 dw 8
.rdata:0000000180014C58                 RUNTIME_FUNCTION <rva fsuipcw_getLvarFromId, rva loc_18000163D, \
.rdata:0000000180014C58                                   rva stru_180014C28>
.rdata:0000000180014C64 stru_180014C64  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014C64                                         ; DATA XREF: .pdata:000000018001C0C0↓o
.rdata:0000000180014C68                 RUNTIME_FUNCTION <rva fsuipcw_getLvarFromId, rva loc_18000163D, \
.rdata:0000000180014C68                                   rva stru_180014C28>
.rdata:0000000180014C74 stru_180014C74  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
.rdata:0000000180014C74                                         ; DATA XREF: .rdata:0000000180014C94↓o
.rdata:0000000180014C74                                         ; .rdata:0000000180014CA4↓o ...
.rdata:0000000180014C78                 UNWIND_CODE <0Ah, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014C7A                 dw 0Bh
.rdata:0000000180014C7C                 UNWIND_CODE <0Ah, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180014C7E                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014C80 stru_180014C80  UNWIND_INFO_HDR <21h, 0ABh, 8, 0>
.rdata:0000000180014C80                                         ; DATA XREF: .pdata:000000018001C0D8↓o
.rdata:0000000180014C84                 UNWIND_CODE <0ABh, 68h> ; UWOP_SAVE_XMM128
.rdata:0000000180014C86                 dw 2
.rdata:0000000180014C88                 UNWIND_CODE <16h, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180014C8A                 dw 0Ah
.rdata:0000000180014C8C                 UNWIND_CODE <11h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014C8E                 dw 9
.rdata:0000000180014C90                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014C92                 dw 8
.rdata:0000000180014C94                 RUNTIME_FUNCTION <rva fsuipcw_getLvarFromName, rva loc_1800016FD, \
.rdata:0000000180014C94                                   rva stru_180014C74>
.rdata:0000000180014CA0 stru_180014CA0  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014CA0                                         ; DATA XREF: .pdata:000000018001C0E4↓o
.rdata:0000000180014CA4                 RUNTIME_FUNCTION <rva fsuipcw_getLvarFromName, rva loc_1800016FD, \
.rdata:0000000180014CA4                                   rva stru_180014C74>
.rdata:0000000180014CB0 stru_180014CB0  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:0000000180014CB0                                         ; DATA XREF: .pdata:000000018001C0F0↓o
.rdata:0000000180014CB4                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180014CB6                 dw 0Ah
.rdata:0000000180014CB8                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014CBA                 dw 9
.rdata:0000000180014CBC                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014CBE                 dw 8
.rdata:0000000180014CC0                 RUNTIME_FUNCTION <rva fsuipcw_getLvarFromName, rva loc_1800016FD, \
.rdata:0000000180014CC0                                   rva stru_180014C74>
.rdata:0000000180014CCC stru_180014CCC  UNWIND_INFO_HDR <19h, 1Bh, 3, 0>
.rdata:0000000180014CCC                                         ; DATA XREF: .pdata:000000018001C0FC↓o
.rdata:0000000180014CD0                 UNWIND_CODE <9, 1>      ; UWOP_ALLOC_LARGE
.rdata:0000000180014CD2                 dw 28h
.rdata:0000000180014CD4                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014CD6                 align 4
.rdata:0000000180014CD8                 dd rva __GSHandlerCheck
.rdata:0000000180014CDC                 dd 130h
.rdata:0000000180014CE0 stru_180014CE0  UNWIND_INFO_HDR <19h, 1Dh, 3, 0>
.rdata:0000000180014CE0                                         ; DATA XREF: .rdata:0000000180014D0C↓o
.rdata:0000000180014CE0                                         ; .rdata:0000000180014D1C↓o ...
.rdata:0000000180014CE4                 UNWIND_CODE <0Bh, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180014CE6                 dw 2Ah
.rdata:0000000180014CE8                 UNWIND_CODE <4, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014CEA                 align 4
.rdata:0000000180014CEC                 dd rva __GSHandlerCheck
.rdata:0000000180014CF0                 dd 130h
.rdata:0000000180014CF4 stru_180014CF4  UNWIND_INFO_HDR <21h, 1Bh, 0Ah, 0>
.rdata:0000000180014CF4                                         ; DATA XREF: .pdata:000000018001C114↓o
.rdata:0000000180014CF8                 UNWIND_CODE <1Bh, 0F4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180014CFA                 dw 28h
.rdata:0000000180014CFC                 UNWIND_CODE <17h, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180014CFE                 dw 29h
.rdata:0000000180014D00                 UNWIND_CODE <13h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014D02                 dw 2Eh
.rdata:0000000180014D04                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014D06                 dw 2Dh
.rdata:0000000180014D08                 UNWIND_CODE <4, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014D0A                 dw 2Ch
.rdata:0000000180014D0C                 RUNTIME_FUNCTION <rva fsuipcw_logLvars, rva loc_18000196D, \
.rdata:0000000180014D0C                                   rva stru_180014CE0>
.rdata:0000000180014D18 stru_180014D18  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014D18                                         ; DATA XREF: .pdata:000000018001C120↓o
.rdata:0000000180014D1C                 RUNTIME_FUNCTION <rva fsuipcw_logLvars, rva loc_18000196D, \
.rdata:0000000180014D1C                                   rva stru_180014CE0>
.rdata:0000000180014D28 stru_180014D28  UNWIND_INFO_HDR <21h, 0, 0Ah, 0>
.rdata:0000000180014D28                                         ; DATA XREF: .pdata:000000018001C12C↓o
.rdata:0000000180014D2C                 UNWIND_CODE <0, 0F4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180014D2E                 dw 28h
.rdata:0000000180014D30                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180014D32                 dw 29h
.rdata:0000000180014D34                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014D36                 dw 2Eh
.rdata:0000000180014D38                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014D3A                 dw 2Dh
.rdata:0000000180014D3C                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014D3E                 dw 2Ch
.rdata:0000000180014D40                 RUNTIME_FUNCTION <rva fsuipcw_logLvars, rva loc_18000196D, \
.rdata:0000000180014D40                                   rva stru_180014CE0>
.rdata:0000000180014D4C stru_180014D4C  UNWIND_INFO_HDR <19h, 1Dh, 3, 0>
.rdata:0000000180014D4C                                         ; DATA XREF: .rdata:0000000180014D74↓o
.rdata:0000000180014D4C                                         ; .rdata:0000000180014D84↓o ...
.rdata:0000000180014D50                 UNWIND_CODE <0Bh, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180014D52                 dw 28h
.rdata:0000000180014D54                 UNWIND_CODE <4, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014D56                 align 4
.rdata:0000000180014D58                 dd rva __GSHandlerCheck
.rdata:0000000180014D5C                 dd 130h
.rdata:0000000180014D60 stru_180014D60  UNWIND_INFO_HDR <21h, 17h, 8, 0>
.rdata:0000000180014D60                                         ; DATA XREF: .pdata:000000018001C144↓o
.rdata:0000000180014D64                 UNWIND_CODE <17h, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180014D66                 dw 2Dh
.rdata:0000000180014D68                 UNWIND_CODE <13h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014D6A                 dw 2Ch
.rdata:0000000180014D6C                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014D6E                 dw 2Bh
.rdata:0000000180014D70                 UNWIND_CODE <4, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014D72                 dw 2Ah
.rdata:0000000180014D74                 RUNTIME_FUNCTION <rva fsuipcw_logHvars, rva loc_180001B3D, \
.rdata:0000000180014D74                                   rva stru_180014D4C>
.rdata:0000000180014D80 stru_180014D80  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014D80                                         ; DATA XREF: .pdata:000000018001C150↓o
.rdata:0000000180014D84                 RUNTIME_FUNCTION <rva fsuipcw_logHvars, rva loc_180001B3D, \
.rdata:0000000180014D84                                   rva stru_180014D4C>
.rdata:0000000180014D90 stru_180014D90  UNWIND_INFO_HDR <21h, 0, 8, 0>
.rdata:0000000180014D90                                         ; DATA XREF: .pdata:000000018001C15C↓o
.rdata:0000000180014D94                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180014D96                 dw 2Dh
.rdata:0000000180014D98                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014D9A                 dw 2Ch
.rdata:0000000180014D9C                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014D9E                 dw 2Bh
.rdata:0000000180014DA0                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014DA2                 dw 2Ah
.rdata:0000000180014DA4                 RUNTIME_FUNCTION <rva fsuipcw_logHvars, rva loc_180001B3D, \
.rdata:0000000180014DA4                                   rva stru_180014D4C>
.rdata:0000000180014DB0 stru_180014DB0  UNWIND_INFO_HDR <19h, 1Bh, 3, 0>
.rdata:0000000180014DB0                                         ; DATA XREF: .rdata:0000000180014DE0↓o
.rdata:0000000180014DB0                                         ; .rdata:0000000180014DF0↓o ...
.rdata:0000000180014DB4                 UNWIND_CODE <0Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180014DB6                 dw 12h
.rdata:0000000180014DB8                 UNWIND_CODE <5, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180014DBA                 align 4
.rdata:0000000180014DBC                 dd rva __GSHandlerCheck
.rdata:0000000180014DC0                 dd 68h
.rdata:0000000180014DC4 stru_180014DC4  UNWIND_INFO_HDR <21h, 1Ah, 0Ch, 0>
.rdata:0000000180014DC4                                         ; DATA XREF: .pdata:000000018001C174↓o
.rdata:0000000180014DC8                 UNWIND_CODE <1Ah, 0F4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180014DCA                 dw 0Eh
.rdata:0000000180014DCC                 UNWIND_CODE <16h, 0C4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180014DCE                 dw 0Fh
.rdata:0000000180014DD0                 UNWIND_CODE <10h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014DD2                 dw 10h
.rdata:0000000180014DD4                 UNWIND_CODE <0Ch, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014DD6                 dw 11h
.rdata:0000000180014DD8                 UNWIND_CODE <8, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014DDA                 dw 16h
.rdata:0000000180014DDC                 UNWIND_CODE <4, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014DDE                 dw 15h
.rdata:0000000180014DE0                 RUNTIME_FUNCTION <rva fsuipcw_getLvarValues, rva loc_180001C7C, \
.rdata:0000000180014DE0                                   rva stru_180014DB0>
.rdata:0000000180014DEC stru_180014DEC  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014DEC                                         ; DATA XREF: .pdata:000000018001C180↓o
.rdata:0000000180014DF0                 RUNTIME_FUNCTION <rva fsuipcw_getLvarValues, rva loc_180001C7C, \
.rdata:0000000180014DF0                                   rva stru_180014DB0>
.rdata:0000000180014DFC stru_180014DFC  UNWIND_INFO_HDR <21h, 0, 0Ch, 0>
.rdata:0000000180014DFC                                         ; DATA XREF: .pdata:000000018001C18C↓o
.rdata:0000000180014E00                 UNWIND_CODE <0, 0F4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180014E02                 dw 0Eh
.rdata:0000000180014E04                 UNWIND_CODE <0, 0C4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180014E06                 dw 0Fh
.rdata:0000000180014E08                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014E0A                 dw 10h
.rdata:0000000180014E0C                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014E0E                 dw 11h
.rdata:0000000180014E10                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014E12                 dw 16h
.rdata:0000000180014E14                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014E16                 dw 15h
.rdata:0000000180014E18                 RUNTIME_FUNCTION <rva fsuipcw_getLvarValues, rva loc_180001C7C, \
.rdata:0000000180014E18                                   rva stru_180014DB0>
.rdata:0000000180014E24 stru_180014E24  UNWIND_INFO_HDR <19h, 1Dh, 3, 0>
.rdata:0000000180014E24                                         ; DATA XREF: .rdata:0000000180014E48↓o
.rdata:0000000180014E24                                         ; .rdata:0000000180014E58↓o ...
.rdata:0000000180014E28                 UNWIND_CODE <0Bh, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180014E2A                 dw 16h
.rdata:0000000180014E2C                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014E2E                 align 4
.rdata:0000000180014E30                 dd rva __GSHandlerCheck
.rdata:0000000180014E34                 dd 0A0h
.rdata:0000000180014E38 stru_180014E38  UNWIND_INFO_HDR <21h, 12h, 6, 0>
.rdata:0000000180014E38                                         ; DATA XREF: .pdata:000000018001C1A4↓o
.rdata:0000000180014E3C                 UNWIND_CODE <12h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014E3E                 dw 1Bh
.rdata:0000000180014E40                 UNWIND_CODE <0Ah, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014E42                 dw 1Ah
.rdata:0000000180014E44                 UNWIND_CODE <4, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014E46                 dw 19h
.rdata:0000000180014E48                 RUNTIME_FUNCTION <rva fsuipcw_getLvarList, rva loc_180001F0E, \
.rdata:0000000180014E48                                   rva stru_180014E24>
.rdata:0000000180014E54 stru_180014E54  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014E54                                         ; DATA XREF: .pdata:000000018001C1B0↓o
.rdata:0000000180014E58                 RUNTIME_FUNCTION <rva fsuipcw_getLvarList, rva loc_180001F0E, \
.rdata:0000000180014E58                                   rva stru_180014E24>
.rdata:0000000180014E64 stru_180014E64  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:0000000180014E64                                         ; DATA XREF: .pdata:000000018001C1BC↓o
.rdata:0000000180014E68                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014E6A                 dw 1Bh
.rdata:0000000180014E6C                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014E6E                 dw 1Ah
.rdata:0000000180014E70                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014E72                 dw 19h
.rdata:0000000180014E74                 RUNTIME_FUNCTION <rva fsuipcw_getLvarList, rva loc_180001F0E, \
.rdata:0000000180014E74                                   rva stru_180014E24>
.rdata:0000000180014E80 stru_180014E80  UNWIND_INFO_HDR <21h, 12h, 6, 0>
.rdata:0000000180014E80                                         ; DATA XREF: .pdata:000000018001C1E0↓o
.rdata:0000000180014E84                 UNWIND_CODE <12h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014E86                 dw 1Bh
.rdata:0000000180014E88                 UNWIND_CODE <0Ah, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014E8A                 dw 1Ah
.rdata:0000000180014E8C                 UNWIND_CODE <4, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014E8E                 dw 19h
.rdata:0000000180014E90                 RUNTIME_FUNCTION <rva fsuipcw_getHvarList, rva loc_18000219E, \
.rdata:0000000180014E90                                   rva stru_180014E24>
.rdata:0000000180014E9C stru_180014E9C  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014E9C                                         ; DATA XREF: .pdata:000000018001C1EC↓o
.rdata:0000000180014EA0                 RUNTIME_FUNCTION <rva fsuipcw_getHvarList, rva loc_18000219E, \
.rdata:0000000180014EA0                                   rva stru_180014E24>
.rdata:0000000180014EAC stru_180014EAC  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:0000000180014EAC                                         ; DATA XREF: .pdata:000000018001C1F8↓o
.rdata:0000000180014EB0                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014EB2                 dw 1Bh
.rdata:0000000180014EB4                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014EB6                 dw 1Ah
.rdata:0000000180014EB8                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014EBA                 dw 19h
.rdata:0000000180014EBC                 RUNTIME_FUNCTION <rva fsuipcw_getHvarList, rva loc_18000219E, \
.rdata:0000000180014EBC                                   rva stru_180014E24>
.rdata:0000000180014EC8 stru_180014EC8  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
.rdata:0000000180014EC8                                         ; DATA XREF: .rdata:0000000180014EE0↓o
.rdata:0000000180014EC8                                         ; .rdata:0000000180014EF0↓o ...
.rdata:0000000180014ECC                 UNWIND_CODE <0Fh, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014ECE                 dw 8
.rdata:0000000180014ED0                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014ED2                 dw 7
.rdata:0000000180014ED4                 UNWIND_CODE <0Fh, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180014ED6                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180014ED8 stru_180014ED8  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180014ED8                                         ; DATA XREF: .pdata:000000018001C210↓o
.rdata:0000000180014EDC                 UNWIND_CODE <5, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014EDE                 dw 6
.rdata:0000000180014EE0                 RUNTIME_FUNCTION <rva fsuipcw_getLvarNameFromId, rva loc_180002408, \
.rdata:0000000180014EE0                                   rva stru_180014EC8>
.rdata:0000000180014EEC stru_180014EEC  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014EEC                                         ; DATA XREF: .pdata:000000018001C21C↓o
.rdata:0000000180014EF0                 RUNTIME_FUNCTION <rva fsuipcw_getLvarNameFromId, rva loc_180002408, \
.rdata:0000000180014EF0                                   rva stru_180014EC8>
.rdata:0000000180014EFC stru_180014EFC  UNWIND_INFO_HDR <19h, 1Bh, 3, 0>
.rdata:0000000180014EFC                                         ; DATA XREF: .pdata:000000018001C228↓o
.rdata:0000000180014F00                 UNWIND_CODE <9, 1>      ; UWOP_ALLOC_LARGE
.rdata:0000000180014F02                 dw 88h
.rdata:0000000180014F04                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014F06                 align 4
.rdata:0000000180014F08                 dd rva __GSHandlerCheck
.rdata:0000000180014F0C                 dd 430h
.rdata:0000000180014F10 stru_180014F10  UNWIND_INFO_HDR <19h, 1Fh, 5, 0>
.rdata:0000000180014F10                                         ; DATA XREF: .pdata:000000018001C234↓o
.rdata:0000000180014F14                 UNWIND_CODE <0Dh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014F16                 dw 29h
.rdata:0000000180014F18                 UNWIND_CODE <0Dh, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180014F1A                 dw 26h
.rdata:0000000180014F1C                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014F1E                 align 4
.rdata:0000000180014F20                 dd rva __GSHandlerCheck
.rdata:0000000180014F24                 dd 120h
.rdata:0000000180014F28 stru_180014F28  UNWIND_INFO_HDR <1, 9, 4, 0>
.rdata:0000000180014F28                                         ; DATA XREF: .rdata:0000000180014F3C↓o
.rdata:0000000180014F28                                         ; .rdata:0000000180014F4C↓o ...
.rdata:0000000180014F2C                 UNWIND_CODE <9, 32h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180014F2E                 UNWIND_CODE <5, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180014F30                 UNWIND_CODE <3, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014F32                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014F34 stru_180014F34  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180014F34                                         ; DATA XREF: .pdata:000000018001C258↓o
.rdata:0000000180014F38                 UNWIND_CODE <5, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014F3A                 dw 0Ah
.rdata:0000000180014F3C                 RUNTIME_FUNCTION <rva sub_1800026C0, rva loc_1800026F6, \
.rdata:0000000180014F3C                                   rva stru_180014F28>
.rdata:0000000180014F48 stru_180014F48  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014F48                                         ; DATA XREF: .pdata:000000018001C264↓o
.rdata:0000000180014F48                                         ; .pdata:000000018001C27C↓o
.rdata:0000000180014F4C                 RUNTIME_FUNCTION <rva sub_1800026C0, rva loc_1800026F6, \
.rdata:0000000180014F4C                                   rva stru_180014F28>
.rdata:0000000180014F58 stru_180014F58  UNWIND_INFO_HDR <21h, 0, 2, 0>
.rdata:0000000180014F58                                         ; DATA XREF: .pdata:000000018001C270↓o
.rdata:0000000180014F58                                         ; .pdata:000000018001C288↓o
.rdata:0000000180014F5C                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014F5E                 dw 0Ah
.rdata:0000000180014F60                 RUNTIME_FUNCTION <rva sub_1800026C0, rva loc_1800026F6, \
.rdata:0000000180014F60                                   rva stru_180014F28>
.rdata:0000000180014F6C stru_180014F6C  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
.rdata:0000000180014F6C                                         ; DATA XREF: .rdata:0000000180014F80↓o
.rdata:0000000180014F6C                                         ; .rdata:0000000180014F90↓o ...
.rdata:0000000180014F70                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180014F72                 dw 8
.rdata:0000000180014F74                 UNWIND_CODE <0Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180014F76                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014F78 stru_180014F78  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180014F78                                         ; DATA XREF: .pdata:000000018001C2A0↓o
.rdata:0000000180014F7C                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014F7E                 dw 6
.rdata:0000000180014F80                 RUNTIME_FUNCTION <rva sub_180002800, rva loc_18000281B, \
.rdata:0000000180014F80                                   rva stru_180014F6C>
.rdata:0000000180014F8C stru_180014F8C  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014F8C                                         ; DATA XREF: .pdata:000000018001C2AC↓o
.rdata:0000000180014F90                 RUNTIME_FUNCTION <rva sub_180002800, rva loc_18000281B, \
.rdata:0000000180014F90                                   rva stru_180014F6C>
.rdata:0000000180014F9C stru_180014F9C  UNWIND_INFO_HDR <21h, 0, 2, 0>
.rdata:0000000180014F9C                                         ; DATA XREF: .pdata:000000018001C2B8↓o
.rdata:0000000180014FA0                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014FA2                 dw 6
.rdata:0000000180014FA4                 RUNTIME_FUNCTION <rva sub_180002800, rva loc_18000281B, \
.rdata:0000000180014FA4                                   rva stru_180014F6C>
.rdata:0000000180014FB0 stru_180014FB0  UNWIND_INFO_HDR <1, 8, 4, 0>
.rdata:0000000180014FB0                                         ; DATA XREF: .rdata:0000000180014FC8↓o
.rdata:0000000180014FB0                                         ; .rdata:0000000180014FD8↓o ...
.rdata:0000000180014FB4                 UNWIND_CODE <8, 52h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180014FB6                 UNWIND_CODE <4, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014FB8                 UNWIND_CODE <3, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014FBA                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180014FBC stru_180014FBC  UNWIND_INFO_HDR <21h, 0Ah, 4, 0>
.rdata:0000000180014FBC                                         ; DATA XREF: .pdata:000000018001C2D0↓o
.rdata:0000000180014FC0                 UNWIND_CODE <0Ah, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180014FC2                 dw 4
.rdata:0000000180014FC4                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014FC6                 dw 5
.rdata:0000000180014FC8                 RUNTIME_FUNCTION <rva sub_1800028A0, rva loc_1800028BC, \
.rdata:0000000180014FC8                                   rva stru_180014FB0>
.rdata:0000000180014FD4 stru_180014FD4  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180014FD4                                         ; DATA XREF: .pdata:000000018001C2DC↓o
.rdata:0000000180014FD8                 RUNTIME_FUNCTION <rva sub_1800028A0, rva loc_1800028BC, \
.rdata:0000000180014FD8                                   rva stru_180014FB0>
.rdata:0000000180014FE4 stru_180014FE4  UNWIND_INFO_HDR <21h, 0, 4, 0>
.rdata:0000000180014FE4                                         ; DATA XREF: .pdata:000000018001C2E8↓o
.rdata:0000000180014FE8                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180014FEA                 dw 4
.rdata:0000000180014FEC                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180014FEE                 dw 5
.rdata:0000000180014FF0                 RUNTIME_FUNCTION <rva sub_1800028A0, rva loc_1800028BC, \
.rdata:0000000180014FF0                                   rva stru_180014FB0>
.rdata:0000000180014FFC stru_180014FFC  UNWIND_INFO_HDR <1, 16h, 4, 0>
.rdata:0000000180014FFC                                         ; DATA XREF: .pdata:000000018001C2F4↓o
.rdata:0000000180014FFC                                         ; .pdata:000000018001C30C↓o
.rdata:0000000180015000                 UNWIND_CODE <16h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015002                 UNWIND_CODE <12h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015004                 UNWIND_CODE <11h, 60h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015006                 UNWIND_CODE <10h, 30h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015008 stru_180015008  UNWIND_INFO_HDR <1, 12h, 5, 0>
.rdata:0000000180015008                                         ; DATA XREF: .pdata:000000018001C300↓o
.rdata:000000018001500C                 UNWIND_CODE <12h, 62h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001500E                 UNWIND_CODE <0Eh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015010                 UNWIND_CODE <0Dh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015012                 UNWIND_CODE <0Ch, 50h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015014                 UNWIND_CODE <0Bh, 30h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015016                 align 4
.rdata:0000000180015018 stru_180015018  UNWIND_INFO_HDR <1, 4, 1, 0>
.rdata:0000000180015018                                         ; DATA XREF: .rdata:000000018001554C↓o
.rdata:0000000180015018                                         ; .rdata:000000018001555C↓o ...
.rdata:000000018001501C                 UNWIND_CODE <4, 42h>    ; UWOP_ALLOC_SMALL
.rdata:000000018001501E                 align 4
.rdata:0000000180015020 stru_180015020  UNWIND_INFO_HDR <11h, 17h, 0Ah, 0>
.rdata:0000000180015020                                         ; DATA XREF: .pdata:000000018001C33C↓o
.rdata:0000000180015024                 UNWIND_CODE <17h, 68h>  ; UWOP_SAVE_XMM128
.rdata:0000000180015026                 dw 4
.rdata:0000000180015028                 UNWIND_CODE <12h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001502A                 dw 11h
.rdata:000000018001502C                 UNWIND_CODE <12h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001502E                 dw 10h
.rdata:0000000180015030                 UNWIND_CODE <12h, 92h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015032                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015034                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015036                 UNWIND_CODE <0Bh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015038                 dd rva __CxxFrameHandler4
.rdata:000000018001503C                 dd rva byte_180015040
.rdata:0000000180015040 byte_180015040  db 28h                  ; DATA XREF: .rdata:000000018001503C↑o
.rdata:0000000180015040                                         ; FuncInfo4
.rdata:0000000180015041                 dd rva byte_180015049   ; unwind map
.rdata:0000000180015045                 dd rva byte_180015054   ; ip2state map
.rdata:0000000180015049 byte_180015049  db 4                    ; DATA XREF: .rdata:0000000180015041↑o
.rdata:0000000180015049                                         ; num unwind entries: 2
.rdata:000000018001504A                 db 0Eh                  ; funclet type: 3
.rdata:000000018001504B                 dd rva loc_180011320    ; funclet
.rdata:000000018001504F                 db 2Eh                  ; funclet type: 3
.rdata:0000000180015050                 dd rva loc_18001133D    ; funclet
.rdata:0000000180015054 byte_180015054  db 6                    ; DATA XREF: .rdata:0000000180015045↑o
.rdata:0000000180015054                                         ; num_ip2state entries: 3
.rdata:0000000180015055                 db 31h, 8               ; ea 0x18000302C
.rdata:0000000180015057                 db 0                    ; state -1
.rdata:0000000180015058                 db 66h                  ; ea 0x18000305F
.rdata:0000000180015059                 db 2                    ; state 0
.rdata:000000018001505A                 db 5Ch                  ; ea 0x18000308D
.rdata:000000018001505B                 db 4                    ; state 1
.rdata:000000018001505C stru_18001505C  UNWIND_INFO_HDR <1, 6, 2, 0>
.rdata:000000018001505C                                         ; DATA XREF: .pdata:000000018001D0B0↓o
.rdata:000000018001505C                                         ; .pdata:000000018001D0BC↓o ...
.rdata:0000000180015060                 UNWIND_CODE <6, 32h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180015062                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015064 stru_180015064  UNWIND_INFO_HDR <1, 4, 1, 0>
.rdata:0000000180015064                                         ; DATA XREF: .pdata:000000018001C348↓o
.rdata:0000000180015068                 UNWIND_CODE <4, 0A2h>   ; UWOP_ALLOC_SMALL
.rdata:000000018001506A                 align 4
.rdata:000000018001506C stru_18001506C  UNWIND_INFO_HDR <19h, 69h, 9, 0>
.rdata:000000018001506C                                         ; DATA XREF: .pdata:000000018001C360↓o
.rdata:0000000180015070                 UNWIND_CODE <69h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015072                 dw 301h
.rdata:0000000180015074                 UNWIND_CODE <16h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015076                 dw 302h
.rdata:0000000180015078                 UNWIND_CODE <16h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000018001507A                 dw 2FCh
.rdata:000000018001507C                 UNWIND_CODE <9, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:000000018001507E                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015080                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015082                 align 4
.rdata:0000000180015084                 dd rva __GSHandlerCheck
.rdata:0000000180015088                 dd rva loc_1800017CB+5
.rdata:000000018001508C stru_18001508C  UNWIND_INFO_HDR <19h, 38h, 0Dh, 0>
.rdata:000000018001508C                                         ; DATA XREF: .pdata:000000018001C36C↓o
.rdata:0000000180015090                 UNWIND_CODE <27h, 68h>  ; UWOP_SAVE_XMM128
.rdata:0000000180015092                 dw 35h
.rdata:0000000180015094                 UNWIND_CODE <1Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015096                 dw 76h
.rdata:0000000180015098                 UNWIND_CODE <1Fh, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000018001509A                 dw 6Ch
.rdata:000000018001509C                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000018001509E                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800150A0                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800150A2                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800150A4                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800150A6                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800150A8                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800150AA                 align 4
.rdata:00000001800150AC                 dd rva __GSHandlerCheck_EH4
.rdata:00000001800150B0                 dd rva byte_1800150B8
.rdata:00000001800150B4                 db  42h ; B
.rdata:00000001800150B5                 db    3
.rdata:00000001800150B6                 db    0
.rdata:00000001800150B7                 db    0
.rdata:00000001800150B8 byte_1800150B8  db 28h                  ; DATA XREF: .rdata:00000001800150B0↑o
.rdata:00000001800150B8                                         ; FuncInfo4
.rdata:00000001800150B9                 dd rva byte_1800150C1   ; unwind map
.rdata:00000001800150BD                 dd rva byte_1800150FC   ; ip2state map
.rdata:00000001800150C1 byte_1800150C1  db 12h                  ; DATA XREF: .rdata:00000001800150B9↑o
.rdata:00000001800150C1                                         ; num unwind entries: 9
.rdata:00000001800150C2                 db 0Ah                  ; funclet type: 1
.rdata:00000001800150C3                 dd rva sub_180002660    ; funclet
.rdata:00000001800150C7                 db 61h, 4               ; frame offset of object ptr to be destructed
.rdata:00000001800150C9                 db 3Eh                  ; funclet type: 3
.rdata:00000001800150CA                 dd rva loc_18001135C    ; funclet
.rdata:00000001800150CE                 db 2Eh                  ; funclet type: 3
.rdata:00000001800150CF                 dd rva loc_18001137C    ; funclet
.rdata:00000001800150D3                 db 2Ch                  ; funclet type: 2
.rdata:00000001800150D4                 dd rva sub_180002660    ; funclet
.rdata:00000001800150D8                 db 1, 3                 ; frame offset of object ptr to be destructed
.rdata:00000001800150DA                 db 0C6h                 ; funclet type: 3
.rdata:00000001800150DB                 dd rva loc_18001137C    ; funclet
.rdata:00000001800150DF                 db 0F2h                 ; funclet type: 1
.rdata:00000001800150E0                 dd rva sub_180002660    ; funclet
.rdata:00000001800150E4                 db 61h, 2               ; frame offset of object ptr to be destructed
.rdata:00000001800150E6                 db 55h, 2               ; funclet type: 1
.rdata:00000001800150E8                 dd rva sub_1800055F0    ; funclet
.rdata:00000001800150EC                 db 0E1h, 3              ; frame offset of object ptr to be destructed
.rdata:00000001800150EE                 db 42h                  ; funclet type: 1
.rdata:00000001800150EF                 dd rva sub_180005590    ; funclet
.rdata:00000001800150F3                 db 81h, 3               ; frame offset of object ptr to be destructed
.rdata:00000001800150F5                 db 3Ah                  ; funclet type: 1
.rdata:00000001800150F6                 dd rva sub_180005590    ; funclet
.rdata:00000001800150FA                 db 1, 3                 ; frame offset of object ptr to be destructed
.rdata:00000001800150FC byte_1800150FC  db 20h                  ; DATA XREF: .rdata:00000001800150BD↑o
.rdata:00000001800150FC                                         ; num_ip2state entries: 16
.rdata:00000001800150FD                 db 5, 8                 ; ea 0x1800036B1
.rdata:00000001800150FF                 db 0                    ; state -1
.rdata:0000000180015100                 db 35h, 0Bh             ; ea 0x18000397E
.rdata:0000000180015102                 db 2                    ; state 0
.rdata:0000000180015103                 db 22h                  ; ea 0x18000398F
.rdata:0000000180015104                 db 4                    ; state 1
.rdata:0000000180015105                 db 30h                  ; ea 0x1800039A7
.rdata:0000000180015106                 db 6                    ; state 2
.rdata:0000000180015107                 db 0E8h                 ; ea 0x180003A1B
.rdata:0000000180015108                 db 8                    ; state 3
.rdata:0000000180015109                 db 0A9h, 15h            ; ea 0x180003F85
.rdata:000000018001510B                 db 0                    ; state -1
.rdata:000000018001510C                 db 0ACh                 ; ea 0x180003FDB
.rdata:000000018001510D                 db 0Ch                  ; state 5
.rdata:000000018001510E                 db 0D6h                 ; ea 0x180004046
.rdata:000000018001510F                 db 0                    ; state -1
.rdata:0000000180015110                 db 0Dh, 0Ch             ; ea 0x180004349
.rdata:0000000180015112                 db 0Ch                  ; state 5
.rdata:0000000180015113                 db 0ACh                 ; ea 0x18000439F
.rdata:0000000180015114                 db 0                    ; state -1
.rdata:0000000180015115                 db 49h, 0Ah             ; ea 0x180004631
.rdata:0000000180015117                 db 0Eh                  ; state 6
.rdata:0000000180015118                 db 0B1h, 7              ; ea 0x18000481D
.rdata:000000018001511A                 db 12h                  ; state 8
.rdata:000000018001511B                 db 9, 0Ch               ; ea 0x180004B1F
.rdata:000000018001511D                 db 10h                  ; state 7
.rdata:000000018001511E                 db 0C9h, 4              ; ea 0x180004C51
.rdata:0000000180015120                 db 0                    ; state -1
.rdata:0000000180015121                 db 50h                  ; ea 0x180004C79
.rdata:0000000180015122                 db 12h                  ; state 8
.rdata:0000000180015123                 db 26h                  ; ea 0x180004C8C
.rdata:0000000180015124                 db 2                    ; state 0
.rdata:0000000180015125                 db    0
.rdata:0000000180015126                 db    0
.rdata:0000000180015127                 db    0
.rdata:0000000180015128 stru_180015128  UNWIND_INFO_HDR <19h, 24h, 7, 0>
.rdata:0000000180015128                                         ; DATA XREF: .pdata:000000018001C378↓o
.rdata:000000018001512C                 UNWIND_CODE <12h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001512E                 dw 51h
.rdata:0000000180015130                 UNWIND_CODE <12h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015132                 dw 4Eh
.rdata:0000000180015134                 UNWIND_CODE <12h, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180015136                 dw 4Ch
.rdata:0000000180015138                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000018001513A                 align 4
.rdata:000000018001513C                 dd rva __GSHandlerCheck
.rdata:0000000180015140                 dd 250h
.rdata:0000000180015144 stru_180015144  UNWIND_INFO_HDR <19h, 1Bh, 3, 0>
.rdata:0000000180015144                                         ; DATA XREF: .pdata:000000018001C384↓o
.rdata:0000000180015148                 UNWIND_CODE <9, 1>      ; UWOP_ALLOC_LARGE
.rdata:000000018001514A                 dw 2Eh
.rdata:000000018001514C                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001514E                 align 4
.rdata:0000000180015150                 dd rva __GSHandlerCheck
.rdata:0000000180015154                 dd 160h
.rdata:0000000180015158 stru_180015158  UNWIND_INFO_HDR <19h, 1Fh, 5, 0>
.rdata:0000000180015158                                         ; DATA XREF: .pdata:000000018001C390↓o
.rdata:0000000180015158                                         ; .pdata:000000018001C39C↓o
.rdata:000000018001515C                 UNWIND_CODE <0Dh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001515E                 dw 31h
.rdata:0000000180015160                 UNWIND_CODE <0Dh, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180015162                 dw 2Eh
.rdata:0000000180015164                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015166                 align 4
.rdata:0000000180015168                 dd rva __GSHandlerCheck
.rdata:000000018001516C                 dd 160h
.rdata:0000000180015170 stru_180015170  UNWIND_INFO_HDR <19h, 24h, 7, 0>
.rdata:0000000180015170                                         ; DATA XREF: .pdata:000000018001C3A8↓o
.rdata:0000000180015174                 UNWIND_CODE <12h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015176                 dw 119h
.rdata:0000000180015178                 UNWIND_CODE <12h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001517A                 dw 118h
.rdata:000000018001517C                 UNWIND_CODE <12h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000018001517E                 dw 114h
.rdata:0000000180015180                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015182                 align 4
.rdata:0000000180015184                 dd rva __GSHandlerCheck
.rdata:0000000180015188                 dd 890h
.rdata:000000018001518C stru_18001518C  UNWIND_INFO_HDR <11h, 16h, 0Ah, 0>
.rdata:000000018001518C                                         ; DATA XREF: .pdata:000000018001C3B4↓o
.rdata:0000000180015190                 UNWIND_CODE <16h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015192                 dw 11h
.rdata:0000000180015194                 UNWIND_CODE <16h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015196                 dw 10h
.rdata:0000000180015198                 UNWIND_CODE <16h, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001519A                 UNWIND_CODE <12h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000018001519C                 UNWIND_CODE <10h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:000000018001519E                 UNWIND_CODE <0Eh, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800151A0                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800151A2                 UNWIND_CODE <0Bh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800151A4                 dd rva __CxxFrameHandler4
.rdata:00000001800151A8                 dd rva byte_1800151AC
.rdata:00000001800151AC byte_1800151AC  db 28h                  ; DATA XREF: .rdata:00000001800151A8↑o
.rdata:00000001800151AC                                         ; FuncInfo4
.rdata:00000001800151AD                 dd rva byte_1800151B5   ; unwind map
.rdata:00000001800151B1                 dd rva byte_1800151BC   ; ip2state map
.rdata:00000001800151B5 byte_1800151B5  db 2                    ; DATA XREF: .rdata:00000001800151AD↑o
.rdata:00000001800151B5                                         ; .rdata:0000000180015581↓o
.rdata:00000001800151B5                                         ; num unwind entries: 1
.rdata:00000001800151B6                 db 0Ah                  ; funclet type: 1
.rdata:00000001800151B7                 dd rva sub_180002660    ; funclet
.rdata:00000001800151BB                 db 40h                  ; frame offset of object ptr to be destructed
.rdata:00000001800151BC byte_1800151BC  db 4                    ; DATA XREF: .rdata:00000001800151B1↑o
.rdata:00000001800151BC                                         ; num_ip2state entries: 2
.rdata:00000001800151BD                 db 0B0h                 ; ea 0x1800053E8
.rdata:00000001800151BE                 db 0                    ; state -1
.rdata:00000001800151BF                 db 11h, 4               ; ea 0x1800054EC
.rdata:00000001800151C1                 db 2                    ; state 0
.rdata:00000001800151C2                 db    0
.rdata:00000001800151C3                 db    0
.rdata:00000001800151C4 stru_1800151C4  UNWIND_INFO_HDR <1, 12h, 8, 0>
.rdata:00000001800151C4                                         ; DATA XREF: .pdata:000000018001C3E4↓o
.rdata:00000001800151C8                 UNWIND_CODE <12h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800151CA                 dw 0Bh
.rdata:00000001800151CC                 UNWIND_CODE <12h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800151CE                 dw 0Ah
.rdata:00000001800151D0                 UNWIND_CODE <12h, 32h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800151D2                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800151D4                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800151D6                 UNWIND_CODE <0Bh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800151D8 stru_1800151D8  UNWIND_INFO_HDR <1, 0Ch, 6, 0>
.rdata:00000001800151D8                                         ; DATA XREF: .pdata:000000018001C3F0↓o
.rdata:00000001800151DC                 UNWIND_CODE <0Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800151DE                 dw 0Ah
.rdata:00000001800151E0                 UNWIND_CODE <0Ch, 32h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800151E2                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800151E4                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800151E6                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800151E8 stru_1800151E8  UNWIND_INFO_HDR <1, 10h, 8, 0>
.rdata:00000001800151E8                                         ; DATA XREF: .pdata:000000018001C414↓o
.rdata:00000001800151EC                 UNWIND_CODE <10h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800151EE                 dw 0Fh
.rdata:00000001800151F0                 UNWIND_CODE <10h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800151F2                 UNWIND_CODE <0Ch, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800151F4                 UNWIND_CODE <0Ah, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800151F6                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800151F8                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800151FA                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800151FC stru_1800151FC  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
.rdata:00000001800151FC                                         ; DATA XREF: .rdata:0000000180015214↓o
.rdata:00000001800151FC                                         ; .rdata:0000000180015224↓o ...
.rdata:0000000180015200                 UNWIND_CODE <0Fh, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015202                 dw 0Dh
.rdata:0000000180015204                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015206                 dw 0Ch
.rdata:0000000180015208                 UNWIND_CODE <0Fh, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001520A                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000018001520C stru_18001520C  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:000000018001520C                                         ; DATA XREF: .pdata:000000018001C42C↓o
.rdata:0000000180015210                 UNWIND_CODE <5, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015212                 dw 0Bh
.rdata:0000000180015214                 RUNTIME_FUNCTION <rva sub_180005A40, rva loc_180005A86, \
.rdata:0000000180015214                                   rva stru_1800151FC>
.rdata:0000000180015220 stru_180015220  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015220                                         ; DATA XREF: .pdata:000000018001C438↓o
.rdata:0000000180015224                 RUNTIME_FUNCTION <rva sub_180005A40, rva loc_180005A86, \
.rdata:0000000180015224                                   rva stru_1800151FC>
.rdata:0000000180015230 stru_180015230  UNWIND_INFO_HDR <1, 0Fh, 4, 0>
.rdata:0000000180015230                                         ; DATA XREF: .rdata:0000000180015244↓o
.rdata:0000000180015230                                         ; .rdata:0000000180015254↓o ...
.rdata:0000000180015234                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015236                 dw 8
.rdata:0000000180015238                 UNWIND_CODE <0Fh, 32h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001523A                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000018001523C stru_18001523C  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:000000018001523C                                         ; DATA XREF: .pdata:000000018001C45C↓o
.rdata:0000000180015240                 UNWIND_CODE <5, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015242                 dw 7
.rdata:0000000180015244                 RUNTIME_FUNCTION <rva sub_180005C80, rva loc_180005C8F, \
.rdata:0000000180015244                                   rva stru_180015230>
.rdata:0000000180015250 stru_180015250  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015250                                         ; DATA XREF: .pdata:000000018001C468↓o
.rdata:0000000180015254                 RUNTIME_FUNCTION <rva sub_180005C80, rva loc_180005C8F, \
.rdata:0000000180015254                                   rva stru_180015230>
.rdata:0000000180015260 stru_180015260  UNWIND_INFO_HDR <21h, 0, 2, 0>
.rdata:0000000180015260                                         ; DATA XREF: .pdata:000000018001C474↓o
.rdata:0000000180015264                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015266                 dw 7
.rdata:0000000180015268                 RUNTIME_FUNCTION <rva sub_180005C80, rva loc_180005C8F, \
.rdata:0000000180015268                                   rva stru_180015230>
.rdata:0000000180015274 stru_180015274  UNWIND_INFO_HDR <11h, 14h, 0Ah, 0>
.rdata:0000000180015274                                         ; DATA XREF: .pdata:000000018001C480↓o
.rdata:0000000180015278                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001527A                 dw 11h
.rdata:000000018001527C                 UNWIND_CODE <14h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001527E                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015280                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015282                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015284                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015286                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015288                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001528A                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001528C                 dd rva __CxxFrameHandler4
.rdata:0000000180015290                 dd rva byte_180015294
.rdata:0000000180015294 byte_180015294  db 28h                  ; DATA XREF: .rdata:0000000180015290↑o
.rdata:0000000180015294                                         ; FuncInfo4
.rdata:0000000180015295                 dd rva byte_18001529D   ; unwind map
.rdata:0000000180015299                 dd rva byte_1800152AA   ; ip2state map
.rdata:000000018001529D byte_18001529D  db 4                    ; DATA XREF: .rdata:0000000180015295↑o
.rdata:000000018001529D                                         ; num unwind entries: 2
.rdata:000000018001529E                 db 0Ah                  ; funclet type: 1
.rdata:000000018001529F                 dd rva loc_1800067E0    ; funclet
.rdata:00000001800152A3                 db 40h                  ; frame offset of object ptr to be destructed
.rdata:00000001800152A4                 db 3Ah                  ; funclet type: 1
.rdata:00000001800152A5                 dd rva sub_180006730    ; funclet
.rdata:00000001800152A9                 db 40h                  ; frame offset of object ptr to be destructed
.rdata:00000001800152AA byte_1800152AA  db 6                    ; DATA XREF: .rdata:0000000180015299↑o
.rdata:00000001800152AA                                         ; num_ip2state entries: 3
.rdata:00000001800152AB                 db 85h, 3               ; ea 0x180005DF1
.rdata:00000001800152AD                 db 0                    ; state -1
.rdata:00000001800152AE                 db 34h                  ; ea 0x180005E0B
.rdata:00000001800152AF                 db 2                    ; state 0
.rdata:00000001800152B0                 db 59h, 4               ; ea 0x180005F21
.rdata:00000001800152B2                 db 4                    ; state 1
.rdata:00000001800152B3                 db    0
.rdata:00000001800152B4 stru_1800152B4  UNWIND_INFO_HDR <1, 0Bh, 5, 0>
.rdata:00000001800152B4                                         ; DATA XREF: .rdata:00000001800152D4↓o
.rdata:00000001800152B4                                         ; .rdata:00000001800152F0↓o ...
.rdata:00000001800152B8                 UNWIND_CODE <0Bh, 42h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800152BA                 UNWIND_CODE <7, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:00000001800152BC                 UNWIND_CODE <5, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:00000001800152BE                 UNWIND_CODE <3, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800152C0                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800152C2                 align 4
.rdata:00000001800152C4 stru_1800152C4  UNWIND_INFO_HDR <21h, 19h, 6, 0>
.rdata:00000001800152C4                                         ; DATA XREF: .pdata:000000018001C498↓o
.rdata:00000001800152C8                 UNWIND_CODE <19h, 0F4h> ; UWOP_SAVE_NONVOL
.rdata:00000001800152CA                 dw 4
.rdata:00000001800152CC                 UNWIND_CODE <0Eh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800152CE                 dw 0Dh
.rdata:00000001800152D0                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800152D2                 dw 0Ch
.rdata:00000001800152D4                 RUNTIME_FUNCTION <rva sub_180005FF0, rva loc_180006036, \
.rdata:00000001800152D4                                   rva stru_1800152B4>
.rdata:00000001800152E0 stru_1800152E0  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:00000001800152E0                                         ; DATA XREF: .pdata:000000018001C4A4↓o
.rdata:00000001800152E0                                         ; .pdata:000000018001C4BC↓o
.rdata:00000001800152E4                 UNWIND_CODE <0, 0F4h>   ; UWOP_SAVE_NONVOL
.rdata:00000001800152E6                 dw 4
.rdata:00000001800152E8                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800152EA                 dw 0Dh
.rdata:00000001800152EC                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800152EE                 dw 0Ch
.rdata:00000001800152F0                 RUNTIME_FUNCTION <rva sub_180005FF0, rva loc_180006036, \
.rdata:00000001800152F0                                   rva stru_1800152B4>
.rdata:00000001800152FC stru_1800152FC  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800152FC                                         ; DATA XREF: .pdata:000000018001C4B0↓o
.rdata:0000000180015300                 RUNTIME_FUNCTION <rva sub_180005FF0, rva loc_180006036, \
.rdata:0000000180015300                                   rva stru_1800152B4>
.rdata:000000018001530C stru_18001530C  UNWIND_INFO_HDR <21h, 19h, 6, 0>
.rdata:000000018001530C                                         ; DATA XREF: .pdata:000000018001C4D4↓o
.rdata:0000000180015310                 UNWIND_CODE <19h, 0F4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180015312                 dw 4
.rdata:0000000180015314                 UNWIND_CODE <0Eh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015316                 dw 0Dh
.rdata:0000000180015318                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001531A                 dw 0Ch
.rdata:000000018001531C                 RUNTIME_FUNCTION <rva sub_180006180, rva loc_1800061C6, \
.rdata:000000018001531C                                   rva stru_1800152B4>
.rdata:0000000180015328 stru_180015328  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:0000000180015328                                         ; DATA XREF: .pdata:000000018001C4E0↓o
.rdata:0000000180015328                                         ; .pdata:000000018001C4F8↓o
.rdata:000000018001532C                 UNWIND_CODE <0, 0F4h>   ; UWOP_SAVE_NONVOL
.rdata:000000018001532E                 dw 4
.rdata:0000000180015330                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015332                 dw 0Dh
.rdata:0000000180015334                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015336                 dw 0Ch
.rdata:0000000180015338                 RUNTIME_FUNCTION <rva sub_180006180, rva loc_1800061C6, \
.rdata:0000000180015338                                   rva stru_1800152B4>
.rdata:0000000180015344 stru_180015344  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015344                                         ; DATA XREF: .pdata:000000018001C4EC↓o
.rdata:0000000180015348                 RUNTIME_FUNCTION <rva sub_180006180, rva loc_1800061C6, \
.rdata:0000000180015348                                   rva stru_1800152B4>
.rdata:0000000180015354 stru_180015354  UNWIND_INFO_HDR <1, 0Bh, 5, 0>
.rdata:0000000180015354                                         ; DATA XREF: .rdata:0000000180015378↓o
.rdata:0000000180015354                                         ; .rdata:0000000180015398↓o ...
.rdata:0000000180015358                 UNWIND_CODE <0Bh, 62h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001535A                 UNWIND_CODE <7, 0F0h>   ; UWOP_PUSH_NONVOL
.rdata:000000018001535C                 UNWIND_CODE <5, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:000000018001535E                 UNWIND_CODE <3, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015360                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015362                 align 4
.rdata:0000000180015364 stru_180015364  UNWIND_INFO_HDR <21h, 28h, 8, 0>
.rdata:0000000180015364                                         ; DATA XREF: .pdata:000000018001C510↓o
.rdata:0000000180015368                 UNWIND_CODE <28h, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:000000018001536A                 dw 4
.rdata:000000018001536C                 UNWIND_CODE <23h, 0D4h> ; UWOP_SAVE_NONVOL
.rdata:000000018001536E                 dw 5
.rdata:0000000180015370                 UNWIND_CODE <12h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015372                 dw 6
.rdata:0000000180015374                 UNWIND_CODE <5, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015376                 dw 0Fh
.rdata:0000000180015378                 RUNTIME_FUNCTION <rva sub_180006310, rva loc_180006352, \
.rdata:0000000180015378                                   rva stru_180015354>
.rdata:0000000180015384 stru_180015384  UNWIND_INFO_HDR <21h, 0, 8, 0>
.rdata:0000000180015384                                         ; DATA XREF: .pdata:000000018001C51C↓o
.rdata:0000000180015384                                         ; .pdata:000000018001C534↓o
.rdata:0000000180015388                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:000000018001538A                 dw 4
.rdata:000000018001538C                 UNWIND_CODE <0, 0D4h>   ; UWOP_SAVE_NONVOL
.rdata:000000018001538E                 dw 5
.rdata:0000000180015390                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015392                 dw 6
.rdata:0000000180015394                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015396                 dw 0Fh
.rdata:0000000180015398                 RUNTIME_FUNCTION <rva sub_180006310, rva loc_180006352, \
.rdata:0000000180015398                                   rva stru_180015354>
.rdata:00000001800153A4 stru_1800153A4  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800153A4                                         ; DATA XREF: .pdata:000000018001C528↓o
.rdata:00000001800153A8                 RUNTIME_FUNCTION <rva sub_180006310, rva loc_180006352, \
.rdata:00000001800153A8                                   rva stru_180015354>
.rdata:00000001800153B4 stru_1800153B4  UNWIND_INFO_HDR <1, 9, 4, 0>
.rdata:00000001800153B4                                         ; DATA XREF: .rdata:00000001800153D0↓o
.rdata:00000001800153B4                                         ; .rdata:00000001800153EC↓o ...
.rdata:00000001800153B8                 UNWIND_CODE <9, 52h>    ; UWOP_ALLOC_SMALL
.rdata:00000001800153BA                 UNWIND_CODE <5, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:00000001800153BC                 UNWIND_CODE <3, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800153BE                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800153C0 stru_1800153C0  UNWIND_INFO_HDR <21h, 12h, 6, 0>
.rdata:00000001800153C0                                         ; DATA XREF: .pdata:000000018001C54C↓o
.rdata:00000001800153C4                 UNWIND_CODE <12h, 0F4h> ; UWOP_SAVE_NONVOL
.rdata:00000001800153C6                 dw 4
.rdata:00000001800153C8                 UNWIND_CODE <0Dh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800153CA                 dw 5
.rdata:00000001800153CC                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800153CE                 dw 0Ch
.rdata:00000001800153D0                 RUNTIME_FUNCTION <rva sub_1800065A0, rva loc_1800065C5, \
.rdata:00000001800153D0                                   rva stru_1800153B4>
.rdata:00000001800153DC stru_1800153DC  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:00000001800153DC                                         ; DATA XREF: .pdata:000000018001C558↓o
.rdata:00000001800153DC                                         ; .pdata:000000018001C570↓o
.rdata:00000001800153E0                 UNWIND_CODE <0, 0F4h>   ; UWOP_SAVE_NONVOL
.rdata:00000001800153E2                 dw 4
.rdata:00000001800153E4                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800153E6                 dw 5
.rdata:00000001800153E8                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800153EA                 dw 0Ch
.rdata:00000001800153EC                 RUNTIME_FUNCTION <rva sub_1800065A0, rva loc_1800065C5, \
.rdata:00000001800153EC                                   rva stru_1800153B4>
.rdata:00000001800153F8 stru_1800153F8  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800153F8                                         ; DATA XREF: .pdata:000000018001C564↓o
.rdata:00000001800153FC                 RUNTIME_FUNCTION <rva sub_1800065A0, rva loc_1800065C5, \
.rdata:00000001800153FC                                   rva stru_1800153B4>
.rdata:0000000180015408 stru_180015408  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
.rdata:0000000180015408                                         ; DATA XREF: .pdata:000000018001C57C↓o
.rdata:0000000180015408                                         ; .pdata:000000018001CA98↓o ...
.rdata:000000018001540C                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001540E                 dw 7
.rdata:0000000180015410                 UNWIND_CODE <0Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015412                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015414 stru_180015414  UNWIND_INFO_HDR <1, 7, 3, 0>
.rdata:0000000180015414                                         ; DATA XREF: .rdata:000000018001542C↓o
.rdata:0000000180015414                                         ; .rdata:000000018001546C↓o ...
.rdata:0000000180015418                 UNWIND_CODE <7, 42h>    ; UWOP_ALLOC_SMALL
.rdata:000000018001541A                 UNWIND_CODE <3, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001541C                 UNWIND_CODE <2, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001541E                 align 4
.rdata:0000000180015420 stru_180015420  UNWIND_INFO_HDR <21h, 18h, 4, 0>
.rdata:0000000180015420                                         ; DATA XREF: .rdata:0000000180015440↓o
.rdata:0000000180015420                                         ; .rdata:0000000180015450↓o ...
.rdata:0000000180015424                 UNWIND_CODE <18h, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180015426                 dw 4
.rdata:0000000180015428                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001542A                 dw 0Ah
.rdata:000000018001542C                 RUNTIME_FUNCTION <rva sub_180006800, rva loc_180006839, \
.rdata:000000018001542C                                   rva stru_180015414>
.rdata:0000000180015438 stru_180015438  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180015438                                         ; DATA XREF: .pdata:000000018001C5AC↓o
.rdata:000000018001543C                 UNWIND_CODE <5, 54h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001543E                 dw 0Bh
.rdata:0000000180015440                 RUNTIME_FUNCTION <rva loc_180006839, rva loc_180006882, \
.rdata:0000000180015440                                   rva stru_180015420>
.rdata:000000018001544C stru_18001544C  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:000000018001544C                                         ; DATA XREF: .pdata:000000018001C5B8↓o
.rdata:0000000180015450                 RUNTIME_FUNCTION <rva loc_180006839, rva loc_180006882, \
.rdata:0000000180015450                                   rva stru_180015420>
.rdata:000000018001545C stru_18001545C  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:000000018001545C                                         ; DATA XREF: .pdata:000000018001C5C4↓o
.rdata:0000000180015460                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180015462                 dw 4
.rdata:0000000180015464                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015466                 dw 0Bh
.rdata:0000000180015468                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001546A                 dw 0Ah
.rdata:000000018001546C                 RUNTIME_FUNCTION <rva sub_180006800, rva loc_180006839, \
.rdata:000000018001546C                                   rva stru_180015414>
.rdata:0000000180015478 stru_180015478  UNWIND_INFO_HDR <11h, 14h, 0Ah, 0>
.rdata:0000000180015478                                         ; DATA XREF: .pdata:000000018001C5D0↓o
.rdata:000000018001547C                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001547E                 dw 15h
.rdata:0000000180015480                 UNWIND_CODE <14h, 92h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015482                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015484                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015486                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015488                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:000000018001548A                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001548C                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001548E                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015490                 dd rva __CxxFrameHandler4
.rdata:0000000180015494                 dd rva byte_180015498
.rdata:0000000180015498 byte_180015498  db 28h                  ; DATA XREF: .rdata:0000000180015494↑o
.rdata:0000000180015498                                         ; FuncInfo4
.rdata:0000000180015499                 dd rva byte_1800154A1   ; unwind map
.rdata:000000018001549D                 dd rva byte_1800154A8   ; ip2state map
.rdata:00000001800154A1 byte_1800154A1  db 2                    ; DATA XREF: .rdata:0000000180015499↑o
.rdata:00000001800154A1                                         ; num unwind entries: 1
.rdata:00000001800154A2                 db 0Ah                  ; funclet type: 1
.rdata:00000001800154A3                 dd rva loc_180006E00    ; funclet
.rdata:00000001800154A7                 db 40h                  ; frame offset of object ptr to be destructed
.rdata:00000001800154A8 byte_1800154A8  db 4                    ; DATA XREF: .rdata:000000018001549D↑o
.rdata:00000001800154A8                                         ; num_ip2state entries: 2
.rdata:00000001800154A9                 db 5Dh, 5               ; ea 0x180006B07
.rdata:00000001800154AB                 db 2                    ; state 0
.rdata:00000001800154AC                 db 19h, 2               ; ea 0x180006B8D
.rdata:00000001800154AE                 db 0                    ; state -1
.rdata:00000001800154AF                 db    0
.rdata:00000001800154B0 stru_1800154B0  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
.rdata:00000001800154B0                                         ; DATA XREF: .pdata:000000018001C5DC↓o
.rdata:00000001800154B0                                         ; .pdata:000000018001C864↓o
.rdata:00000001800154B4                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800154B6                 dw 8
.rdata:00000001800154B8                 UNWIND_CODE <0Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800154BA                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800154BC stru_1800154BC  UNWIND_INFO_HDR <19h, 0Ah, 4, 0>
.rdata:00000001800154BC                                         ; DATA XREF: .pdata:000000018001C60C↓o
.rdata:00000001800154C0                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800154C2                 dw 6
.rdata:00000001800154C4                 UNWIND_CODE <0Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800154C6                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800154C8                 dd rva __CxxFrameHandler4
.rdata:00000001800154CC                 dd rva byte_1800154D0
.rdata:00000001800154D0 byte_1800154D0  db 68h                  ; DATA XREF: .rdata:00000001800154CC↑o
.rdata:00000001800154D0                                         ; FuncInfo4
.rdata:00000001800154D1                 dd rva byte_1800154D9   ; unwind map
.rdata:00000001800154D5                 dd rva byte_1800154DF   ; ip2state map
.rdata:00000001800154D9 byte_1800154D9  db 2                    ; DATA XREF: .rdata:00000001800154D1↑o
.rdata:00000001800154D9                                         ; .rdata:0000000180015971↓o ...
.rdata:00000001800154D9                                         ; num unwind entries: 1
.rdata:00000001800154DA                 db 0Eh                  ; funclet type: 3
.rdata:00000001800154DB                 dd rva __std_terminate  ; funclet
.rdata:00000001800154DF byte_1800154DF  db 2                    ; DATA XREF: .rdata:00000001800154D5↑o
.rdata:00000001800154DF                                         ; num_ip2state entries: 1
.rdata:00000001800154E0                 db 39h, 2               ; ea 0x180006FFE
.rdata:00000001800154E2                 db 2                    ; state 0
.rdata:00000001800154E3                 db    0
.rdata:00000001800154E4 stru_1800154E4  UNWIND_INFO_HDR <19h, 2Fh, 0Dh, 0>
.rdata:00000001800154E4                                         ; DATA XREF: .pdata:000000018001C618↓o
.rdata:00000001800154E8                 UNWIND_CODE <21h, 78h>  ; UWOP_SAVE_XMM128
.rdata:00000001800154EA                 dw 0Bh
.rdata:00000001800154EC                 UNWIND_CODE <1Dh, 68h>  ; UWOP_SAVE_XMM128
.rdata:00000001800154EE                 dw 0Ch
.rdata:00000001800154F0                 UNWIND_CODE <19h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800154F2                 dw 22h
.rdata:00000001800154F4                 UNWIND_CODE <19h, 1>    ; UWOP_ALLOC_LARGE
.rdata:00000001800154F6                 dw 1Ah
.rdata:00000001800154F8                 UNWIND_CODE <0Eh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800154FA                 UNWIND_CODE <0Ch, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800154FC                 UNWIND_CODE <0Ah, 70h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800154FE                 UNWIND_CODE <9, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015500                 UNWIND_CODE <8, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015502                 align 4
.rdata:0000000180015504                 dd rva __GSHandlerCheck_EH4
.rdata:0000000180015508                 dd rva byte_180015510
.rdata:000000018001550C                 db 0A2h
.rdata:000000018001550D                 db    0
.rdata:000000018001550E                 db    0
.rdata:000000018001550F                 db    0
.rdata:0000000180015510 byte_180015510  db 28h                  ; DATA XREF: .rdata:0000000180015508↑o
.rdata:0000000180015510                                         ; FuncInfo4
.rdata:0000000180015511                 dd rva byte_180015519   ; unwind map
.rdata:0000000180015515                 dd rva byte_180015532   ; ip2state map
.rdata:0000000180015519 byte_180015519  db 8                    ; DATA XREF: .rdata:0000000180015511↑o
.rdata:0000000180015519                                         ; num unwind entries: 4
.rdata:000000018001551A                 db 0Ch                  ; funclet type: 2
.rdata:000000018001551B                 dd rva sub_180006F70    ; funclet
.rdata:000000018001551F                 db 0B0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015520                 db 36h                  ; funclet type: 3
.rdata:0000000180015521                 dd rva loc_18001144C    ; funclet
.rdata:0000000180015525                 db 2Ah                  ; funclet type: 1
.rdata:0000000180015526                 dd rva sub_180002660    ; funclet
.rdata:000000018001552A                 db 1, 2                 ; frame offset of object ptr to be destructed
.rdata:000000018001552C                 db 62h                  ; funclet type: 1
.rdata:000000018001552D                 dd rva sub_180002660    ; funclet
.rdata:0000000180015531                 db 0C0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015532 byte_180015532  db 0Eh                  ; DATA XREF: .rdata:0000000180015515↑o
.rdata:0000000180015532                                         ; num_ip2state entries: 7
.rdata:0000000180015533                 db 78h                  ; ea 0x18000706C
.rdata:0000000180015534                 db 0                    ; state -1
.rdata:0000000180015535                 db 0B2h                 ; ea 0x1800070C5
.rdata:0000000180015536                 db 4                    ; state 1
.rdata:0000000180015537                 db 0A6h                 ; ea 0x180007118
.rdata:0000000180015538                 db 6                    ; state 2
.rdata:0000000180015539                 db 0C9h, 4              ; ea 0x18000724A
.rdata:000000018001553B                 db 4                    ; state 1
.rdata:000000018001553C                 db 0CEh                 ; ea 0x1800072B1
.rdata:000000018001553D                 db 8                    ; state 3
.rdata:000000018001553E                 db 7Dh, 4               ; ea 0x1800073D0
.rdata:0000000180015540                 db 4                    ; state 1
.rdata:0000000180015541                 db 5Ah                  ; ea 0x1800073FD
.rdata:0000000180015542                 db 0                    ; state -1
.rdata:0000000180015543                 db    0
.rdata:0000000180015544 stru_180015544  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180015544                                         ; DATA XREF: .pdata:000000018001C630↓o
.rdata:0000000180015548                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001554A                 dw 4
.rdata:000000018001554C                 RUNTIME_FUNCTION <rva sub_180007430, rva loc_180007449, \
.rdata:000000018001554C                                   rva stru_180015018>
.rdata:0000000180015558 stru_180015558  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015558                                         ; DATA XREF: .pdata:000000018001C63C↓o
.rdata:000000018001555C                 RUNTIME_FUNCTION <rva sub_180007430, rva loc_180007449, \
.rdata:000000018001555C                                   rva stru_180015018>
.rdata:0000000180015568 stru_180015568  UNWIND_INFO_HDR <11h, 0Fh, 6, 0>
.rdata:0000000180015568                                         ; DATA XREF: .pdata:000000018001C648↓o
.rdata:000000018001556C                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001556E                 dw 0Dh
.rdata:0000000180015570                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015572                 dw 0Ch
.rdata:0000000180015574                 UNWIND_CODE <0Fh, 72h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015576                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015578                 dd rva __CxxFrameHandler4
.rdata:000000018001557C                 dd rva byte_180015580
.rdata:0000000180015580 byte_180015580  db 28h                  ; DATA XREF: .rdata:000000018001557C↑o
.rdata:0000000180015580                                         ; FuncInfo4
.rdata:0000000180015581                 dd rva byte_1800151B5   ; unwind map
.rdata:0000000180015585                 dd rva byte_180015589   ; ip2state map
.rdata:0000000180015589 byte_180015589  db 6                    ; DATA XREF: .rdata:0000000180015585↑o
.rdata:0000000180015589                                         ; num_ip2state entries: 3
.rdata:000000018001558A                 db 72h                  ; ea 0x180007529
.rdata:000000018001558B                 db 0                    ; state -1
.rdata:000000018001558C                 db 46h                  ; ea 0x18000754C
.rdata:000000018001558D                 db 2                    ; state 0
.rdata:000000018001558E                 db 96h                  ; ea 0x180007597
.rdata:000000018001558F                 db 0                    ; state -1
.rdata:0000000180015590 stru_180015590  UNWIND_INFO_HDR <19h, 2Eh, 0Bh, 0>
.rdata:0000000180015590                                         ; DATA XREF: .pdata:000000018001C654↓o
.rdata:0000000180015594                 UNWIND_CODE <20h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015596                 dw 35h
.rdata:0000000180015598                 UNWIND_CODE <20h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001559A                 dw 34h
.rdata:000000018001559C                 UNWIND_CODE <20h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001559E                 dw 32h
.rdata:00000001800155A0                 UNWIND_CODE <20h, 1>    ; UWOP_ALLOC_LARGE
.rdata:00000001800155A2                 dw 2Eh
.rdata:00000001800155A4                 UNWIND_CODE <14h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800155A6                 UNWIND_CODE <12h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800155A8                 UNWIND_CODE <10h, 50h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800155AA                 align 4
.rdata:00000001800155AC                 dd rva __GSHandlerCheck_EH4
.rdata:00000001800155B0                 dd rva byte_1800155B8
.rdata:00000001800155B4                 db  62h ; b
.rdata:00000001800155B5                 db    1
.rdata:00000001800155B6                 db    0
.rdata:00000001800155B7                 db    0
.rdata:00000001800155B8 byte_1800155B8  db 28h                  ; DATA XREF: .rdata:00000001800155B0↑o
.rdata:00000001800155B8                                         ; FuncInfo4
.rdata:00000001800155B9                 dd rva byte_1800155C1   ; unwind map
.rdata:00000001800155BD                 dd rva byte_1800155D7   ; ip2state map
.rdata:00000001800155C1 byte_1800155C1  db 8                    ; DATA XREF: .rdata:00000001800155B9↑o
.rdata:00000001800155C1                                         ; num unwind entries: 4
.rdata:00000001800155C2                 db 0Eh                  ; funclet type: 3
.rdata:00000001800155C3                 dd rva loc_180011480    ; funclet
.rdata:00000001800155C7                 db 2Eh                  ; funclet type: 3
.rdata:00000001800155C8                 dd rva loc_1800114AE    ; funclet
.rdata:00000001800155CC                 db 5Ah                  ; funclet type: 1
.rdata:00000001800155CD                 dd rva sub_1800078D0    ; funclet
.rdata:00000001800155D1                 db 0C0h                 ; frame offset of object ptr to be destructed
.rdata:00000001800155D2                 db 36h                  ; funclet type: 3
.rdata:00000001800155D3                 dd rva loc_1800114CC    ; funclet
.rdata:00000001800155D7 byte_1800155D7  db 0Ch                  ; DATA XREF: .rdata:00000001800155BD↑o
.rdata:00000001800155D7                                         ; num_ip2state entries: 6
.rdata:00000001800155D8                 db 6Dh, 3               ; ea 0x1800076DB
.rdata:00000001800155DA                 db 0                    ; state -1
.rdata:00000001800155DB                 db 38h                  ; ea 0x1800076F7
.rdata:00000001800155DC                 db 2                    ; state 0
.rdata:00000001800155DD                 db 68h                  ; ea 0x18000772B
.rdata:00000001800155DE                 db 4                    ; state 1
.rdata:00000001800155DF                 db 0A4h                 ; ea 0x18000777D
.rdata:00000001800155E0                 db 6                    ; state 2
.rdata:00000001800155E1                 db 9Ah                  ; ea 0x1800077CA
.rdata:00000001800155E2                 db 8                    ; state 3
.rdata:00000001800155E3                 db 35h, 2               ; ea 0x180007857
.rdata:00000001800155E5                 db 0                    ; state -1
.rdata:00000001800155E6                 db    0
.rdata:00000001800155E7                 db    0
.rdata:00000001800155E8 stru_1800155E8  UNWIND_INFO_HDR <19h, 19h, 2, 0>
.rdata:00000001800155E8                                         ; DATA XREF: .rdata:0000000180015600↓o
.rdata:00000001800155E8                                         ; .rdata:0000000180015658↓o ...
.rdata:00000001800155EC                 UNWIND_CODE <0Ah, 1>    ; UWOP_ALLOC_LARGE
.rdata:00000001800155EE                 dw 11h
.rdata:00000001800155F0                 dd rva __GSHandlerCheck
.rdata:00000001800155F4                 dd 70h
.rdata:00000001800155F8 stru_1800155F8  UNWIND_INFO_HDR <21h, 4, 2, 0>
.rdata:00000001800155F8                                         ; DATA XREF: .rdata:0000000180015614↓o
.rdata:00000001800155F8                                         ; .rdata:0000000180015648↓o ...
.rdata:00000001800155FC                 UNWIND_CODE <4, 64h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800155FE                 dw 15h
.rdata:0000000180015600                 RUNTIME_FUNCTION <rva sub_180007930, rva loc_18000795E, \
.rdata:0000000180015600                                   rva stru_1800155E8>
.rdata:000000018001560C stru_18001560C  UNWIND_INFO_HDR <21h, 4, 2, 0>
.rdata:000000018001560C                                         ; DATA XREF: .rdata:0000000180015628↓o
.rdata:000000018001560C                                         ; .rdata:0000000180015638↓o ...
.rdata:0000000180015610                 UNWIND_CODE <4, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015612                 dw 10h
.rdata:0000000180015614                 RUNTIME_FUNCTION <rva loc_18000795E, rva loc_18000797F, \
.rdata:0000000180015614                                   rva stru_1800155F8>
.rdata:0000000180015620 stru_180015620  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:0000000180015620                                         ; DATA XREF: .pdata:000000018001C690↓o
.rdata:0000000180015624                 UNWIND_CODE <8, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015626                 dw 14h
.rdata:0000000180015628                 RUNTIME_FUNCTION <rva loc_18000797F, rva loc_1800079B8, \
.rdata:0000000180015628                                   rva stru_18001560C>
.rdata:0000000180015634 stru_180015634  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015634                                         ; DATA XREF: .pdata:000000018001C69C↓o
.rdata:0000000180015638                 RUNTIME_FUNCTION <rva loc_18000797F, rva loc_1800079B8, \
.rdata:0000000180015638                                   rva stru_18001560C>
.rdata:0000000180015644 stru_180015644  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015644                                         ; DATA XREF: .pdata:000000018001C6A8↓o
.rdata:0000000180015648                 RUNTIME_FUNCTION <rva loc_18000795E, rva loc_18000797F, \
.rdata:0000000180015648                                   rva stru_1800155F8>
.rdata:0000000180015654 stru_180015654  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015654                                         ; DATA XREF: .pdata:000000018001C6B4↓o
.rdata:0000000180015658                 RUNTIME_FUNCTION <rva sub_180007930, rva loc_18000795E, \
.rdata:0000000180015658                                   rva stru_1800155E8>
.rdata:0000000180015664 stru_180015664  UNWIND_INFO_HDR <19h, 18h, 2, 0>
.rdata:0000000180015664                                         ; DATA XREF: .rdata:000000018001567C↓o
.rdata:0000000180015664                                         ; .rdata:00000001800156B0↓o ...
.rdata:0000000180015668                 UNWIND_CODE <9, 0F2h>   ; UWOP_ALLOC_SMALL
.rdata:000000018001566A                 UNWIND_CODE <2, 60h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001566C                 dd rva __GSHandlerCheck
.rdata:0000000180015670                 dd 70h
.rdata:0000000180015674 stru_180015674  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:0000000180015674                                         ; DATA XREF: .rdata:0000000180015690↓o
.rdata:0000000180015674                                         ; .rdata:00000001800156A0↓o ...
.rdata:0000000180015678                 UNWIND_CODE <8, 74h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001567A                 dw 15h
.rdata:000000018001567C                 RUNTIME_FUNCTION <rva sub_180007B30, rva loc_180007B6D, \
.rdata:000000018001567C                                   rva stru_180015664>
.rdata:0000000180015688 stru_180015688  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:0000000180015688                                         ; DATA XREF: .pdata:000000018001C6D8↓o
.rdata:000000018001568C                 UNWIND_CODE <8, 34h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001568E                 dw 14h
.rdata:0000000180015690                 RUNTIME_FUNCTION <rva loc_180007B6D, rva loc_180007BB8, \
.rdata:0000000180015690                                   rva stru_180015674>
.rdata:000000018001569C stru_18001569C  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:000000018001569C                                         ; DATA XREF: .pdata:000000018001C6E4↓o
.rdata:00000001800156A0                 RUNTIME_FUNCTION <rva loc_180007B6D, rva loc_180007BB8, \
.rdata:00000001800156A0                                   rva stru_180015674>
.rdata:00000001800156AC stru_1800156AC  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800156AC                                         ; DATA XREF: .pdata:000000018001C6F0↓o
.rdata:00000001800156B0                 RUNTIME_FUNCTION <rva sub_180007B30, rva loc_180007B6D, \
.rdata:00000001800156B0                                   rva stru_180015664>
.rdata:00000001800156BC stru_1800156BC  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:00000001800156BC                                         ; DATA XREF: .rdata:00000001800156D8↓o
.rdata:00000001800156BC                                         ; .rdata:00000001800156E8↓o ...
.rdata:00000001800156C0                 UNWIND_CODE <8, 74h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800156C2                 dw 15h
.rdata:00000001800156C4                 RUNTIME_FUNCTION <rva sub_180007D40, rva loc_180007D7D, \
.rdata:00000001800156C4                                   rva stru_180015664>
.rdata:00000001800156D0 stru_1800156D0  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:00000001800156D0                                         ; DATA XREF: .pdata:000000018001C714↓o
.rdata:00000001800156D4                 UNWIND_CODE <8, 34h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800156D6                 dw 14h
.rdata:00000001800156D8                 RUNTIME_FUNCTION <rva loc_180007D7D, rva loc_180007DC8, \
.rdata:00000001800156D8                                   rva stru_1800156BC>
.rdata:00000001800156E4 stru_1800156E4  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800156E4                                         ; DATA XREF: .pdata:000000018001C720↓o
.rdata:00000001800156E8                 RUNTIME_FUNCTION <rva loc_180007D7D, rva loc_180007DC8, \
.rdata:00000001800156E8                                   rva stru_1800156BC>
.rdata:00000001800156F4 stru_1800156F4  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800156F4                                         ; DATA XREF: .pdata:000000018001C72C↓o
.rdata:00000001800156F8                 RUNTIME_FUNCTION <rva sub_180007D40, rva loc_180007D7D, \
.rdata:00000001800156F8                                   rva stru_180015664>
.rdata:0000000180015704 stru_180015704  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:0000000180015704                                         ; DATA XREF: .rdata:0000000180015720↓o
.rdata:0000000180015704                                         ; .rdata:0000000180015730↓o ...
.rdata:0000000180015708                 UNWIND_CODE <8, 74h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001570A                 dw 15h
.rdata:000000018001570C                 RUNTIME_FUNCTION <rva sub_180007F50, rva loc_180007F8D, \
.rdata:000000018001570C                                   rva stru_180015664>
.rdata:0000000180015718 stru_180015718  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:0000000180015718                                         ; DATA XREF: .pdata:000000018001C750↓o
.rdata:000000018001571C                 UNWIND_CODE <8, 34h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001571E                 dw 14h
.rdata:0000000180015720                 RUNTIME_FUNCTION <rva loc_180007F8D, rva loc_180007FD8, \
.rdata:0000000180015720                                   rva stru_180015704>
.rdata:000000018001572C stru_18001572C  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:000000018001572C                                         ; DATA XREF: .pdata:000000018001C75C↓o
.rdata:0000000180015730                 RUNTIME_FUNCTION <rva loc_180007F8D, rva loc_180007FD8, \
.rdata:0000000180015730                                   rva stru_180015704>
.rdata:000000018001573C stru_18001573C  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:000000018001573C                                         ; DATA XREF: .pdata:000000018001C768↓o
.rdata:0000000180015740                 RUNTIME_FUNCTION <rva sub_180007F50, rva loc_180007F8D, \
.rdata:0000000180015740                                   rva stru_180015664>
.rdata:000000018001574C stru_18001574C  UNWIND_INFO_HDR <1, 14h, 8, 0>
.rdata:000000018001574C                                         ; DATA XREF: .pdata:000000018001C774↓o
.rdata:0000000180015750                 UNWIND_CODE <14h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015752                 dw 4
.rdata:0000000180015754                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015756                 dw 3
.rdata:0000000180015758                 UNWIND_CODE <0Ah, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001575A                 dw 2
.rdata:000000018001575C                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001575E                 dw 1
.rdata:0000000180015760 stru_180015760  UNWIND_INFO_HDR <1, 16h, 9, 0>
.rdata:0000000180015760                                         ; DATA XREF: .pdata:000000018001C780↓o
.rdata:0000000180015764                 UNWIND_CODE <16h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015766                 dw 5
.rdata:0000000180015768                 UNWIND_CODE <16h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001576A                 dw 4
.rdata:000000018001576C                 UNWIND_CODE <16h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001576E                 dw 3
.rdata:0000000180015770                 UNWIND_CODE <16h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015772                 dw 2
.rdata:0000000180015774                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015776                 align 4
.rdata:0000000180015778 stru_180015778  UNWIND_INFO_HDR <1, 4, 1, 0>
.rdata:0000000180015778                                         ; DATA XREF: .pdata:000000018001C78C↓o
.rdata:000000018001577C                 UNWIND_CODE <4, 22h>    ; UWOP_ALLOC_SMALL
.rdata:000000018001577E                 align 4
.rdata:0000000180015780 stru_180015780  UNWIND_INFO_HDR <1, 16h, 0Ah, 0>
.rdata:0000000180015780                                         ; DATA XREF: .pdata:000000018001C798↓o
.rdata:0000000180015784                 UNWIND_CODE <16h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015786                 dw 0Ch
.rdata:0000000180015788                 UNWIND_CODE <16h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001578A                 dw 0Bh
.rdata:000000018001578C                 UNWIND_CODE <16h, 32h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001578E                 UNWIND_CODE <12h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015790                 UNWIND_CODE <10h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015792                 UNWIND_CODE <0Eh, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015794                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015796                 UNWIND_CODE <0Bh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015798 stru_180015798  UNWIND_INFO_HDR <19h, 16h, 3, 0>
.rdata:0000000180015798                                         ; DATA XREF: .rdata:00000001800157B4↓o
.rdata:0000000180015798                                         ; .rdata:00000001800157C4↓o ...
.rdata:000000018001579C                 UNWIND_CODE <7, 82h>    ; UWOP_ALLOC_SMALL
.rdata:000000018001579E                 UNWIND_CODE <3, 60h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800157A0                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800157A2                 align 4
.rdata:00000001800157A4                 dd rva __GSHandlerCheck
.rdata:00000001800157A8                 dd 38h
.rdata:00000001800157AC stru_1800157AC  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:00000001800157AC                                         ; DATA XREF: .pdata:000000018001C7D4↓o
.rdata:00000001800157B0                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800157B2                 dw 8
.rdata:00000001800157B4                 RUNTIME_FUNCTION <rva sub_180008800, rva loc_18000884D, \
.rdata:00000001800157B4                                   rva stru_180015798>
.rdata:00000001800157C0 stru_1800157C0  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800157C0                                         ; DATA XREF: .pdata:000000018001C7E0↓o
.rdata:00000001800157C4                 RUNTIME_FUNCTION <rva sub_180008800, rva loc_18000884D, \
.rdata:00000001800157C4                                   rva stru_180015798>
.rdata:00000001800157D0 stru_1800157D0  UNWIND_INFO_HDR <19h, 17h, 4, 0>
.rdata:00000001800157D0                                         ; DATA XREF: .pdata:000000018001C7EC↓o
.rdata:00000001800157D4                 UNWIND_CODE <8, 52h>    ; UWOP_ALLOC_SMALL
.rdata:00000001800157D6                 UNWIND_CODE <4, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800157D8                 UNWIND_CODE <3, 60h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800157DA                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800157DC                 dd rva __GSHandlerCheck
.rdata:00000001800157E0                 dd 28h
.rdata:00000001800157E4 stru_1800157E4  UNWIND_INFO_HDR <19h, 1Ah, 6, 0>
.rdata:00000001800157E4                                         ; DATA XREF: .pdata:000000018001C7F8↓o
.rdata:00000001800157E8                 UNWIND_CODE <0Bh, 52h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800157EA                 UNWIND_CODE <7, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:00000001800157EC                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800157EE                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800157F0                 UNWIND_CODE <3, 50h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800157F2                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800157F4                 dd rva __GSHandlerCheck
.rdata:00000001800157F8                 dd 28h
.rdata:00000001800157FC stru_1800157FC  UNWIND_INFO_HDR <1, 3Eh, 0Ah, 0>
.rdata:00000001800157FC                                         ; DATA XREF: .pdata:000000018001C804↓o
.rdata:0000000180015800                 UNWIND_CODE <3Eh, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180015802                 dw 0Bh
.rdata:0000000180015804                 UNWIND_CODE <36h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015806                 dw 9
.rdata:0000000180015808                 UNWIND_CODE <31h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001580A                 dw 8
.rdata:000000018001580C                 UNWIND_CODE <9, 32h>    ; UWOP_ALLOC_SMALL
.rdata:000000018001580E                 UNWIND_CODE <5, 0F0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015810                 UNWIND_CODE <3, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015812                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015814 stru_180015814  UNWIND_INFO_HDR <1, 41h, 6, 0>
.rdata:0000000180015814                                         ; DATA XREF: .rdata:000000018001582C↓o
.rdata:0000000180015814                                         ; .rdata:000000018001583C↓o ...
.rdata:0000000180015818                 UNWIND_CODE <41h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001581A                 dw 5
.rdata:000000018001581C                 UNWIND_CODE <9, 52h>    ; UWOP_ALLOC_SMALL
.rdata:000000018001581E                 UNWIND_CODE <5, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015820                 UNWIND_CODE <3, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015822                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015824 stru_180015824  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180015824                                         ; DATA XREF: .pdata:000000018001C81C↓o
.rdata:0000000180015828                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001582A                 dw 4
.rdata:000000018001582C                 RUNTIME_FUNCTION <rva sub_180008BC0, rva loc_180008C1D, \
.rdata:000000018001582C                                   rva stru_180015814>
.rdata:0000000180015838 stru_180015838  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015838                                         ; DATA XREF: .pdata:000000018001C828↓o
.rdata:000000018001583C                 RUNTIME_FUNCTION <rva sub_180008BC0, rva loc_180008C1D, \
.rdata:000000018001583C                                   rva stru_180015814>
.rdata:0000000180015848 stru_180015848  UNWIND_INFO_HDR <19h, 28h, 8, 0>
.rdata:0000000180015848                                         ; DATA XREF: .pdata:000000018001C834↓o
.rdata:000000018001584C                 UNWIND_CODE <1Ah, 74h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001584E                 dw 15h
.rdata:0000000180015850                 UNWIND_CODE <1Ah, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015852                 dw 14h
.rdata:0000000180015854                 UNWIND_CODE <1Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015856                 dw 13h
.rdata:0000000180015858                 UNWIND_CODE <1Ah, 0F2h> ; UWOP_ALLOC_SMALL
.rdata:000000018001585A                 UNWIND_CODE <10h, 50h>  ; UWOP_PUSH_NONVOL
.rdata:000000018001585C                 dd rva __GSHandlerCheck_EH4
.rdata:0000000180015860                 dd rva byte_180015868
.rdata:0000000180015864                 db  7Ah ; z
.rdata:0000000180015865                 db    0
.rdata:0000000180015866                 db    0
.rdata:0000000180015867                 db    0
.rdata:0000000180015868 byte_180015868  db 28h                  ; DATA XREF: .rdata:0000000180015860↑o
.rdata:0000000180015868                                         ; FuncInfo4
.rdata:0000000180015869                 dd rva byte_180015871   ; unwind map
.rdata:000000018001586D                 dd rva byte_180015878   ; ip2state map
.rdata:0000000180015871 byte_180015871  db 2                    ; DATA XREF: .rdata:0000000180015869↑o
.rdata:0000000180015871                                         ; num unwind entries: 1
.rdata:0000000180015872                 db 0Ah                  ; funclet type: 1
.rdata:0000000180015873                 dd rva sub_180002660    ; funclet
.rdata:0000000180015877                 db 0B0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015878 byte_180015878  db 4                    ; DATA XREF: .rdata:000000018001586D↑o
.rdata:0000000180015878                                         ; num_ip2state entries: 2
.rdata:0000000180015879                 db 0C1h, 4              ; ea 0x180008E40
.rdata:000000018001587B                 db 2                    ; state 0
.rdata:000000018001587C                 db 69h, 4               ; ea 0x180008F5A
.rdata:000000018001587E                 db 0                    ; state -1
.rdata:000000018001587F                 db    0
.rdata:0000000180015880 stru_180015880  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180015880                                         ; DATA XREF: .pdata:000000018001C84C↓o
.rdata:0000000180015884                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015886                 dw 6
.rdata:0000000180015888                 RUNTIME_FUNCTION <rva sub_180008FC0, rva loc_180008FF3, \
.rdata:0000000180015888                                   rva stru_180014BA0>
.rdata:0000000180015894 stru_180015894  UNWIND_INFO_HDR <21h, 0, 2, 0>
.rdata:0000000180015894                                         ; DATA XREF: .pdata:000000018001C858↓o
.rdata:0000000180015898                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001589A                 dw 6
.rdata:000000018001589C                 RUNTIME_FUNCTION <rva sub_180008FC0, rva loc_180008FF3, \
.rdata:000000018001589C                                   rva stru_180014BA0>
.rdata:00000001800158A8 stru_1800158A8  UNWIND_INFO_HDR <19h, 1Ch, 4, 0>
.rdata:00000001800158A8                                         ; DATA XREF: .rdata:00000001800158C4↓o
.rdata:00000001800158A8                                         ; .rdata:00000001800158D4↓o ...
.rdata:00000001800158AC                 UNWIND_CODE <0Dh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800158AE                 dw 15h
.rdata:00000001800158B0                 UNWIND_CODE <0Dh, 0F2h> ; UWOP_ALLOC_SMALL
.rdata:00000001800158B2                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800158B4                 dd rva __GSHandlerCheck
.rdata:00000001800158B8                 dd 78h
.rdata:00000001800158BC stru_1800158BC  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:00000001800158BC                                         ; DATA XREF: .pdata:000000018001C87C↓o
.rdata:00000001800158C0                 UNWIND_CODE <8, 64h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800158C2                 dw 14h
.rdata:00000001800158C4                 RUNTIME_FUNCTION <rva sub_180009110, rva loc_180009170, \
.rdata:00000001800158C4                                   rva stru_1800158A8>
.rdata:00000001800158D0 stru_1800158D0  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800158D0                                         ; DATA XREF: .pdata:000000018001C888↓o
.rdata:00000001800158D4                 RUNTIME_FUNCTION <rva sub_180009110, rva loc_180009170, \
.rdata:00000001800158D4                                   rva stru_1800158A8>
.rdata:00000001800158E0 stru_1800158E0  UNWIND_INFO_HDR <19h, 1Bh, 6, 0>
.rdata:00000001800158E0                                         ; DATA XREF: .pdata:000000018001C894↓o
.rdata:00000001800158E4                 UNWIND_CODE <0Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800158E6                 dw 10h
.rdata:00000001800158E8                 UNWIND_CODE <0Ch, 92h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800158EA                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800158EC                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800158EE                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800158F0                 dd rva __GSHandlerCheck_EH4
.rdata:00000001800158F4                 dd rva byte_1800158FC
.rdata:00000001800158F8                 db  4Ah ; J
.rdata:00000001800158F9                 db    0
.rdata:00000001800158FA                 db    0
.rdata:00000001800158FB                 db    0
.rdata:00000001800158FC byte_1800158FC  db 28h                  ; DATA XREF: .rdata:00000001800158F4↑o
.rdata:00000001800158FC                                         ; FuncInfo4
.rdata:00000001800158FD                 dd rva byte_180015905   ; unwind map
.rdata:0000000180015901                 dd rva byte_18001590C   ; ip2state map
.rdata:0000000180015905 byte_180015905  db 2                    ; DATA XREF: .rdata:00000001800158FD↑o
.rdata:0000000180015905                                         ; num unwind entries: 1
.rdata:0000000180015906                 db 0Ah                  ; funclet type: 1
.rdata:0000000180015907                 dd rva sub_180006F40    ; funclet
.rdata:000000018001590B                 db 40h                  ; frame offset of object ptr to be destructed
.rdata:000000018001590C byte_18001590C  db 6                    ; DATA XREF: .rdata:0000000180015901↑o
.rdata:000000018001590C                                         ; num_ip2state entries: 3
.rdata:000000018001590D                 db 86h                  ; ea 0x180009343
.rdata:000000018001590E                 db 0                    ; state -1
.rdata:000000018001590F                 db 21h, 3               ; ea 0x18000940B
.rdata:0000000180015911                 db 2                    ; state 0
.rdata:0000000180015912                 db 58h                  ; ea 0x180009437
.rdata:0000000180015913                 db 0                    ; state -1
.rdata:0000000180015914 stru_180015914  UNWIND_INFO_HDR <11h, 0Ah, 4, 0>
.rdata:0000000180015914                                         ; DATA XREF: .pdata:000000018001C8A0↓o
.rdata:0000000180015918                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001591A                 dw 0Bh
.rdata:000000018001591C                 UNWIND_CODE <0Ah, 72h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001591E                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015920                 dd rva __CxxFrameHandler4
.rdata:0000000180015924                 dd rva byte_180015928
.rdata:0000000180015928 byte_180015928  db 28h                  ; DATA XREF: .rdata:0000000180015924↑o
.rdata:0000000180015928                                         ; FuncInfo4
.rdata:0000000180015929                 dd rva byte_180015931   ; unwind map
.rdata:000000018001592D                 dd rva byte_180015942   ; ip2state map
.rdata:0000000180015931 byte_180015931  db 6                    ; DATA XREF: .rdata:0000000180015929↑o
.rdata:0000000180015931                                         ; num unwind entries: 3
.rdata:0000000180015932                 db 0Eh                  ; funclet type: 3
.rdata:0000000180015933                 dd rva loc_180011520    ; funclet
.rdata:0000000180015937                 db 2Eh                  ; funclet type: 3
.rdata:0000000180015938                 dd rva loc_18001154E    ; funclet
.rdata:000000018001593C                 db 2Ch                  ; funclet type: 2
.rdata:000000018001593D                 dd rva ??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; funclet
.rdata:0000000180015941                 db 60h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015942 byte_180015942  db 8                    ; DATA XREF: .rdata:000000018001592D↑o
.rdata:0000000180015942                                         ; num_ip2state entries: 4
.rdata:0000000180015943                 db 56h                  ; ea 0x1800094AB
.rdata:0000000180015944                 db 0                    ; state -1
.rdata:0000000180015945                 db 3Eh                  ; ea 0x1800094CA
.rdata:0000000180015946                 db 2                    ; state 0
.rdata:0000000180015947                 db 64h                  ; ea 0x1800094FC
.rdata:0000000180015948                 db 4                    ; state 1
.rdata:0000000180015949                 db 38h                  ; ea 0x180009518
.rdata:000000018001594A                 db 6                    ; state 2
.rdata:000000018001594B                 db    0
.rdata:000000018001594C stru_18001594C  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
.rdata:000000018001594C                                         ; DATA XREF: .pdata:000000018001C8B8↓o
.rdata:000000018001594C                                         ; .pdata:000000018001CAC8↓o ...
.rdata:0000000180015950                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015952                 dw 7
.rdata:0000000180015954                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015956                 dw 6
.rdata:0000000180015958                 UNWIND_CODE <0Fh, 32h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001595A                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000018001595C stru_18001595C  UNWIND_INFO_HDR <19h, 0Ah, 4, 0>
.rdata:000000018001595C                                         ; DATA XREF: .pdata:000000018001C8C4↓o
.rdata:0000000180015960                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015962                 dw 6
.rdata:0000000180015964                 UNWIND_CODE <0Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015966                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015968                 dd rva __CxxFrameHandler4
.rdata:000000018001596C                 dd rva byte_180015970
.rdata:0000000180015970 byte_180015970  db 68h                  ; DATA XREF: .rdata:000000018001596C↑o
.rdata:0000000180015970                                         ; FuncInfo4
.rdata:0000000180015971                 dd rva byte_1800154D9   ; unwind map
.rdata:0000000180015975                 dd rva byte_180015979   ; ip2state map
.rdata:0000000180015979 byte_180015979  db 2                    ; DATA XREF: .rdata:0000000180015975↑o
.rdata:0000000180015979                                         ; num_ip2state entries: 1
.rdata:000000018001597A                 db 0B2h                 ; ea 0x180009689
.rdata:000000018001597B                 db 2                    ; state 0
.rdata:000000018001597C stru_18001597C  UNWIND_INFO_HDR <19h, 6, 2, 0>
.rdata:000000018001597C                                         ; DATA XREF: .pdata:000000018001C8DC↓o
.rdata:0000000180015980                 UNWIND_CODE <6, 32h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180015982                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015984                 dd rva __CxxFrameHandler4
.rdata:0000000180015988                 dd rva byte_18001598C
.rdata:000000018001598C byte_18001598C  db 68h                  ; DATA XREF: .rdata:0000000180015988↑o
.rdata:000000018001598C                                         ; FuncInfo4
.rdata:000000018001598D                 dd rva byte_1800154D9   ; unwind map
.rdata:0000000180015991                 dd rva byte_180015995   ; ip2state map
.rdata:0000000180015995 byte_180015995  db 4                    ; DATA XREF: .rdata:0000000180015991↑o
.rdata:0000000180015995                                         ; num_ip2state entries: 2
.rdata:0000000180015996                 db 2Ch                  ; ea 0x180009716
.rdata:0000000180015997                 db 0                    ; state -1
.rdata:0000000180015998                 db 3Ch                  ; ea 0x180009734
.rdata:0000000180015999                 db 2                    ; state 0
.rdata:000000018001599A                 db    0
.rdata:000000018001599B                 db    0
.rdata:000000018001599C stru_18001599C  UNWIND_INFO_HDR <19h, 15h, 2, 0>
.rdata:000000018001599C                                         ; DATA XREF: .rdata:00000001800159B4↓o
.rdata:000000018001599C                                         ; .rdata:00000001800159C8↓o ...
.rdata:00000001800159A0                 UNWIND_CODE <6, 0B2h>   ; UWOP_ALLOC_SMALL
.rdata:00000001800159A2                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800159A4                 dd rva __GSHandlerCheck
.rdata:00000001800159A8                 dd 58h
.rdata:00000001800159AC stru_1800159AC  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:00000001800159AC                                         ; DATA XREF: .pdata:000000018001C8F4↓o
.rdata:00000001800159B0                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800159B2                 dw 0Fh
.rdata:00000001800159B4                 RUNTIME_FUNCTION <rva sub_180009740, rva loc_180009775, \
.rdata:00000001800159B4                                   rva stru_18001599C>
.rdata:00000001800159C0 stru_1800159C0  UNWIND_INFO_HDR <21h, 0, 2, 0>
.rdata:00000001800159C0                                         ; DATA XREF: .pdata:000000018001C900↓o
.rdata:00000001800159C4                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800159C6                 dw 0Fh
.rdata:00000001800159C8                 RUNTIME_FUNCTION <rva sub_180009740, rva loc_180009775, \
.rdata:00000001800159C8                                   rva stru_18001599C>
.rdata:00000001800159D4 stru_1800159D4  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800159D4                                         ; DATA XREF: .pdata:000000018001C90C↓o
.rdata:00000001800159D8                 RUNTIME_FUNCTION <rva sub_180009740, rva loc_180009775, \
.rdata:00000001800159D8                                   rva stru_18001599C>
.rdata:00000001800159E4 stru_1800159E4  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
.rdata:00000001800159E4                                         ; DATA XREF: .pdata:000000018001C918↓o
.rdata:00000001800159E4                                         ; .pdata:000000018001CDB0↓o
.rdata:00000001800159E8                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800159EA                 dw 8
.rdata:00000001800159EC                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800159EE                 dw 7
.rdata:00000001800159F0                 UNWIND_CODE <0Fh, 32h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800159F2                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800159F4 stru_1800159F4  UNWIND_INFO_HDR <19h, 4, 1, 0>
.rdata:00000001800159F4                                         ; DATA XREF: .pdata:000000018001C924↓o
.rdata:00000001800159F8                 UNWIND_CODE <4, 42h>    ; UWOP_ALLOC_SMALL
.rdata:00000001800159FA                 align 4
.rdata:00000001800159FC                 dd rva __CxxFrameHandler4
.rdata:0000000180015A00                 dd rva byte_180015A04
.rdata:0000000180015A04 byte_180015A04  db 60h                  ; DATA XREF: .rdata:0000000180015A00↑o
.rdata:0000000180015A04                                         ; FuncInfo4
.rdata:0000000180015A05                 dd rva byte_180015A09   ; ip2state map
.rdata:0000000180015A09 byte_180015A09  db 2                    ; DATA XREF: .rdata:0000000180015A05↑o
.rdata:0000000180015A09                                         ; num_ip2state entries: 1
.rdata:0000000180015A0A                 db 36h                  ; ea 0x1800098FB
.rdata:0000000180015A0B                 db 0                    ; state -1
.rdata:0000000180015A0C stru_180015A0C  UNWIND_INFO_HDR <1, 0Ch, 6, 0>
.rdata:0000000180015A0C                                         ; DATA XREF: .rdata:0000000180015A24↓o
.rdata:0000000180015A0C                                         ; .rdata:0000000180015A38↓o ...
.rdata:0000000180015A10                 UNWIND_CODE <0Ch, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015A12                 UNWIND_CODE <8, 0F0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015A14                 UNWIND_CODE <6, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015A16                 UNWIND_CODE <4, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015A18                 UNWIND_CODE <3, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015A1A                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015A1C stru_180015A1C  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180015A1C                                         ; DATA XREF: .pdata:000000018001C93C↓o
.rdata:0000000180015A20                 UNWIND_CODE <5, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015A22                 dw 0Dh
.rdata:0000000180015A24                 RUNTIME_FUNCTION <rva sub_180009910, rva loc_18000999B, \
.rdata:0000000180015A24                                   rva stru_180015A0C>
.rdata:0000000180015A30 stru_180015A30  UNWIND_INFO_HDR <21h, 0, 2, 0>
.rdata:0000000180015A30                                         ; DATA XREF: .pdata:000000018001C948↓o
.rdata:0000000180015A34                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015A36                 dw 0Dh
.rdata:0000000180015A38                 RUNTIME_FUNCTION <rva sub_180009910, rva loc_18000999B, \
.rdata:0000000180015A38                                   rva stru_180015A0C>
.rdata:0000000180015A44 stru_180015A44  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015A44                                         ; DATA XREF: .pdata:000000018001C954↓o
.rdata:0000000180015A48                 RUNTIME_FUNCTION <rva sub_180009910, rva loc_18000999B, \
.rdata:0000000180015A48                                   rva stru_180015A0C>
.rdata:0000000180015A54 stru_180015A54  UNWIND_INFO_HDR <19h, 17h, 6, 0>
.rdata:0000000180015A54                                         ; DATA XREF: .pdata:000000018001C96C↓o
.rdata:0000000180015A58                 UNWIND_CODE <17h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015A5A                 dw 0Ch
.rdata:0000000180015A5C                 UNWIND_CODE <17h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015A5E                 UNWIND_CODE <13h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015A60                 UNWIND_CODE <11h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015A62                 UNWIND_CODE <10h, 60h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015A64                 dd rva __CxxFrameHandler4
.rdata:0000000180015A68                 dd rva byte_180015A6C
.rdata:0000000180015A6C byte_180015A6C  db 38h                  ; DATA XREF: .rdata:0000000180015A68↑o
.rdata:0000000180015A6C                                         ; FuncInfo4
.rdata:0000000180015A6D                 dd rva byte_180015A79   ; unwind map
.rdata:0000000180015A71                 dd rva byte_180015A92   ; try block map
.rdata:0000000180015A75                 dd rva byte_180015AA3   ; ip2state map
.rdata:0000000180015A79 byte_180015A79  db 0Ch                  ; DATA XREF: .rdata:0000000180015A6D↑o
.rdata:0000000180015A79                                         ; .rdata:0000000180015B69↓o ...
.rdata:0000000180015A79                                         ; num unwind entries: 6
.rdata:0000000180015A7A                 db 0Ah                  ; funclet type: 1
.rdata:0000000180015A7B                 dd rva sub_1800098E0    ; funclet
.rdata:0000000180015A7F                 db 40h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015A80                 db 3Ah                  ; funclet type: 1
.rdata:0000000180015A81                 dd rva sub_180009700    ; funclet
.rdata:0000000180015A85                 db 40h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015A86                 db 30h                  ; funclet type: 0
.rdata:0000000180015A87                 db 38h                  ; funclet type: 0
.rdata:0000000180015A88                 db 7Eh                  ; funclet type: 3
.rdata:0000000180015A89                 dd rva __std_terminate  ; funclet
.rdata:0000000180015A8D                 db 2Eh                  ; funclet type: 3
.rdata:0000000180015A8E                 dd rva __std_terminate  ; funclet
.rdata:0000000180015A92 byte_180015A92  db 2                    ; DATA XREF: .rdata:0000000180015A71↑o
.rdata:0000000180015A92                                         ; num_tryblocks: 1
.rdata:0000000180015A93                 db 4                    ; lowest state index of try
.rdata:0000000180015A94                 db 4                    ; highest state index of try
.rdata:0000000180015A95                 db 6                    ; highest state index of any associated catch
.rdata:0000000180015A96                 dd rva byte_180015A9A   ; list of handlers
.rdata:0000000180015A9A byte_180015A9A  db 2                    ; DATA XREF: .rdata:0000000180015A96↑o
.rdata:0000000180015A9A                                         ; num_handlers: 1
.rdata:0000000180015A9B                 db 11h
.rdata:0000000180015A9C                 db 80h                  ; adjectives bitfield
.rdata:0000000180015A9D                 dd rva loc_180011588    ; catch code
.rdata:0000000180015AA1                 db 11h, 5               ; continuation address: 0x180009BD4
.rdata:0000000180015AA3 byte_180015AA3  db 0Eh                  ; DATA XREF: .rdata:0000000180015A75↑o
.rdata:0000000180015AA3                                         ; num_ip2state entries: 7
.rdata:0000000180015AA4                 db 9Eh                  ; ea 0x180009ADF
.rdata:0000000180015AA5                 db 0                    ; state -1
.rdata:0000000180015AA6                 db 50h                  ; ea 0x180009B07
.rdata:0000000180015AA7                 db 2                    ; state 0
.rdata:0000000180015AA8                 db 0A8h                 ; ea 0x180009B5B
.rdata:0000000180015AA9                 db 6                    ; state 2
.rdata:0000000180015AAA                 db 0EEh                 ; ea 0x180009BD2
.rdata:0000000180015AAB                 db 4                    ; state 1
.rdata:0000000180015AAC                 db 4Ch                  ; ea 0x180009BF8
.rdata:0000000180015AAD                 db 0Ah                  ; state 4
.rdata:0000000180015AAE                 db 28h                  ; ea 0x180009C0C
.rdata:0000000180015AAF                 db 0Ch                  ; state 5
.rdata:0000000180015AB0                 db 30h                  ; ea 0x180009C24
.rdata:0000000180015AB1                 db 0                    ; state -1
.rdata:0000000180015AB2                 db    0
.rdata:0000000180015AB3                 db    0
.rdata:0000000180015AB4 stru_180015AB4  UNWIND_INFO_HDR <1, 0Ah, 2, 0>
.rdata:0000000180015AB4                                         ; DATA XREF: .pdata:000000018001D0F8↓o
.rdata:0000000180015AB4                                         ; .pdata:000000018001D110↓o ...
.rdata:0000000180015AB8                 UNWIND_CODE <0Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015ABA                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015ABC stru_180015ABC  UNWIND_INFO_HDR <19h, 26h, 9, 0>
.rdata:0000000180015ABC                                         ; DATA XREF: .pdata:000000018001C984↓o
.rdata:0000000180015AC0                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015AC2                 dw 1Eh
.rdata:0000000180015AC4                 UNWIND_CODE <14h, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180015AC6                 dw 16h
.rdata:0000000180015AC8                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015ACA                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015ACC                 UNWIND_CODE <9, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015ACE                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015AD0                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015AD2                 align 4
.rdata:0000000180015AD4                 dd rva __GSHandlerCheck_EH4
.rdata:0000000180015AD8                 dd rva byte_180015AE0
.rdata:0000000180015ADC                 db 0A3h
.rdata:0000000180015ADD                 db    0
.rdata:0000000180015ADE                 db    0
.rdata:0000000180015ADF                 db    0
.rdata:0000000180015AE0 byte_180015AE0  db 38h                  ; DATA XREF: .rdata:0000000180015AD8↑o
.rdata:0000000180015AE0                                         ; FuncInfo4
.rdata:0000000180015AE1                 dd rva byte_180015AED   ; unwind map
.rdata:0000000180015AE5                 dd rva byte_180015B1B   ; try block map
.rdata:0000000180015AE9                 dd rva byte_180015B2C   ; ip2state map
.rdata:0000000180015AED byte_180015AED  db 12h                  ; DATA XREF: .rdata:0000000180015AE1↑o
.rdata:0000000180015AED                                         ; num unwind entries: 9
.rdata:0000000180015AEE                 db 0Ah                  ; funclet type: 1
.rdata:0000000180015AEF                 dd rva sub_1800098E0    ; funclet
.rdata:0000000180015AF3                 db 0A0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015AF4                 db 3Ah                  ; funclet type: 1
.rdata:0000000180015AF5                 dd rva sub_180009700    ; funclet
.rdata:0000000180015AF9                 db 0A0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015AFA                 db 32h                  ; funclet type: 1
.rdata:0000000180015AFB                 dd rva sub_180006F40    ; funclet
.rdata:0000000180015AFF                 db 0C0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015B00                 db 32h                  ; funclet type: 1
.rdata:0000000180015B01                 dd rva ??1_Lockit@std@@QEAA@XZ ; funclet
.rdata:0000000180015B05                 db 21h, 2               ; frame offset of object ptr to be destructed
.rdata:0000000180015B07                 db 3Ah                  ; funclet type: 1
.rdata:0000000180015B08                 dd rva loc_18000A4D0    ; funclet
.rdata:0000000180015B0C                 db 41h, 2               ; frame offset of object ptr to be destructed
.rdata:0000000180015B0E                 db 0D0h                 ; funclet type: 0
.rdata:0000000180015B0F                 db 0D8h                 ; funclet type: 0
.rdata:0000000180015B10                 db 3Dh, 2               ; funclet type: 3
.rdata:0000000180015B12                 dd rva __std_terminate  ; funclet
.rdata:0000000180015B16                 db 36h                  ; funclet type: 3
.rdata:0000000180015B17                 dd rva __std_terminate  ; funclet
.rdata:0000000180015B1B byte_180015B1B  db 2                    ; DATA XREF: .rdata:0000000180015AE5↑o
.rdata:0000000180015B1B                                         ; num_tryblocks: 1
.rdata:0000000180015B1C                 db 0Ah                  ; lowest state index of try
.rdata:0000000180015B1D                 db 0Ah                  ; highest state index of try
.rdata:0000000180015B1E                 db 0Ch                  ; highest state index of any associated catch
.rdata:0000000180015B1F                 dd rva byte_180015B23   ; list of handlers
.rdata:0000000180015B23 byte_180015B23  db 2                    ; DATA XREF: .rdata:0000000180015B1F↑o
.rdata:0000000180015B23                                         ; num_handlers: 1
.rdata:0000000180015B24                 db 11h
.rdata:0000000180015B25                 db 80h                  ; adjectives bitfield
.rdata:0000000180015B26                 dd rva loc_18001160E    ; catch code
.rdata:0000000180015B2A                 db 0C9h, 8              ; continuation address: 0x180009EB2
.rdata:0000000180015B2C byte_180015B2C  db 18h                  ; DATA XREF: .rdata:0000000180015AE9↑o
.rdata:0000000180015B2C                                         ; num_ip2state entries: 12
.rdata:0000000180015B2D                 db 94h                  ; ea 0x180009CCA
.rdata:0000000180015B2E                 db 0                    ; state -1
.rdata:0000000180015B2F                 db 50h                  ; ea 0x180009CF2
.rdata:0000000180015B30                 db 2                    ; state 0
.rdata:0000000180015B31                 db 62h                  ; ea 0x180009D23
.rdata:0000000180015B32                 db 4                    ; state 1
.rdata:0000000180015B33                 db 60h                  ; ea 0x180009D53
.rdata:0000000180015B34                 db 8                    ; state 3
.rdata:0000000180015B35                 db 0Dh, 2               ; ea 0x180009DD6
.rdata:0000000180015B37                 db 0Ah                  ; state 4
.rdata:0000000180015B38                 db 40h                  ; ea 0x180009DF6
.rdata:0000000180015B39                 db 6                    ; state 2
.rdata:0000000180015B3A                 db 5Dh, 2               ; ea 0x180009E8D
.rdata:0000000180015B3C                 db 0Ch                  ; state 5
.rdata:0000000180015B3D                 db 46h                  ; ea 0x180009EB0
.rdata:0000000180015B3E                 db 4                    ; state 1
.rdata:0000000180015B3F                 db 28h                  ; ea 0x180009EC4
.rdata:0000000180015B40                 db 10h                  ; state 7
.rdata:0000000180015B41                 db 36h                  ; ea 0x180009EDF
.rdata:0000000180015B42                 db 12h                  ; state 8
.rdata:0000000180015B43                 db 24h                  ; ea 0x180009EF1
.rdata:0000000180015B44                 db 0                    ; state -1
.rdata:0000000180015B45                 db 3Ah                  ; ea 0x180009F0E
.rdata:0000000180015B46                 db 8                    ; state 3
.rdata:0000000180015B47                 db    0
.rdata:0000000180015B48 stru_180015B48  UNWIND_INFO_HDR <1, 0Ah, 2, 0>
.rdata:0000000180015B48                                         ; DATA XREF: .pdata:000000018001D104↓o
.rdata:0000000180015B4C                 UNWIND_CODE <0Ah, 72h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015B4E                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015B50 stru_180015B50  UNWIND_INFO_HDR <19h, 14h, 6, 0>
.rdata:0000000180015B50                                         ; DATA XREF: .pdata:000000018001C990↓o
.rdata:0000000180015B54                 UNWIND_CODE <14h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015B56                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015B58                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015B5A                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015B5C                 UNWIND_CODE <0Bh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015B5E                 UNWIND_CODE <0Ah, 30h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015B60                 dd rva __CxxFrameHandler4
.rdata:0000000180015B64                 dd rva byte_180015B68
.rdata:0000000180015B68 byte_180015B68  db 38h                  ; DATA XREF: .rdata:0000000180015B64↑o
.rdata:0000000180015B68                                         ; FuncInfo4
.rdata:0000000180015B69                 dd rva byte_180015A79   ; unwind map
.rdata:0000000180015B6D                 dd rva byte_180015B75   ; try block map
.rdata:0000000180015B71                 dd rva byte_180015B86   ; ip2state map
.rdata:0000000180015B75 byte_180015B75  db 2                    ; DATA XREF: .rdata:0000000180015B6D↑o
.rdata:0000000180015B75                                         ; num_tryblocks: 1
.rdata:0000000180015B76                 db 4                    ; lowest state index of try
.rdata:0000000180015B77                 db 4                    ; highest state index of try
.rdata:0000000180015B78                 db 6                    ; highest state index of any associated catch
.rdata:0000000180015B79                 dd rva byte_180015B7D   ; list of handlers
.rdata:0000000180015B7D byte_180015B7D  db 2                    ; DATA XREF: .rdata:0000000180015B79↑o
.rdata:0000000180015B7D                                         ; num_handlers: 1
.rdata:0000000180015B7E                 db 11h
.rdata:0000000180015B7F                 db 80h                  ; adjectives bitfield
.rdata:0000000180015B80                 dd rva loc_180011668    ; catch code
.rdata:0000000180015B84                 db 0D1h, 4              ; continuation address: 0x18000A054
.rdata:0000000180015B86 byte_180015B86  db 0Eh                  ; DATA XREF: .rdata:0000000180015B71↑o
.rdata:0000000180015B86                                         ; num_ip2state entries: 7
.rdata:0000000180015B87                 db 72h                  ; ea 0x180009F59
.rdata:0000000180015B88                 db 0                    ; state -1
.rdata:0000000180015B89                 db 50h                  ; ea 0x180009F81
.rdata:0000000180015B8A                 db 2                    ; state 0
.rdata:0000000180015B8B                 db 0E0h                 ; ea 0x180009FF1
.rdata:0000000180015B8C                 db 6                    ; state 2
.rdata:0000000180015B8D                 db 0C2h                 ; ea 0x18000A052
.rdata:0000000180015B8E                 db 4                    ; state 1
.rdata:0000000180015B8F                 db 6Ch                  ; ea 0x18000A088
.rdata:0000000180015B90                 db 0Ah                  ; state 4
.rdata:0000000180015B91                 db 28h                  ; ea 0x18000A09C
.rdata:0000000180015B92                 db 0Ch                  ; state 5
.rdata:0000000180015B93                 db 30h                  ; ea 0x18000A0B4
.rdata:0000000180015B94                 db 0                    ; state -1
.rdata:0000000180015B95                 db    0
.rdata:0000000180015B96                 db    0
.rdata:0000000180015B97                 db    0
.rdata:0000000180015B98 stru_180015B98  UNWIND_INFO_HDR <19h, 23h, 8, 0>
.rdata:0000000180015B98                                         ; DATA XREF: .pdata:000000018001C99C↓o
.rdata:0000000180015B9C                 UNWIND_CODE <14h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015B9E                 dw 0Dh
.rdata:0000000180015BA0                 UNWIND_CODE <14h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015BA2                 dw 0Ch
.rdata:0000000180015BA4                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015BA6                 dw 0Bh
.rdata:0000000180015BA8                 UNWIND_CODE <14h, 72h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015BAA                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015BAC                 dd rva __GSHandlerCheck_EH4
.rdata:0000000180015BB0                 dd rva byte_180015BB8
.rdata:0000000180015BB4                 db  3Ah ; :
.rdata:0000000180015BB5                 db    0
.rdata:0000000180015BB6                 db    0
.rdata:0000000180015BB7                 db    0
.rdata:0000000180015BB8 byte_180015BB8  db 28h                  ; DATA XREF: .rdata:0000000180015BB0↑o
.rdata:0000000180015BB8                                         ; FuncInfo4
.rdata:0000000180015BB9                 dd rva byte_180015BC1   ; unwind map
.rdata:0000000180015BBD                 dd rva byte_180015BCE   ; ip2state map
.rdata:0000000180015BC1 byte_180015BC1  db 4                    ; DATA XREF: .rdata:0000000180015BB9↑o
.rdata:0000000180015BC1                                         ; num unwind entries: 2
.rdata:0000000180015BC2                 db 0Ah                  ; funclet type: 1
.rdata:0000000180015BC3                 dd rva ??1_Lockit@std@@QEAA@XZ ; funclet
.rdata:0000000180015BC7                 db 50h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015BC8                 db 32h                  ; funclet type: 1
.rdata:0000000180015BC9                 dd rva loc_18000A4D0    ; funclet
.rdata:0000000180015BCD                 db 60h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015BCE byte_180015BCE  db 8                    ; DATA XREF: .rdata:0000000180015BBD↑o
.rdata:0000000180015BCE                                         ; num_ip2state entries: 4
.rdata:0000000180015BCF                 db 8Eh                  ; ea 0x18000A117
.rdata:0000000180015BD0                 db 2                    ; state 0
.rdata:0000000180015BD1                 db 0E6h                 ; ea 0x18000A18A
.rdata:0000000180015BD2                 db 4                    ; state 1
.rdata:0000000180015BD3                 db 3Ah                  ; ea 0x18000A1A7
.rdata:0000000180015BD4                 db 0                    ; state -1
.rdata:0000000180015BD5                 db 60h                  ; ea 0x18000A1D7
.rdata:0000000180015BD6                 db 2                    ; state 0
.rdata:0000000180015BD7                 db    0
.rdata:0000000180015BD8 stru_180015BD8  UNWIND_INFO_HDR <1, 0Ah, 5, 0>
.rdata:0000000180015BD8                                         ; DATA XREF: .rdata:0000000180015BF8↓o
.rdata:0000000180015BD8                                         ; .rdata:0000000180015C14↓o ...
.rdata:0000000180015BDC                 UNWIND_CODE <0Ah, 42h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015BDE                 UNWIND_CODE <6, 0F0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015BE0                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015BE2                 UNWIND_CODE <3, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015BE4                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015BE6                 align 4
.rdata:0000000180015BE8 stru_180015BE8  UNWIND_INFO_HDR <21h, 45h, 6, 0>
.rdata:0000000180015BE8                                         ; DATA XREF: .pdata:000000018001C9B4↓o
.rdata:0000000180015BEC                 UNWIND_CODE <45h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015BEE                 dw 0Bh
.rdata:0000000180015BF0                 UNWIND_CODE <11h, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180015BF2                 dw 4
.rdata:0000000180015BF4                 UNWIND_CODE <5, 0C4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180015BF6                 dw 0Ch
.rdata:0000000180015BF8                 RUNTIME_FUNCTION <rva sub_18000A1E0, rva loc_18000A20F, \
.rdata:0000000180015BF8                                   rva stru_180015BD8>
.rdata:0000000180015C04 stru_180015C04  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:0000000180015C04                                         ; DATA XREF: .pdata:000000018001C9C0↓o
.rdata:0000000180015C08                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180015C0A                 dw 4
.rdata:0000000180015C0C                 UNWIND_CODE <0, 0C4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180015C0E                 dw 0Ch
.rdata:0000000180015C10                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015C12                 dw 0Bh
.rdata:0000000180015C14                 RUNTIME_FUNCTION <rva sub_18000A1E0, rva loc_18000A20F, \
.rdata:0000000180015C14                                   rva stru_180015BD8>
.rdata:0000000180015C20 stru_180015C20  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015C20                                         ; DATA XREF: .pdata:000000018001C9CC↓o
.rdata:0000000180015C24                 RUNTIME_FUNCTION <rva sub_18000A1E0, rva loc_18000A20F, \
.rdata:0000000180015C24                                   rva stru_180015BD8>
.rdata:0000000180015C30 stru_180015C30  UNWIND_INFO_HDR <1, 0Bh, 5, 0>
.rdata:0000000180015C30                                         ; DATA XREF: .rdata:0000000180015C54↓o
.rdata:0000000180015C30                                         ; .rdata:0000000180015C74↓o ...
.rdata:0000000180015C34                 UNWIND_CODE <0Bh, 62h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015C36                 UNWIND_CODE <7, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015C38                 UNWIND_CODE <5, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015C3A                 UNWIND_CODE <3, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015C3C                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015C3E                 align 4
.rdata:0000000180015C40 stru_180015C40  UNWIND_INFO_HDR <21h, 4Eh, 8, 0>
.rdata:0000000180015C40                                         ; DATA XREF: .pdata:000000018001C9E4↓o
.rdata:0000000180015C44                 UNWIND_CODE <4Eh, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180015C46                 dw 5
.rdata:0000000180015C48                 UNWIND_CODE <45h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015C4A                 dw 6
.rdata:0000000180015C4C                 UNWIND_CODE <11h, 0F4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180015C4E                 dw 4
.rdata:0000000180015C50                 UNWIND_CODE <5, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015C52                 dw 0Eh
.rdata:0000000180015C54                 RUNTIME_FUNCTION <rva sub_18000A340, rva loc_18000A36E, \
.rdata:0000000180015C54                                   rva stru_180015C30>
.rdata:0000000180015C60 stru_180015C60  UNWIND_INFO_HDR <21h, 0, 8, 0>
.rdata:0000000180015C60                                         ; DATA XREF: .pdata:000000018001C9F0↓o
.rdata:0000000180015C64                 UNWIND_CODE <0, 0F4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180015C66                 dw 4
.rdata:0000000180015C68                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180015C6A                 dw 5
.rdata:0000000180015C6C                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015C6E                 dw 6
.rdata:0000000180015C70                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015C72                 dw 0Eh
.rdata:0000000180015C74                 RUNTIME_FUNCTION <rva sub_18000A340, rva loc_18000A36E, \
.rdata:0000000180015C74                                   rva stru_180015C30>
.rdata:0000000180015C80 stru_180015C80  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015C80                                         ; DATA XREF: .pdata:000000018001C9FC↓o
.rdata:0000000180015C84                 RUNTIME_FUNCTION <rva sub_18000A340, rva loc_18000A36E, \
.rdata:0000000180015C84                                   rva stru_180015C30>
.rdata:0000000180015C90 stru_180015C90  UNWIND_INFO_HDR <19h, 16h, 8, 0>
.rdata:0000000180015C90                                         ; DATA XREF: .pdata:000000018001CA08↓o
.rdata:0000000180015C94                 UNWIND_CODE <16h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015C96                 dw 0Dh
.rdata:0000000180015C98                 UNWIND_CODE <16h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015C9A                 UNWIND_CODE <12h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015C9C                 UNWIND_CODE <10h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015C9E                 UNWIND_CODE <0Eh, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015CA0                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015CA2                 UNWIND_CODE <0Bh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015CA4                 dd rva __CxxFrameHandler4
.rdata:0000000180015CA8                 dd rva byte_180015CAC
.rdata:0000000180015CAC byte_180015CAC  db 38h                  ; DATA XREF: .rdata:0000000180015CA8↑o
.rdata:0000000180015CAC                                         ; FuncInfo4
.rdata:0000000180015CAD                 dd rva byte_180015A79   ; unwind map
.rdata:0000000180015CB1                 dd rva byte_180015CB9   ; try block map
.rdata:0000000180015CB5                 dd rva byte_180015CCA   ; ip2state map
.rdata:0000000180015CB9 byte_180015CB9  db 2                    ; DATA XREF: .rdata:0000000180015CB1↑o
.rdata:0000000180015CB9                                         ; num_tryblocks: 1
.rdata:0000000180015CBA                 db 4                    ; lowest state index of try
.rdata:0000000180015CBB                 db 4                    ; highest state index of try
.rdata:0000000180015CBC                 db 6                    ; highest state index of any associated catch
.rdata:0000000180015CBD                 dd rva byte_180015CC1   ; list of handlers
.rdata:0000000180015CC1 byte_180015CC1  db 2                    ; DATA XREF: .rdata:0000000180015CBD↑o
.rdata:0000000180015CC1                                         ; num_handlers: 1
.rdata:0000000180015CC2                 db 11h
.rdata:0000000180015CC3                 db 80h                  ; adjectives bitfield
.rdata:0000000180015CC4                 dd rva loc_180011668    ; catch code
.rdata:0000000180015CC8                 db 3Dh, 5               ; continuation address: 0x18000A63F
.rdata:0000000180015CCA byte_180015CCA  db 0Eh                  ; DATA XREF: .rdata:0000000180015CB5↑o
.rdata:0000000180015CCA                                         ; num_ip2state entries: 7
.rdata:0000000180015CCB                 db 0AEh                 ; ea 0x18000A547
.rdata:0000000180015CCC                 db 0                    ; state -1
.rdata:0000000180015CCD                 db 50h                  ; ea 0x18000A56F
.rdata:0000000180015CCE                 db 2                    ; state 0
.rdata:0000000180015CCF                 db 0AEh                 ; ea 0x18000A5C6
.rdata:0000000180015CD0                 db 6                    ; state 2
.rdata:0000000180015CD1                 db 0EEh                 ; ea 0x18000A63D
.rdata:0000000180015CD2                 db 4                    ; state 1
.rdata:0000000180015CD3                 db 4Ch                  ; ea 0x18000A663
.rdata:0000000180015CD4                 db 0Ah                  ; state 4
.rdata:0000000180015CD5                 db 28h                  ; ea 0x18000A677
.rdata:0000000180015CD6                 db 0Ch                  ; state 5
.rdata:0000000180015CD7                 db 30h                  ; ea 0x18000A68F
.rdata:0000000180015CD8                 db 0                    ; state -1
.rdata:0000000180015CD9                 db    0
.rdata:0000000180015CDA                 db    0
.rdata:0000000180015CDB                 db    0
.rdata:0000000180015CDC stru_180015CDC  UNWIND_INFO_HDR <19h, 2Dh, 0Ah, 0>
.rdata:0000000180015CDC                                         ; DATA XREF: .pdata:000000018001CA20↓o
.rdata:0000000180015CE0                 UNWIND_CODE <1Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180015CE2                 dw 59h
.rdata:0000000180015CE4                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015CE6                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015CE8                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015CEA                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015CEC                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015CEE                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015CF0                 UNWIND_CODE <3, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015CF2                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015CF4                 dd rva __GSHandlerCheck_EH4
.rdata:0000000180015CF8                 dd rva byte_180015D00
.rdata:0000000180015CFC                 db 0B2h
.rdata:0000000180015CFD                 db    2
.rdata:0000000180015CFE                 db    0
.rdata:0000000180015CFF                 db    0
.rdata:0000000180015D00 byte_180015D00  db 28h                  ; DATA XREF: .rdata:0000000180015CF8↑o
.rdata:0000000180015D00                                         ; FuncInfo4
.rdata:0000000180015D01                 dd rva byte_180015D09   ; unwind map
.rdata:0000000180015D05                 dd rva byte_180015D28   ; ip2state map
.rdata:0000000180015D09 byte_180015D09  db 0Ah                  ; DATA XREF: .rdata:0000000180015D01↑o
.rdata:0000000180015D09                                         ; num unwind entries: 5
.rdata:0000000180015D0A                 db 0Ch                  ; funclet type: 2
.rdata:0000000180015D0B                 dd rva sub_180002660    ; funclet
.rdata:0000000180015D0F                 db 0B0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015D10                 db 36h                  ; funclet type: 3
.rdata:0000000180015D11                 dd rva loc_1800116DC    ; funclet
.rdata:0000000180015D15                 db 2Ah                  ; funclet type: 1
.rdata:0000000180015D16                 dd rva sub_180002660    ; funclet
.rdata:0000000180015D1A                 db 0D0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015D1B                 db 5Ah                  ; funclet type: 1
.rdata:0000000180015D1C                 dd rva sub_180002660    ; funclet
.rdata:0000000180015D20                 db 41h, 2               ; frame offset of object ptr to be destructed
.rdata:0000000180015D22                 db 3Ah                  ; funclet type: 1
.rdata:0000000180015D23                 dd rva sub_180002660    ; funclet
.rdata:0000000180015D27                 db 0D0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015D28 byte_180015D28  db 0Eh                  ; DATA XREF: .rdata:0000000180015D05↑o
.rdata:0000000180015D28                                         ; num_ip2state entries: 7
.rdata:0000000180015D29                 db 0E1h, 5              ; ea 0x18000A868
.rdata:0000000180015D2B                 db 4                    ; state 1
.rdata:0000000180015D2C                 db 0ADh, 4              ; ea 0x18000A993
.rdata:0000000180015D2E                 db 6                    ; state 2
.rdata:0000000180015D2F                 db 28h                  ; ea 0x18000A9A7
.rdata:0000000180015D30                 db 4                    ; state 1
.rdata:0000000180015D31                 db 1, 5                 ; ea 0x18000AAE7
.rdata:0000000180015D33                 db 8                    ; state 3
.rdata:0000000180015D34                 db 39h, 2               ; ea 0x18000AB75
.rdata:0000000180015D36                 db 0Ah                  ; state 4
.rdata:0000000180015D37                 db 51h, 5               ; ea 0x18000ACC9
.rdata:0000000180015D39                 db 8                    ; state 3
.rdata:0000000180015D3A                 db 95h, 3               ; ea 0x18000ADAE
.rdata:0000000180015D3C                 db 0                    ; state -1
.rdata:0000000180015D3D                 db    0
.rdata:0000000180015D3E                 db    0
.rdata:0000000180015D3F                 db    0
.rdata:0000000180015D40 stru_180015D40  UNWIND_INFO_HDR <19h, 29h, 0Bh, 0>
.rdata:0000000180015D40                                         ; DATA XREF: .pdata:000000018001CA2C↓o
.rdata:0000000180015D44                 UNWIND_CODE <17h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015D46                 dw 1Ch
.rdata:0000000180015D48                 UNWIND_CODE <17h, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180015D4A                 dw 12h
.rdata:0000000180015D4C                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015D4E                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015D50                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015D52                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015D54                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015D56                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015D58                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015D5A                 align 4
.rdata:0000000180015D5C                 dd rva __GSHandlerCheck_EH4
.rdata:0000000180015D60                 dd rva byte_180015D68
.rdata:0000000180015D64                 db  8Ah
.rdata:0000000180015D65                 db    0
.rdata:0000000180015D66                 db    0
.rdata:0000000180015D67                 db    0
.rdata:0000000180015D68 byte_180015D68  db 28h                  ; DATA XREF: .rdata:0000000180015D60↑o
.rdata:0000000180015D68                                         ; FuncInfo4
.rdata:0000000180015D69                 dd rva byte_180015D71   ; unwind map
.rdata:0000000180015D6D                 dd rva byte_180015D90   ; ip2state map
.rdata:0000000180015D71 byte_180015D71  db 0Ah                  ; DATA XREF: .rdata:0000000180015D69↑o
.rdata:0000000180015D71                                         ; num unwind entries: 5
.rdata:0000000180015D72                 db 0Ch                  ; funclet type: 2
.rdata:0000000180015D73                 dd rva sub_180002660    ; funclet
.rdata:0000000180015D77                 db 0B0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015D78                 db 32h                  ; funclet type: 1
.rdata:0000000180015D79                 dd rva sub_180002660    ; funclet
.rdata:0000000180015D7D                 db 0C0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015D7E                 db 32h                  ; funclet type: 1
.rdata:0000000180015D7F                 dd rva loc_180006E00    ; funclet
.rdata:0000000180015D83                 db 80h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015D84                 db 62h                  ; funclet type: 1
.rdata:0000000180015D85                 dd rva loc_180006E00    ; funclet
.rdata:0000000180015D89                 db 80h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015D8A                 db 92h                  ; funclet type: 1
.rdata:0000000180015D8B                 dd rva sub_18000B930    ; funclet
.rdata:0000000180015D8F                 db 80h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015D90 byte_180015D90  db 0Ch                  ; DATA XREF: .rdata:0000000180015D6D↑o
.rdata:0000000180015D90                                         ; num_ip2state entries: 6
.rdata:0000000180015D91                 db 0D9h, 4              ; ea 0x18000AF06
.rdata:0000000180015D93                 db 2                    ; state 0
.rdata:0000000180015D94                 db 4Dh, 3               ; ea 0x18000AFD9
.rdata:0000000180015D96                 db 6                    ; state 2
.rdata:0000000180015D97                 db 2Ch                  ; ea 0x18000AFEF
.rdata:0000000180015D98                 db 8                    ; state 3
.rdata:0000000180015D99                 db 3Dh, 6               ; ea 0x18000B17E
.rdata:0000000180015D9B                 db 0                    ; state -1
.rdata:0000000180015D9C                 db 4Eh                  ; ea 0x18000B1A5
.rdata:0000000180015D9D                 db 2                    ; state 0
.rdata:0000000180015D9E                 db 1Ch                  ; ea 0x18000B1B3
.rdata:0000000180015D9F                 db 0Ah                  ; state 4
.rdata:0000000180015DA0 stru_180015DA0  UNWIND_INFO_HDR <1, 0Dh, 6, 0>
.rdata:0000000180015DA0                                         ; DATA XREF: .rdata:0000000180015DBC↓o
.rdata:0000000180015DA0                                         ; .rdata:0000000180015DCC↓o ...
.rdata:0000000180015DA4                 UNWIND_CODE <0Dh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015DA6                 dw 0Bh
.rdata:0000000180015DA8                 UNWIND_CODE <0Dh, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015DAA                 UNWIND_CODE <9, 0F0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180015DAC                 UNWIND_CODE <7, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015DAE                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015DB0 stru_180015DB0  UNWIND_INFO_HDR <21h, 0Ah, 4, 0>
.rdata:0000000180015DB0                                         ; DATA XREF: .pdata:000000018001CA44↓o
.rdata:0000000180015DB4                 UNWIND_CODE <0Ah, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180015DB6                 dw 0Ah
.rdata:0000000180015DB8                 UNWIND_CODE <5, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015DBA                 dw 8
.rdata:0000000180015DBC                 RUNTIME_FUNCTION <rva sub_18000B1C0, rva loc_18000B1F1, \
.rdata:0000000180015DBC                                   rva stru_180015DA0>
.rdata:0000000180015DC8 stru_180015DC8  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015DC8                                         ; DATA XREF: .pdata:000000018001CA50↓o
.rdata:0000000180015DCC                 RUNTIME_FUNCTION <rva sub_18000B1C0, rva loc_18000B1F1, \
.rdata:0000000180015DCC                                   rva stru_180015DA0>
.rdata:0000000180015DD8 stru_180015DD8  UNWIND_INFO_HDR <21h, 0, 4, 0>
.rdata:0000000180015DD8                                         ; DATA XREF: .pdata:000000018001CA5C↓o
.rdata:0000000180015DDC                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180015DDE                 dw 0Ah
.rdata:0000000180015DE0                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015DE2                 dw 8
.rdata:0000000180015DE4                 RUNTIME_FUNCTION <rva sub_18000B1C0, rva loc_18000B1F1, \
.rdata:0000000180015DE4                                   rva stru_180015DA0>
.rdata:0000000180015DF0 stru_180015DF0  UNWIND_INFO_HDR <1, 6, 3, 0>
.rdata:0000000180015DF0                                         ; DATA XREF: .rdata:0000000180015E04↓o
.rdata:0000000180015DF0                                         ; .rdata:0000000180015E14↓o ...
.rdata:0000000180015DF4                 UNWIND_CODE <6, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015DF6                 dw 4
.rdata:0000000180015DF8                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015DFA                 align 4
.rdata:0000000180015DFC stru_180015DFC  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180015DFC                                         ; DATA XREF: .pdata:000000018001CA74↓o
.rdata:0000000180015E00                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015E02                 dw 3
.rdata:0000000180015E04                 RUNTIME_FUNCTION <rva sub_18000B280, rva loc_18000B433, \
.rdata:0000000180015E04                                   rva stru_180015DF0>
.rdata:0000000180015E10 stru_180015E10  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015E10                                         ; DATA XREF: .pdata:000000018001CA80↓o
.rdata:0000000180015E14                 RUNTIME_FUNCTION <rva sub_18000B280, rva loc_18000B433, \
.rdata:0000000180015E14                                   rva stru_180015DF0>
.rdata:0000000180015E20 stru_180015E20  UNWIND_INFO_HDR <11h, 14h, 0Ah, 0>
.rdata:0000000180015E20                                         ; DATA XREF: .pdata:000000018001CA8C↓o
.rdata:0000000180015E24                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E26                 dw 15h
.rdata:0000000180015E28                 UNWIND_CODE <14h, 92h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015E2A                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015E2C                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015E2E                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015E30                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015E32                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015E34                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015E36                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015E38                 dd rva __CxxFrameHandler4
.rdata:0000000180015E3C                 dd rva byte_180015E40
.rdata:0000000180015E40 byte_180015E40  db 28h                  ; DATA XREF: .rdata:0000000180015E3C↑o
.rdata:0000000180015E40                                         ; FuncInfo4
.rdata:0000000180015E41                 dd rva byte_180015E49   ; unwind map
.rdata:0000000180015E45                 dd rva byte_180015E56   ; ip2state map
.rdata:0000000180015E49 byte_180015E49  db 4                    ; DATA XREF: .rdata:0000000180015E41↑o
.rdata:0000000180015E49                                         ; num unwind entries: 2
.rdata:0000000180015E4A                 db 0Ah                  ; funclet type: 1
.rdata:0000000180015E4B                 dd rva loc_180006E00    ; funclet
.rdata:0000000180015E4F                 db 40h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015E50                 db 3Ah                  ; funclet type: 1
.rdata:0000000180015E51                 dd rva loc_180006E00    ; funclet
.rdata:0000000180015E55                 db 40h                  ; frame offset of object ptr to be destructed
.rdata:0000000180015E56 byte_180015E56  db 6                    ; DATA XREF: .rdata:0000000180015E45↑o
.rdata:0000000180015E56                                         ; num_ip2state entries: 3
.rdata:0000000180015E57                 db 61h, 5               ; ea 0x18000B8B8
.rdata:0000000180015E59                 db 2                    ; state 0
.rdata:0000000180015E5A                 db 28h                  ; ea 0x18000B8CC
.rdata:0000000180015E5B                 db 4                    ; state 1
.rdata:0000000180015E5C                 db 0B6h                 ; ea 0x18000B927
.rdata:0000000180015E5D                 db 0                    ; state -1
.rdata:0000000180015E5E                 db    0
.rdata:0000000180015E5F                 db    0
.rdata:0000000180015E60 stru_180015E60  UNWIND_INFO_HDR <1, 12h, 8, 0>
.rdata:0000000180015E60                                         ; DATA XREF: .pdata:000000018001CAEC↓o
.rdata:0000000180015E60                                         ; .pdata:000000018001CAF8↓o
.rdata:0000000180015E64                 UNWIND_CODE <12h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E66                 dw 0Bh
.rdata:0000000180015E68                 UNWIND_CODE <12h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E6A                 dw 0Ah
.rdata:0000000180015E6C                 UNWIND_CODE <12h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015E6E                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015E70                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015E72                 UNWIND_CODE <0Bh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015E74 stru_180015E74  UNWIND_INFO_HDR <1, 1Ah, 0Ah, 0>
.rdata:0000000180015E74                                         ; DATA XREF: .pdata:000000018001CAA4↓o
.rdata:0000000180015E74                                         ; .pdata:000000018001CAD4↓o ...
.rdata:0000000180015E78                 UNWIND_CODE <1Ah, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E7A                 dw 0Bh
.rdata:0000000180015E7C                 UNWIND_CODE <1Ah, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E7E                 dw 0Ah
.rdata:0000000180015E80                 UNWIND_CODE <1Ah, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E82                 dw 9
.rdata:0000000180015E84                 UNWIND_CODE <1Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E86                 dw 8
.rdata:0000000180015E88                 UNWIND_CODE <1Ah, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015E8A                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015E8C stru_180015E8C  UNWIND_INFO_HDR <1, 14h, 8, 0>
.rdata:0000000180015E8C                                         ; DATA XREF: .pdata:000000018001CB28↓o
.rdata:0000000180015E8C                                         ; .pdata:000000018001CBAC↓o ...
.rdata:0000000180015E90                 UNWIND_CODE <14h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E92                 dw 0Ah
.rdata:0000000180015E94                 UNWIND_CODE <14h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E96                 dw 9
.rdata:0000000180015E98                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015E9A                 dw 8
.rdata:0000000180015E9C                 UNWIND_CODE <14h, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015E9E                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015EA0 stru_180015EA0  UNWIND_INFO_HDR <1, 1Ah, 0Ah, 0>
.rdata:0000000180015EA0                                         ; DATA XREF: .pdata:000000018001CB04↓o
.rdata:0000000180015EA4                 UNWIND_CODE <1Ah, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015EA6                 dw 0Dh
.rdata:0000000180015EA8                 UNWIND_CODE <1Ah, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015EAA                 dw 0Ch
.rdata:0000000180015EAC                 UNWIND_CODE <1Ah, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015EAE                 dw 0Bh
.rdata:0000000180015EB0                 UNWIND_CODE <1Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015EB2                 dw 0Ah
.rdata:0000000180015EB4                 UNWIND_CODE <1Ah, 72h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015EB6                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015EB8 stru_180015EB8  UNWIND_INFO_HDR <1, 6, 2, 0>
.rdata:0000000180015EB8                                         ; DATA XREF: .pdata:000000018001CAB0↓o
.rdata:0000000180015EB8                                         ; .pdata:000000018001CCD8↓o
.rdata:0000000180015EBC                 UNWIND_CODE <6, 52h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180015EBE                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015EC0 stru_180015EC0  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
.rdata:0000000180015EC0                                         ; DATA XREF: .pdata:000000018001CABC↓o
.rdata:0000000180015EC4                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015EC6                 dw 9
.rdata:0000000180015EC8                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015ECA                 dw 8
.rdata:0000000180015ECC                 UNWIND_CODE <0Fh, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015ECE                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015ED0 stru_180015ED0  UNWIND_INFO_HDR <1, 1Ch, 0Ch, 0>
.rdata:0000000180015ED0                                         ; DATA XREF: .pdata:000000018001CB1C↓o
.rdata:0000000180015ED4                 UNWIND_CODE <1Ch, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015ED6                 dw 0Eh
.rdata:0000000180015ED8                 UNWIND_CODE <1Ch, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015EDA                 dw 0Dh
.rdata:0000000180015EDC                 UNWIND_CODE <1Ch, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015EDE                 dw 0Ch
.rdata:0000000180015EE0                 UNWIND_CODE <1Ch, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015EE2                 UNWIND_CODE <18h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015EE4                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015EE6                 UNWIND_CODE <14h, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015EE8                 UNWIND_CODE <12h, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015EEA                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180015EEC stru_180015EEC  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
.rdata:0000000180015EEC                                         ; DATA XREF: .rdata:0000000180015F00↓o
.rdata:0000000180015EEC                                         ; .rdata:0000000180015F10↓o ...
.rdata:0000000180015EF0                 UNWIND_CODE <0Ah, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015EF2                 dw 7
.rdata:0000000180015EF4                 UNWIND_CODE <0Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180015EF6                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015EF8 stru_180015EF8  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180015EF8                                         ; DATA XREF: .pdata:000000018001CD80↓o
.rdata:0000000180015EFC                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015EFE                 dw 6
.rdata:0000000180015F00                 RUNTIME_FUNCTION <rva sub_18000EFE0, rva loc_18000F02B, \
.rdata:0000000180015F00                                   rva stru_180015EEC>
.rdata:0000000180015F0C stru_180015F0C  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015F0C                                         ; DATA XREF: .pdata:000000018001CD8C↓o
.rdata:0000000180015F10                 RUNTIME_FUNCTION <rva sub_18000EFE0, rva loc_18000F02B, \
.rdata:0000000180015F10                                   rva stru_180015EEC>
.rdata:0000000180015F1C stru_180015F1C  UNWIND_INFO_HDR <21h, 0, 2, 0>
.rdata:0000000180015F1C                                         ; DATA XREF: .pdata:000000018001CD98↓o
.rdata:0000000180015F20                 UNWIND_CODE <0, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015F22                 dw 6
.rdata:0000000180015F24                 RUNTIME_FUNCTION <rva sub_18000EFE0, rva loc_18000F02B, \
.rdata:0000000180015F24                                   rva stru_180015EEC>
.rdata:0000000180015F30 stru_180015F30  UNWIND_INFO_HDR <19h, 30h, 0Bh, 0>
.rdata:0000000180015F30                                         ; DATA XREF: .pdata:000000018001CC24↓o
.rdata:0000000180015F34                 UNWIND_CODE <1Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015F36                 dw 68h
.rdata:0000000180015F38                 UNWIND_CODE <1Fh, 1>    ; UWOP_ALLOC_LARGE
.rdata:0000000180015F3A                 dw 5Eh
.rdata:0000000180015F3C                 UNWIND_CODE <10h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015F3E                 UNWIND_CODE <0Eh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015F40                 UNWIND_CODE <0Ch, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015F42                 UNWIND_CODE <0Ah, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180015F44                 UNWIND_CODE <8, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015F46                 UNWIND_CODE <7, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015F48                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015F4A                 align 4
.rdata:0000000180015F4C                 dd rva __GSHandlerCheck_EH4
.rdata:0000000180015F50                 dd rva byte_180015F58
.rdata:0000000180015F54                 db 0E2h
.rdata:0000000180015F55                 db    2
.rdata:0000000180015F56                 db    0
.rdata:0000000180015F57                 db    0
.rdata:0000000180015F58 byte_180015F58  db 28h                  ; DATA XREF: .rdata:0000000180015F50↑o
.rdata:0000000180015F58                                         ; FuncInfo4
.rdata:0000000180015F59                 dd rva byte_180015F61   ; unwind map
.rdata:0000000180015F5D                 dd rva byte_180015F83   ; ip2state map
.rdata:0000000180015F61 byte_180015F61  db 0Ch                  ; DATA XREF: .rdata:0000000180015F59↑o
.rdata:0000000180015F61                                         ; num unwind entries: 6
.rdata:0000000180015F62                 db 0Ah                  ; funclet type: 1
.rdata:0000000180015F63                 dd rva sub_180002660    ; funclet
.rdata:0000000180015F67                 db 0F0h                 ; frame offset of object ptr to be destructed
.rdata:0000000180015F68                 db 32h                  ; funclet type: 1
.rdata:0000000180015F69                 dd rva sub_180002660    ; funclet
.rdata:0000000180015F6D                 db 61h, 2               ; frame offset of object ptr to be destructed
.rdata:0000000180015F6F                 db 3Eh                  ; funclet type: 3
.rdata:0000000180015F70                 dd rva loc_1800117F0    ; funclet
.rdata:0000000180015F74                 db 66h                  ; funclet type: 3
.rdata:0000000180015F75                 dd rva loc_1800117F0    ; funclet
.rdata:0000000180015F79                 db 8Eh                  ; funclet type: 3
.rdata:0000000180015F7A                 dd rva loc_1800117F0    ; funclet
.rdata:0000000180015F7E                 db 0B6h                 ; funclet type: 3
.rdata:0000000180015F7F                 dd rva loc_1800117F0    ; funclet
.rdata:0000000180015F83 byte_180015F83  db 1Eh                  ; DATA XREF: .rdata:0000000180015F5D↑o
.rdata:0000000180015F83                                         ; num_ip2state entries: 15
.rdata:0000000180015F84                 db 0Dh, 3               ; ea 0x18000D093
.rdata:0000000180015F86                 db 0                    ; state -1
.rdata:0000000180015F87                 db 0B1h, 7              ; ea 0x18000D27F
.rdata:0000000180015F89                 db 2                    ; state 0
.rdata:0000000180015F8A                 db 8Ch                  ; ea 0x18000D2C5
.rdata:0000000180015F8B                 db 4                    ; state 1
.rdata:0000000180015F8C                 db 6Ah                  ; ea 0x18000D2FA
.rdata:0000000180015F8D                 db 6                    ; state 2
.rdata:0000000180015F8E                 db 2Ah                  ; ea 0x18000D30F
.rdata:0000000180015F8F                 db 0                    ; state -1
.rdata:0000000180015F90                 db 8Ah                  ; ea 0x18000D354
.rdata:0000000180015F91                 db 4                    ; state 1
.rdata:0000000180015F92                 db 95h, 6               ; ea 0x18000D4F9
.rdata:0000000180015F94                 db 8                    ; state 3
.rdata:0000000180015F95                 db 2Ch                  ; ea 0x18000D50F
.rdata:0000000180015F96                 db 4                    ; state 1
.rdata:0000000180015F97                 db 9, 8                 ; ea 0x18000D711
.rdata:0000000180015F99                 db 0Ah                  ; state 4
.rdata:0000000180015F9A                 db 2Ch                  ; ea 0x18000D727
.rdata:0000000180015F9B                 db 4                    ; state 1
.rdata:0000000180015F9C                 db 79h, 6               ; ea 0x18000D8C5
.rdata:0000000180015F9E                 db 0Ch                  ; state 5
.rdata:0000000180015F9F                 db 2Eh                  ; ea 0x18000D8DC
.rdata:0000000180015FA0                 db 4                    ; state 1
.rdata:0000000180015FA1                 db 0F8h                 ; ea 0x18000D958
.rdata:0000000180015FA2                 db 2                    ; state 0
.rdata:0000000180015FA3                 db 89h, 2               ; ea 0x18000D9FA
.rdata:0000000180015FA5                 db 0                    ; state -1
.rdata:0000000180015FA6                 db 40h                  ; ea 0x18000DA1A
.rdata:0000000180015FA7                 db 4                    ; state 1
.rdata:0000000180015FA8 stru_180015FA8  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:0000000180015FA8                                         ; DATA XREF: .pdata:000000018001CC0C↓o
.rdata:0000000180015FAC                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015FAE                 dw 6
.rdata:0000000180015FB0                 RUNTIME_FUNCTION <rva sub_18000CE00, rva loc_18000CE17, \
.rdata:0000000180015FB0                                   rva stru_180014BA0>
.rdata:0000000180015FBC stru_180015FBC  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180015FBC                                         ; DATA XREF: .pdata:000000018001CC18↓o
.rdata:0000000180015FC0                 RUNTIME_FUNCTION <rva sub_18000CE00, rva loc_18000CE17, \
.rdata:0000000180015FC0                                   rva stru_180014BA0>
.rdata:0000000180015FCC stru_180015FCC  UNWIND_INFO_HDR <1, 7, 3, 0>
.rdata:0000000180015FCC                                         ; DATA XREF: .rdata:0000000180015FE8↓o
.rdata:0000000180015FCC                                         ; .rdata:0000000180016004↓o ...
.rdata:0000000180015FD0                 UNWIND_CODE <7, 42h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180015FD2                 UNWIND_CODE <3, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015FD4                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180015FD6                 align 4
.rdata:0000000180015FD8 stru_180015FD8  UNWIND_INFO_HDR <21h, 67h, 6, 0>
.rdata:0000000180015FD8                                         ; DATA XREF: .pdata:000000018001CBD0↓o
.rdata:0000000180015FDC                 UNWIND_CODE <67h, 0E4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180015FDE                 dw 4
.rdata:0000000180015FE0                 UNWIND_CODE <62h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180015FE2                 dw 9
.rdata:0000000180015FE4                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015FE6                 dw 0Ah
.rdata:0000000180015FE8                 RUNTIME_FUNCTION <rva sub_18000CCB0, rva loc_18000CCDC, \
.rdata:0000000180015FE8                                   rva stru_180015FCC>
.rdata:0000000180015FF4 stru_180015FF4  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:0000000180015FF4                                         ; DATA XREF: .pdata:000000018001CBDC↓o
.rdata:0000000180015FF8                 UNWIND_CODE <0, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:0000000180015FFA                 dw 4
.rdata:0000000180015FFC                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180015FFE                 dw 0Ah
.rdata:0000000180016000                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016002                 dw 9
.rdata:0000000180016004                 RUNTIME_FUNCTION <rva sub_18000CCB0, rva loc_18000CCDC, \
.rdata:0000000180016004                                   rva stru_180015FCC>
.rdata:0000000180016010 stru_180016010  UNWIND_INFO_HDR <21h, 0, 2, 0>
.rdata:0000000180016010                                         ; DATA XREF: .pdata:000000018001CBE8↓o
.rdata:0000000180016014                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016016                 dw 0Ah
.rdata:0000000180016018                 RUNTIME_FUNCTION <rva sub_18000CCB0, rva loc_18000CCDC, \
.rdata:0000000180016018                                   rva stru_180015FCC>
.rdata:0000000180016024 stru_180016024  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180016024                                         ; DATA XREF: .pdata:000000018001CBF4↓o
.rdata:0000000180016028                 RUNTIME_FUNCTION <rva sub_18000CCB0, rva loc_18000CCDC, \
.rdata:0000000180016028                                   rva stru_180015FCC>
.rdata:0000000180016034 stru_180016034  UNWIND_INFO_HDR <21h, 69h, 6, 0>
.rdata:0000000180016034                                         ; DATA XREF: .pdata:000000018001CC78↓o
.rdata:0000000180016038                 UNWIND_CODE <69h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001603A                 dw 8
.rdata:000000018001603C                 UNWIND_CODE <62h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001603E                 dw 7
.rdata:0000000180016040                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016042                 dw 9
.rdata:0000000180016044                 RUNTIME_FUNCTION <rva sub_18000DDF0, rva loc_18000DE09, \
.rdata:0000000180016044                                   rva stru_180014BA0>
.rdata:0000000180016050 stru_180016050  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:0000000180016050                                         ; DATA XREF: .pdata:000000018001CC84↓o
.rdata:0000000180016054                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016056                 dw 9
.rdata:0000000180016058                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001605A                 dw 8
.rdata:000000018001605C                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:000000018001605E                 dw 7
.rdata:0000000180016060                 RUNTIME_FUNCTION <rva sub_18000DDF0, rva loc_18000DE09, \
.rdata:0000000180016060                                   rva stru_180014BA0>
.rdata:000000018001606C stru_18001606C  UNWIND_INFO_HDR <21h, 0, 2, 0>
.rdata:000000018001606C                                         ; DATA XREF: .pdata:000000018001CC90↓o
.rdata:0000000180016070                 UNWIND_CODE <0, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016072                 dw 9
.rdata:0000000180016074                 RUNTIME_FUNCTION <rva sub_18000DDF0, rva loc_18000DE09, \
.rdata:0000000180016074                                   rva stru_180014BA0>
.rdata:0000000180016080 stru_180016080  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180016080                                         ; DATA XREF: .pdata:000000018001CC9C↓o
.rdata:0000000180016084                 RUNTIME_FUNCTION <rva sub_18000DDF0, rva loc_18000DE09, \
.rdata:0000000180016084                                   rva stru_180014BA0>
.rdata:0000000180016090 stru_180016090  UNWIND_INFO_HDR <1, 0A0h, 8, 0>
.rdata:0000000180016090                                         ; DATA XREF: .rdata:00000001800160B0↓o
.rdata:0000000180016090                                         ; .rdata:00000001800160C0↓o ...
.rdata:0000000180016094                 UNWIND_CODE <0A0h, 0C4h> ; UWOP_SAVE_NONVOL
.rdata:0000000180016096                 dw 0Ah
.rdata:0000000180016098                 UNWIND_CODE <0Eh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001609A                 dw 0Bh
.rdata:000000018001609C                 UNWIND_CODE <0Eh, 32h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001609E                 UNWIND_CODE <0Ah, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800160A0                 UNWIND_CODE <8, 0E0h>   ; UWOP_PUSH_NONVOL
.rdata:00000001800160A2                 UNWIND_CODE <6, 60h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800160A4 stru_1800160A4  UNWIND_INFO_HDR <21h, 0Ah, 4, 0>
.rdata:00000001800160A4                                         ; DATA XREF: .pdata:000000018001CC3C↓o
.rdata:00000001800160A8                 UNWIND_CODE <0Ah, 74h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800160AA                 dw 9
.rdata:00000001800160AC                 UNWIND_CODE <5, 54h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800160AE                 dw 8
.rdata:00000001800160B0                 RUNTIME_FUNCTION <rva sub_18000DA20, rva loc_18000DB10, \
.rdata:00000001800160B0                                   rva stru_180016090>
.rdata:00000001800160BC stru_1800160BC  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800160BC                                         ; DATA XREF: .pdata:000000018001CC48↓o
.rdata:00000001800160C0                 RUNTIME_FUNCTION <rva sub_18000DA20, rva loc_18000DB10, \
.rdata:00000001800160C0                                   rva stru_180016090>
.rdata:00000001800160CC stru_1800160CC  UNWIND_INFO_HDR <1, 10h, 3, 0>
.rdata:00000001800160CC                                         ; DATA XREF: .rdata:00000001800160E4↓o
.rdata:00000001800160CC                                         ; .rdata:0000000180016118↓o ...
.rdata:00000001800160D0                 UNWIND_CODE <10h, 82h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800160D2                 UNWIND_CODE <0Ch, 70h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800160D4                 UNWIND_CODE <0Bh, 50h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800160D6                 align 4
.rdata:00000001800160D8 stru_1800160D8  UNWIND_INFO_HDR <21h, 0Eh, 4, 0>
.rdata:00000001800160D8                                         ; DATA XREF: .rdata:00000001800160F8↓o
.rdata:00000001800160D8                                         ; .rdata:0000000180016108↓o ...
.rdata:00000001800160DC                 UNWIND_CODE <0Eh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800160DE                 dw 7
.rdata:00000001800160E0                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800160E2                 dw 8
.rdata:00000001800160E4                 RUNTIME_FUNCTION <rva sub_18000E6B0, rva loc_18000E6EA, \
.rdata:00000001800160E4                                   rva stru_1800160CC>
.rdata:00000001800160F0 stru_1800160F0  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:00000001800160F0                                         ; DATA XREF: .pdata:000000018001CCFC↓o
.rdata:00000001800160F4                 UNWIND_CODE <5, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:00000001800160F6                 dw 6
.rdata:00000001800160F8                 RUNTIME_FUNCTION <rva loc_18000E6EA, rva loc_18000E6FA, \
.rdata:00000001800160F8                                   rva stru_1800160D8>
.rdata:0000000180016104 stru_180016104  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180016104                                         ; DATA XREF: .pdata:000000018001CD08↓o
.rdata:0000000180016108                 RUNTIME_FUNCTION <rva loc_18000E6EA, rva loc_18000E6FA, \
.rdata:0000000180016108                                   rva stru_1800160D8>
.rdata:0000000180016114 stru_180016114  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180016114                                         ; DATA XREF: .pdata:000000018001CD14↓o
.rdata:0000000180016118                 RUNTIME_FUNCTION <rva sub_18000E6B0, rva loc_18000E6EA, \
.rdata:0000000180016118                                   rva stru_1800160CC>
.rdata:0000000180016124 stru_180016124  UNWIND_INFO_HDR <11h, 14h, 6, 0>
.rdata:0000000180016124                                         ; DATA XREF: .pdata:000000018001CB7C↓o
.rdata:0000000180016128                 UNWIND_CODE <14h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001612A                 dw 8
.rdata:000000018001612C                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001612E                 dw 7
.rdata:0000000180016130                 UNWIND_CODE <14h, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180016132                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180016134                 dd rva __CxxFrameHandler4
.rdata:0000000180016138                 dd rva byte_18001613C
.rdata:000000018001613C byte_18001613C  db 28h                  ; DATA XREF: .rdata:0000000180016138↑o
.rdata:000000018001613C                                         ; FuncInfo4
.rdata:000000018001613D                 dd rva byte_180016145   ; unwind map
.rdata:0000000180016141                 dd rva byte_18001614C   ; ip2state map
.rdata:0000000180016145 byte_180016145  db 2                    ; DATA XREF: .rdata:000000018001613D↑o
.rdata:0000000180016145                                         ; num unwind entries: 1
.rdata:0000000180016146                 db 0Ch                  ; funclet type: 2
.rdata:0000000180016147                 dd rva sub_18000F280    ; funclet
.rdata:000000018001614B                 db 60h                  ; frame offset of object ptr to be destructed
.rdata:000000018001614C byte_18001614C  db 4                    ; DATA XREF: .rdata:0000000180016141↑o
.rdata:000000018001614C                                         ; num_ip2state entries: 2
.rdata:000000018001614D                 db 2Eh                  ; ea 0x18000C8C7
.rdata:000000018001614E                 db 0                    ; state -1
.rdata:000000018001614F                 db 62h                  ; ea 0x18000C8F8
.rdata:0000000180016150                 db 2                    ; state 0
.rdata:0000000180016151                 db    0
.rdata:0000000180016152                 db    0
.rdata:0000000180016153                 db    0
.rdata:0000000180016154 stru_180016154  UNWIND_INFO_HDR <19h, 27h, 0Ah, 0>
.rdata:0000000180016154                                         ; DATA XREF: .pdata:000000018001CCA8↓o
.rdata:0000000180016158                 UNWIND_CODE <19h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000018001615A                 dw 11h
.rdata:000000018001615C                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000018001615E                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180016160                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180016162                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180016164                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016166                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016168                 UNWIND_CODE <3, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001616A                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001616C                 dd rva __GSHandlerCheck_EH4
.rdata:0000000180016170                 dd rva byte_180016178
.rdata:0000000180016174                 db  7Ah ; z
.rdata:0000000180016175                 db    0
.rdata:0000000180016176                 db    0
.rdata:0000000180016177                 db    0
.rdata:0000000180016178 byte_180016178  db 28h                  ; DATA XREF: .rdata:0000000180016170↑o
.rdata:0000000180016178                                         ; FuncInfo4
.rdata:0000000180016179                 dd rva byte_180016181   ; unwind map
.rdata:000000018001617D                 dd rva byte_180016188   ; ip2state map
.rdata:0000000180016181 byte_180016181  db 2                    ; DATA XREF: .rdata:0000000180016179↑o
.rdata:0000000180016181                                         ; num unwind entries: 1
.rdata:0000000180016182                 db 0Ah                  ; funclet type: 1
.rdata:0000000180016183                 dd rva sub_180002660    ; funclet
.rdata:0000000180016187                 db 90h                  ; frame offset of object ptr to be destructed
.rdata:0000000180016188 byte_180016188  db 8                    ; DATA XREF: .rdata:000000018001617D↑o
.rdata:0000000180016188                                         ; num_ip2state entries: 4
.rdata:0000000180016189                 db 0E8h                 ; ea 0x18000DFD4
.rdata:000000018001618A                 db 0                    ; state -1
.rdata:000000018001618B                 db 42h                  ; ea 0x18000DFF5
.rdata:000000018001618C                 db 2                    ; state 0
.rdata:000000018001618D                 db 51h, 8               ; ea 0x18000E209
.rdata:000000018001618F                 db 0                    ; state -1
.rdata:0000000180016190                 db 39h, 5               ; ea 0x18000E357
.rdata:0000000180016192                 db 2                    ; state 0
.rdata:0000000180016193                 db    0
.rdata:0000000180016194 stru_180016194  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
.rdata:0000000180016194                                         ; DATA XREF: .rdata:00000001800161AC↓o
.rdata:0000000180016194                                         ; .rdata:00000001800161BC↓o ...
.rdata:0000000180016198                 UNWIND_CODE <0Fh, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001619A                 dw 8
.rdata:000000018001619C                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001619E                 dw 7
.rdata:00000001800161A0                 UNWIND_CODE <0Fh, 32h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800161A2                 UNWIND_CODE <0Bh, 60h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800161A4 stru_1800161A4  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:00000001800161A4                                         ; DATA XREF: .pdata:000000018001CB94↓o
.rdata:00000001800161A8                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800161AA                 dw 6
.rdata:00000001800161AC                 RUNTIME_FUNCTION <rva sub_18000CA30, rva loc_18000CAB0, \
.rdata:00000001800161AC                                   rva stru_180016194>
.rdata:00000001800161B8 stru_1800161B8  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800161B8                                         ; DATA XREF: .pdata:000000018001CBA0↓o
.rdata:00000001800161BC                 RUNTIME_FUNCTION <rva sub_18000CA30, rva loc_18000CAB0, \
.rdata:00000001800161BC                                   rva stru_180016194>
.rdata:00000001800161C8 stru_1800161C8  UNWIND_INFO_HDR <19h, 19h, 2, 0>
.rdata:00000001800161C8                                         ; DATA XREF: .pdata:000000018001CD20↓o
.rdata:00000001800161CC                 UNWIND_CODE <7, 1>      ; UWOP_ALLOC_LARGE
.rdata:00000001800161CE                 dw 3Bh
.rdata:00000001800161D0                 dd rva __GSHandlerCheck
.rdata:00000001800161D4                 dd 1C0h
.rdata:00000001800161D8 stru_1800161D8  UNWIND_INFO_HDR <19h, 1Eh, 6, 0>
.rdata:00000001800161D8                                         ; DATA XREF: .pdata:000000018001CCB4↓o
.rdata:00000001800161DC                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800161DE                 dw 11h
.rdata:00000001800161E0                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800161E2                 dw 10h
.rdata:00000001800161E4                 UNWIND_CODE <0Fh, 0B2h> ; UWOP_ALLOC_SMALL
.rdata:00000001800161E6                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800161E8                 dd rva __GSHandlerCheck
.rdata:00000001800161EC                 dd 58h
.rdata:00000001800161F0 stru_1800161F0  UNWIND_INFO_HDR <19h, 2Ch, 9, 0>
.rdata:00000001800161F0                                         ; DATA XREF: .rdata:0000000180016218↓o
.rdata:00000001800161F0                                         ; .rdata:0000000180016228↓o ...
.rdata:00000001800161F4                 UNWIND_CODE <1Bh, 1>    ; UWOP_ALLOC_LARGE
.rdata:00000001800161F6                 dw 56h
.rdata:00000001800161F8                 UNWIND_CODE <0Ch, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800161FA                 UNWIND_CODE <0Ah, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800161FC                 UNWIND_CODE <8, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:00000001800161FE                 UNWIND_CODE <6, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180016200                 UNWIND_CODE <4, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016202                 UNWIND_CODE <3, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016204                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016206                 align 4
.rdata:0000000180016208                 dd rva __GSHandlerCheck
.rdata:000000018001620C                 dd 290h
.rdata:0000000180016210 stru_180016210  UNWIND_INFO_HDR <21h, 8, 2, 0>
.rdata:0000000180016210                                         ; DATA XREF: .pdata:000000018001CD50↓o
.rdata:0000000180016214                 UNWIND_CODE <8, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016216                 dw 55h
.rdata:0000000180016218                 RUNTIME_FUNCTION <rva sub_18000E860, rva loc_18000E8E8, \
.rdata:0000000180016218                                   rva stru_1800161F0>
.rdata:0000000180016224 stru_180016224  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180016224                                         ; DATA XREF: .pdata:000000018001CD5C↓o
.rdata:0000000180016228                 RUNTIME_FUNCTION <rva sub_18000E860, rva loc_18000E8E8, \
.rdata:0000000180016228                                   rva stru_1800161F0>
.rdata:0000000180016234 stru_180016234  UNWIND_INFO_HDR <19h, 2Dh, 0Ah, 0>
.rdata:0000000180016234                                         ; DATA XREF: .pdata:000000018001CD68↓o
.rdata:0000000180016238                 UNWIND_CODE <1Ch, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000018001623A                 dw 113h
.rdata:000000018001623C                 UNWIND_CODE <0Dh, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:000000018001623E                 UNWIND_CODE <0Bh, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180016240                 UNWIND_CODE <9, 0D0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180016242                 UNWIND_CODE <7, 0C0h>   ; UWOP_PUSH_NONVOL
.rdata:0000000180016244                 UNWIND_CODE <5, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016246                 UNWIND_CODE <4, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016248                 UNWIND_CODE <3, 30h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001624A                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:000000018001624C                 dd rva __GSHandlerCheck_EH4
.rdata:0000000180016250                 dd rva byte_180016258
.rdata:0000000180016254                 db  82h
.rdata:0000000180016255                 db    8
.rdata:0000000180016256                 db    0
.rdata:0000000180016257                 db    0
.rdata:0000000180016258 byte_180016258  db 28h                  ; DATA XREF: .rdata:0000000180016250↑o
.rdata:0000000180016258                                         ; FuncInfo4
.rdata:0000000180016259                 dd rva byte_180016261   ; unwind map
.rdata:000000018001625D                 dd rva byte_18001626E   ; ip2state map
.rdata:0000000180016261 byte_180016261  db 4                    ; DATA XREF: .rdata:0000000180016259↑o
.rdata:0000000180016261                                         ; num unwind entries: 2
.rdata:0000000180016262                 db 0Ch                  ; funclet type: 2
.rdata:0000000180016263                 dd rva sub_180002660    ; funclet
.rdata:0000000180016267                 db 70h                  ; frame offset of object ptr to be destructed
.rdata:0000000180016268                 db 32h                  ; funclet type: 1
.rdata:0000000180016269                 dd rva sub_180002660    ; funclet
.rdata:000000018001626D                 db 80h                  ; frame offset of object ptr to be destructed
.rdata:000000018001626E byte_18001626E  db 6                    ; DATA XREF: .rdata:000000018001625D↑o
.rdata:000000018001626E                                         ; num_ip2state entries: 3
.rdata:000000018001626F                 db 8Dh, 4               ; ea 0x18000EC13
.rdata:0000000180016271                 db 4                    ; state 1
.rdata:0000000180016272                 db 5, 0Ch               ; ea 0x18000EF14
.rdata:0000000180016274                 db 2                    ; state 0
.rdata:0000000180016275                 db 75h, 2               ; ea 0x18000EFB1
.rdata:0000000180016277                 db 0                    ; state -1
.rdata:0000000180016278 stru_180016278  UNWIND_INFO_HDR <19h, 15h, 2, 0>
.rdata:0000000180016278                                         ; DATA XREF: .pdata:000000018001CDA4↓o
.rdata:000000018001627C                 UNWIND_CODE <6, 0D2h>   ; UWOP_ALLOC_SMALL
.rdata:000000018001627E                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016280                 dd rva __GSHandlerCheck
.rdata:0000000180016284                 dd 68h
.rdata:0000000180016288 stru_180016288  UNWIND_INFO_HDR <19h, 19h, 8, 0>
.rdata:0000000180016288                                         ; DATA XREF: .pdata:000000018001CB40↓o
.rdata:000000018001628C                 UNWIND_CODE <19h, 32h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001628E                 UNWIND_CODE <15h, 0F0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180016290                 UNWIND_CODE <13h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180016292                 UNWIND_CODE <11h, 0D0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180016294                 UNWIND_CODE <0Fh, 0C0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180016296                 UNWIND_CODE <0Dh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180016298                 UNWIND_CODE <0Ch, 60h>  ; UWOP_PUSH_NONVOL
.rdata:000000018001629A                 UNWIND_CODE <0Bh, 30h>  ; UWOP_PUSH_NONVOL
.rdata:000000018001629C                 dd rva __CxxFrameHandler4
.rdata:00000001800162A0                 dd rva byte_1800162A4
.rdata:00000001800162A4 byte_1800162A4  db 38h                  ; DATA XREF: .rdata:00000001800162A0↑o
.rdata:00000001800162A4                                         ; FuncInfo4
.rdata:00000001800162A5                 dd rva byte_1800162B1   ; unwind map
.rdata:00000001800162A9                 dd rva byte_1800162B4   ; try block map
.rdata:00000001800162AD                 dd rva byte_1800162C3   ; ip2state map
.rdata:00000001800162B1 byte_1800162B1  db 4                    ; DATA XREF: .rdata:00000001800162A5↑o
.rdata:00000001800162B1                                         ; num unwind entries: 2
.rdata:00000001800162B2                 db 8                    ; funclet type: 0
.rdata:00000001800162B3                 db 10h                  ; funclet type: 0
.rdata:00000001800162B4 byte_1800162B4  db 2                    ; DATA XREF: .rdata:00000001800162A9↑o
.rdata:00000001800162B4                                         ; num_tryblocks: 1
.rdata:00000001800162B5                 db 0                    ; lowest state index of try
.rdata:00000001800162B6                 db 0                    ; highest state index of try
.rdata:00000001800162B7                 db 2                    ; highest state index of any associated catch
.rdata:00000001800162B8                 dd rva byte_1800162BC   ; list of handlers
.rdata:00000001800162BC byte_1800162BC  db 2                    ; DATA XREF: .rdata:00000001800162B8↑o
.rdata:00000001800162BC                                         ; num_handlers: 1
.rdata:00000001800162BD                 db 1
.rdata:00000001800162BE                 db 80h                  ; adjectives bitfield
.rdata:00000001800162BF                 dd rva loc_180011790    ; catch code
.rdata:00000001800162C3 byte_1800162C3  db 6                    ; DATA XREF: .rdata:00000001800162AD↑o
.rdata:00000001800162C3                                         ; num_ip2state entries: 3
.rdata:00000001800162C4                 db 89h, 2               ; ea 0x18000C652
.rdata:00000001800162C6                 db 0                    ; state -1
.rdata:00000001800162C7                 db 88h                  ; ea 0x18000C696
.rdata:00000001800162C8                 db 2                    ; state 0
.rdata:00000001800162C9                 db 0C1h, 2              ; ea 0x18000C746
.rdata:00000001800162CB                 db 0                    ; state -1
.rdata:00000001800162CC stru_1800162CC  UNWIND_INFO_HDR <21h, 13h, 6, 0>
.rdata:00000001800162CC                                         ; DATA XREF: .pdata:000000018001CB58↓o
.rdata:00000001800162D0                 UNWIND_CODE <13h, 0F4h> ; UWOP_SAVE_NONVOL
.rdata:00000001800162D2                 dw 0Ah
.rdata:00000001800162D4                 UNWIND_CODE <0Eh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800162D6                 dw 9
.rdata:00000001800162D8                 UNWIND_CODE <5, 54h>    ; UWOP_SAVE_NONVOL
.rdata:00000001800162DA                 dw 8
.rdata:00000001800162DC                 RUNTIME_FUNCTION <rva sub_18000C760, rva loc_18000C789, \
.rdata:00000001800162DC                                   rva stru_180014F28>
.rdata:00000001800162E8 stru_1800162E8  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800162E8                                         ; DATA XREF: .pdata:000000018001CB64↓o
.rdata:00000001800162EC                 RUNTIME_FUNCTION <rva sub_18000C760, rva loc_18000C789, \
.rdata:00000001800162EC                                   rva stru_180014F28>
.rdata:00000001800162F8 stru_1800162F8  UNWIND_INFO_HDR <21h, 0, 6, 0>
.rdata:00000001800162F8                                         ; DATA XREF: .pdata:000000018001CB70↓o
.rdata:00000001800162FC                 UNWIND_CODE <0, 0F4h>   ; UWOP_SAVE_NONVOL
.rdata:00000001800162FE                 dw 0Ah
.rdata:0000000180016300                 UNWIND_CODE <0, 64h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016302                 dw 9
.rdata:0000000180016304                 UNWIND_CODE <0, 54h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016306                 dw 8
.rdata:0000000180016308                 RUNTIME_FUNCTION <rva sub_18000C760, rva loc_18000C789, \
.rdata:0000000180016308                                   rva stru_180014F28>
.rdata:0000000180016314 stru_180016314  UNWIND_INFO_HDR <1, 1Ah, 3, 0>
.rdata:0000000180016314                                         ; DATA XREF: .pdata:000000018001CEB8↓o
.rdata:0000000180016318                 UNWIND_CODE <1Ah, 62h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001631A                 UNWIND_CODE <16h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:000000018001631C                 UNWIND_CODE <15h, 30h>  ; UWOP_PUSH_NONVOL
.rdata:000000018001631E                 align 4
.rdata:0000000180016320 stru_180016320  UNWIND_INFO_HDR <19h, 24h, 7, 0>
.rdata:0000000180016320                                         ; DATA XREF: .pdata:000000018001CE28↓o
.rdata:0000000180016324                 UNWIND_CODE <12h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180016326                 dw 46h
.rdata:0000000180016328                 UNWIND_CODE <12h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001632A                 dw 45h
.rdata:000000018001632C                 UNWIND_CODE <12h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000018001632E                 dw 42h
.rdata:0000000180016330                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180016332                 align 4
.rdata:0000000180016334                 dd rva __GSHandlerCheck
.rdata:0000000180016338                 dd 200h
.rdata:000000018001633C stru_18001633C  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:000000018001633C                                         ; DATA XREF: .pdata:000000018001CE64↓o
.rdata:0000000180016340                 UNWIND_CODE <5, 74h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016342                 dw 6
.rdata:0000000180016344                 RUNTIME_FUNCTION <rva sub_18000FDF0, rva loc_18000FE0F, \
.rdata:0000000180016344                                   rva stru_180014BA0>
.rdata:0000000180016350 stru_180016350  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180016350                                         ; DATA XREF: .pdata:000000018001CE70↓o
.rdata:0000000180016354                 RUNTIME_FUNCTION <rva sub_18000FDF0, rva loc_18000FE0F, \
.rdata:0000000180016354                                   rva stru_180014BA0>
.rdata:0000000180016360 stru_180016360  UNWIND_INFO_HDR <1, 0Eh, 2, 0>
.rdata:0000000180016360                                         ; DATA XREF: .rdata:0000000180016374↓o
.rdata:0000000180016360                                         ; .rdata:0000000180016384↓o ...
.rdata:0000000180016364                 UNWIND_CODE <0Eh, 72h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180016366                 UNWIND_CODE <0Ah, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180016368 stru_180016368  UNWIND_INFO_HDR <21h, 0Eh, 4, 0>
.rdata:0000000180016368                                         ; DATA XREF: .pdata:000000018001CDF8↓o
.rdata:000000018001636C                 UNWIND_CODE <0Eh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001636E                 dw 0Bh
.rdata:0000000180016370                 UNWIND_CODE <5, 34h>    ; UWOP_SAVE_NONVOL
.rdata:0000000180016372                 dw 0Ah
.rdata:0000000180016374                 RUNTIME_FUNCTION <rva Function, rva loc_18000F54E, rva stru_180016360>
.rdata:0000000180016380 stru_180016380  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:0000000180016380                                         ; DATA XREF: .pdata:000000018001CE04↓o
.rdata:0000000180016384                 RUNTIME_FUNCTION <rva Function, rva loc_18000F54E, rva stru_180016360>
.rdata:0000000180016390 stru_180016390  UNWIND_INFO_HDR <1, 1Ah, 0Ah, 0>
.rdata:0000000180016390                                         ; DATA XREF: .pdata:000000018001CDD4↓o
.rdata:0000000180016394                 UNWIND_CODE <1Ah, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180016396                 dw 9
.rdata:0000000180016398                 UNWIND_CODE <1Ah, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001639A                 dw 8
.rdata:000000018001639C                 UNWIND_CODE <1Ah, 54h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001639E                 dw 7
.rdata:00000001800163A0                 UNWIND_CODE <1Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800163A2                 dw 6
.rdata:00000001800163A4                 UNWIND_CODE <1Ah, 32h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800163A6                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800163A8 stru_1800163A8  UNWIND_INFO_HDR <1, 6, 2, 0>
.rdata:00000001800163A8                                         ; DATA XREF: .pdata:000000018001CE34↓o
.rdata:00000001800163AC                 UNWIND_CODE <6, 72h>    ; UWOP_ALLOC_SMALL
.rdata:00000001800163AE                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800163B0 stru_1800163B0  UNWIND_INFO_HDR <1, 0Ah, 4, 0>
.rdata:00000001800163B0                                         ; DATA XREF: .pdata:000000018001CE40↓o
.rdata:00000001800163B4                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800163B6                 dw 0Ah
.rdata:00000001800163B8                 UNWIND_CODE <0Ah, 52h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800163BA                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800163BC stru_1800163BC  UNWIND_INFO_HDR <1, 14h, 8, 0>
.rdata:00000001800163BC                                         ; DATA XREF: .pdata:000000018001CE4C↓o
.rdata:00000001800163BC                                         ; .pdata:000000018001CF90↓o
.rdata:00000001800163C0                 UNWIND_CODE <14h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800163C2                 dw 8
.rdata:00000001800163C4                 UNWIND_CODE <14h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800163C6                 dw 7
.rdata:00000001800163C8                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800163CA                 dw 6
.rdata:00000001800163CC                 UNWIND_CODE <14h, 32h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800163CE                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800163D0 stru_1800163D0  UNWIND_INFO_HDR <1, 14h, 8, 0>
.rdata:00000001800163D0                                         ; DATA XREF: .rdata:00000001800163EC↓o
.rdata:00000001800163D0                                         ; .rdata:00000001800163FC↓o ...
.rdata:00000001800163D4                 UNWIND_CODE <14h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800163D6                 dw 0Dh
.rdata:00000001800163D8                 UNWIND_CODE <14h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800163DA                 dw 0Ch
.rdata:00000001800163DC                 UNWIND_CODE <14h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800163DE                 dw 0Bh
.rdata:00000001800163E0                 UNWIND_CODE <14h, 72h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800163E2                 UNWIND_CODE <10h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800163E4 stru_1800163E4  UNWIND_INFO_HDR <21h, 5, 2, 0>
.rdata:00000001800163E4                                         ; DATA XREF: .pdata:000000018001CE94↓o
.rdata:00000001800163E8                 UNWIND_CODE <5, 0E4h>   ; UWOP_SAVE_NONVOL
.rdata:00000001800163EA                 dw 0Ah
.rdata:00000001800163EC                 RUNTIME_FUNCTION <rva sub_18000FFB0, rva loc_180010011, \
.rdata:00000001800163EC                                   rva stru_1800163D0>
.rdata:00000001800163F8 stru_1800163F8  UNWIND_INFO_HDR <21h, 0, 0, 0>
.rdata:00000001800163F8                                         ; DATA XREF: .pdata:000000018001CEA0↓o
.rdata:00000001800163FC                 RUNTIME_FUNCTION <rva sub_18000FFB0, rva loc_180010011, \
.rdata:00000001800163FC                                   rva stru_1800163D0>
.rdata:0000000180016408 stru_180016408  UNWIND_INFO_HDR <1, 0, 0, 0>
.rdata:0000000180016408                                         ; DATA XREF: .pdata:000000018001CED0↓o
.rdata:000000018001640C stru_18001640C  UNWIND_INFO_HDR <11h, 15h, 8, 0>
.rdata:000000018001640C                                         ; DATA XREF: .pdata:000000018001CF00↓o
.rdata:0000000180016410                 UNWIND_CODE <15h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180016412                 dw 9
.rdata:0000000180016414                 UNWIND_CODE <15h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:0000000180016416                 dw 7
.rdata:0000000180016418                 UNWIND_CODE <15h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001641A                 dw 6
.rdata:000000018001641C                 UNWIND_CODE <15h, 32h>  ; UWOP_ALLOC_SMALL
.rdata:000000018001641E                 UNWIND_CODE <11h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:0000000180016420                 dd rva __C_specific_handler
.rdata:0000000180016424                 dd 2
.rdata:0000000180016428                 C_SCOPE_TABLE <rva loc_180010418, rva loc_180010487, \ ; int `dllmain_crt_process_attach(HINSTANCE__ * const,void * const)'::`1'::fin$0
.rdata:0000000180016428                                rva ?fin$0@?0??dllmain_crt_process_attach@@YAHQEAUHINSTANCE__@@QEAX@Z@4HA,\
.rdata:0000000180016428                                0>
.rdata:0000000180016438                 C_SCOPE_TABLE <rva loc_1800104EA, rva loc_1800104F5, \ ; int `dllmain_crt_process_attach(HINSTANCE__ * const,void * const)'::`1'::fin$0
.rdata:0000000180016438                                rva ?fin$0@?0??dllmain_crt_process_attach@@YAHQEAUHINSTANCE__@@QEAX@Z@4HA,\
.rdata:0000000180016438                                0>
.rdata:0000000180016448 stru_180016448  UNWIND_INFO_HDR <11h, 0Ah, 4, 0>
.rdata:0000000180016448                                         ; DATA XREF: .pdata:000000018001CF0C↓o
.rdata:000000018001644C                 UNWIND_CODE <0Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001644E                 dw 8
.rdata:0000000180016450                 UNWIND_CODE <0Ah, 52h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180016452                 UNWIND_CODE <6, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016454                 dd rva __C_specific_handler
.rdata:0000000180016458                 dd 4
.rdata:000000018001645C                 C_SCOPE_TABLE <rva loc_18001052F, rva loc_18001054E, \ ; int `dllmain_crt_process_detach(bool)'::`1'::fin$0
.rdata:000000018001645C                                rva ?fin$0@?0??dllmain_crt_process_detach@@YAH_N@Z@4HA,\
.rdata:000000018001645C                                0>
.rdata:000000018001646C                 C_SCOPE_TABLE <rva loc_180010524, rva loc_180010566, \
.rdata:000000018001646C                                rva _onexit$fin$0, 0>
.rdata:000000018001647C                 C_SCOPE_TABLE <rva loc_18001056F, rva loc_18001057A, \ ; int `dllmain_crt_process_detach(bool)'::`1'::fin$0
.rdata:000000018001647C                                rva ?fin$0@?0??dllmain_crt_process_detach@@YAH_N@Z@4HA,\
.rdata:000000018001647C                                0>
.rdata:000000018001648C                 C_SCOPE_TABLE <rva loc_18001056F, rva loc_18001057B, \
.rdata:000000018001648C                                rva _onexit$fin$0, 0>
.rdata:000000018001649C stru_18001649C  UNWIND_INFO_HDR <9, 1Ah, 6, 0>
.rdata:000000018001649C                                         ; DATA XREF: .pdata:000000018001CF18↓o
.rdata:00000001800164A0                 UNWIND_CODE <1Ah, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800164A2                 dw 0Fh
.rdata:00000001800164A4                 UNWIND_CODE <1Ah, 72h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800164A6                 UNWIND_CODE <16h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800164A8                 UNWIND_CODE <14h, 70h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800164AA                 UNWIND_CODE <13h, 60h>  ; UWOP_PUSH_NONVOL
.rdata:00000001800164AC                 dd rva __C_specific_handler
.rdata:00000001800164B0                 dd 1
.rdata:00000001800164B4                 C_SCOPE_TABLE <rva loc_1800105B1, rva $LN16, \ ; int `dllmain_dispatch(HINSTANCE__ * const,ulong,void * const)'::`1'::filt$0
.rdata:00000001800164B4                                rva ?filt$0@?0??dllmain_dispatch@@YAHQEAUHINSTANCE__@@KQEAX@Z@4HA,\
.rdata:00000001800164B4                                rva $LN16>
.rdata:00000001800164C4 stru_1800164C4  UNWIND_INFO_HDR <1, 6, 2, 0>
.rdata:00000001800164C4                                         ; DATA XREF: .pdata:000000018001D164↓o
.rdata:00000001800164C8                 UNWIND_CODE <6, 52h>    ; UWOP_ALLOC_SMALL
.rdata:00000001800164CA                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800164CC stru_1800164CC  UNWIND_INFO_HDR <1, 2, 1, 0>
.rdata:00000001800164CC                                         ; DATA XREF: .pdata:000000018001CF3C↓o
.rdata:00000001800164D0                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:00000001800164D2                 align 4
.rdata:00000001800164D4 stru_1800164D4  UNWIND_INFO_HDR <1, 19h, 0Ah, 0>
.rdata:00000001800164D4                                         ; DATA XREF: .pdata:000000018001CF48↓o
.rdata:00000001800164D8                 UNWIND_CODE <19h, 74h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800164DA                 dw 9
.rdata:00000001800164DC                 UNWIND_CODE <19h, 64h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800164DE                 dw 8
.rdata:00000001800164E0                 UNWIND_CODE <19h, 54h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800164E2                 dw 7
.rdata:00000001800164E4                 UNWIND_CODE <19h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:00000001800164E6                 dw 6
.rdata:00000001800164E8                 UNWIND_CODE <19h, 32h>  ; UWOP_ALLOC_SMALL
.rdata:00000001800164EA                 UNWIND_CODE <15h, 0E0h> ; UWOP_PUSH_NONVOL
.rdata:00000001800164EC stru_1800164EC  UNWIND_INFO_HDR <9, 4, 1, 0>
.rdata:00000001800164EC                                         ; DATA XREF: .pdata:000000018001CFCC↓o
.rdata:00000001800164F0                 UNWIND_CODE <4, 22h>    ; UWOP_ALLOC_SMALL
.rdata:00000001800164F2                 align 4
.rdata:00000001800164F4                 dd rva __C_specific_handler
.rdata:00000001800164F8                 dd 1
.rdata:00000001800164FC                 C_SCOPE_TABLE <rva loc_180010A3F, rva loc_180010AC9, \
.rdata:00000001800164FC                                rva __scrt_is_nonwritable_in_current_image$filt$0, \
.rdata:00000001800164FC                                rva loc_180010AC9>
.rdata:000000018001650C stru_18001650C  UNWIND_INFO_HDR <1, 2, 1, 0>
.rdata:000000018001650C                                         ; DATA XREF: .pdata:000000018001D170↓o
.rdata:0000000180016510                 UNWIND_CODE <2, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016512                 align 4
.rdata:0000000180016514 stru_180016514  UNWIND_INFO_HDR <1, 9, 1, 0>
.rdata:0000000180016514                                         ; DATA XREF: .pdata:000000018001D014↓o
.rdata:0000000180016518                 UNWIND_CODE <9, 62h>    ; UWOP_ALLOC_SMALL
.rdata:000000018001651A                 align 4
.rdata:000000018001651C stru_18001651C  UNWIND_INFO_HDR <1, 8, 4, 0>
.rdata:000000018001651C                                         ; DATA XREF: .pdata:000000018001D020↓o
.rdata:0000000180016520                 UNWIND_CODE <8, 72h>    ; UWOP_ALLOC_SMALL
.rdata:0000000180016522                 UNWIND_CODE <4, 70h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016524                 UNWIND_CODE <3, 60h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016526                 UNWIND_CODE <2, 30h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016528 stru_180016528  UNWIND_INFO_HDR <1, 0Dh, 4, 0>
.rdata:0000000180016528                                         ; DATA XREF: .pdata:000000018001D038↓o
.rdata:000000018001652C                 UNWIND_CODE <0Dh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001652E                 dw 9
.rdata:0000000180016530                 UNWIND_CODE <0Dh, 32h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180016532                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016534 stru_180016534  UNWIND_INFO_HDR <1, 15h, 5, 0>
.rdata:0000000180016534                                         ; DATA XREF: .pdata:000000018001D05C↓o
.rdata:0000000180016538                 UNWIND_CODE <15h, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001653A                 dw 0BAh
.rdata:000000018001653C                 UNWIND_CODE <15h, 1>    ; UWOP_ALLOC_LARGE
.rdata:000000018001653E                 dw 0B8h
.rdata:0000000180016540                 UNWIND_CODE <6, 50h>    ; UWOP_PUSH_NONVOL
.rdata:0000000180016542                 align 4
.rdata:0000000180016544 stru_180016544  UNWIND_INFO_HDR <1, 0Fh, 6, 0>
.rdata:0000000180016544                                         ; DATA XREF: .pdata:000000018001D080↓o
.rdata:0000000180016548                 UNWIND_CODE <0Fh, 64h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001654A                 dw 6
.rdata:000000018001654C                 UNWIND_CODE <0Fh, 34h>  ; UWOP_SAVE_NONVOL
.rdata:000000018001654E                 dw 5
.rdata:0000000180016550                 UNWIND_CODE <0Fh, 12h>  ; UWOP_ALLOC_SMALL
.rdata:0000000180016552                 UNWIND_CODE <0Bh, 70h>  ; UWOP_PUSH_NONVOL
.rdata:0000000180016554                 align 8
.rdata:0000000180016558 stru_180016558  UNWIND_INFO_HDR <1, 0, 0, 0>
.rdata:0000000180016558                                         ; DATA XREF: .pdata:000000018001D098↓o
.rdata:000000018001655C                 align 20h
.rdata:0000000180016560 stru_180016560  UNWIND_INFO_HDR <1, 0, 0, 0>
.rdata:0000000180016560                                         ; DATA XREF: .pdata:000000018001D0A4↓o
.rdata:0000000180016564                 align 8
.rdata:0000000180016568 stru_180016568  UNWIND_INFO_HDR <1, 4, 1, 0>
.rdata:0000000180016568                                         ; DATA XREF: .pdata:000000018001D08C↓o
.rdata:000000018001656C                 UNWIND_CODE <4, 12h>    ; UWOP_ALLOC_SMALL
.rdata:000000018001656E                 align 4
.rdata:0000000180016570 ; const _ThrowInfo stru_180016570
.rdata:0000000180016570 stru_180016570  _ThrowInfo <0, 10C0h, 0, 16590h>
.rdata:0000000180016570                                         ; DATA XREF: Concurrency::cancel_current_task(void)+E↑o
.rdata:0000000180016580                 db    0
.rdata:0000000180016581                 db    0
.rdata:0000000180016582                 db    0
.rdata:0000000180016583                 db    0
.rdata:0000000180016584                 db    0
.rdata:0000000180016585                 db    0
.rdata:0000000180016586                 db    0
.rdata:0000000180016587                 db    0
.rdata:0000000180016588                 db    0
.rdata:0000000180016589                 db    0
.rdata:000000018001658A                 db    0
.rdata:000000018001658B                 db    0
.rdata:000000018001658C                 db    0
.rdata:000000018001658D                 db    0
.rdata:000000018001658E                 db    0
.rdata:000000018001658F                 db    0
.rdata:0000000180016590                 db    2
.rdata:0000000180016591                 db    0
.rdata:0000000180016592                 db    0
.rdata:0000000180016593                 db    0
.rdata:0000000180016594                 db 0F0h
.rdata:0000000180016595                 db  65h ; e
.rdata:0000000180016596                 db    1
.rdata:0000000180016597                 db    0
.rdata:0000000180016598                 db  18h
.rdata:0000000180016599                 db  66h ; f
.rdata:000000018001659A                 db    1
.rdata:000000018001659B                 db    0
.rdata:000000018001659C                 db    0
.rdata:000000018001659D                 db    0
.rdata:000000018001659E                 db    0
.rdata:000000018001659F                 db    0
.rdata:00000001800165A0                 db    0
.rdata:00000001800165A1                 db    0
.rdata:00000001800165A2                 db    0
.rdata:00000001800165A3                 db    0
.rdata:00000001800165A4                 db    0
.rdata:00000001800165A5                 db    0
.rdata:00000001800165A6                 db    0
.rdata:00000001800165A7                 db    0
.rdata:00000001800165A8                 db    3
.rdata:00000001800165A9                 db    0
.rdata:00000001800165AA                 db    0
.rdata:00000001800165AB                 db    0
.rdata:00000001800165AC                 db 0C8h
.rdata:00000001800165AD                 db  65h ; e
.rdata:00000001800165AE                 db    1
.rdata:00000001800165AF                 db    0
.rdata:00000001800165B0                 db 0F0h
.rdata:00000001800165B1                 db  65h ; e
.rdata:00000001800165B2                 db    1
.rdata:00000001800165B3                 db    0
.rdata:00000001800165B4                 db  18h
.rdata:00000001800165B5                 db  66h ; f
.rdata:00000001800165B6                 db    1
.rdata:00000001800165B7                 db    0
.rdata:00000001800165B8                 db    0
.rdata:00000001800165B9                 db    0
.rdata:00000001800165BA                 db    0
.rdata:00000001800165BB                 db    0
.rdata:00000001800165BC                 db    0
.rdata:00000001800165BD                 db    0
.rdata:00000001800165BE                 db    0
.rdata:00000001800165BF                 db    0
.rdata:00000001800165C0                 db    0
.rdata:00000001800165C1                 db    0
.rdata:00000001800165C2                 db    0
.rdata:00000001800165C3                 db    0
.rdata:00000001800165C4                 db    0
.rdata:00000001800165C5                 db    0
.rdata:00000001800165C6                 db    0
.rdata:00000001800165C7                 db    0
.rdata:00000001800165C8                 db    0
.rdata:00000001800165C9                 db    0
.rdata:00000001800165CA                 db    0
.rdata:00000001800165CB                 db    0
.rdata:00000001800165CC                 db 0A0h
.rdata:00000001800165CD                 db  90h
.rdata:00000001800165CE                 db    1
.rdata:00000001800165CF                 db    0
.rdata:00000001800165D0                 db    0
.rdata:00000001800165D1                 db    0
.rdata:00000001800165D2                 db    0
.rdata:00000001800165D3                 db    0
.rdata:00000001800165D4                 db 0FFh
.rdata:00000001800165D5                 db 0FFh
.rdata:00000001800165D6                 db 0FFh
.rdata:00000001800165D7                 db 0FFh
.rdata:00000001800165D8                 db    0
.rdata:00000001800165D9                 db    0
.rdata:00000001800165DA                 db    0
.rdata:00000001800165DB                 db    0
.rdata:00000001800165DC                 db  18h
.rdata:00000001800165DD                 db    0
.rdata:00000001800165DE                 db    0
.rdata:00000001800165DF                 db    0
.rdata:00000001800165E0                 db  30h ; 0
.rdata:00000001800165E1                 db  11h
.rdata:00000001800165E2                 db    0
.rdata:00000001800165E3                 db    0
.rdata:00000001800165E4                 db    0
.rdata:00000001800165E5                 db    0
.rdata:00000001800165E6                 db    0
.rdata:00000001800165E7                 db    0
.rdata:00000001800165E8                 db    0
.rdata:00000001800165E9                 db    0
.rdata:00000001800165EA                 db    0
.rdata:00000001800165EB                 db    0
.rdata:00000001800165EC                 db    0
.rdata:00000001800165ED                 db    0
.rdata:00000001800165EE                 db    0
.rdata:00000001800165EF                 db    0
.rdata:00000001800165F0                 db  10h
.rdata:00000001800165F1                 db    0
.rdata:00000001800165F2                 db    0
.rdata:00000001800165F3                 db    0
.rdata:00000001800165F4                 db  50h ; P
.rdata:00000001800165F5                 db  90h
.rdata:00000001800165F6                 db    1
.rdata:00000001800165F7                 db    0
.rdata:00000001800165F8                 db    0
.rdata:00000001800165F9                 db    0
.rdata:00000001800165FA                 db    0
.rdata:00000001800165FB                 db    0
.rdata:00000001800165FC                 db 0FFh
.rdata:00000001800165FD                 db 0FFh
.rdata:00000001800165FE                 db 0FFh
.rdata:00000001800165FF                 db 0FFh
.rdata:0000000180016600                 db    0
.rdata:0000000180016601                 db    0
.rdata:0000000180016602                 db    0
.rdata:0000000180016603                 db    0
.rdata:0000000180016604                 db  18h
.rdata:0000000180016605                 db    0
.rdata:0000000180016606                 db    0
.rdata:0000000180016607                 db    0
.rdata:0000000180016608                 db  70h ; p
.rdata:0000000180016609                 db  11h
.rdata:000000018001660A                 db    0
.rdata:000000018001660B                 db    0
.rdata:000000018001660C                 db    0
.rdata:000000018001660D                 db    0
.rdata:000000018001660E                 db    0
.rdata:000000018001660F                 db    0
.rdata:0000000180016610                 db    0
.rdata:0000000180016611                 db    0
.rdata:0000000180016612                 db    0
.rdata:0000000180016613                 db    0
.rdata:0000000180016614                 db    0
.rdata:0000000180016615                 db    0
.rdata:0000000180016616                 db    0
.rdata:0000000180016617                 db    0
.rdata:0000000180016618                 db    0
.rdata:0000000180016619                 db    0
.rdata:000000018001661A                 db    0
.rdata:000000018001661B                 db    0
.rdata:000000018001661C                 db  78h ; x
.rdata:000000018001661D                 db  90h
.rdata:000000018001661E                 db    1
.rdata:000000018001661F                 db    0
.rdata:0000000180016620                 db    0
.rdata:0000000180016621                 db    0
.rdata:0000000180016622                 db    0
.rdata:0000000180016623                 db    0
.rdata:0000000180016624                 db 0FFh
.rdata:0000000180016625                 db 0FFh
.rdata:0000000180016626                 db 0FFh
.rdata:0000000180016627                 db 0FFh
.rdata:0000000180016628                 db    0
.rdata:0000000180016629                 db    0
.rdata:000000018001662A                 db    0
.rdata:000000018001662B                 db    0
.rdata:000000018001662C                 db  18h
.rdata:000000018001662D                 db    0
.rdata:000000018001662E                 db    0
.rdata:000000018001662F                 db    0
.rdata:0000000180016630                 db  10h
.rdata:0000000180016631                 db  10h
.rdata:0000000180016632                 db    0
.rdata:0000000180016633                 db    0
.rdata:0000000180016634                 db    0
.rdata:0000000180016635                 db    0
.rdata:0000000180016636                 db    0
.rdata:0000000180016637                 db    0
.rdata:0000000180016638                 db    0
.rdata:0000000180016639                 db    0
.rdata:000000018001663A                 db    0
.rdata:000000018001663B                 db    0
.rdata:000000018001663C                 db    0
.rdata:000000018001663D                 db    0
.rdata:000000018001663E                 db    0
.rdata:000000018001663F                 db    0
.rdata:0000000180016640 ; const _ThrowInfo pThrowInfo
.rdata:0000000180016640 pThrowInfo      _ThrowInfo <0, 10C0h, 0, 165A8h>
.rdata:0000000180016640                                         ; DATA XREF: Concurrency::cancel_current_task(void)+E↑o
.rdata:0000000180016650                 align 20h
.rdata:0000000180016660                 db    2
.rdata:0000000180016661                 db    0
.rdata:0000000180016662                 db    0
.rdata:0000000180016663                 db    0
.rdata:0000000180016664                 db  98h
.rdata:0000000180016665                 db  66h ; f
.rdata:0000000180016666                 db    1
.rdata:0000000180016667                 db    0
.rdata:0000000180016668                 db  18h
.rdata:0000000180016669                 db  66h ; f
.rdata:000000018001666A                 db    1
.rdata:000000018001666B                 db    0
.rdata:000000018001666C                 db    0
.rdata:000000018001666D                 db    0
.rdata:000000018001666E                 db    0
.rdata:000000018001666F                 db    0
.rdata:0000000180016670                 db    0
.rdata:0000000180016671                 db    0
.rdata:0000000180016672                 db    0
.rdata:0000000180016673                 db    0
.rdata:0000000180016674                 db    0
.rdata:0000000180016675                 db    0
.rdata:0000000180016676                 db    0
.rdata:0000000180016677                 db    0
.rdata:0000000180016678 ; const _ThrowInfo stru_180016678
.rdata:0000000180016678 stru_180016678  _ThrowInfo <0, 10C0h, 0, 16660h>
.rdata:0000000180016678                                         ; DATA XREF: Concurrency::cancel_current_task(void)+E↑o
.rdata:0000000180016688                 db    0
.rdata:0000000180016689                 db    0
.rdata:000000018001668A                 db    0
.rdata:000000018001668B                 db    0
.rdata:000000018001668C                 db    0
.rdata:000000018001668D                 db    0
.rdata:000000018001668E                 db    0
.rdata:000000018001668F                 db    0
.rdata:0000000180016690                 db    0
.rdata:0000000180016691                 db    0
.rdata:0000000180016692                 db    0
.rdata:0000000180016693                 db    0
.rdata:0000000180016694                 db    0
.rdata:0000000180016695                 db    0
.rdata:0000000180016696                 db    0
.rdata:0000000180016697                 db    0
.rdata:0000000180016698                 db    0
.rdata:0000000180016699                 db    0
.rdata:000000018001669A                 db    0
.rdata:000000018001669B                 db    0
.rdata:000000018001669C                 db 0D0h
.rdata:000000018001669D                 db  90h
.rdata:000000018001669E                 db    1
.rdata:000000018001669F                 db    0
.rdata:00000001800166A0                 db    0
.rdata:00000001800166A1                 db    0
.rdata:00000001800166A2                 db    0
.rdata:00000001800166A3                 db    0
.rdata:00000001800166A4                 db 0FFh
.rdata:00000001800166A5                 db 0FFh
.rdata:00000001800166A6                 db 0FFh
.rdata:00000001800166A7                 db 0FFh
.rdata:00000001800166A8                 db    0
.rdata:00000001800166A9                 db    0
.rdata:00000001800166AA                 db    0
.rdata:00000001800166AB                 db    0
.rdata:00000001800166AC                 db  18h
.rdata:00000001800166AD                 db    0
.rdata:00000001800166AE                 db    0
.rdata:00000001800166AF                 db    0
.rdata:00000001800166B0                 db    0
.rdata:00000001800166B1                 db  6Fh ; o
.rdata:00000001800166B2                 db    0
.rdata:00000001800166B3                 db    0
.rdata:00000001800166B4                 db    0
.rdata:00000001800166B5                 db    0
.rdata:00000001800166B6                 db    0
.rdata:00000001800166B7                 db    0
.rdata:00000001800166B8                 db    0
.rdata:00000001800166B9                 db    0
.rdata:00000001800166BA                 db    0
.rdata:00000001800166BB                 db    0
.rdata:00000001800166BC                 db    0
.rdata:00000001800166BD                 db    0
.rdata:00000001800166BE                 db    0
.rdata:00000001800166BF                 db    0
.rdata:00000001800166C0 ;
.rdata:00000001800166C0 ; Export directory for FSUIPC_WAPID.dll
.rdata:00000001800166C0 ;
.rdata:00000001800166C0                 dd 0                    ; Characteristics
.rdata:00000001800166C4                 dd 0FFFFFFFFh           ; TimeDateStamp
.rdata:00000001800166C8                 dw 0                    ; MajorVersion
.rdata:00000001800166CA                 dw 0                    ; MinorVersion
.rdata:00000001800166CC                 dd rva aFsuipcWapidDll  ; Name
.rdata:00000001800166D0                 dd 1                    ; Base
.rdata:00000001800166D4                 dd 20h                  ; NumberOfFunctions
.rdata:00000001800166D8                 dd 20h                  ; NumberOfNames
.rdata:00000001800166DC                 dd rva off_1800166E8    ; AddressOfFunctions
.rdata:00000001800166E0                 dd rva off_180016768    ; AddressOfNames
.rdata:00000001800166E4                 dd rva word_1800167E8   ; AddressOfNameOrdinals
.rdata:00000001800166E8 ;
.rdata:00000001800166E8 ; Export Address Table for FSUIPC_WAPID.dll
.rdata:00000001800166E8 ;
.rdata:00000001800166E8 off_1800166E8   dd rva fsuipcw_MyDispatchProc, rva fsuipcw_createAircraftLvarFile
.rdata:00000001800166E8                                         ; DATA XREF: .rdata:00000001800166DC↑o
.rdata:00000001800166F0                 dd rva fsuipcw_createLvar, rva fsuipcw_end, rva fsuipcw_executeCalclatorCode
.rdata:00000001800166FC                 dd rva fsuipcw_flagLvarForUpdateCallbackById, rva fsuipcw_flagLvarForUpdateCallbackByName
.rdata:0000000180016704                 dd rva fsuipcw_getHvarList, rva fsuipcw_getLvarFromId
.rdata:000000018001670C                 dd rva fsuipcw_getLvarFromName, rva fsuipcw_getLvarIdFromName
.rdata:0000000180016714                 dd rva fsuipcw_getLvarList, rva fsuipcw_getLvarNameFromId
.rdata:000000018001671C                 dd rva fsuipcw_getLvarUpdateFrequency, rva fsuipcw_getLvarValues
.rdata:0000000180016724                 dd rva fsuipcw_init, rva fsuipcw_isRunning, rva fsuipcw_logHvars
.rdata:0000000180016730                 dd rva fsuipcw_logLvars, rva fsuipcw_registerLvarUpdateCallbackById
.rdata:0000000180016738                 dd rva fsuipcw_registerLvarUpdateCallbackByName, rva fsuipcw_registerUpdateCallback
.rdata:0000000180016740                 dd rva fsuipcw_reload, rva fsuipcw_setHvar, rva fsuipcw_setLogLevel
.rdata:000000018001674C                 dd rva fsuipcw_setLvarAsDouble, rva fsuipcw_setLvarAsShort
.rdata:0000000180016754                 dd rva fsuipcw_setLvarAsString, rva fsuipcw_setLvarAsUShort
.rdata:000000018001675C                 dd rva fsuipcw_setLvarUpdateFrequency, rva fsuipcw_setSimConfigConnection
.rdata:0000000180016764                 dd rva fsuipcw_start
.rdata:0000000180016768 ;
.rdata:0000000180016768 ; Export Names Table for FSUIPC_WAPID.dll
.rdata:0000000180016768 ;
.rdata:0000000180016768 off_180016768   dd rva aFsuipcwMydispa, rva aFsuipcwCreatea, rva aFsuipcwCreatel
.rdata:0000000180016768                                         ; DATA XREF: .rdata:00000001800166E0↑o
.rdata:0000000180016774                 dd rva aFsuipcwEnd, rva aFsuipcwExecute, rva aFsuipcwFlaglva ; "fsuipcw_MyDispatchProc" ...
.rdata:0000000180016780                 dd rva aFsuipcwFlaglva_0, rva aFsuipcwGethvar, rva aFsuipcwGetlvar
.rdata:000000018001678C                 dd rva aFsuipcwGetlvar_0, rva aFsuipcwGetlvar_1, rva aFsuipcwGetlvar_2
.rdata:0000000180016798                 dd rva aFsuipcwGetlvar_3, rva aFsuipcwGetlvar_4, rva aFsuipcwGetlvar_5
.rdata:00000001800167A4                 dd rva aFsuipcwInit, rva aFsuipcwIsrunni, rva aFsuipcwLoghvar
.rdata:00000001800167B0                 dd rva aFsuipcwLoglvar, rva aFsuipcwRegiste, rva aFsuipcwRegiste_0
.rdata:00000001800167BC                 dd rva aFsuipcwRegiste_1, rva aFsuipcwReload, rva aFsuipcwSethvar
.rdata:00000001800167C8                 dd rva aFsuipcwSetlogl, rva aFsuipcwSetlvar, rva aFsuipcwSetlvar_0
.rdata:00000001800167D4                 dd rva aFsuipcwSetlvar_1, rva aFsuipcwSetlvar_2, rva aFsuipcwSetlvar_3
.rdata:00000001800167E0                 dd rva aFsuipcwSetsimc, rva aFsuipcwStart
.rdata:00000001800167E8 ;
.rdata:00000001800167E8 ; Export Ordinals Table for FSUIPC_WAPID.dll
.rdata:00000001800167E8 ;
.rdata:00000001800167E8 word_1800167E8  dw 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0Ah, 0Bh, 0Ch, 0Dh, 0Eh
.rdata:00000001800167E8                                         ; DATA XREF: .rdata:00000001800166E4↑o
.rdata:0000000180016806                 dw 0Fh, 10h, 11h, 12h, 13h, 14h, 15h, 16h, 17h, 18h, 19h
.rdata:000000018001681C                 dw 1Ah, 1Bh, 1Ch, 1Dh, 1Eh, 1Fh
.rdata:0000000180016828 aFsuipcWapidDll db 'FSUIPC_WAPID.dll',0 ; DATA XREF: .rdata:00000001800166CC↑o
.rdata:0000000180016839 aFsuipcwMydispa db 'fsuipcw_MyDispatchProc',0
.rdata:0000000180016839                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016850 aFsuipcwCreatea db 'fsuipcw_createAircraftLvarFile',0
.rdata:0000000180016850                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:000000018001686F aFsuipcwCreatel db 'fsuipcw_createLvar',0
.rdata:000000018001686F                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016882 aFsuipcwEnd     db 'fsuipcw_end',0      ; DATA XREF: .rdata:off_180016768↑o
.rdata:000000018001688E aFsuipcwExecute db 'fsuipcw_executeCalclatorCode',0
.rdata:000000018001688E                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:00000001800168AB aFsuipcwFlaglva db 'fsuipcw_flagLvarForUpdateCallbackById',0
.rdata:00000001800168AB                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:00000001800168D1 aFsuipcwFlaglva_0 db 'fsuipcw_flagLvarForUpdateCallbackByName',0
.rdata:00000001800168D1                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:00000001800168F9 aFsuipcwGethvar db 'fsuipcw_getHvarList',0
.rdata:00000001800168F9                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:000000018001690D aFsuipcwGetlvar db 'fsuipcw_getLvarFromId',0
.rdata:000000018001690D                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016923 aFsuipcwGetlvar_0 db 'fsuipcw_getLvarFromName',0
.rdata:0000000180016923                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:000000018001693B aFsuipcwGetlvar_1 db 'fsuipcw_getLvarIdFromName',0
.rdata:000000018001693B                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016955 aFsuipcwGetlvar_2 db 'fsuipcw_getLvarList',0
.rdata:0000000180016955                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016969 aFsuipcwGetlvar_3 db 'fsuipcw_getLvarNameFromId',0
.rdata:0000000180016969                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016983 aFsuipcwGetlvar_4 db 'fsuipcw_getLvarUpdateFrequency',0
.rdata:0000000180016983                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:00000001800169A2 aFsuipcwGetlvar_5 db 'fsuipcw_getLvarValues',0
.rdata:00000001800169A2                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:00000001800169B8 aFsuipcwInit    db 'fsuipcw_init',0     ; DATA XREF: .rdata:off_180016768↑o
.rdata:00000001800169C5 aFsuipcwIsrunni db 'fsuipcw_isRunning',0
.rdata:00000001800169C5                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:00000001800169D7 aFsuipcwLoghvar db 'fsuipcw_logHvars',0 ; DATA XREF: .rdata:off_180016768↑o
.rdata:00000001800169E8 aFsuipcwLoglvar db 'fsuipcw_logLvars',0 ; DATA XREF: .rdata:off_180016768↑o
.rdata:00000001800169F9 aFsuipcwRegiste db 'fsuipcw_registerLvarUpdateCallbackById',0
.rdata:00000001800169F9                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016A20 aFsuipcwRegiste_0 db 'fsuipcw_registerLvarUpdateCallbackByName',0
.rdata:0000000180016A20                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016A49 aFsuipcwRegiste_1 db 'fsuipcw_registerUpdateCallback',0
.rdata:0000000180016A49                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016A68 aFsuipcwReload  db 'fsuipcw_reload',0   ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016A77 aFsuipcwSethvar db 'fsuipcw_setHvar',0  ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016A87 aFsuipcwSetlogl db 'fsuipcw_setLogLevel',0
.rdata:0000000180016A87                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016A9B aFsuipcwSetlvar db 'fsuipcw_setLvarAsDouble',0
.rdata:0000000180016A9B                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016AB3 aFsuipcwSetlvar_0 db 'fsuipcw_setLvarAsShort',0
.rdata:0000000180016AB3                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016ACA aFsuipcwSetlvar_1 db 'fsuipcw_setLvarAsString',0
.rdata:0000000180016ACA                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016AE2 aFsuipcwSetlvar_2 db 'fsuipcw_setLvarAsUShort',0
.rdata:0000000180016AE2                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016AFA aFsuipcwSetlvar_3 db 'fsuipcw_setLvarUpdateFrequency',0
.rdata:0000000180016AFA                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016B19 aFsuipcwSetsimc db 'fsuipcw_setSimConfigConnection',0
.rdata:0000000180016B19                                         ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016B38 aFsuipcwStart   db 'fsuipcw_start',0    ; DATA XREF: .rdata:off_180016768↑o
.rdata:0000000180016B46                 align 8
.rdata:0000000180016B48 __IMPORT_DESCRIPTOR_WS2_32 dd rva off_180017058 ; Import Name Table
.rdata:0000000180016B4C                 dd 0                    ; Time stamp
.rdata:0000000180016B50                 dd 0                    ; Forwarder Chain
.rdata:0000000180016B54                 dd rva aWs232Dll        ; DLL Name
.rdata:0000000180016B58                 dd rva WSASend          ; Import Address Table
.rdata:0000000180016B5C __IMPORT_DESCRIPTOR_SHLWAPI dd rva off_180016FD0 ; Import Name Table
.rdata:0000000180016B60                 dd 0                    ; Time stamp
.rdata:0000000180016B64                 dd 0                    ; Forwarder Chain
.rdata:0000000180016B68                 dd rva aShlwapiDll      ; DLL Name
.rdata:0000000180016B6C                 dd rva PathCombineA     ; Import Address Table
.rdata:0000000180016B70 __IMPORT_DESCRIPTOR_KERNEL32 dd rva off_180016CD0 ; Import Name Table
.rdata:0000000180016B74                 dd 0                    ; Time stamp
.rdata:0000000180016B78                 dd 0                    ; Forwarder Chain
.rdata:0000000180016B7C                 dd rva aKernel32Dll     ; DLL Name
.rdata:0000000180016B80                 dd rva SetUnhandledExceptionFilter ; Import Address Table
.rdata:0000000180016B84 __IMPORT_DESCRIPTOR_USER32 dd rva off_180016FE0 ; Import Name Table
.rdata:0000000180016B88                 dd 0                    ; Time stamp
.rdata:0000000180016B8C                 dd 0                    ; Forwarder Chain
.rdata:0000000180016B90                 dd rva aUser32Dll       ; DLL Name
.rdata:0000000180016B94                 dd rva PostMessageA     ; Import Address Table
.rdata:0000000180016B98 __IMPORT_DESCRIPTOR_ADVAPI32 dd rva off_180016CB0 ; Import Name Table
.rdata:0000000180016B9C                 dd 0                    ; Time stamp
.rdata:0000000180016BA0                 dd 0                    ; Forwarder Chain
.rdata:0000000180016BA4                 dd rva aAdvapi32Dll     ; DLL Name
.rdata:0000000180016BA8                 dd rva RegOpenKeyExA    ; Import Address Table
.rdata:0000000180016BAC __IMPORT_DESCRIPTOR_SHELL32 dd rva off_180016FC0 ; Import Name Table
.rdata:0000000180016BB0                 dd 0                    ; Time stamp
.rdata:0000000180016BB4                 dd 0                    ; Forwarder Chain
.rdata:0000000180016BB8                 dd rva aShell32Dll      ; DLL Name
.rdata:0000000180016BBC                 dd rva SHGetFolderPathA ; Import Address Table
.rdata:0000000180016BC0 __IMPORT_DESCRIPTOR_MSVCP140 dd rva off_180016E20 ; Import Name Table
.rdata:0000000180016BC4                 dd 0                    ; Time stamp
.rdata:0000000180016BC8                 dd 0                    ; Forwarder Chain
.rdata:0000000180016BCC                 dd rva aMsvcp140Dll     ; DLL Name
.rdata:0000000180016BD0                 dd rva ??Bid@locale@std@@QEAA_KXZ ; Import Address Table
.rdata:0000000180016BD4 __IMPORT_DESCRIPTOR_VCRUNTIME140_1 dd rva off_180017048 ; Import Name Table
.rdata:0000000180016BD8                 dd 0                    ; Time stamp
.rdata:0000000180016BDC                 dd 0                    ; Forwarder Chain
.rdata:0000000180016BE0                 dd rva aVcruntime1401D  ; DLL Name
.rdata:0000000180016BE4                 dd rva __imp___CxxFrameHandler4 ; Import Address Table
.rdata:0000000180016BE8 __IMPORT_DESCRIPTOR_VCRUNTIME140 dd rva off_180016FF0 ; Import Name Table
.rdata:0000000180016BEC                 dd 0                    ; Time stamp
.rdata:0000000180016BF0                 dd 0                    ; Forwarder Chain
.rdata:0000000180016BF4                 dd rva aVcruntime140Dl  ; DLL Name
.rdata:0000000180016BF8                 dd rva __std_exception_destroy ; Import Address Table
.rdata:0000000180016BFC                 dd rva off_180017138    ; Import Name Table
.rdata:0000000180016C00                 dd 0                    ; Time stamp
.rdata:0000000180016C04                 dd 0                    ; Forwarder Chain
.rdata:0000000180016C08                 dd rva aApiMsWinCrtRun  ; DLL Name
.rdata:0000000180016C0C                 dd rva __imp__initterm  ; Import Address Table
.rdata:0000000180016C10                 dd rva off_180017108    ; Import Name Table
.rdata:0000000180016C14                 dd 0                    ; Time stamp
.rdata:0000000180016C18                 dd 0                    ; Forwarder Chain
.rdata:0000000180016C1C                 dd rva aApiMsWinCrtHea  ; DLL Name
.rdata:0000000180016C20                 dd rva __imp_malloc     ; Import Address Table
.rdata:0000000180016C24                 dd rva off_1800170C8    ; Import Name Table
.rdata:0000000180016C28                 dd 0                    ; Time stamp
.rdata:0000000180016C2C                 dd 0                    ; Forwarder Chain
.rdata:0000000180016C30                 dd rva aApiMsWinCrtCon  ; DLL Name
.rdata:0000000180016C34                 dd rva atoi             ; Import Address Table
.rdata:0000000180016C38                 dd rva off_180017230    ; Import Name Table
.rdata:0000000180016C3C                 dd 0                    ; Time stamp
.rdata:0000000180016C40                 dd 0                    ; Forwarder Chain
.rdata:0000000180016C44                 dd rva aApiMsWinCrtStr  ; DLL Name
.rdata:0000000180016C48                 dd rva strcpy_s         ; Import Address Table
.rdata:0000000180016C4C                 dd rva off_180017198    ; Import Name Table
.rdata:0000000180016C50                 dd 0                    ; Time stamp
.rdata:0000000180016C54                 dd 0                    ; Forwarder Chain
.rdata:0000000180016C58                 dd rva aApiMsWinCrtStd  ; DLL Name
.rdata:0000000180016C5C                 dd rva __acrt_iob_func  ; Import Address Table
.rdata:0000000180016C60                 dd rva off_1800170E0    ; Import Name Table
.rdata:0000000180016C64                 dd 0                    ; Time stamp
.rdata:0000000180016C68                 dd 0                    ; Forwarder Chain
.rdata:0000000180016C6C                 dd rva aApiMsWinCrtFil  ; DLL Name
.rdata:0000000180016C70                 dd rva _lock_file       ; Import Address Table
.rdata:0000000180016C74                 dd rva off_180017248    ; Import Name Table
.rdata:0000000180016C78                 dd 0                    ; Time stamp
.rdata:0000000180016C7C                 dd 0                    ; Forwarder Chain
.rdata:0000000180016C80                 dd rva aApiMsWinCrtTim  ; DLL Name
.rdata:0000000180016C84                 dd rva _localtime64     ; Import Address Table
.rdata:0000000180016C88                 dd rva off_180017128    ; Import Name Table
.rdata:0000000180016C8C                 dd 0                    ; Time stamp
.rdata:0000000180016C90                 dd 0                    ; Forwarder Chain
.rdata:0000000180016C94                 dd rva aApiMsWinCrtMat  ; DLL Name
.rdata:0000000180016C98                 dd rva __imp_ceilf      ; Import Address Table
.rdata:0000000180016C9C                 db    0
.rdata:0000000180016C9D                 db    0
.rdata:0000000180016C9E                 db    0
.rdata:0000000180016C9F                 db    0
.rdata:0000000180016CA0                 db    0
.rdata:0000000180016CA1                 db    0
.rdata:0000000180016CA2                 db    0
.rdata:0000000180016CA3                 db    0
.rdata:0000000180016CA4                 db    0
.rdata:0000000180016CA5                 db    0
.rdata:0000000180016CA6                 db    0
.rdata:0000000180016CA7                 db    0
.rdata:0000000180016CA8                 db    0
.rdata:0000000180016CA9                 db    0
.rdata:0000000180016CAA                 db    0
.rdata:0000000180016CAB                 db    0
.rdata:0000000180016CAC                 db    0
.rdata:0000000180016CAD                 db    0
.rdata:0000000180016CAE                 db    0
.rdata:0000000180016CAF                 db    0
.rdata:0000000180016CB0 ;
.rdata:0000000180016CB0 ; Import names for ADVAPI32.dll
.rdata:0000000180016CB0 ;
.rdata:0000000180016CB0 off_180016CB0   dq rva word_18001750E   ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_ADVAPI32↑o
.rdata:0000000180016CB8                 dq rva word_18001751E
.rdata:0000000180016CC0                 dq rva word_180017500
.rdata:0000000180016CC8                 dq 0
.rdata:0000000180016CD0 ;
.rdata:0000000180016CD0 ; Import names for KERNEL32.dll
.rdata:0000000180016CD0 ;
.rdata:0000000180016CD0 off_180016CD0   dq rva word_180018720   ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_KERNEL32↑o
.rdata:0000000180016CD8                 dq rva word_18001873E
.rdata:0000000180016CE0                 dq rva word_180018752
.rdata:0000000180016CE8                 dq rva word_180018766
.rdata:0000000180016CF0                 dq rva word_180018782
.rdata:0000000180016CF8                 dq rva word_180018798
.rdata:0000000180016D00                 dq rva word_1800187B2
.rdata:0000000180016D08                 dq rva word_1800187CE
.rdata:0000000180016D10                 dq rva word_1800187E4
.rdata:0000000180016D18                 dq rva word_180018704
.rdata:0000000180016D20                 dq rva word_1800172B2
.rdata:0000000180016D28                 dq rva word_1800172CA
.rdata:0000000180016D30                 dq rva word_1800172E2
.rdata:0000000180016D38                 dq rva word_1800172FA
.rdata:0000000180016D40                 dq rva word_180017316
.rdata:0000000180016D48                 dq rva word_18001732C
.rdata:0000000180016D50                 dq rva word_18001733A
.rdata:0000000180016D58                 dq rva word_1800186F0
.rdata:0000000180016D60                 dq rva word_180017362
.rdata:0000000180016D68                 dq rva word_180017372
.rdata:0000000180016D70                 dq rva word_18001738C
.rdata:0000000180016D78                 dq rva word_180017394
.rdata:0000000180016D80                 dq rva word_1800173AC
.rdata:0000000180016D88                 dq rva word_1800173C4
.rdata:0000000180016D90                 dq rva word_1800173D2
.rdata:0000000180016D98                 dq rva word_1800173E2
.rdata:0000000180016DA0                 dq rva word_1800173EE
.rdata:0000000180016DA8                 dq rva word_180017404
.rdata:0000000180016DB0                 dq rva word_180017418
.rdata:0000000180016DB8                 dq rva word_18001742E
.rdata:0000000180016DC0                 dq rva word_180017440
.rdata:0000000180016DC8                 dq rva word_18001744C
.rdata:0000000180016DD0                 dq rva word_180017468
.rdata:0000000180016DD8                 dq rva word_180017484
.rdata:0000000180016DE0                 dq rva word_180017496
.rdata:0000000180016DE8                 dq rva word_1800174B2
.rdata:0000000180016DF0                 dq rva word_1800174BE
.rdata:0000000180016DF8                 dq rva word_1800174CA
.rdata:0000000180016E00                 dq rva word_1800186D6
.rdata:0000000180016E08                 dq rva word_18001734A
.rdata:0000000180016E10                 dq rva word_1800186C2
.rdata:0000000180016E18                 dq 0
.rdata:0000000180016E20 ;
.rdata:0000000180016E20 ; Import names for MSVCP140.dll
.rdata:0000000180016E20 ;
.rdata:0000000180016E20 off_180016E20   dq rva word_180018228   ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_MSVCP140↑o
.rdata:0000000180016E28                 dq rva word_1800181FC
.rdata:0000000180016E30                 dq rva word_180017560
.rdata:0000000180016E38                 dq rva word_180017582
.rdata:0000000180016E40                 dq rva word_1800175A4
.rdata:0000000180016E48                 dq rva word_1800175BE
.rdata:0000000180016E50                 dq rva word_1800175DA
.rdata:0000000180016E58                 dq rva word_180017634
.rdata:0000000180016E60                 dq rva word_180017670
.rdata:0000000180016E68                 dq rva word_1800176A4
.rdata:0000000180016E70                 dq rva word_1800176C6
.rdata:0000000180016E78                 dq rva word_1800176F8
.rdata:0000000180016E80                 dq rva word_180017720
.rdata:0000000180016E88                 dq rva word_180017746
.rdata:0000000180016E90                 dq rva word_18001775A
.rdata:0000000180016E98                 dq rva word_1800177D0
.rdata:0000000180016EA0                 dq rva word_18001781E
.rdata:0000000180016EA8                 dq rva word_180017866
.rdata:0000000180016EB0                 dq rva word_1800178AA
.rdata:0000000180016EB8                 dq rva word_180017952
.rdata:0000000180016EC0                 dq rva word_180017994
.rdata:0000000180016EC8                 dq rva word_1800179D0
.rdata:0000000180016ED0                 dq rva word_180017A1C
.rdata:0000000180016ED8                 dq rva word_180017A58
.rdata:0000000180016EE0                 dq rva word_180017AA4
.rdata:0000000180016EE8                 dq rva word_180017AE4
.rdata:0000000180016EF0                 dq rva word_180017B22
.rdata:0000000180016EF8                 dq rva word_180017B66
.rdata:0000000180016F00                 dq rva word_180017BBA
.rdata:0000000180016F08                 dq rva word_180017C0E
.rdata:0000000180016F10                 dq rva word_180017C52
.rdata:0000000180016F18                 dq rva word_180017C90
.rdata:0000000180016F20                 dq rva word_180017CD0
.rdata:0000000180016F28                 dq rva word_180017D06
.rdata:0000000180016F30                 dq rva word_180017D72
.rdata:0000000180016F38                 dq rva word_180017DDE
.rdata:0000000180016F40                 dq rva word_180017E1A
.rdata:0000000180016F48                 dq rva word_180017E5A
.rdata:0000000180016F50                 dq rva word_180017E9C
.rdata:0000000180016F58                 dq rva word_180017EE2
.rdata:0000000180016F60                 dq rva word_180017F22
.rdata:0000000180016F68                 dq rva word_180017F6A
.rdata:0000000180016F70                 dq rva word_180017FB2
.rdata:0000000180016F78                 dq rva word_180018000
.rdata:0000000180016F80                 dq rva word_180018040
.rdata:0000000180016F88                 dq rva word_18001808E
.rdata:0000000180016F90                 dq rva word_1800180C4
.rdata:0000000180016F98                 dq rva word_1800180FE
.rdata:0000000180016FA0                 dq rva word_180018152
.rdata:0000000180016FA8                 dq rva word_180018194
.rdata:0000000180016FB0                 dq rva word_1800181D0
.rdata:0000000180016FB8                 dq 0
.rdata:0000000180016FC0 ;
.rdata:0000000180016FC0 ; Import names for SHELL32.dll
.rdata:0000000180016FC0 ;
.rdata:0000000180016FC0 off_180016FC0   dq rva word_180017540   ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_SHELL32↑o
.rdata:0000000180016FC8                 dq 0
.rdata:0000000180016FD0 ;
.rdata:0000000180016FD0 ; Import names for SHLWAPI.dll
.rdata:0000000180016FD0 ;
.rdata:0000000180016FD0 off_180016FD0   dq rva word_180017296   ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_SHLWAPI↑o
.rdata:0000000180016FD8                 dq 0
.rdata:0000000180016FE0 ;
.rdata:0000000180016FE0 ; Import names for USER32.dll
.rdata:0000000180016FE0 ;
.rdata:0000000180016FE0 off_180016FE0   dq rva word_1800174E4   ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_USER32↑o
.rdata:0000000180016FE8                 dq 0
.rdata:0000000180016FF0 ;
.rdata:0000000180016FF0 ; Import names for VCRUNTIME140.dll
.rdata:0000000180016FF0 ;
.rdata:0000000180016FF0 off_180016FF0   dq rva word_18001826A   ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_VCRUNTIME140↑o
.rdata:0000000180016FF8                 dq rva word_180018284
.rdata:0000000180017000                 dq rva word_18001829C
.rdata:0000000180017008                 dq rva word_1800182AE
.rdata:0000000180017010                 dq rva word_1800182B8
.rdata:0000000180017018                 dq rva word_1800182C2
.rdata:0000000180017020                 dq rva word_1800182D8
.rdata:0000000180017028                 dq rva word_1800182E2
.rdata:0000000180017030                 dq rva word_1800182EC
.rdata:0000000180017038                 dq rva word_180018304
.rdata:0000000180017040                 dq 0
.rdata:0000000180017048 ;
.rdata:0000000180017048 ; Import names for VCRUNTIME140_1.dll
.rdata:0000000180017048 ;
.rdata:0000000180017048 off_180017048   dq rva word_180018254   ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_VCRUNTIME140_1↑o
.rdata:0000000180017050                 dq 0
.rdata:0000000180017058 ;
.rdata:0000000180017058 ; Import names for WS2_32.dll
.rdata:0000000180017058 ;
.rdata:0000000180017058 off_180017058   dq rva word_180017280   ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_WS2_32↑o
.rdata:0000000180017060                 dq rva word_180017276
.rdata:0000000180017068                 dq 800000000000006Fh
.rdata:0000000180017070                 dq 8000000000000016h
.rdata:0000000180017078                 dq 8000000000000007h
.rdata:0000000180017080                 dq 8000000000000003h
.rdata:0000000180017088                 dq rva word_180017266
.rdata:0000000180017090                 dq rva word_180017258
.rdata:0000000180017098                 dq 8000000000000074h
.rdata:00000001800170A0                 dq 8000000000000073h
.rdata:00000001800170A8                 dq 8000000000000017h
.rdata:00000001800170B0                 dq 8000000000000015h
.rdata:00000001800170B8                 dq 8000000000000004h
.rdata:00000001800170C0                 dq 0
.rdata:00000001800170C8 ;
.rdata:00000001800170C8 ; Import names for api-ms-win-crt-convert-l1-1-0.dll
.rdata:00000001800170C8 ;
.rdata:00000001800170C8 off_1800170C8   dq rva word_1800184C6   ; DATA XREF: .rdata:0000000180016C24↑o
.rdata:00000001800170D0                 dq rva word_180018370
.rdata:00000001800170D8                 dq 0
.rdata:00000001800170E0 ;
.rdata:00000001800170E0 ; Import names for api-ms-win-crt-filesystem-l1-1-0.dll
.rdata:00000001800170E0 ;
.rdata:00000001800170E0 off_1800170E0   dq rva word_180018432   ; DATA XREF: .rdata:0000000180016C60↑o
.rdata:00000001800170E8                 dq rva word_180018422
.rdata:00000001800170F0                 dq rva word_180018406
.rdata:00000001800170F8                 dq rva word_180018418
.rdata:0000000180017100                 dq 0
.rdata:0000000180017108 ;
.rdata:0000000180017108 ; Import names for api-ms-win-crt-heap-l1-1-0.dll
.rdata:0000000180017108 ;
.rdata:0000000180017108 off_180017108   dq rva word_1800184BC   ; DATA XREF: .rdata:0000000180016C10↑o
.rdata:0000000180017110                 dq rva word_1800184FA
.rdata:0000000180017118                 dq rva word_1800184B4
.rdata:0000000180017120                 dq 0
.rdata:0000000180017128 ;
.rdata:0000000180017128 ; Import names for api-ms-win-crt-math-l1-1-0.dll
.rdata:0000000180017128 ;
.rdata:0000000180017128 off_180017128   dq rva word_1800187F8   ; DATA XREF: .rdata:0000000180016C88↑o
.rdata:0000000180017130                 dq 0
.rdata:0000000180017138 ;
.rdata:0000000180017138 ; Import names for api-ms-win-crt-runtime-l1-1-0.dll
.rdata:0000000180017138 ;
.rdata:0000000180017138 off_180017138   dq rva word_180018506   ; DATA XREF: .rdata:0000000180016BFC↑o
.rdata:0000000180017140                 dq rva word_180018512
.rdata:0000000180017148                 dq rva word_180018520
.rdata:0000000180017150                 dq rva word_180018532
.rdata:0000000180017158                 dq rva word_18001854C
.rdata:0000000180017160                 dq rva word_18001856E
.rdata:0000000180017168                 dq rva word_18001858A
.rdata:0000000180017170                 dq rva word_1800185A6
.rdata:0000000180017178                 dq rva word_1800185BE
.rdata:0000000180017180                 dq rva word_1800185CC
.rdata:0000000180017188                 dq rva word_18001834A
.rdata:0000000180017190                 dq 0
.rdata:0000000180017198 ;
.rdata:0000000180017198 ; Import names for api-ms-win-crt-stdio-l1-1-0.dll
.rdata:0000000180017198 ;
.rdata:0000000180017198 off_180017198   dq rva word_1800184CE   ; DATA XREF: .rdata:0000000180016C4C↑o
.rdata:00000001800171A0                 dq rva word_18001848A
.rdata:00000001800171A8                 dq rva word_180018482
.rdata:00000001800171B0                 dq rva word_180018440
.rdata:00000001800171B8                 dq rva word_18001844A
.rdata:00000001800171C0                 dq rva word_180018478
.rdata:00000001800171C8                 dq rva word_180018496
.rdata:00000001800171D0                 dq rva word_180018410
.rdata:00000001800171D8                 dq rva word_18001846E
.rdata:00000001800171E0                 dq rva word_1800183FC
.rdata:00000001800171E8                 dq rva word_1800183F2
.rdata:00000001800171F0                 dq rva word_1800183EA
.rdata:00000001800171F8                 dq rva word_1800183E2
.rdata:0000000180017200                 dq rva word_1800183C8
.rdata:0000000180017208                 dq rva word_1800183AE
.rdata:0000000180017210                 dq rva word_180018454
.rdata:0000000180017218                 dq rva word_180018386
.rdata:0000000180017220                 dq rva word_1800184E0
.rdata:0000000180017228                 dq 0
.rdata:0000000180017230 ;
.rdata:0000000180017230 ; Import names for api-ms-win-crt-string-l1-1-0.dll
.rdata:0000000180017230 ;
.rdata:0000000180017230 off_180017230   dq rva word_1800183A2   ; DATA XREF: .rdata:0000000180016C38↑o
.rdata:0000000180017238                 dq rva word_18001837A
.rdata:0000000180017240                 dq 0
.rdata:0000000180017248 ;
.rdata:0000000180017248 ; Import names for api-ms-win-crt-time-l1-1-0.dll
.rdata:0000000180017248 ;
.rdata:0000000180017248 off_180017248   dq rva word_18001845E   ; DATA XREF: .rdata:0000000180016C74↑o
.rdata:0000000180017250                 dq 0
.rdata:0000000180017258 word_180017258  dw 0A5h                 ; DATA XREF: .rdata:0000000180017090↑o
.rdata:000000018001725A                 db 'getaddrinfo',0
.rdata:0000000180017266 word_180017266  dw 0A4h                 ; DATA XREF: .rdata:0000000180017088↑o
.rdata:0000000180017268                 db 'freeaddrinfo',0
.rdata:0000000180017275                 align 2
.rdata:0000000180017276 word_180017276  dw 48h                  ; DATA XREF: .rdata:0000000180017060↑o
.rdata:0000000180017278                 db 'WSARecv',0
.rdata:0000000180017280 word_180017280  dw 4Dh                  ; DATA XREF: .rdata:off_180017058↑o
.rdata:0000000180017282                 db 'WSASend',0
.rdata:000000018001728A aWs232Dll       db 'WS2_32.dll',0       ; DATA XREF: .rdata:0000000180016B54↑o
.rdata:0000000180017295                 align 2
.rdata:0000000180017296 word_180017296  dw 3Ch                  ; DATA XREF: .rdata:off_180016FD0↑o
.rdata:0000000180017298                 db 'PathCombineA',0
.rdata:00000001800172A5                 align 2
.rdata:00000001800172A6 aShlwapiDll     db 'SHLWAPI.dll',0      ; DATA XREF: .rdata:0000000180016B68↑o
.rdata:00000001800172B2 word_1800172B2  dw 0FDh                 ; DATA XREF: .rdata:0000000180016D20↑o
.rdata:00000001800172B4                 db 'CreateTimerQueueTimer',0
.rdata:00000001800172CA word_1800172CA  dw 138h                 ; DATA XREF: .rdata:0000000180016D28↑o
.rdata:00000001800172CC                 db 'EnterCriticalSection',0
.rdata:00000001800172E1                 align 2
.rdata:00000001800172E2 word_1800172E2  dw 3C4h                 ; DATA XREF: .rdata:0000000180016D30↑o
.rdata:00000001800172E4                 db 'LeaveCriticalSection',0
.rdata:00000001800172F9                 align 2
.rdata:00000001800172FA word_1800172FA  dw 36Ah                 ; DATA XREF: .rdata:0000000180016D38↑o
.rdata:00000001800172FC                 db 'InitializeCriticalSection',0
.rdata:0000000180017316 word_180017316  dw 5EAh                 ; DATA XREF: .rdata:0000000180016D40↑o
.rdata:0000000180017318                 db 'WaitForSingleObject',0
.rdata:000000018001732C word_18001732C  dw 89h                  ; DATA XREF: .rdata:0000000180016D48↑o
.rdata:000000018001732E                 db 'CloseHandle',0
.rdata:000000018001733A word_18001733A  dw 0F5h                 ; DATA XREF: .rdata:0000000180016D50↑o
.rdata:000000018001733C                 db 'CreateThread',0
.rdata:0000000180017349                 align 2
.rdata:000000018001734A word_18001734A  dw 11Eh                 ; DATA XREF: .rdata:0000000180016E08↑o
.rdata:000000018001734C                 db 'DeleteTimerQueueTimer',0
.rdata:0000000180017362 word_180017362  dw 0BFh                 ; DATA XREF: .rdata:0000000180016D60↑o
.rdata:0000000180017364                 db 'CreateEventA',0
.rdata:0000000180017371                 align 2
.rdata:0000000180017372 word_180017372  dw 452h                 ; DATA XREF: .rdata:0000000180016D68↑o
.rdata:0000000180017374                 db 'QueryPerformanceCounter',0
.rdata:000000018001738C word_18001738C  dw 58Fh                 ; DATA XREF: .rdata:0000000180016D70↑o
.rdata:000000018001738E                 db 'Sleep',0
.rdata:0000000180017394 word_180017394  dw 114h                 ; DATA XREF: .rdata:0000000180016D78↑o
.rdata:0000000180017396                 db 'DeleteCriticalSection',0
.rdata:00000001800173AC word_1800173AC  dw 219h                 ; DATA XREF: .rdata:0000000180016D80↑o
.rdata:00000001800173AE                 db 'GetCurrentDirectoryA',0
.rdata:00000001800173C3                 align 4
.rdata:00000001800173C4 word_1800173C4  dw 0C6h                 ; DATA XREF: .rdata:0000000180016D88↑o
.rdata:00000001800173C6                 db 'CreateFileA',0
.rdata:00000001800173D2 word_1800173D2  dw 26Ah                 ; DATA XREF: .rdata:0000000180016D90↑o
.rdata:00000001800173D4                 db 'GetLastError',0
.rdata:00000001800173E1                 align 2
.rdata:00000001800173E2 word_1800173E2  dw 526h                 ; DATA XREF: .rdata:0000000180016D98↑o
.rdata:00000001800173E4                 db 'SetEvent',0
.rdata:00000001800173ED                 align 2
.rdata:00000001800173EE word_1800173EE  dw 221h                 ; DATA XREF: .rdata:0000000180016DA0↑o
.rdata:00000001800173F0                 db 'GetCurrentProcessId',0
.rdata:0000000180017404 word_180017404  dw 27Eh                 ; DATA XREF: .rdata:0000000180016DA8↑o
.rdata:0000000180017406                 db 'GetModuleHandleA',0
.rdata:0000000180017417                 align 8
.rdata:0000000180017418 word_180017418  dw 27Fh                 ; DATA XREF: .rdata:0000000180016DB0↑o
.rdata:000000018001741A                 db 'GetModuleHandleExA',0
.rdata:000000018001742D                 align 2
.rdata:000000018001742E word_18001742E  dw 2B8h                 ; DATA XREF: .rdata:0000000180016DB8↑o
.rdata:0000000180017430                 db 'GetProcAddress',0
.rdata:000000018001743F                 align 20h
.rdata:0000000180017440 word_180017440  dw 649h                 ; DATA XREF: .rdata:0000000180016DC0↑o
.rdata:0000000180017442                 db 'lstrcmpiA',0
.rdata:000000018001744C word_18001744C  dw 2B4h                 ; DATA XREF: .rdata:0000000180016DC8↑o
.rdata:000000018001744E                 db 'GetPrivateProfileStringA',0
.rdata:0000000180017467                 align 8
.rdata:0000000180017468 word_180017468  dw 2B0h                 ; DATA XREF: .rdata:0000000180016DD0↑o
.rdata:000000018001746A                 db 'GetPrivateProfileSectionA',0
.rdata:0000000180017484 word_180017484  dw 5F0h                 ; DATA XREF: .rdata:0000000180016DD8↑o
.rdata:0000000180017486                 db 'WaitNamedPipeA',0
.rdata:0000000180017495                 align 2
.rdata:0000000180017496 word_180017496  dw 6Ah                  ; DATA XREF: .rdata:0000000180016DE0↑o
.rdata:0000000180017498                 db 'BindIoCompletionCallback',0
.rdata:00000001800174B1                 align 2
.rdata:00000001800174B2 word_1800174B2  dw 479h                 ; DATA XREF: .rdata:0000000180016DE8↑o
.rdata:00000001800174B4                 db 'ReadFile',0
.rdata:00000001800174BD                 align 2
.rdata:00000001800174BE word_1800174BE  dw 625h                 ; DATA XREF: .rdata:0000000180016DF0↑o
.rdata:00000001800174C0                 db 'WriteFile',0
.rdata:00000001800174CA word_1800174CA  dw 73h                  ; DATA XREF: .rdata:0000000180016DF8↑o
.rdata:00000001800174CC                 db 'CancelIo',0
.rdata:00000001800174D5                 align 2
.rdata:00000001800174D6 aKernel32Dll    db 'KERNEL32.dll',0     ; DATA XREF: .rdata:0000000180016B7C↑o
.rdata:00000001800174E3                 align 4
.rdata:00000001800174E4 word_1800174E4  dw 2AEh                 ; DATA XREF: .rdata:off_180016FE0↑o
.rdata:00000001800174E6                 db 'PostMessageA',0
.rdata:00000001800174F3                 align 4
.rdata:00000001800174F4 aUser32Dll      db 'USER32.dll',0       ; DATA XREF: .rdata:0000000180016B90↑o
.rdata:00000001800174FF                 align 20h
.rdata:0000000180017500 word_180017500  dw 25Bh                 ; DATA XREF: .rdata:0000000180016CC0↑o
.rdata:0000000180017502                 db 'RegCloseKey',0
.rdata:000000018001750E word_18001750E  dw 28Bh                 ; DATA XREF: .rdata:off_180016CB0↑o
.rdata:0000000180017510                 db 'RegOpenKeyExA',0
.rdata:000000018001751E word_18001751E  dw 298h                 ; DATA XREF: .rdata:0000000180016CB8↑o
.rdata:0000000180017520                 db 'RegQueryValueExA',0
.rdata:0000000180017531                 align 2
.rdata:0000000180017532 aAdvapi32Dll    db 'ADVAPI32.dll',0     ; DATA XREF: .rdata:0000000180016BA4↑o
.rdata:000000018001753F                 align 20h
.rdata:0000000180017540 word_180017540  dw 14Bh                 ; DATA XREF: .rdata:off_180016FC0↑o
.rdata:0000000180017542                 db 'SHGetFolderPathA',0
.rdata:0000000180017553                 align 4
.rdata:0000000180017554 aShell32Dll     db 'SHELL32.dll',0      ; DATA XREF: .rdata:0000000180016BB8↑o
.rdata:0000000180017560 word_180017560  dw 28Fh                 ; DATA XREF: .rdata:0000000180016E30↑o
.rdata:0000000180017562                 db '?_Xout_of_range@std@@YAXPEBD@Z',0
.rdata:0000000180017581                 align 2
.rdata:0000000180017582 word_180017582  dw 28Eh                 ; DATA XREF: .rdata:0000000180016E38↑o
.rdata:0000000180017584                 db '?_Xlength_error@std@@YAXPEBD@Z',0
.rdata:00000001800175A3                 align 4
.rdata:00000001800175A4 word_1800175A4  dw 0A5h                 ; DATA XREF: .rdata:0000000180016E40↑o
.rdata:00000001800175A6                 db '??1_Lockit@std@@QEAA@XZ',0
.rdata:00000001800175BE word_1800175BE  dw 6Dh                  ; DATA XREF: .rdata:0000000180016E48↑o
.rdata:00000001800175C0                 db '??0_Lockit@std@@QEAA@H@Z',0
.rdata:00000001800175D9                 align 2
.rdata:00000001800175DA word_1800175DA  dw 3EDh                 ; DATA XREF: .rdata:0000000180016E50↑o
.rdata:00000001800175DC                 db '?id@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@st'
.rdata:00000001800175DC                 db 'd@@@std@@2V0locale@2@A',0
.rdata:0000000180017634 word_180017634  dw 2B4h                 ; DATA XREF: .rdata:0000000180016E58↑o
.rdata:0000000180017636                 db '?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A',0
.rdata:000000018001766F                 align 10h
.rdata:0000000180017670 word_180017670  dw 1D5h                 ; DATA XREF: .rdata:0000000180016E60↑o
.rdata:0000000180017672                 db '?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ',0
.rdata:00000001800176A4 word_1800176A4  dw 51Eh                 ; DATA XREF: .rdata:0000000180016E68↑o
.rdata:00000001800176A6                 db '?uncaught_exception@std@@YA_NXZ',0
.rdata:00000001800176C6 word_1800176C6  dw 3C9h                 ; DATA XREF: .rdata:0000000180016E70↑o
.rdata:00000001800176C8                 db '?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A',0
.rdata:00000001800176F8 word_1800176F8  dw 1ABh                 ; DATA XREF: .rdata:0000000180016E78↑o
.rdata:00000001800176FA                 db '?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z',0
.rdata:000000018001771F                 align 20h
.rdata:0000000180017720 word_180017720  dw 4CEh                 ; DATA XREF: .rdata:0000000180016E80↑o
.rdata:0000000180017722                 db '?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z',0
.rdata:0000000180017746 word_180017746  dw 5CCh                 ; DATA XREF: .rdata:0000000180016E88↑o
.rdata:0000000180017748                 db '_Xtime_get_ticks',0
.rdata:0000000180017759                 align 2
.rdata:000000018001775A word_18001775A  dw 1C2h                 ; DATA XREF: .rdata:0000000180016E90↑o
.rdata:000000018001775C                 db '?_Getcat@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std'
.rdata:000000018001775C                 db '@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z',0
.rdata:00000001800177CF                 align 10h
.rdata:00000001800177D0 word_1800177D0  dw 1B1h                 ; DATA XREF: .rdata:0000000180016E98↑o
.rdata:00000001800177D2                 db '?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@'
.rdata:00000001800177D2                 db 'PEBV42@@Z',0
.rdata:000000018001781D                 align 2
.rdata:000000018001781E word_18001781E  dw 4E1h                 ; DATA XREF: .rdata:0000000180016EA0↑o
.rdata:0000000180017820                 db '?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_'
.rdata:0000000180017820                 db 'J@Z',0
.rdata:0000000180017865                 align 2
.rdata:0000000180017866 word_180017866  dw 461h                 ; DATA XREF: .rdata:0000000180016EA8↑o
.rdata:0000000180017868                 db '?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z',0
.rdata:00000001800178A9                 align 2
.rdata:00000001800178AA word_1800178AA  dw 47Dh                 ; DATA XREF: .rdata:0000000180016EB0↑o
.rdata:00000001800178AC                 db '?put@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@s'
.rdata:00000001800178AC                 db 'td@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@'
.rdata:00000001800178AC                 db 'V32@AEAVios_base@2@DPEBUtm@@PEBD3@Z',0
.rdata:0000000180017952 word_180017952  dw 4DEh                 ; DATA XREF: .rdata:0000000180016EB8↑o
.rdata:0000000180017954                 db '?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z',0
.rdata:0000000180017993                 align 4
.rdata:0000000180017994 word_180017994  dw 534h                 ; DATA XREF: .rdata:0000000180016EC0↑o
.rdata:0000000180017996                 db '?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z',0
.rdata:00000001800179CF                 align 10h
.rdata:00000001800179D0 word_1800179D0  dw 527h                 ; DATA XREF: .rdata:0000000180016EC8↑o
.rdata:00000001800179D2                 db '?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1A'
.rdata:00000001800179D2                 db 'EAPEAD@Z',0
.rdata:0000000180017A1C word_180017A1C  dw 2Fh                  ; DATA XREF: .rdata:0000000180016ED0↑o
.rdata:0000000180017A1E                 db '??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ',0
.rdata:0000000180017A58 word_180017A58  dw 3C0h                 ; DATA XREF: .rdata:0000000180016ED8↑o
.rdata:0000000180017A5A                 db '?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVloc'
.rdata:0000000180017A5A                 db 'ale@2@XZ',0
.rdata:0000000180017AA4 word_180017AA4  dw 1F5h                 ; DATA XREF: .rdata:0000000180016EE0↑o
.rdata:0000000180017AA6                 db '?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ',0
.rdata:0000000180017AE4 word_180017AE4  dw 244h                 ; DATA XREF: .rdata:0000000180016EE8↑o
.rdata:0000000180017AE6                 db '?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ',0
.rdata:0000000180017B22 word_180017B22  dw 368h                 ; DATA XREF: .rdata:0000000180016EF0↑o
.rdata:0000000180017B24                 db '?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ'
.rdata:0000000180017B24                 db 0
.rdata:0000000180017B66 word_180017B66  dw 3FAh                 ; DATA XREF: .rdata:0000000180016EF8↑o
.rdata:0000000180017B68                 db '?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEB'
.rdata:0000000180017B68                 db 'DPEAD3AEAPEAD@Z',0
.rdata:0000000180017BB9                 align 2
.rdata:0000000180017BBA word_180017BBA  dw 433h                 ; DATA XREF: .rdata:0000000180016F00↑o
.rdata:0000000180017BBC                 db '?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPE'
.rdata:0000000180017BBC                 db 'BDPEAD3AEAPEAD@Z',0
.rdata:0000000180017C0E word_180017C0E  dw 24Ah                 ; DATA XREF: .rdata:0000000180016F08↑o
.rdata:0000000180017C10                 db '?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ'
.rdata:0000000180017C10                 db 0
.rdata:0000000180017C52 word_180017C52  dw 2A6h                 ; DATA XREF: .rdata:0000000180016F10↑o
.rdata:0000000180017C54                 db '?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z',0
.rdata:0000000180017C8F                 align 10h
.rdata:0000000180017C90 word_180017C90  dw 4C5h                 ; DATA XREF: .rdata:0000000180016F18↑o
.rdata:0000000180017C92                 db '?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z',0
.rdata:0000000180017CD0 word_180017CD0  dw 0Ch                  ; DATA XREF: .rdata:0000000180016F20↑o
.rdata:0000000180017CD2                 db '??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ',0
.rdata:0000000180017D06 word_180017D06  dw 25h                  ; DATA XREF: .rdata:0000000180016F28↑o
.rdata:0000000180017D08                 db '??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_'
.rdata:0000000180017D08                 db 'streambuf@DU?$char_traits@D@std@@@1@_N@Z',0
.rdata:0000000180017D72 word_180017D72  dw 13h                  ; DATA XREF: .rdata:0000000180016F30↑o
.rdata:0000000180017D74                 db '??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic'
.rdata:0000000180017D74                 db '_streambuf@DU?$char_traits@D@std@@@1@@Z',0
.rdata:0000000180017DDD                 align 2
.rdata:0000000180017DDE word_180017DDE  dw 89h                  ; DATA XREF: .rdata:0000000180016F38↑o
.rdata:0000000180017DE0                 db '??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ',0
.rdata:0000000180017E1A word_180017E1A  dw 228h                 ; DATA XREF: .rdata:0000000180016F40↑o
.rdata:0000000180017E1C                 db '?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ',0
.rdata:0000000180017E5A word_180017E5A  dw 27Fh                 ; DATA XREF: .rdata:0000000180016F48↑o
.rdata:0000000180017E5C                 db '?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ',0
.rdata:0000000180017E9C word_180017E9C  dw 4D5h                 ; DATA XREF: .rdata:0000000180016F50↑o
.rdata:0000000180017E9E                 db '?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JX'
.rdata:0000000180017E9E                 db 'Z',0
.rdata:0000000180017EE1                 align 2
.rdata:0000000180017EE2 word_180017EE2  dw 51Bh                 ; DATA XREF: .rdata:0000000180016F58↑o
.rdata:0000000180017EE4                 db '?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ',0
.rdata:0000000180017F22 word_180017F22  dw 543h                 ; DATA XREF: .rdata:0000000180016F60↑o
.rdata:0000000180017F24                 db '?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD'
.rdata:0000000180017F24                 db '_J@Z',0
.rdata:0000000180017F6A word_180017F6A  dw 546h                 ; DATA XREF: .rdata:0000000180016F68↑o
.rdata:0000000180017F6C                 db '?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD'
.rdata:0000000180017F6C                 db '_J@Z',0
.rdata:0000000180017FB2 word_180017FB2  dw 4B5h                 ; DATA XREF: .rdata:0000000180016F70↑o
.rdata:0000000180017FB4                 db '?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12'
.rdata:0000000180017FB4                 db '@PEAD_J@Z',0
.rdata:0000000180017FFF                 align 20h
.rdata:0000000180018000 word_180018000  dw 4FDh                 ; DATA XREF: .rdata:0000000180016F78↑o
.rdata:0000000180018002                 db '?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ',0
.rdata:000000018001803F                 align 20h
.rdata:0000000180018040 word_180018040  dw 3F6h                 ; DATA XREF: .rdata:0000000180016F80↑o
.rdata:0000000180018042                 db '?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlo'
.rdata:0000000180018042                 db 'cale@2@@Z',0
.rdata:000000018001808D                 align 2
.rdata:000000018001808E word_18001808E  dw 7Dh                  ; DATA XREF: .rdata:0000000180016F88↑o
.rdata:0000000180018090                 db '??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ',0
.rdata:00000001800180C4 word_1800180C4  dw 86h                  ; DATA XREF: .rdata:0000000180016F90↑o
.rdata:00000001800180C6                 db '??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ',0
.rdata:00000001800180FE word_1800180FE  dw 106h                 ; DATA XREF: .rdata:0000000180016F98↑o
.rdata:0000000180018100                 db '??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEA'
.rdata:0000000180018100                 db 'V01@AEAV01@@Z@Z',0
.rdata:0000000180018151                 align 2
.rdata:0000000180018152 word_180018152  dw 10Bh                 ; DATA XREF: .rdata:0000000180016FA0↑o
.rdata:0000000180018154                 db '??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z',0
.rdata:0000000180018194 word_180018194  dw 80h                  ; DATA XREF: .rdata:0000000180016FA8↑o
.rdata:0000000180018196                 db '??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ',0
.rdata:00000001800181CF                 align 10h
.rdata:00000001800181D0 word_1800181D0  dw 3C3h                 ; DATA XREF: .rdata:0000000180016FB0↑o
.rdata:00000001800181D2                 db '?getloc@ios_base@std@@QEBA?AVlocale@2@XZ',0
.rdata:00000001800181FB                 align 4
.rdata:00000001800181FC word_1800181FC  dw 29Dh                 ; DATA XREF: .rdata:0000000180016E28↑o
.rdata:00000001800181FE                 db '?always_noconv@codecvt_base@std@@QEBA_NXZ',0
.rdata:0000000180018228 word_180018228  dw 131h                 ; DATA XREF: .rdata:off_180016E20↑o
.rdata:000000018001822A                 db '??Bid@locale@std@@QEAA_KXZ',0
.rdata:0000000180018245                 align 2
.rdata:0000000180018246 aMsvcp140Dll    db 'MSVCP140.dll',0     ; DATA XREF: .rdata:0000000180016BCC↑o
.rdata:0000000180018253                 align 4
.rdata:0000000180018254 word_180018254  dw 0                    ; DATA XREF: .rdata:off_180017048↑o
.rdata:0000000180018256                 db '__CxxFrameHandler4',0
.rdata:0000000180018269                 align 2
.rdata:000000018001826A word_18001826A  dw 22h                  ; DATA XREF: .rdata:off_180016FF0↑o
.rdata:000000018001826C                 db '__std_exception_destroy',0
.rdata:0000000180018284 word_180018284  dw 21h                  ; DATA XREF: .rdata:0000000180016FF8↑o
.rdata:0000000180018286                 db '__std_exception_copy',0
.rdata:000000018001829B                 align 4
.rdata:000000018001829C word_18001829C  dw 23h                  ; DATA XREF: .rdata:0000000180017000↑o
.rdata:000000018001829E                 db '__std_terminate',0
.rdata:00000001800182AE word_1800182AE  dw 3Ch                  ; DATA XREF: .rdata:0000000180017008↑o
.rdata:00000001800182B0                 db 'memcpy',0
.rdata:00000001800182B7                 align 8
.rdata:00000001800182B8 word_1800182B8  dw 3Eh                  ; DATA XREF: .rdata:0000000180017010↑o
.rdata:00000001800182BA                 db 'memset',0
.rdata:00000001800182C1                 align 2
.rdata:00000001800182C2 word_1800182C2  dw 1                    ; DATA XREF: .rdata:0000000180017018↑o
.rdata:00000001800182C4                 db '_CxxThrowException',0
.rdata:00000001800182D7                 align 8
.rdata:00000001800182D8 word_1800182D8  dw 3Bh                  ; DATA XREF: .rdata:0000000180017020↑o
.rdata:00000001800182DA                 db 'memcmp',0
.rdata:00000001800182E1                 align 2
.rdata:00000001800182E2 word_1800182E2  dw 3Dh                  ; DATA XREF: .rdata:0000000180017028↑o
.rdata:00000001800182E4                 db 'memmove',0
.rdata:00000001800182EC word_1800182EC  dw 8                    ; DATA XREF: .rdata:0000000180017030↑o
.rdata:00000001800182EE                 db '__C_specific_handler',0
.rdata:0000000180018303                 align 4
.rdata:0000000180018304 word_180018304  dw 25h                  ; DATA XREF: .rdata:0000000180017038↑o
.rdata:0000000180018306                 db '__std_type_info_destroy_list',0
.rdata:0000000180018323                 align 4
.rdata:0000000180018324 aVcruntime1401D db 'VCRUNTIME140_1.dll',0
.rdata:0000000180018324                                         ; DATA XREF: .rdata:0000000180016BE0↑o
.rdata:0000000180018337                 align 8
.rdata:0000000180018338 aVcruntime140Dl db 'VCRUNTIME140.dll',0 ; DATA XREF: .rdata:0000000180016BF4↑o
.rdata:0000000180018349                 align 2
.rdata:000000018001834A word_18001834A  dw 39h                  ; DATA XREF: .rdata:0000000180017188↑o
.rdata:000000018001834C                 db '_invalid_parameter_noinfo_noreturn',0
.rdata:000000018001836F                 align 10h
.rdata:0000000180018370 word_180018370  dw 5Eh                  ; DATA XREF: .rdata:00000001800170D0↑o
.rdata:0000000180018372                 db 'strtod',0
.rdata:0000000180018379                 align 2
.rdata:000000018001837A word_18001837A  dw 90h                  ; DATA XREF: .rdata:0000000180017238↑o
.rdata:000000018001837C                 db 'strncpy_s',0
.rdata:0000000180018386 word_180018386  dw 0Fh                  ; DATA XREF: .rdata:0000000180017218↑o
.rdata:0000000180018388                 db '__stdio_common_vsprintf_s',0
.rdata:00000001800183A2 word_1800183A2  dw 89h                  ; DATA XREF: .rdata:off_180017230↑o
.rdata:00000001800183A4                 db 'strcpy_s',0
.rdata:00000001800183AD                 align 2
.rdata:00000001800183AE word_1800183AE  dw 0Dh                  ; DATA XREF: .rdata:0000000180017208↑o
.rdata:00000001800183B0                 db '__stdio_common_vsprintf',0
.rdata:00000001800183C8 word_1800183C8  dw 10h                  ; DATA XREF: .rdata:0000000180017200↑o
.rdata:00000001800183CA                 db '__stdio_common_vsscanf',0
.rdata:00000001800183E1                 align 2
.rdata:00000001800183E2 word_1800183E2  dw 7Fh                  ; DATA XREF: .rdata:00000001800171F8↑o
.rdata:00000001800183E4                 db 'fputc',0
.rdata:00000001800183EA word_1800183EA  dw 7Dh                  ; DATA XREF: .rdata:00000001800171F0↑o
.rdata:00000001800183EC                 db 'fopen',0
.rdata:00000001800183F2 word_1800183F2  dw 77h                  ; DATA XREF: .rdata:00000001800171E8↑o
.rdata:00000001800183F4                 db 'fflush',0
.rdata:00000001800183FB                 align 4
.rdata:00000001800183FC word_1800183FC  dw 74h                  ; DATA XREF: .rdata:00000001800171E0↑o
.rdata:00000001800183FE                 db 'fclose',0
.rdata:0000000180018405                 align 2
.rdata:0000000180018406 word_180018406  dw 3Fh                  ; DATA XREF: .rdata:00000001800170F0↑o
.rdata:0000000180018408                 db 'remove',0
.rdata:000000018001840F                 align 10h
.rdata:0000000180018410 word_180018410  dw 78h                  ; DATA XREF: .rdata:00000001800171D0↑o
.rdata:0000000180018412                 db 'fgetc',0
.rdata:0000000180018418 word_180018418  dw 40h                  ; DATA XREF: .rdata:00000001800170F8↑o
.rdata:000000018001841A                 db 'rename',0
.rdata:0000000180018421                 align 2
.rdata:0000000180018422 word_180018422  dw 24h                  ; DATA XREF: .rdata:00000001800170E8↑o
.rdata:0000000180018424                 db '_unlock_file',0
.rdata:0000000180018431                 align 2
.rdata:0000000180018432 word_180018432  dw 16h                  ; DATA XREF: .rdata:off_1800170E0↑o
.rdata:0000000180018434                 db '_lock_file',0
.rdata:000000018001843F                 align 20h
.rdata:0000000180018440 word_180018440  dw 8Ah                  ; DATA XREF: .rdata:00000001800171B0↑o
.rdata:0000000180018442                 db 'fwrite',0
.rdata:0000000180018449                 align 2
.rdata:000000018001844A word_18001844A  dw 79h                  ; DATA XREF: .rdata:00000001800171B8↑o
.rdata:000000018001844C                 db 'fgetpos',0
.rdata:0000000180018454 word_180018454  dw 98h                  ; DATA XREF: .rdata:0000000180017210↑o
.rdata:0000000180018456                 db 'setvbuf',0
.rdata:000000018001845E word_18001845E  dw 23h                  ; DATA XREF: .rdata:off_180017248↑o
.rdata:0000000180018460                 db '_localtime64',0
.rdata:000000018001846D                 align 2
.rdata:000000018001846E word_18001846E  dw 9Dh                  ; DATA XREF: .rdata:00000001800171D8↑o
.rdata:0000000180018470                 db 'ungetc',0
.rdata:0000000180018477                 align 8
.rdata:0000000180018478 word_180018478  dw 88h                  ; DATA XREF: .rdata:00000001800171C0↑o
.rdata:000000018001847A                 db 'fsetpos',0
.rdata:0000000180018482 word_180018482  dw 83h                  ; DATA XREF: .rdata:00000001800171A8↑o
.rdata:0000000180018484                 db 'fread',0
.rdata:000000018001848A word_18001848A  dw 2Fh                  ; DATA XREF: .rdata:00000001800171A0↑o
.rdata:000000018001848C                 db '_fseeki64',0
.rdata:0000000180018496 word_180018496  dw 39h                  ; DATA XREF: .rdata:00000001800171C8↑o
.rdata:0000000180018498                 db '_get_stream_buffer_pointers',0
.rdata:00000001800184B4 word_1800184B4  dw 18h                  ; DATA XREF: .rdata:0000000180017118↑o
.rdata:00000001800184B6                 db 'free',0
.rdata:00000001800184BB                 align 4
.rdata:00000001800184BC word_1800184BC  dw 19h                  ; DATA XREF: .rdata:off_180017108↑o
.rdata:00000001800184BE                 db 'malloc',0
.rdata:00000001800184C5                 align 2
.rdata:00000001800184C6 word_1800184C6  dw 50h                  ; DATA XREF: .rdata:off_1800170C8↑o
.rdata:00000001800184C8                 db 'atoi',0
.rdata:00000001800184CD                 align 2
.rdata:00000001800184CE word_1800184CE  dw 0                    ; DATA XREF: .rdata:off_180017198↑o
.rdata:00000001800184D0                 db '__acrt_iob_func',0
.rdata:00000001800184E0 word_1800184E0  dw 3                    ; DATA XREF: .rdata:0000000180017220↑o
.rdata:00000001800184E2                 db '__stdio_common_vfprintf',0
.rdata:00000001800184FA word_1800184FA  dw 8                    ; DATA XREF: .rdata:0000000180017110↑o
.rdata:00000001800184FC                 db '_callnewh',0
.rdata:0000000180018506 word_180018506  dw 36h                  ; DATA XREF: .rdata:off_180017138↑o
.rdata:0000000180018508                 db '_initterm',0
.rdata:0000000180018512 word_180018512  dw 37h                  ; DATA XREF: .rdata:0000000180017140↑o
.rdata:0000000180018514                 db '_initterm_e',0
.rdata:0000000180018520 word_180018520  dw 3Fh                  ; DATA XREF: .rdata:0000000180017148↑o
.rdata:0000000180018522                 db '_seh_filter_dll',0
.rdata:0000000180018532 word_180018532  dw 18h                  ; DATA XREF: .rdata:0000000180017150↑o
.rdata:0000000180018534                 db '_configure_narrow_argv',0
.rdata:000000018001854B                 align 4
.rdata:000000018001854C word_18001854C  dw 33h                  ; DATA XREF: .rdata:0000000180017158↑o
.rdata:000000018001854E                 db '_initialize_narrow_environment',0
.rdata:000000018001856D                 align 2
.rdata:000000018001856E word_18001856E  dw 34h                  ; DATA XREF: .rdata:0000000180017160↑o
.rdata:0000000180018570                 db '_initialize_onexit_table',0
.rdata:0000000180018589                 align 2
.rdata:000000018001858A word_18001858A  dw 3Ch                  ; DATA XREF: .rdata:0000000180017168↑o
.rdata:000000018001858C                 db '_register_onexit_function',0
.rdata:00000001800185A6 word_1800185A6  dw 22h                  ; DATA XREF: .rdata:0000000180017170↑o
.rdata:00000001800185A8                 db '_execute_onexit_table',0
.rdata:00000001800185BE word_1800185BE  dw 1Eh                  ; DATA XREF: .rdata:0000000180017178↑o
.rdata:00000001800185C0                 db '_crt_atexit',0
.rdata:00000001800185CC word_1800185CC  dw 16h                  ; DATA XREF: .rdata:0000000180017180↑o
.rdata:00000001800185CE                 db '_cexit',0
.rdata:00000001800185D5                 align 2
.rdata:00000001800185D6 aApiMsWinCrtRun db 'api-ms-win-crt-runtime-l1-1-0.dll',0
.rdata:00000001800185D6                                         ; DATA XREF: .rdata:0000000180016C08↑o
.rdata:00000001800185F8 aApiMsWinCrtHea db 'api-ms-win-crt-heap-l1-1-0.dll',0
.rdata:00000001800185F8                                         ; DATA XREF: .rdata:0000000180016C1C↑o
.rdata:0000000180018617                 align 8
.rdata:0000000180018618 aApiMsWinCrtCon db 'api-ms-win-crt-convert-l1-1-0.dll',0
.rdata:0000000180018618                                         ; DATA XREF: .rdata:0000000180016C30↑o
.rdata:000000018001863A aApiMsWinCrtStr db 'api-ms-win-crt-string-l1-1-0.dll',0
.rdata:000000018001863A                                         ; DATA XREF: .rdata:0000000180016C44↑o
.rdata:000000018001865B                 align 4
.rdata:000000018001865C aApiMsWinCrtStd db 'api-ms-win-crt-stdio-l1-1-0.dll',0
.rdata:000000018001865C                                         ; DATA XREF: .rdata:0000000180016C58↑o
.rdata:000000018001867C aApiMsWinCrtFil db 'api-ms-win-crt-filesystem-l1-1-0.dll',0
.rdata:000000018001867C                                         ; DATA XREF: .rdata:0000000180016C6C↑o
.rdata:00000001800186A1                 align 2
.rdata:00000001800186A2 aApiMsWinCrtTim db 'api-ms-win-crt-time-l1-1-0.dll',0
.rdata:00000001800186A2                                         ; DATA XREF: .rdata:0000000180016C80↑o
.rdata:00000001800186C1                 align 2
.rdata:00000001800186C2 word_1800186C2  dw 4D5h                 ; DATA XREF: .rdata:0000000180016E10↑o
.rdata:00000001800186C4                 db 'RtlCaptureContext',0
.rdata:00000001800186D6 word_1800186D6  dw 4DCh                 ; DATA XREF: .rdata:0000000180016E00↑o
.rdata:00000001800186D8                 db 'RtlLookupFunctionEntry',0
.rdata:00000001800186EF                 align 10h
.rdata:00000001800186F0 word_1800186F0  dw 4E3h                 ; DATA XREF: .rdata:0000000180016D58↑o
.rdata:00000001800186F2                 db 'RtlVirtualUnwind',0
.rdata:0000000180018703                 align 4
.rdata:0000000180018704 word_180018704  dw 5C0h                 ; DATA XREF: .rdata:0000000180016D18↑o
.rdata:0000000180018706                 db 'UnhandledExceptionFilter',0
.rdata:000000018001871F                 align 20h
.rdata:0000000180018720 word_180018720  dw 57Fh                 ; DATA XREF: .rdata:off_180016CD0↑o
.rdata:0000000180018722                 db 'SetUnhandledExceptionFilter',0
.rdata:000000018001873E word_18001873E  dw 220h                 ; DATA XREF: .rdata:0000000180016CD8↑o
.rdata:0000000180018740                 db 'GetCurrentProcess',0
.rdata:0000000180018752 word_180018752  dw 59Eh                 ; DATA XREF: .rdata:0000000180016CE0↑o
.rdata:0000000180018754                 db 'TerminateProcess',0
.rdata:0000000180018765                 align 2
.rdata:0000000180018766 word_180018766  dw 38Ch                 ; DATA XREF: .rdata:0000000180016CE8↑o
.rdata:0000000180018768                 db 'IsProcessorFeaturePresent',0
.rdata:0000000180018782 word_180018782  dw 225h                 ; DATA XREF: .rdata:0000000180016CF0↑o
.rdata:0000000180018784                 db 'GetCurrentThreadId',0
.rdata:0000000180018797                 align 8
.rdata:0000000180018798 word_180018798  dw 2F3h                 ; DATA XREF: .rdata:0000000180016CF8↑o
.rdata:000000018001879A                 db 'GetSystemTimeAsFileTime',0
.rdata:00000001800187B2 word_1800187B2  dw 125h                 ; DATA XREF: .rdata:0000000180016D00↑o
.rdata:00000001800187B4                 db 'DisableThreadLibraryCalls',0
.rdata:00000001800187CE word_1800187CE  dw 36Fh                 ; DATA XREF: .rdata:0000000180016D08↑o
.rdata:00000001800187D0                 db 'InitializeSListHead',0
.rdata:00000001800187E4 word_1800187E4  dw 385h                 ; DATA XREF: .rdata:0000000180016D10↑o
.rdata:00000001800187E6                 db 'IsDebuggerPresent',0
.rdata:00000001800187F8 word_1800187F8  dw 7Dh                  ; DATA XREF: .rdata:off_180017128↑o
.rdata:00000001800187FA                 db 'ceilf',0
.rdata:0000000180018800 aApiMsWinCrtMat db 'api-ms-win-crt-math-l1-1-0.dll',0
.rdata:0000000180018800                                         ; DATA XREF: .rdata:0000000180016C94↑o
.rdata:000000018001881F                 align 800h
.rdata:000000018001881F _rdata          ends
.rdata:000000018001881F
.data:0000000180019000 ; Section 3. (virtual address 00019000)
.data:0000000180019000 ; Virtual size                  : 000022D0 (   8912.)
.data:0000000180019000 ; Section size in file          : 00000600 (   1536.)
.data:0000000180019000 ; Offset to raw data for section: 00017800
.data:0000000180019000 ; Flags C0000040: Data Readable Writable
.data:0000000180019000 ; Alignment     : default
.data:0000000180019000 ; ===========================================================================
.data:0000000180019000
.data:0000000180019000 ; Segment type: Pure data
.data:0000000180019000 ; Segment permissions: Read/Write
.data:0000000180019000 _data           segment para public 'DATA' use64
.data:0000000180019000                 assume cs:_data
.data:0000000180019000                 ;org 180019000h
.data:0000000180019000                 db  75h ; u
.data:0000000180019001                 db  98h
.data:0000000180019002                 db    0
.data:0000000180019003                 db    0
.data:0000000180019004                 db    0
.data:0000000180019005                 db    0
.data:0000000180019006                 db    0
.data:0000000180019007                 db    0
.data:0000000180019008 qword_180019008 dq 0FFFFD466D2205DCDh   ; DATA XREF: __report_gsfailure+B5↑r
.data:0000000180019008                                         ; __security_init_cookie+9F↑w
.data:0000000180019010 ; uintptr_t _security_cookie
.data:0000000180019010 __security_cookie dq 2B992DDFA232h      ; DATA XREF: fsuipcw_start+9↑r
.data:0000000180019010                                         ; fsuipcw_setHvar+9↑r ...
.data:0000000180019018                 db 0FFh
.data:0000000180019019                 db 0FFh
.data:000000018001901A                 db 0FFh
.data:000000018001901B                 db 0FFh
.data:000000018001901C                 db    0
.data:000000018001901D                 db    0
.data:000000018001901E                 db    0
.data:000000018001901F                 db    0
.data:0000000180019020 dword_180019020 dd 1                    ; DATA XREF: __isa_available_init:loc_180011102↑w
.data:0000000180019020                                         ; __isa_available_init+109↑w ...
.data:0000000180019024 dword_180019024 dd 2                    ; DATA XREF: __isa_available_init+F8↑w
.data:0000000180019024                                         ; __isa_available_init+115↑w ...
.data:0000000180019028 qword_180019028 dq 80000h               ; DATA XREF: __isa_available_init+66↑w
.data:0000000180019030 qword_180019030 dq 2000000h             ; DATA XREF: __isa_available_init+59↑w
.data:0000000180019038                 align 20h
.data:0000000180019040 dword_180019040 dd 1                    ; DATA XREF: __uncaught_exception(void)+2↑r
.data:0000000180019044 dword_180019044 dd 1                    ; DATA XREF: sub_180002E20+1A↑w
.data:0000000180019044                                         ; sub_180002E20:loc_180002EF9↑r ...
.data:0000000180019048                 align 10h
.data:0000000180019050                 dq offset off_180012890
.data:0000000180019058                 align 20h
.data:0000000180019060 aAvbadAllocStd  db '.?AVbad_alloc@std@@',0
.data:0000000180019074                 align 8
.data:0000000180019078                 dq offset off_180012890
.data:0000000180019080                 db    0
.data:0000000180019081                 db    0
.data:0000000180019082                 db    0
.data:0000000180019083                 db    0
.data:0000000180019084                 db    0
.data:0000000180019085                 db    0
.data:0000000180019086                 db    0
.data:0000000180019087                 db    0
.data:0000000180019088                 db  2Eh ; .
.data:0000000180019089                 db  3Fh ; ?
.data:000000018001908A                 db  41h ; A
.data:000000018001908B                 db  56h ; V
.data:000000018001908C                 db  65h ; e
.data:000000018001908D                 db  78h ; x
.data:000000018001908E                 db  63h ; c
.data:000000018001908F                 db  65h ; e
.data:0000000180019090                 db  70h ; p
.data:0000000180019091                 db  74h ; t
.data:0000000180019092                 db  69h ; i
.data:0000000180019093                 db  6Fh ; o
.data:0000000180019094                 db  6Eh ; n
.data:0000000180019095                 db  40h ; @
.data:0000000180019096                 db  73h ; s
.data:0000000180019097                 db  74h ; t
.data:0000000180019098                 db  64h ; d
.data:0000000180019099                 db  40h ; @
.data:000000018001909A                 db  40h ; @
.data:000000018001909B                 db    0
.data:000000018001909C                 db    0
.data:000000018001909D                 db    0
.data:000000018001909E                 db    0
.data:000000018001909F                 db    0
.data:00000001800190A0                 dq offset off_180012890
.data:00000001800190A8                 align 10h
.data:00000001800190B0 aAvbadArrayNewL db '.?AVbad_array_new_length@std@@',0
.data:00000001800190CF                 align 10h
.data:00000001800190D0                 dq offset off_180012890
.data:00000001800190D8                 align 20h
.data:00000001800190E0 aAvbadCastStd   db '.?AVbad_cast@std@@',0
.data:00000001800190F3                 align 20h
.data:0000000180019100                 dq offset off_180012890
.data:0000000180019108                 align 10h
.data:0000000180019110 aAvclientclient db '.?AVClientClient@@',0
.data:0000000180019123                 align 8
.data:0000000180019128                 dq offset off_180012890
.data:0000000180019130                 db    0
.data:0000000180019131                 db    0
.data:0000000180019132                 db    0
.data:0000000180019133                 db    0
.data:0000000180019134                 db    0
.data:0000000180019135                 db    0
.data:0000000180019136                 db    0
.data:0000000180019137                 db    0
.data:0000000180019138                 db  2Eh ; .
.data:0000000180019139                 db  3Fh ; ?
.data:000000018001913A                 db  41h ; A
.data:000000018001913B                 db  56h ; V
.data:000000018001913C                 db  43h ; C
.data:000000018001913D                 db  43h ; C
.data:000000018001913E                 db  6Ch ; l
.data:000000018001913F                 db  69h ; i
.data:0000000180019140                 db  65h ; e
.data:0000000180019141                 db  6Eh ; n
.data:0000000180019142                 db  74h ; t
.data:0000000180019143                 db  40h ; @
.data:0000000180019144                 db  40h ; @
.data:0000000180019145                 db    0
.data:0000000180019146                 db    0
.data:0000000180019147                 db    0
.data:0000000180019148                 dq offset off_180012890
.data:0000000180019150                 db    0
.data:0000000180019151                 db    0
.data:0000000180019152                 db    0
.data:0000000180019153                 db    0
.data:0000000180019154                 db    0
.data:0000000180019155                 db    0
.data:0000000180019156                 db    0
.data:0000000180019157                 db    0
.data:0000000180019158                 db  2Eh ; .
.data:0000000180019159                 db  3Fh ; ?
.data:000000018001915A                 db  41h ; A
.data:000000018001915B                 db  56h ; V
.data:000000018001915C                 db  74h ; t
.data:000000018001915D                 db  79h ; y
.data:000000018001915E                 db  70h ; p
.data:000000018001915F                 db  65h ; e
.data:0000000180019160                 db  5Fh ; _
.data:0000000180019161                 db  69h ; i
.data:0000000180019162                 db  6Eh ; n
.data:0000000180019163                 db  66h ; f
.data:0000000180019164                 db  6Fh ; o
.data:0000000180019165                 db  40h ; @
.data:0000000180019166                 db  40h ; @
.data:0000000180019167                 db    0
.data:0000000180019168                 db    0
.data:0000000180019169                 db    0
.data:000000018001916A                 db    0
.data:000000018001916B                 db    0
.data:000000018001916C                 db    0
.data:000000018001916D                 db    0
.data:000000018001916E                 db    0
.data:000000018001916F                 db    0
.data:0000000180019170                 dq offset off_180012890
.data:0000000180019178                 align 20h
.data:0000000180019180 aAvBasicStrings db '.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@'
.data:0000000180019180                 db '@std@@',0
.data:00000001800191C8                 align 10h
.data:00000001800191D0                 dq offset off_180012890
.data:00000001800191D8                 align 20h
.data:00000001800191E0 aAvBasicFilebuf db '.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@',0
.data:0000000180019212                 align 20h
.data:0000000180019220                 dq offset off_180012890
.data:0000000180019228                 align 10h
.data:0000000180019230 aAvBasicStringb db '.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@st'
.data:0000000180019230                 db 'd@@',0
.data:0000000180019275                 align 8
.data:0000000180019278                 dq offset off_180012890
.data:0000000180019280                 db    0
.data:0000000180019281                 db    0
.data:0000000180019282                 db    0
.data:0000000180019283                 db    0
.data:0000000180019284                 db    0
.data:0000000180019285                 db    0
.data:0000000180019286                 db    0
.data:0000000180019287                 db    0
.data:0000000180019288                 db  2Eh ; .
.data:0000000180019289                 db  3Fh ; ?
.data:000000018001928A                 db  41h ; A
.data:000000018001928B                 db  56h ; V
.data:000000018001928C                 db  69h ; i
.data:000000018001928D                 db  6Fh ; o
.data:000000018001928E                 db  73h ; s
.data:000000018001928F                 db  5Fh ; _
.data:0000000180019290                 db  62h ; b
.data:0000000180019291                 db  61h ; a
.data:0000000180019292                 db  73h ; s
.data:0000000180019293                 db  65h ; e
.data:0000000180019294                 db  40h ; @
.data:0000000180019295                 db  73h ; s
.data:0000000180019296                 db  74h ; t
.data:0000000180019297                 db  64h ; d
.data:0000000180019298                 db  40h ; @
.data:0000000180019299                 db  40h ; @
.data:000000018001929A                 db    0
.data:000000018001929B                 db    0
.data:000000018001929C                 db    0
.data:000000018001929D                 db    0
.data:000000018001929E                 db    0
.data:000000018001929F                 db    0
.data:00000001800192A0                 dq offset off_180012890
.data:00000001800192A8                 align 10h
.data:00000001800192B0 aAvBasicIostrea db '.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@',0
.data:00000001800192E3                 align 8
.data:00000001800192E8                 dq offset off_180012890
.data:00000001800192F0                 db    0
.data:00000001800192F1                 db    0
.data:00000001800192F2                 db    0
.data:00000001800192F3                 db    0
.data:00000001800192F4                 db    0
.data:00000001800192F5                 db    0
.data:00000001800192F6                 db    0
.data:00000001800192F7                 db    0
.data:00000001800192F8                 db  2Eh ; .
.data:00000001800192F9                 db  3Fh ; ?
.data:00000001800192FA                 db  41h ; A
.data:00000001800192FB                 db  56h ; V
.data:00000001800192FC                 db  3Fh ; ?
.data:00000001800192FD                 db  24h ; $
.data:00000001800192FE                 db  5Fh ; _
.data:00000001800192FF                 db  49h ; I
.data:0000000180019300                 db  6Fh ; o
.data:0000000180019301                 db  73h ; s
.data:0000000180019302                 db  62h ; b
.data:0000000180019303                 db  40h ; @
.data:0000000180019304                 db  48h ; H
.data:0000000180019305                 db  40h ; @
.data:0000000180019306                 db  73h ; s
.data:0000000180019307                 db  74h ; t
.data:0000000180019308                 db  64h ; d
.data:0000000180019309                 db  40h ; @
.data:000000018001930A                 db  40h ; @
.data:000000018001930B                 db    0
.data:000000018001930C                 db    0
.data:000000018001930D                 db    0
.data:000000018001930E                 db    0
.data:000000018001930F                 db    0
.data:0000000180019310                 dq offset off_180012890
.data:0000000180019318                 align 20h
.data:0000000180019320 aAvBasicOfstrea db '.?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@',0
.data:0000000180019353                 align 20h
.data:0000000180019360                 dq offset off_180012890
.data:0000000180019368                 align 10h
.data:0000000180019370 aAvBasicStreamb db '.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@',0
.data:00000001800193A4                 align 10h
.data:00000001800193B0                 dq offset off_180012890
.data:00000001800193B8                 align 20h
.data:00000001800193C0 aAvBasicIstream db '.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@',0
.data:00000001800193F2                 align 8
.data:00000001800193F8                 dq offset off_180012890
.data:0000000180019400                 db    0
.data:0000000180019401                 db    0
.data:0000000180019402                 db    0
.data:0000000180019403                 db    0
.data:0000000180019404                 db    0
.data:0000000180019405                 db    0
.data:0000000180019406                 db    0
.data:0000000180019407                 db    0
.data:0000000180019408                 db  2Eh ; .
.data:0000000180019409                 db  3Fh ; ?
.data:000000018001940A                 db  41h ; A
.data:000000018001940B                 db  56h ; V
.data:000000018001940C                 db  3Fh ; ?
.data:000000018001940D                 db  24h ; $
.data:000000018001940E                 db  62h ; b
.data:000000018001940F                 db  61h ; a
.data:0000000180019410                 db  73h ; s
.data:0000000180019411                 db  69h ; i
.data:0000000180019412                 db  63h ; c
.data:0000000180019413                 db  5Fh ; _
.data:0000000180019414                 db  69h ; i
.data:0000000180019415                 db  6Fh ; o
.data:0000000180019416                 db  73h ; s
.data:0000000180019417                 db  40h ; @
.data:0000000180019418                 db  44h ; D
.data:0000000180019419                 db  55h ; U
.data:000000018001941A                 db  3Fh ; ?
.data:000000018001941B                 db  24h ; $
.data:000000018001941C                 db  63h ; c
.data:000000018001941D                 db  68h ; h
.data:000000018001941E                 db  61h ; a
.data:000000018001941F                 db  72h ; r
.data:0000000180019420                 db  5Fh ; _
.data:0000000180019421                 db  74h ; t
.data:0000000180019422                 db  72h ; r
.data:0000000180019423                 db  61h ; a
.data:0000000180019424                 db  69h ; i
.data:0000000180019425                 db  74h ; t
.data:0000000180019426                 db  73h ; s
.data:0000000180019427                 db  40h ; @
.data:0000000180019428                 db  44h ; D
.data:0000000180019429                 db  40h ; @
.data:000000018001942A                 db  73h ; s
.data:000000018001942B                 db  74h ; t
.data:000000018001942C                 db  64h ; d
.data:000000018001942D                 db  40h ; @
.data:000000018001942E                 db  40h ; @
.data:000000018001942F                 db  40h ; @
.data:0000000180019430                 db  73h ; s
.data:0000000180019431                 db  74h ; t
.data:0000000180019432                 db  64h ; d
.data:0000000180019433                 db  40h ; @
.data:0000000180019434                 db  40h ; @
.data:0000000180019435                 db    0
.data:0000000180019436                 db    0
.data:0000000180019437                 db    0
.data:0000000180019438                 db    0
.data:0000000180019439                 db    0
.data:000000018001943A                 db    0
.data:000000018001943B                 db    0
.data:000000018001943C                 db    0
.data:000000018001943D                 db    0
.data:000000018001943E                 db    0
.data:000000018001943F                 db    0
.data:0000000180019440                 dq offset off_180012890
.data:0000000180019448                 align 10h
.data:0000000180019450 aAvBasicOstream db '.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@',0
.data:0000000180019482                 db    0
.data:0000000180019483                 db    0
.data:0000000180019484                 db    0
.data:0000000180019485                 db    0
.data:0000000180019486                 db    0
.data:0000000180019487                 db    0
.data:0000000180019488                 db    0
.data:0000000180019489                 db    0
.data:000000018001948A                 db    0
.data:000000018001948B                 db    0
.data:000000018001948C                 db    0
.data:000000018001948D                 db    0
.data:000000018001948E                 db    0
.data:000000018001948F                 db    0
.data:0000000180019490                 db    0
.data:0000000180019491                 db    0
.data:0000000180019492                 db    0
.data:0000000180019493                 db    0
.data:0000000180019494                 db    0
.data:0000000180019495                 db    0
.data:0000000180019496                 db    0
.data:0000000180019497                 db    0
.data:0000000180019498                 db    0
.data:0000000180019499                 db    0
.data:000000018001949A                 db    0
.data:000000018001949B                 db    0
.data:000000018001949C                 db    0
.data:000000018001949D                 db    0
.data:000000018001949E                 db    0
.data:000000018001949F                 db    0
.data:00000001800194A0                 db    0
.data:00000001800194A1                 db    0
.data:00000001800194A2                 db    0
.data:00000001800194A3                 db    0
.data:00000001800194A4                 db    0
.data:00000001800194A5                 db    0
.data:00000001800194A6                 db    0
.data:00000001800194A7                 db    0
.data:00000001800194A8 dword_1800194A8 dd 0                    ; DATA XREF: sub_18000C8B0+125↑w
.data:00000001800194A8                                         ; sub_18000CA30+1E↑w ...
.data:00000001800194AC byte_1800194AC  db 0                    ; DATA XREF: sub_18000CE00:loc_18000CF52↑r
.data:00000001800194AC                                         ; sub_18000CE00+161↑w ...
.data:00000001800194AD byte_1800194AD  db 0                    ; DATA XREF: sub_18000CE00+168↑w
.data:00000001800194AD                                         ; sub_18000CFD0+294↑w
.data:00000001800194AE                 align 10h
.data:00000001800194B0 qword_1800194B0 dq 0                    ; DATA XREF: sub_18000C8B0+12C↑r
.data:00000001800194B0                                         ; sub_18000C8B0+135↑w ...
.data:00000001800194B8 qword_1800194B8 dq 0                    ; DATA XREF: sub_18000C8B0:loc_18000C9EE↑r
.data:00000001800194B8                                         ; sub_18000C8B0+14C↑r ...
.data:00000001800194C0 dword_1800194C0 dd 0                    ; DATA XREF: sub_18000F830+110↑r
.data:00000001800194C0                                         ; sub_18000F830+119↑w
.data:00000001800194C4 dword_1800194C4 dd 0                    ; DATA XREF: sub_18000FEA0+4F↑r
.data:00000001800194C4                                         ; sub_18000FEA0+5B↑w
.data:00000001800194C8 dword_1800194C8 dd 0                    ; DATA XREF: sub_18000CE00:loc_18000CF37↑r
.data:00000001800194C8                                         ; sub_18000F180+B4↑w ...
.data:00000001800194CC dword_1800194CC dd 0                    ; DATA XREF: sub_18000F360+132↑w
.data:00000001800194D0 ; void *Block
.data:00000001800194D0 Block           dq 0                    ; DATA XREF: std::_Facet_Register(std::_Facet_base *)+1D↑r
.data:00000001800194D0                                         ; std::_Facet_Register(std::_Facet_base *):loc_18001029B↑w ...
.data:00000001800194D8                 db    0
.data:00000001800194D9                 db    0
.data:00000001800194DA                 db    0
.data:00000001800194DB                 db    0
.data:00000001800194DC dword_1800194DC dd 0                    ; DATA XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const):loc_1800104C5↑w
.data:00000001800194DC                                         ; dllmain_crt_process_detach(bool)+D↑r ...
.data:00000001800194E0 dword_1800194E0 dd 0                    ; DATA XREF: dllmain_crt_process_attach(HINSTANCE__ * const,void * const):loc_180010418↑r
.data:00000001800194E0                                         ; dllmain_crt_process_attach(HINSTANCE__ * const,void * const)+45↑w ...
.data:00000001800194E4                 align 8
.data:00000001800194E8 qword_1800194E8 dq 0                    ; DATA XREF: __scrt_acquire_startup_lock+23↑w
.data:00000001800194E8                                         ; __scrt_release_startup_lock+17↑w
.data:00000001800194F0 byte_1800194F0  db 0                    ; DATA XREF: __scrt_initialize_crt+6↑r
.data:00000001800194F0                                         ; __scrt_initialize_crt+17↑w ...
.data:00000001800194F1 byte_1800194F1  db 0                    ; DATA XREF: __scrt_initialize_onexit_tables+6↑r
.data:00000001800194F1                                         ; __scrt_initialize_onexit_tables:loc_180010A1D↑w
.data:00000001800194F2                 align 8
.data:00000001800194F8 ; _onexit_table_t Table
.data:00000001800194F8 Table           _onexit_table_t <0>     ; DATA XREF: __scrt_dllmain_uninitialize_c+D↑o
.data:00000001800194F8                                         ; __scrt_initialize_onexit_tables+23↑o ...
.data:0000000180019510 ; _onexit_table_t stru_180019510
.data:0000000180019510 stru_180019510  _onexit_table_t <0>     ; DATA XREF: __scrt_initialize_onexit_tables+33↑o
.data:0000000180019510                                         ; __scrt_initialize_onexit_tables+62↑w
.data:0000000180019528                 align 10h
.data:0000000180019530 dword_180019530 dd 0                    ; DATA XREF: __report_gsfailure+61↑w
.data:0000000180019530                                         ; .rdata:ExceptionInfo↑o
.data:0000000180019534 dword_180019534 dd 0                    ; DATA XREF: __report_gsfailure+6B↑w
.data:0000000180019538                 align 20h
.data:0000000180019540 qword_180019540 dq 0                    ; DATA XREF: __report_gsfailure+4E↑w
.data:0000000180019548 dword_180019548 dd 0                    ; DATA XREF: __report_gsfailure+75↑w
.data:000000018001954C                 align 10h
.data:0000000180019550 unk_180019550   db    0                 ; DATA XREF: __report_gsfailure+88↑o
.data:0000000180019551                 db    0
.data:0000000180019552                 db    0
.data:0000000180019553                 db    0
.data:0000000180019554                 db    0
.data:0000000180019555                 db    0
.data:0000000180019556                 db    0
.data:0000000180019557                 db    0
.data:0000000180019558                 db    0
.data:0000000180019559                 db    0
.data:000000018001955A                 db    0
.data:000000018001955B                 db    0
.data:000000018001955C                 db    0
.data:000000018001955D                 db    0
.data:000000018001955E                 db    0
.data:000000018001955F                 db    0
.data:0000000180019560                 db    0
.data:0000000180019561                 db    0
.data:0000000180019562                 db    0
.data:0000000180019563                 db    0
.data:0000000180019564                 db    0
.data:0000000180019565                 db    0
.data:0000000180019566                 db    0
.data:0000000180019567                 db    0
.data:0000000180019568                 db    0
.data:0000000180019569                 db    0
.data:000000018001956A                 db    0
.data:000000018001956B                 db    0
.data:000000018001956C                 db    0
.data:000000018001956D                 db    0
.data:000000018001956E                 db    0
.data:000000018001956F                 db    0
.data:0000000180019570                 db    0
.data:0000000180019571                 db    0
.data:0000000180019572                 db    0
.data:0000000180019573                 db    0
.data:0000000180019574                 db    0
.data:0000000180019575                 db    0
.data:0000000180019576                 db    0
.data:0000000180019577                 db    0
.data:0000000180019578                 db    0
.data:0000000180019579                 db    0
.data:000000018001957A                 db    0
.data:000000018001957B                 db    0
.data:000000018001957C                 db    0
.data:000000018001957D                 db    0
.data:000000018001957E                 db    0
.data:000000018001957F                 db    0
.data:0000000180019580                 db    0
.data:0000000180019581                 db    0
.data:0000000180019582                 db    0
.data:0000000180019583                 db    0
.data:0000000180019584                 db    0
.data:0000000180019585                 db    0
.data:0000000180019586                 db    0
.data:0000000180019587                 db    0
.data:0000000180019588                 db    0
.data:0000000180019589                 db    0
.data:000000018001958A                 db    0
.data:000000018001958B                 db    0
.data:000000018001958C                 db    0
.data:000000018001958D                 db    0
.data:000000018001958E                 db    0
.data:000000018001958F                 db    0
.data:0000000180019590                 db    0
.data:0000000180019591                 db    0
.data:0000000180019592                 db    0
.data:0000000180019593                 db    0
.data:0000000180019594                 db    0
.data:0000000180019595                 db    0
.data:0000000180019596                 db    0
.data:0000000180019597                 db    0
.data:0000000180019598                 db    0
.data:0000000180019599                 db    0
.data:000000018001959A                 db    0
.data:000000018001959B                 db    0
.data:000000018001959C                 db    0
.data:000000018001959D                 db    0
.data:000000018001959E                 db    0
.data:000000018001959F                 db    0
.data:00000001800195A0                 db    0
.data:00000001800195A1                 db    0
.data:00000001800195A2                 db    0
.data:00000001800195A3                 db    0
.data:00000001800195A4                 db    0
.data:00000001800195A5                 db    0
.data:00000001800195A6                 db    0
.data:00000001800195A7                 db    0
.data:00000001800195A8                 db    0
.data:00000001800195A9                 db    0
.data:00000001800195AA                 db    0
.data:00000001800195AB                 db    0
.data:00000001800195AC                 db    0
.data:00000001800195AD                 db    0
.data:00000001800195AE                 db    0
.data:00000001800195AF                 db    0
.data:00000001800195B0                 db    0
.data:00000001800195B1                 db    0
.data:00000001800195B2                 db    0
.data:00000001800195B3                 db    0
.data:00000001800195B4                 db    0
.data:00000001800195B5                 db    0
.data:00000001800195B6                 db    0
.data:00000001800195B7                 db    0
.data:00000001800195B8                 db    0
.data:00000001800195B9                 db    0
.data:00000001800195BA                 db    0
.data:00000001800195BB                 db    0
.data:00000001800195BC                 db    0
.data:00000001800195BD                 db    0
.data:00000001800195BE                 db    0
.data:00000001800195BF                 db    0
.data:00000001800195C0                 db    0
.data:00000001800195C1                 db    0
.data:00000001800195C2                 db    0
.data:00000001800195C3                 db    0
.data:00000001800195C4                 db    0
.data:00000001800195C5                 db    0
.data:00000001800195C6                 db    0
.data:00000001800195C7                 db    0
.data:00000001800195C8                 db    0
.data:00000001800195C9                 db    0
.data:00000001800195CA                 db    0
.data:00000001800195CB                 db    0
.data:00000001800195CC                 db    0
.data:00000001800195CD                 db    0
.data:00000001800195CE                 db    0
.data:00000001800195CF                 db    0
.data:00000001800195D0 ; struct _CONTEXT ContextRecord
.data:00000001800195D0 ContextRecord   _CONTEXT <?>            ; DATA XREF: __report_gsfailure:loc_180010BC7↑o
.data:00000001800195D0                                         ; .rdata:ExceptionInfo↑o
.data:0000000180019AA0 unk_180019AA0   db    ? ;               ; DATA XREF: sub_180010E08↑o
.data:0000000180019AA0                                         ; sub_180010E18↑o
.data:0000000180019AA1                 db    ? ;
.data:0000000180019AA2                 db    ? ;
.data:0000000180019AA3                 db    ? ;
.data:0000000180019AA4                 db    ? ;
.data:0000000180019AA5                 db    ? ;
.data:0000000180019AA6                 db    ? ;
.data:0000000180019AA7                 db    ? ;
.data:0000000180019AA8                 db    ? ;
.data:0000000180019AA9                 db    ? ;
.data:0000000180019AAA                 db    ? ;
.data:0000000180019AAB                 db    ? ;
.data:0000000180019AAC                 db    ? ;
.data:0000000180019AAD                 db    ? ;
.data:0000000180019AAE                 db    ? ;
.data:0000000180019AAF                 db    ? ;
.data:0000000180019AB0 dword_180019AB0 dd ?                    ; DATA XREF: sub_180010E48↑w
.data:0000000180019AB4 dword_180019AB4 dd ?                    ; DATA XREF: __isa_available_init:loc_1800110B4↑r
.data:0000000180019AB4                                         ; __isa_available_init+AB↑w ...
.data:0000000180019AB8                 align 20h
.data:0000000180019AC0 ; LPVOID lpParameter
.data:0000000180019AC0 lpParameter     dq ?                    ; DATA XREF: fsuipcw_init+6↑r
.data:0000000180019AC0                                         ; fsuipcw_init+139↑w ...
.data:0000000180019AC8 qword_180019AC8 dq ?                    ; DATA XREF: fsuipcw_init:loc_1800012D6↑w
.data:0000000180019AC8                                         ; fsuipcw_setLogLevel+A↑r
.data:0000000180019AD0 qword_180019AD0 dq ?                    ; DATA XREF: fsuipcw_init+17↑r
.data:0000000180019AD0                                         ; fsuipcw_init+56↑w ...
.data:0000000180019AD8 byte_180019AD8  db ?                    ; DATA XREF: sub_1800034B0+97B↑w
.data:0000000180019AD8                                         ; sub_1800034B0+D26↑w ...
.data:0000000180019AD9                 align 20h
.data:0000000180019AE0 qword_180019AE0 dq ?                    ; DATA XREF: fsuipcw_init+4F↑r
.data:0000000180019AE0                                         ; fsuipcw_init+9A↑w ...
.data:0000000180019AE8                 align 10h
.data:0000000180019AF0 unk_180019AF0   db    ? ;               ; DATA XREF: sub_180003260+210↑o
.data:0000000180019AF0                                         ; sub_1800034B0+2A6↑o ...
.data:0000000180019AF1                 db    ? ;
.data:0000000180019AF2                 db    ? ;
.data:0000000180019AF3                 db    ? ;
.data:0000000180019AF4                 db    ? ;
.data:0000000180019AF5                 db    ? ;
.data:0000000180019AF6                 db    ? ;
.data:0000000180019AF7                 db    ? ;
.data:0000000180019AF8                 db    ? ;
.data:0000000180019AF9                 db    ? ;
.data:0000000180019AFA                 db    ? ;
.data:0000000180019AFB                 db    ? ;
.data:0000000180019AFC                 db    ? ;
.data:0000000180019AFD                 db    ? ;
.data:0000000180019AFE                 db    ? ;
.data:0000000180019AFF                 db    ? ;
.data:0000000180019B00                 db    ? ;
.data:0000000180019B01                 db    ? ;
.data:0000000180019B02                 db    ? ;
.data:0000000180019B03                 db    ? ;
.data:0000000180019B04                 db    ? ;
.data:0000000180019B05                 db    ? ;
.data:0000000180019B06                 db    ? ;
.data:0000000180019B07                 db    ? ;
.data:0000000180019B08                 db    ? ;
.data:0000000180019B09                 db    ? ;
.data:0000000180019B0A                 db    ? ;
.data:0000000180019B0B                 db    ? ;
.data:0000000180019B0C                 db    ? ;
.data:0000000180019B0D                 db    ? ;
.data:0000000180019B0E                 db    ? ;
.data:0000000180019B0F                 db    ? ;
.data:0000000180019B10                 db    ? ;
.data:0000000180019B11                 db    ? ;
.data:0000000180019B12                 db    ? ;
.data:0000000180019B13                 db    ? ;
.data:0000000180019B14                 db    ? ;
.data:0000000180019B15                 db    ? ;
.data:0000000180019B16                 db    ? ;
.data:0000000180019B17                 db    ? ;
.data:0000000180019B18                 db    ? ;
.data:0000000180019B19                 db    ? ;
.data:0000000180019B1A                 db    ? ;
.data:0000000180019B1B                 db    ? ;
.data:0000000180019B1C                 db    ? ;
.data:0000000180019B1D                 db    ? ;
.data:0000000180019B1E                 db    ? ;
.data:0000000180019B1F                 db    ? ;
.data:0000000180019B20                 db    ? ;
.data:0000000180019B21                 db    ? ;
.data:0000000180019B22                 db    ? ;
.data:0000000180019B23                 db    ? ;
.data:0000000180019B24                 db    ? ;
.data:0000000180019B25                 db    ? ;
.data:0000000180019B26                 db    ? ;
.data:0000000180019B27                 db    ? ;
.data:0000000180019B28                 db    ? ;
.data:0000000180019B29                 db    ? ;
.data:0000000180019B2A                 db    ? ;
.data:0000000180019B2B                 db    ? ;
.data:0000000180019B2C                 db    ? ;
.data:0000000180019B2D                 db    ? ;
.data:0000000180019B2E                 db    ? ;
.data:0000000180019B2F                 db    ? ;
.data:0000000180019B30                 db    ? ;
.data:0000000180019B31                 db    ? ;
.data:0000000180019B32                 db    ? ;
.data:0000000180019B33                 db    ? ;
.data:0000000180019B34                 db    ? ;
.data:0000000180019B35                 db    ? ;
.data:0000000180019B36                 db    ? ;
.data:0000000180019B37                 db    ? ;
.data:0000000180019B38                 db    ? ;
.data:0000000180019B39                 db    ? ;
.data:0000000180019B3A                 db    ? ;
.data:0000000180019B3B                 db    ? ;
.data:0000000180019B3C                 db    ? ;
.data:0000000180019B3D                 db    ? ;
.data:0000000180019B3E                 db    ? ;
.data:0000000180019B3F                 db    ? ;
.data:0000000180019B40                 db    ? ;
.data:0000000180019B41                 db    ? ;
.data:0000000180019B42                 db    ? ;
.data:0000000180019B43                 db    ? ;
.data:0000000180019B44                 db    ? ;
.data:0000000180019B45                 db    ? ;
.data:0000000180019B46                 db    ? ;
.data:0000000180019B47                 db    ? ;
.data:0000000180019B48                 db    ? ;
.data:0000000180019B49                 db    ? ;
.data:0000000180019B4A                 db    ? ;
.data:0000000180019B4B                 db    ? ;
.data:0000000180019B4C                 db    ? ;
.data:0000000180019B4D                 db    ? ;
.data:0000000180019B4E                 db    ? ;
.data:0000000180019B4F                 db    ? ;
.data:0000000180019B50                 db    ? ;
.data:0000000180019B51                 db    ? ;
.data:0000000180019B52                 db    ? ;
.data:0000000180019B53                 db    ? ;
.data:0000000180019B54                 db    ? ;
.data:0000000180019B55                 db    ? ;
.data:0000000180019B56                 db    ? ;
.data:0000000180019B57                 db    ? ;
.data:0000000180019B58                 db    ? ;
.data:0000000180019B59                 db    ? ;
.data:0000000180019B5A                 db    ? ;
.data:0000000180019B5B                 db    ? ;
.data:0000000180019B5C                 db    ? ;
.data:0000000180019B5D                 db    ? ;
.data:0000000180019B5E                 db    ? ;
.data:0000000180019B5F                 db    ? ;
.data:0000000180019B60                 db    ? ;
.data:0000000180019B61                 db    ? ;
.data:0000000180019B62                 db    ? ;
.data:0000000180019B63                 db    ? ;
.data:0000000180019B64                 db    ? ;
.data:0000000180019B65                 db    ? ;
.data:0000000180019B66                 db    ? ;
.data:0000000180019B67                 db    ? ;
.data:0000000180019B68                 db    ? ;
.data:0000000180019B69                 db    ? ;
.data:0000000180019B6A                 db    ? ;
.data:0000000180019B6B                 db    ? ;
.data:0000000180019B6C                 db    ? ;
.data:0000000180019B6D                 db    ? ;
.data:0000000180019B6E                 db    ? ;
.data:0000000180019B6F                 db    ? ;
.data:0000000180019B70                 db    ? ;
.data:0000000180019B71                 db    ? ;
.data:0000000180019B72                 db    ? ;
.data:0000000180019B73                 db    ? ;
.data:0000000180019B74                 db    ? ;
.data:0000000180019B75                 db    ? ;
.data:0000000180019B76                 db    ? ;
.data:0000000180019B77                 db    ? ;
.data:0000000180019B78                 db    ? ;
.data:0000000180019B79                 db    ? ;
.data:0000000180019B7A                 db    ? ;
.data:0000000180019B7B                 db    ? ;
.data:0000000180019B7C                 db    ? ;
.data:0000000180019B7D                 db    ? ;
.data:0000000180019B7E                 db    ? ;
.data:0000000180019B7F                 db    ? ;
.data:0000000180019B80                 db    ? ;
.data:0000000180019B81                 db    ? ;
.data:0000000180019B82                 db    ? ;
.data:0000000180019B83                 db    ? ;
.data:0000000180019B84                 db    ? ;
.data:0000000180019B85                 db    ? ;
.data:0000000180019B86                 db    ? ;
.data:0000000180019B87                 db    ? ;
.data:0000000180019B88                 db    ? ;
.data:0000000180019B89                 db    ? ;
.data:0000000180019B8A                 db    ? ;
.data:0000000180019B8B                 db    ? ;
.data:0000000180019B8C                 db    ? ;
.data:0000000180019B8D                 db    ? ;
.data:0000000180019B8E                 db    ? ;
.data:0000000180019B8F                 db    ? ;
.data:0000000180019B90                 db    ? ;
.data:0000000180019B91                 db    ? ;
.data:0000000180019B92                 db    ? ;
.data:0000000180019B93                 db    ? ;
.data:0000000180019B94                 db    ? ;
.data:0000000180019B95                 db    ? ;
.data:0000000180019B96                 db    ? ;
.data:0000000180019B97                 db    ? ;
.data:0000000180019B98                 db    ? ;
.data:0000000180019B99                 db    ? ;
.data:0000000180019B9A                 db    ? ;
.data:0000000180019B9B                 db    ? ;
.data:0000000180019B9C                 db    ? ;
.data:0000000180019B9D                 db    ? ;
.data:0000000180019B9E                 db    ? ;
.data:0000000180019B9F                 db    ? ;
.data:0000000180019BA0                 db    ? ;
.data:0000000180019BA1                 db    ? ;
.data:0000000180019BA2                 db    ? ;
.data:0000000180019BA3                 db    ? ;
.data:0000000180019BA4                 db    ? ;
.data:0000000180019BA5                 db    ? ;
.data:0000000180019BA6                 db    ? ;
.data:0000000180019BA7                 db    ? ;
.data:0000000180019BA8                 db    ? ;
.data:0000000180019BA9                 db    ? ;
.data:0000000180019BAA                 db    ? ;
.data:0000000180019BAB                 db    ? ;
.data:0000000180019BAC                 db    ? ;
.data:0000000180019BAD                 db    ? ;
.data:0000000180019BAE                 db    ? ;
.data:0000000180019BAF                 db    ? ;
.data:0000000180019BB0                 db    ? ;
.data:0000000180019BB1                 db    ? ;
.data:0000000180019BB2                 db    ? ;
.data:0000000180019BB3                 db    ? ;
.data:0000000180019BB4                 db    ? ;
.data:0000000180019BB5                 db    ? ;
.data:0000000180019BB6                 db    ? ;
.data:0000000180019BB7                 db    ? ;
.data:0000000180019BB8                 db    ? ;
.data:0000000180019BB9                 db    ? ;
.data:0000000180019BBA                 db    ? ;
.data:0000000180019BBB                 db    ? ;
.data:0000000180019BBC                 db    ? ;
.data:0000000180019BBD                 db    ? ;
.data:0000000180019BBE                 db    ? ;
.data:0000000180019BBF                 db    ? ;
.data:0000000180019BC0                 db    ? ;
.data:0000000180019BC1                 db    ? ;
.data:0000000180019BC2                 db    ? ;
.data:0000000180019BC3                 db    ? ;
.data:0000000180019BC4                 db    ? ;
.data:0000000180019BC5                 db    ? ;
.data:0000000180019BC6                 db    ? ;
.data:0000000180019BC7                 db    ? ;
.data:0000000180019BC8                 db    ? ;
.data:0000000180019BC9                 db    ? ;
.data:0000000180019BCA                 db    ? ;
.data:0000000180019BCB                 db    ? ;
.data:0000000180019BCC                 db    ? ;
.data:0000000180019BCD                 db    ? ;
.data:0000000180019BCE                 db    ? ;
.data:0000000180019BCF                 db    ? ;
.data:0000000180019BD0                 db    ? ;
.data:0000000180019BD1                 db    ? ;
.data:0000000180019BD2                 db    ? ;
.data:0000000180019BD3                 db    ? ;
.data:0000000180019BD4                 db    ? ;
.data:0000000180019BD5                 db    ? ;
.data:0000000180019BD6                 db    ? ;
.data:0000000180019BD7                 db    ? ;
.data:0000000180019BD8                 db    ? ;
.data:0000000180019BD9                 db    ? ;
.data:0000000180019BDA                 db    ? ;
.data:0000000180019BDB                 db    ? ;
.data:0000000180019BDC                 db    ? ;
.data:0000000180019BDD                 db    ? ;
.data:0000000180019BDE                 db    ? ;
.data:0000000180019BDF                 db    ? ;
.data:0000000180019BE0                 db    ? ;
.data:0000000180019BE1                 db    ? ;
.data:0000000180019BE2                 db    ? ;
.data:0000000180019BE3                 db    ? ;
.data:0000000180019BE4                 db    ? ;
.data:0000000180019BE5                 db    ? ;
.data:0000000180019BE6                 db    ? ;
.data:0000000180019BE7                 db    ? ;
.data:0000000180019BE8                 db    ? ;
.data:0000000180019BE9                 db    ? ;
.data:0000000180019BEA                 db    ? ;
.data:0000000180019BEB                 db    ? ;
.data:0000000180019BEC                 db    ? ;
.data:0000000180019BED                 db    ? ;
.data:0000000180019BEE                 db    ? ;
.data:0000000180019BEF                 db    ? ;
.data:0000000180019BF0                 db    ? ;
.data:0000000180019BF1                 db    ? ;
.data:0000000180019BF2                 db    ? ;
.data:0000000180019BF3                 db    ? ;
.data:0000000180019BF4                 db    ? ;
.data:0000000180019BF5                 db    ? ;
.data:0000000180019BF6                 db    ? ;
.data:0000000180019BF7                 db    ? ;
.data:0000000180019BF8                 db    ? ;
.data:0000000180019BF9                 db    ? ;
.data:0000000180019BFA                 db    ? ;
.data:0000000180019BFB                 db    ? ;
.data:0000000180019BFC                 db    ? ;
.data:0000000180019BFD                 db    ? ;
.data:0000000180019BFE                 db    ? ;
.data:0000000180019BFF                 db    ? ;
.data:0000000180019C00                 db    ? ;
.data:0000000180019C01                 db    ? ;
.data:0000000180019C02                 db    ? ;
.data:0000000180019C03                 db    ? ;
.data:0000000180019C04                 db    ? ;
.data:0000000180019C05                 db    ? ;
.data:0000000180019C06                 db    ? ;
.data:0000000180019C07                 db    ? ;
.data:0000000180019C08                 db    ? ;
.data:0000000180019C09                 db    ? ;
.data:0000000180019C0A                 db    ? ;
.data:0000000180019C0B                 db    ? ;
.data:0000000180019C0C                 db    ? ;
.data:0000000180019C0D                 db    ? ;
.data:0000000180019C0E                 db    ? ;
.data:0000000180019C0F                 db    ? ;
.data:0000000180019C10                 db    ? ;
.data:0000000180019C11                 db    ? ;
.data:0000000180019C12                 db    ? ;
.data:0000000180019C13                 db    ? ;
.data:0000000180019C14                 db    ? ;
.data:0000000180019C15                 db    ? ;
.data:0000000180019C16                 db    ? ;
.data:0000000180019C17                 db    ? ;
.data:0000000180019C18                 db    ? ;
.data:0000000180019C19                 db    ? ;
.data:0000000180019C1A                 db    ? ;
.data:0000000180019C1B                 db    ? ;
.data:0000000180019C1C                 db    ? ;
.data:0000000180019C1D                 db    ? ;
.data:0000000180019C1E                 db    ? ;
.data:0000000180019C1F                 db    ? ;
.data:0000000180019C20                 db    ? ;
.data:0000000180019C21                 db    ? ;
.data:0000000180019C22                 db    ? ;
.data:0000000180019C23                 db    ? ;
.data:0000000180019C24                 db    ? ;
.data:0000000180019C25                 db    ? ;
.data:0000000180019C26                 db    ? ;
.data:0000000180019C27                 db    ? ;
.data:0000000180019C28                 db    ? ;
.data:0000000180019C29                 db    ? ;
.data:0000000180019C2A                 db    ? ;
.data:0000000180019C2B                 db    ? ;
.data:0000000180019C2C                 db    ? ;
.data:0000000180019C2D                 db    ? ;
.data:0000000180019C2E                 db    ? ;
.data:0000000180019C2F                 db    ? ;
.data:0000000180019C30                 db    ? ;
.data:0000000180019C31                 db    ? ;
.data:0000000180019C32                 db    ? ;
.data:0000000180019C33                 db    ? ;
.data:0000000180019C34                 db    ? ;
.data:0000000180019C35                 db    ? ;
.data:0000000180019C36                 db    ? ;
.data:0000000180019C37                 db    ? ;
.data:0000000180019C38                 db    ? ;
.data:0000000180019C39                 db    ? ;
.data:0000000180019C3A                 db    ? ;
.data:0000000180019C3B                 db    ? ;
.data:0000000180019C3C                 db    ? ;
.data:0000000180019C3D                 db    ? ;
.data:0000000180019C3E                 db    ? ;
.data:0000000180019C3F                 db    ? ;
.data:0000000180019C40                 db    ? ;
.data:0000000180019C41                 db    ? ;
.data:0000000180019C42                 db    ? ;
.data:0000000180019C43                 db    ? ;
.data:0000000180019C44                 db    ? ;
.data:0000000180019C45                 db    ? ;
.data:0000000180019C46                 db    ? ;
.data:0000000180019C47                 db    ? ;
.data:0000000180019C48                 db    ? ;
.data:0000000180019C49                 db    ? ;
.data:0000000180019C4A                 db    ? ;
.data:0000000180019C4B                 db    ? ;
.data:0000000180019C4C                 db    ? ;
.data:0000000180019C4D                 db    ? ;
.data:0000000180019C4E                 db    ? ;
.data:0000000180019C4F                 db    ? ;
.data:0000000180019C50                 db    ? ;
.data:0000000180019C51                 db    ? ;
.data:0000000180019C52                 db    ? ;
.data:0000000180019C53                 db    ? ;
.data:0000000180019C54                 db    ? ;
.data:0000000180019C55                 db    ? ;
.data:0000000180019C56                 db    ? ;
.data:0000000180019C57                 db    ? ;
.data:0000000180019C58                 db    ? ;
.data:0000000180019C59                 db    ? ;
.data:0000000180019C5A                 db    ? ;
.data:0000000180019C5B                 db    ? ;
.data:0000000180019C5C                 db    ? ;
.data:0000000180019C5D                 db    ? ;
.data:0000000180019C5E                 db    ? ;
.data:0000000180019C5F                 db    ? ;
.data:0000000180019C60                 db    ? ;
.data:0000000180019C61                 db    ? ;
.data:0000000180019C62                 db    ? ;
.data:0000000180019C63                 db    ? ;
.data:0000000180019C64                 db    ? ;
.data:0000000180019C65                 db    ? ;
.data:0000000180019C66                 db    ? ;
.data:0000000180019C67                 db    ? ;
.data:0000000180019C68                 db    ? ;
.data:0000000180019C69                 db    ? ;
.data:0000000180019C6A                 db    ? ;
.data:0000000180019C6B                 db    ? ;
.data:0000000180019C6C                 db    ? ;
.data:0000000180019C6D                 db    ? ;
.data:0000000180019C6E                 db    ? ;
.data:0000000180019C6F                 db    ? ;
.data:0000000180019C70                 db    ? ;
.data:0000000180019C71                 db    ? ;
.data:0000000180019C72                 db    ? ;
.data:0000000180019C73                 db    ? ;
.data:0000000180019C74                 db    ? ;
.data:0000000180019C75                 db    ? ;
.data:0000000180019C76                 db    ? ;
.data:0000000180019C77                 db    ? ;
.data:0000000180019C78                 db    ? ;
.data:0000000180019C79                 db    ? ;
.data:0000000180019C7A                 db    ? ;
.data:0000000180019C7B                 db    ? ;
.data:0000000180019C7C                 db    ? ;
.data:0000000180019C7D                 db    ? ;
.data:0000000180019C7E                 db    ? ;
.data:0000000180019C7F                 db    ? ;
.data:0000000180019C80                 db    ? ;
.data:0000000180019C81                 db    ? ;
.data:0000000180019C82                 db    ? ;
.data:0000000180019C83                 db    ? ;
.data:0000000180019C84                 db    ? ;
.data:0000000180019C85                 db    ? ;
.data:0000000180019C86                 db    ? ;
.data:0000000180019C87                 db    ? ;
.data:0000000180019C88                 db    ? ;
.data:0000000180019C89                 db    ? ;
.data:0000000180019C8A                 db    ? ;
.data:0000000180019C8B                 db    ? ;
.data:0000000180019C8C                 db    ? ;
.data:0000000180019C8D                 db    ? ;
.data:0000000180019C8E                 db    ? ;
.data:0000000180019C8F                 db    ? ;
.data:0000000180019C90                 db    ? ;
.data:0000000180019C91                 db    ? ;
.data:0000000180019C92                 db    ? ;
.data:0000000180019C93                 db    ? ;
.data:0000000180019C94                 db    ? ;
.data:0000000180019C95                 db    ? ;
.data:0000000180019C96                 db    ? ;
.data:0000000180019C97                 db    ? ;
.data:0000000180019C98                 db    ? ;
.data:0000000180019C99                 db    ? ;
.data:0000000180019C9A                 db    ? ;
.data:0000000180019C9B                 db    ? ;
.data:0000000180019C9C                 db    ? ;
.data:0000000180019C9D                 db    ? ;
.data:0000000180019C9E                 db    ? ;
.data:0000000180019C9F                 db    ? ;
.data:0000000180019CA0                 db    ? ;
.data:0000000180019CA1                 db    ? ;
.data:0000000180019CA2                 db    ? ;
.data:0000000180019CA3                 db    ? ;
.data:0000000180019CA4                 db    ? ;
.data:0000000180019CA5                 db    ? ;
.data:0000000180019CA6                 db    ? ;
.data:0000000180019CA7                 db    ? ;
.data:0000000180019CA8                 db    ? ;
.data:0000000180019CA9                 db    ? ;
.data:0000000180019CAA                 db    ? ;
.data:0000000180019CAB                 db    ? ;
.data:0000000180019CAC                 db    ? ;
.data:0000000180019CAD                 db    ? ;
.data:0000000180019CAE                 db    ? ;
.data:0000000180019CAF                 db    ? ;
.data:0000000180019CB0                 db    ? ;
.data:0000000180019CB1                 db    ? ;
.data:0000000180019CB2                 db    ? ;
.data:0000000180019CB3                 db    ? ;
.data:0000000180019CB4                 db    ? ;
.data:0000000180019CB5                 db    ? ;
.data:0000000180019CB6                 db    ? ;
.data:0000000180019CB7                 db    ? ;
.data:0000000180019CB8                 db    ? ;
.data:0000000180019CB9                 db    ? ;
.data:0000000180019CBA                 db    ? ;
.data:0000000180019CBB                 db    ? ;
.data:0000000180019CBC                 db    ? ;
.data:0000000180019CBD                 db    ? ;
.data:0000000180019CBE                 db    ? ;
.data:0000000180019CBF                 db    ? ;
.data:0000000180019CC0                 db    ? ;
.data:0000000180019CC1                 db    ? ;
.data:0000000180019CC2                 db    ? ;
.data:0000000180019CC3                 db    ? ;
.data:0000000180019CC4                 db    ? ;
.data:0000000180019CC5                 db    ? ;
.data:0000000180019CC6                 db    ? ;
.data:0000000180019CC7                 db    ? ;
.data:0000000180019CC8                 db    ? ;
.data:0000000180019CC9                 db    ? ;
.data:0000000180019CCA                 db    ? ;
.data:0000000180019CCB                 db    ? ;
.data:0000000180019CCC                 db    ? ;
.data:0000000180019CCD                 db    ? ;
.data:0000000180019CCE                 db    ? ;
.data:0000000180019CCF                 db    ? ;
.data:0000000180019CD0                 db    ? ;
.data:0000000180019CD1                 db    ? ;
.data:0000000180019CD2                 db    ? ;
.data:0000000180019CD3                 db    ? ;
.data:0000000180019CD4                 db    ? ;
.data:0000000180019CD5                 db    ? ;
.data:0000000180019CD6                 db    ? ;
.data:0000000180019CD7                 db    ? ;
.data:0000000180019CD8                 db    ? ;
.data:0000000180019CD9                 db    ? ;
.data:0000000180019CDA                 db    ? ;
.data:0000000180019CDB                 db    ? ;
.data:0000000180019CDC                 db    ? ;
.data:0000000180019CDD                 db    ? ;
.data:0000000180019CDE                 db    ? ;
.data:0000000180019CDF                 db    ? ;
.data:0000000180019CE0                 db    ? ;
.data:0000000180019CE1                 db    ? ;
.data:0000000180019CE2                 db    ? ;
.data:0000000180019CE3                 db    ? ;
.data:0000000180019CE4                 db    ? ;
.data:0000000180019CE5                 db    ? ;
.data:0000000180019CE6                 db    ? ;
.data:0000000180019CE7                 db    ? ;
.data:0000000180019CE8                 db    ? ;
.data:0000000180019CE9                 db    ? ;
.data:0000000180019CEA                 db    ? ;
.data:0000000180019CEB                 db    ? ;
.data:0000000180019CEC                 db    ? ;
.data:0000000180019CED                 db    ? ;
.data:0000000180019CEE                 db    ? ;
.data:0000000180019CEF                 db    ? ;
.data:0000000180019CF0                 db    ? ;
.data:0000000180019CF1                 db    ? ;
.data:0000000180019CF2                 db    ? ;
.data:0000000180019CF3                 db    ? ;
.data:0000000180019CF4                 db    ? ;
.data:0000000180019CF5                 db    ? ;
.data:0000000180019CF6                 db    ? ;
.data:0000000180019CF7                 db    ? ;
.data:0000000180019CF8                 db    ? ;
.data:0000000180019CF9                 db    ? ;
.data:0000000180019CFA                 db    ? ;
.data:0000000180019CFB                 db    ? ;
.data:0000000180019CFC                 db    ? ;
.data:0000000180019CFD                 db    ? ;
.data:0000000180019CFE                 db    ? ;
.data:0000000180019CFF                 db    ? ;
.data:0000000180019D00                 db    ? ;
.data:0000000180019D01                 db    ? ;
.data:0000000180019D02                 db    ? ;
.data:0000000180019D03                 db    ? ;
.data:0000000180019D04                 db    ? ;
.data:0000000180019D05                 db    ? ;
.data:0000000180019D06                 db    ? ;
.data:0000000180019D07                 db    ? ;
.data:0000000180019D08                 db    ? ;
.data:0000000180019D09                 db    ? ;
.data:0000000180019D0A                 db    ? ;
.data:0000000180019D0B                 db    ? ;
.data:0000000180019D0C                 db    ? ;
.data:0000000180019D0D                 db    ? ;
.data:0000000180019D0E                 db    ? ;
.data:0000000180019D0F                 db    ? ;
.data:0000000180019D10                 db    ? ;
.data:0000000180019D11                 db    ? ;
.data:0000000180019D12                 db    ? ;
.data:0000000180019D13                 db    ? ;
.data:0000000180019D14                 db    ? ;
.data:0000000180019D15                 db    ? ;
.data:0000000180019D16                 db    ? ;
.data:0000000180019D17                 db    ? ;
.data:0000000180019D18                 db    ? ;
.data:0000000180019D19                 db    ? ;
.data:0000000180019D1A                 db    ? ;
.data:0000000180019D1B                 db    ? ;
.data:0000000180019D1C                 db    ? ;
.data:0000000180019D1D                 db    ? ;
.data:0000000180019D1E                 db    ? ;
.data:0000000180019D1F                 db    ? ;
.data:0000000180019D20                 db    ? ;
.data:0000000180019D21                 db    ? ;
.data:0000000180019D22                 db    ? ;
.data:0000000180019D23                 db    ? ;
.data:0000000180019D24                 db    ? ;
.data:0000000180019D25                 db    ? ;
.data:0000000180019D26                 db    ? ;
.data:0000000180019D27                 db    ? ;
.data:0000000180019D28                 db    ? ;
.data:0000000180019D29                 db    ? ;
.data:0000000180019D2A                 db    ? ;
.data:0000000180019D2B                 db    ? ;
.data:0000000180019D2C                 db    ? ;
.data:0000000180019D2D                 db    ? ;
.data:0000000180019D2E                 db    ? ;
.data:0000000180019D2F                 db    ? ;
.data:0000000180019D30                 db    ? ;
.data:0000000180019D31                 db    ? ;
.data:0000000180019D32                 db    ? ;
.data:0000000180019D33                 db    ? ;
.data:0000000180019D34                 db    ? ;
.data:0000000180019D35                 db    ? ;
.data:0000000180019D36                 db    ? ;
.data:0000000180019D37                 db    ? ;
.data:0000000180019D38                 db    ? ;
.data:0000000180019D39                 db    ? ;
.data:0000000180019D3A                 db    ? ;
.data:0000000180019D3B                 db    ? ;
.data:0000000180019D3C                 db    ? ;
.data:0000000180019D3D                 db    ? ;
.data:0000000180019D3E                 db    ? ;
.data:0000000180019D3F                 db    ? ;
.data:0000000180019D40                 db    ? ;
.data:0000000180019D41                 db    ? ;
.data:0000000180019D42                 db    ? ;
.data:0000000180019D43                 db    ? ;
.data:0000000180019D44                 db    ? ;
.data:0000000180019D45                 db    ? ;
.data:0000000180019D46                 db    ? ;
.data:0000000180019D47                 db    ? ;
.data:0000000180019D48                 db    ? ;
.data:0000000180019D49                 db    ? ;
.data:0000000180019D4A                 db    ? ;
.data:0000000180019D4B                 db    ? ;
.data:0000000180019D4C                 db    ? ;
.data:0000000180019D4D                 db    ? ;
.data:0000000180019D4E                 db    ? ;
.data:0000000180019D4F                 db    ? ;
.data:0000000180019D50                 db    ? ;
.data:0000000180019D51                 db    ? ;
.data:0000000180019D52                 db    ? ;
.data:0000000180019D53                 db    ? ;
.data:0000000180019D54                 db    ? ;
.data:0000000180019D55                 db    ? ;
.data:0000000180019D56                 db    ? ;
.data:0000000180019D57                 db    ? ;
.data:0000000180019D58                 db    ? ;
.data:0000000180019D59                 db    ? ;
.data:0000000180019D5A                 db    ? ;
.data:0000000180019D5B                 db    ? ;
.data:0000000180019D5C                 db    ? ;
.data:0000000180019D5D                 db    ? ;
.data:0000000180019D5E                 db    ? ;
.data:0000000180019D5F                 db    ? ;
.data:0000000180019D60                 db    ? ;
.data:0000000180019D61                 db    ? ;
.data:0000000180019D62                 db    ? ;
.data:0000000180019D63                 db    ? ;
.data:0000000180019D64                 db    ? ;
.data:0000000180019D65                 db    ? ;
.data:0000000180019D66                 db    ? ;
.data:0000000180019D67                 db    ? ;
.data:0000000180019D68                 db    ? ;
.data:0000000180019D69                 db    ? ;
.data:0000000180019D6A                 db    ? ;
.data:0000000180019D6B                 db    ? ;
.data:0000000180019D6C                 db    ? ;
.data:0000000180019D6D                 db    ? ;
.data:0000000180019D6E                 db    ? ;
.data:0000000180019D6F                 db    ? ;
.data:0000000180019D70                 db    ? ;
.data:0000000180019D71                 db    ? ;
.data:0000000180019D72                 db    ? ;
.data:0000000180019D73                 db    ? ;
.data:0000000180019D74                 db    ? ;
.data:0000000180019D75                 db    ? ;
.data:0000000180019D76                 db    ? ;
.data:0000000180019D77                 db    ? ;
.data:0000000180019D78                 db    ? ;
.data:0000000180019D79                 db    ? ;
.data:0000000180019D7A                 db    ? ;
.data:0000000180019D7B                 db    ? ;
.data:0000000180019D7C                 db    ? ;
.data:0000000180019D7D                 db    ? ;
.data:0000000180019D7E                 db    ? ;
.data:0000000180019D7F                 db    ? ;
.data:0000000180019D80                 db    ? ;
.data:0000000180019D81                 db    ? ;
.data:0000000180019D82                 db    ? ;
.data:0000000180019D83                 db    ? ;
.data:0000000180019D84                 db    ? ;
.data:0000000180019D85                 db    ? ;
.data:0000000180019D86                 db    ? ;
.data:0000000180019D87                 db    ? ;
.data:0000000180019D88                 db    ? ;
.data:0000000180019D89                 db    ? ;
.data:0000000180019D8A                 db    ? ;
.data:0000000180019D8B                 db    ? ;
.data:0000000180019D8C                 db    ? ;
.data:0000000180019D8D                 db    ? ;
.data:0000000180019D8E                 db    ? ;
.data:0000000180019D8F                 db    ? ;
.data:0000000180019D90                 db    ? ;
.data:0000000180019D91                 db    ? ;
.data:0000000180019D92                 db    ? ;
.data:0000000180019D93                 db    ? ;
.data:0000000180019D94                 db    ? ;
.data:0000000180019D95                 db    ? ;
.data:0000000180019D96                 db    ? ;
.data:0000000180019D97                 db    ? ;
.data:0000000180019D98                 db    ? ;
.data:0000000180019D99                 db    ? ;
.data:0000000180019D9A                 db    ? ;
.data:0000000180019D9B                 db    ? ;
.data:0000000180019D9C                 db    ? ;
.data:0000000180019D9D                 db    ? ;
.data:0000000180019D9E                 db    ? ;
.data:0000000180019D9F                 db    ? ;
.data:0000000180019DA0                 db    ? ;
.data:0000000180019DA1                 db    ? ;
.data:0000000180019DA2                 db    ? ;
.data:0000000180019DA3                 db    ? ;
.data:0000000180019DA4                 db    ? ;
.data:0000000180019DA5                 db    ? ;
.data:0000000180019DA6                 db    ? ;
.data:0000000180019DA7                 db    ? ;
.data:0000000180019DA8                 db    ? ;
.data:0000000180019DA9                 db    ? ;
.data:0000000180019DAA                 db    ? ;
.data:0000000180019DAB                 db    ? ;
.data:0000000180019DAC                 db    ? ;
.data:0000000180019DAD                 db    ? ;
.data:0000000180019DAE                 db    ? ;
.data:0000000180019DAF                 db    ? ;
.data:0000000180019DB0                 db    ? ;
.data:0000000180019DB1                 db    ? ;
.data:0000000180019DB2                 db    ? ;
.data:0000000180019DB3                 db    ? ;
.data:0000000180019DB4                 db    ? ;
.data:0000000180019DB5                 db    ? ;
.data:0000000180019DB6                 db    ? ;
.data:0000000180019DB7                 db    ? ;
.data:0000000180019DB8                 db    ? ;
.data:0000000180019DB9                 db    ? ;
.data:0000000180019DBA                 db    ? ;
.data:0000000180019DBB                 db    ? ;
.data:0000000180019DBC                 db    ? ;
.data:0000000180019DBD                 db    ? ;
.data:0000000180019DBE                 db    ? ;
.data:0000000180019DBF                 db    ? ;
.data:0000000180019DC0                 db    ? ;
.data:0000000180019DC1                 db    ? ;
.data:0000000180019DC2                 db    ? ;
.data:0000000180019DC3                 db    ? ;
.data:0000000180019DC4                 db    ? ;
.data:0000000180019DC5                 db    ? ;
.data:0000000180019DC6                 db    ? ;
.data:0000000180019DC7                 db    ? ;
.data:0000000180019DC8                 db    ? ;
.data:0000000180019DC9                 db    ? ;
.data:0000000180019DCA                 db    ? ;
.data:0000000180019DCB                 db    ? ;
.data:0000000180019DCC                 db    ? ;
.data:0000000180019DCD                 db    ? ;
.data:0000000180019DCE                 db    ? ;
.data:0000000180019DCF                 db    ? ;
.data:0000000180019DD0                 db    ? ;
.data:0000000180019DD1                 db    ? ;
.data:0000000180019DD2                 db    ? ;
.data:0000000180019DD3                 db    ? ;
.data:0000000180019DD4                 db    ? ;
.data:0000000180019DD5                 db    ? ;
.data:0000000180019DD6                 db    ? ;
.data:0000000180019DD7                 db    ? ;
.data:0000000180019DD8                 db    ? ;
.data:0000000180019DD9                 db    ? ;
.data:0000000180019DDA                 db    ? ;
.data:0000000180019DDB                 db    ? ;
.data:0000000180019DDC                 db    ? ;
.data:0000000180019DDD                 db    ? ;
.data:0000000180019DDE                 db    ? ;
.data:0000000180019DDF                 db    ? ;
.data:0000000180019DE0                 db    ? ;
.data:0000000180019DE1                 db    ? ;
.data:0000000180019DE2                 db    ? ;
.data:0000000180019DE3                 db    ? ;
.data:0000000180019DE4                 db    ? ;
.data:0000000180019DE5                 db    ? ;
.data:0000000180019DE6                 db    ? ;
.data:0000000180019DE7                 db    ? ;
.data:0000000180019DE8                 db    ? ;
.data:0000000180019DE9                 db    ? ;
.data:0000000180019DEA                 db    ? ;
.data:0000000180019DEB                 db    ? ;
.data:0000000180019DEC                 db    ? ;
.data:0000000180019DED                 db    ? ;
.data:0000000180019DEE                 db    ? ;
.data:0000000180019DEF                 db    ? ;
.data:0000000180019DF0                 db    ? ;
.data:0000000180019DF1                 db    ? ;
.data:0000000180019DF2                 db    ? ;
.data:0000000180019DF3                 db    ? ;
.data:0000000180019DF4                 db    ? ;
.data:0000000180019DF5                 db    ? ;
.data:0000000180019DF6                 db    ? ;
.data:0000000180019DF7                 db    ? ;
.data:0000000180019DF8                 db    ? ;
.data:0000000180019DF9                 db    ? ;
.data:0000000180019DFA                 db    ? ;
.data:0000000180019DFB                 db    ? ;
.data:0000000180019DFC                 db    ? ;
.data:0000000180019DFD                 db    ? ;
.data:0000000180019DFE                 db    ? ;
.data:0000000180019DFF                 db    ? ;
.data:0000000180019E00                 db    ? ;
.data:0000000180019E01                 db    ? ;
.data:0000000180019E02                 db    ? ;
.data:0000000180019E03                 db    ? ;
.data:0000000180019E04                 db    ? ;
.data:0000000180019E05                 db    ? ;
.data:0000000180019E06                 db    ? ;
.data:0000000180019E07                 db    ? ;
.data:0000000180019E08                 db    ? ;
.data:0000000180019E09                 db    ? ;
.data:0000000180019E0A                 db    ? ;
.data:0000000180019E0B                 db    ? ;
.data:0000000180019E0C                 db    ? ;
.data:0000000180019E0D                 db    ? ;
.data:0000000180019E0E                 db    ? ;
.data:0000000180019E0F                 db    ? ;
.data:0000000180019E10                 db    ? ;
.data:0000000180019E11                 db    ? ;
.data:0000000180019E12                 db    ? ;
.data:0000000180019E13                 db    ? ;
.data:0000000180019E14                 db    ? ;
.data:0000000180019E15                 db    ? ;
.data:0000000180019E16                 db    ? ;
.data:0000000180019E17                 db    ? ;
.data:0000000180019E18                 db    ? ;
.data:0000000180019E19                 db    ? ;
.data:0000000180019E1A                 db    ? ;
.data:0000000180019E1B                 db    ? ;
.data:0000000180019E1C                 db    ? ;
.data:0000000180019E1D                 db    ? ;
.data:0000000180019E1E                 db    ? ;
.data:0000000180019E1F                 db    ? ;
.data:0000000180019E20                 db    ? ;
.data:0000000180019E21                 db    ? ;
.data:0000000180019E22                 db    ? ;
.data:0000000180019E23                 db    ? ;
.data:0000000180019E24                 db    ? ;
.data:0000000180019E25                 db    ? ;
.data:0000000180019E26                 db    ? ;
.data:0000000180019E27                 db    ? ;
.data:0000000180019E28                 db    ? ;
.data:0000000180019E29                 db    ? ;
.data:0000000180019E2A                 db    ? ;
.data:0000000180019E2B                 db    ? ;
.data:0000000180019E2C                 db    ? ;
.data:0000000180019E2D                 db    ? ;
.data:0000000180019E2E                 db    ? ;
.data:0000000180019E2F                 db    ? ;
.data:0000000180019E30                 db    ? ;
.data:0000000180019E31                 db    ? ;
.data:0000000180019E32                 db    ? ;
.data:0000000180019E33                 db    ? ;
.data:0000000180019E34                 db    ? ;
.data:0000000180019E35                 db    ? ;
.data:0000000180019E36                 db    ? ;
.data:0000000180019E37                 db    ? ;
.data:0000000180019E38                 db    ? ;
.data:0000000180019E39                 db    ? ;
.data:0000000180019E3A                 db    ? ;
.data:0000000180019E3B                 db    ? ;
.data:0000000180019E3C                 db    ? ;
.data:0000000180019E3D                 db    ? ;
.data:0000000180019E3E                 db    ? ;
.data:0000000180019E3F                 db    ? ;
.data:0000000180019E40                 db    ? ;
.data:0000000180019E41                 db    ? ;
.data:0000000180019E42                 db    ? ;
.data:0000000180019E43                 db    ? ;
.data:0000000180019E44                 db    ? ;
.data:0000000180019E45                 db    ? ;
.data:0000000180019E46                 db    ? ;
.data:0000000180019E47                 db    ? ;
.data:0000000180019E48                 db    ? ;
.data:0000000180019E49                 db    ? ;
.data:0000000180019E4A                 db    ? ;
.data:0000000180019E4B                 db    ? ;
.data:0000000180019E4C                 db    ? ;
.data:0000000180019E4D                 db    ? ;
.data:0000000180019E4E                 db    ? ;
.data:0000000180019E4F                 db    ? ;
.data:0000000180019E50                 db    ? ;
.data:0000000180019E51                 db    ? ;
.data:0000000180019E52                 db    ? ;
.data:0000000180019E53                 db    ? ;
.data:0000000180019E54                 db    ? ;
.data:0000000180019E55                 db    ? ;
.data:0000000180019E56                 db    ? ;
.data:0000000180019E57                 db    ? ;
.data:0000000180019E58                 db    ? ;
.data:0000000180019E59                 db    ? ;
.data:0000000180019E5A                 db    ? ;
.data:0000000180019E5B                 db    ? ;
.data:0000000180019E5C                 db    ? ;
.data:0000000180019E5D                 db    ? ;
.data:0000000180019E5E                 db    ? ;
.data:0000000180019E5F                 db    ? ;
.data:0000000180019E60                 db    ? ;
.data:0000000180019E61                 db    ? ;
.data:0000000180019E62                 db    ? ;
.data:0000000180019E63                 db    ? ;
.data:0000000180019E64                 db    ? ;
.data:0000000180019E65                 db    ? ;
.data:0000000180019E66                 db    ? ;
.data:0000000180019E67                 db    ? ;
.data:0000000180019E68                 db    ? ;
.data:0000000180019E69                 db    ? ;
.data:0000000180019E6A                 db    ? ;
.data:0000000180019E6B                 db    ? ;
.data:0000000180019E6C                 db    ? ;
.data:0000000180019E6D                 db    ? ;
.data:0000000180019E6E                 db    ? ;
.data:0000000180019E6F                 db    ? ;
.data:0000000180019E70                 db    ? ;
.data:0000000180019E71                 db    ? ;
.data:0000000180019E72                 db    ? ;
.data:0000000180019E73                 db    ? ;
.data:0000000180019E74                 db    ? ;
.data:0000000180019E75                 db    ? ;
.data:0000000180019E76                 db    ? ;
.data:0000000180019E77                 db    ? ;
.data:0000000180019E78                 db    ? ;
.data:0000000180019E79                 db    ? ;
.data:0000000180019E7A                 db    ? ;
.data:0000000180019E7B                 db    ? ;
.data:0000000180019E7C                 db    ? ;
.data:0000000180019E7D                 db    ? ;
.data:0000000180019E7E                 db    ? ;
.data:0000000180019E7F                 db    ? ;
.data:0000000180019E80                 db    ? ;
.data:0000000180019E81                 db    ? ;
.data:0000000180019E82                 db    ? ;
.data:0000000180019E83                 db    ? ;
.data:0000000180019E84                 db    ? ;
.data:0000000180019E85                 db    ? ;
.data:0000000180019E86                 db    ? ;
.data:0000000180019E87                 db    ? ;
.data:0000000180019E88                 db    ? ;
.data:0000000180019E89                 db    ? ;
.data:0000000180019E8A                 db    ? ;
.data:0000000180019E8B                 db    ? ;
.data:0000000180019E8C                 db    ? ;
.data:0000000180019E8D                 db    ? ;
.data:0000000180019E8E                 db    ? ;
.data:0000000180019E8F                 db    ? ;
.data:0000000180019E90                 db    ? ;
.data:0000000180019E91                 db    ? ;
.data:0000000180019E92                 db    ? ;
.data:0000000180019E93                 db    ? ;
.data:0000000180019E94                 db    ? ;
.data:0000000180019E95                 db    ? ;
.data:0000000180019E96                 db    ? ;
.data:0000000180019E97                 db    ? ;
.data:0000000180019E98                 db    ? ;
.data:0000000180019E99                 db    ? ;
.data:0000000180019E9A                 db    ? ;
.data:0000000180019E9B                 db    ? ;
.data:0000000180019E9C                 db    ? ;
.data:0000000180019E9D                 db    ? ;
.data:0000000180019E9E                 db    ? ;
.data:0000000180019E9F                 db    ? ;
.data:0000000180019EA0                 db    ? ;
.data:0000000180019EA1                 db    ? ;
.data:0000000180019EA2                 db    ? ;
.data:0000000180019EA3                 db    ? ;
.data:0000000180019EA4                 db    ? ;
.data:0000000180019EA5                 db    ? ;
.data:0000000180019EA6                 db    ? ;
.data:0000000180019EA7                 db    ? ;
.data:0000000180019EA8                 db    ? ;
.data:0000000180019EA9                 db    ? ;
.data:0000000180019EAA                 db    ? ;
.data:0000000180019EAB                 db    ? ;
.data:0000000180019EAC                 db    ? ;
.data:0000000180019EAD                 db    ? ;
.data:0000000180019EAE                 db    ? ;
.data:0000000180019EAF                 db    ? ;
.data:0000000180019EB0                 db    ? ;
.data:0000000180019EB1                 db    ? ;
.data:0000000180019EB2                 db    ? ;
.data:0000000180019EB3                 db    ? ;
.data:0000000180019EB4                 db    ? ;
.data:0000000180019EB5                 db    ? ;
.data:0000000180019EB6                 db    ? ;
.data:0000000180019EB7                 db    ? ;
.data:0000000180019EB8                 db    ? ;
.data:0000000180019EB9                 db    ? ;
.data:0000000180019EBA                 db    ? ;
.data:0000000180019EBB                 db    ? ;
.data:0000000180019EBC                 db    ? ;
.data:0000000180019EBD                 db    ? ;
.data:0000000180019EBE                 db    ? ;
.data:0000000180019EBF                 db    ? ;
.data:0000000180019EC0                 db    ? ;
.data:0000000180019EC1                 db    ? ;
.data:0000000180019EC2                 db    ? ;
.data:0000000180019EC3                 db    ? ;
.data:0000000180019EC4                 db    ? ;
.data:0000000180019EC5                 db    ? ;
.data:0000000180019EC6                 db    ? ;
.data:0000000180019EC7                 db    ? ;
.data:0000000180019EC8                 db    ? ;
.data:0000000180019EC9                 db    ? ;
.data:0000000180019ECA                 db    ? ;
.data:0000000180019ECB                 db    ? ;
.data:0000000180019ECC                 db    ? ;
.data:0000000180019ECD                 db    ? ;
.data:0000000180019ECE                 db    ? ;
.data:0000000180019ECF                 db    ? ;
.data:0000000180019ED0                 db    ? ;
.data:0000000180019ED1                 db    ? ;
.data:0000000180019ED2                 db    ? ;
.data:0000000180019ED3                 db    ? ;
.data:0000000180019ED4                 db    ? ;
.data:0000000180019ED5                 db    ? ;
.data:0000000180019ED6                 db    ? ;
.data:0000000180019ED7                 db    ? ;
.data:0000000180019ED8                 db    ? ;
.data:0000000180019ED9                 db    ? ;
.data:0000000180019EDA                 db    ? ;
.data:0000000180019EDB                 db    ? ;
.data:0000000180019EDC                 db    ? ;
.data:0000000180019EDD                 db    ? ;
.data:0000000180019EDE                 db    ? ;
.data:0000000180019EDF                 db    ? ;
.data:0000000180019EE0                 db    ? ;
.data:0000000180019EE1                 db    ? ;
.data:0000000180019EE2                 db    ? ;
.data:0000000180019EE3                 db    ? ;
.data:0000000180019EE4                 db    ? ;
.data:0000000180019EE5                 db    ? ;
.data:0000000180019EE6                 db    ? ;
.data:0000000180019EE7                 db    ? ;
.data:0000000180019EE8                 db    ? ;
.data:0000000180019EE9                 db    ? ;
.data:0000000180019EEA                 db    ? ;
.data:0000000180019EEB                 db    ? ;
.data:0000000180019EEC                 db    ? ;
.data:0000000180019EED                 db    ? ;
.data:0000000180019EEE                 db    ? ;
.data:0000000180019EEF                 db    ? ;
.data:0000000180019EF0                 db    ? ;
.data:0000000180019EF1                 db    ? ;
.data:0000000180019EF2                 db    ? ;
.data:0000000180019EF3                 db    ? ;
.data:0000000180019EF4                 db    ? ;
.data:0000000180019EF5                 db    ? ;
.data:0000000180019EF6                 db    ? ;
.data:0000000180019EF7                 db    ? ;
.data:0000000180019EF8                 db    ? ;
.data:0000000180019EF9                 db    ? ;
.data:0000000180019EFA                 db    ? ;
.data:0000000180019EFB                 db    ? ;
.data:0000000180019EFC                 db    ? ;
.data:0000000180019EFD                 db    ? ;
.data:0000000180019EFE                 db    ? ;
.data:0000000180019EFF                 db    ? ;
.data:0000000180019F00                 db    ? ;
.data:0000000180019F01                 db    ? ;
.data:0000000180019F02                 db    ? ;
.data:0000000180019F03                 db    ? ;
.data:0000000180019F04                 db    ? ;
.data:0000000180019F05                 db    ? ;
.data:0000000180019F06                 db    ? ;
.data:0000000180019F07                 db    ? ;
.data:0000000180019F08                 db    ? ;
.data:0000000180019F09                 db    ? ;
.data:0000000180019F0A                 db    ? ;
.data:0000000180019F0B                 db    ? ;
.data:0000000180019F0C                 db    ? ;
.data:0000000180019F0D                 db    ? ;
.data:0000000180019F0E                 db    ? ;
.data:0000000180019F0F                 db    ? ;
.data:0000000180019F10                 db    ? ;
.data:0000000180019F11                 db    ? ;
.data:0000000180019F12                 db    ? ;
.data:0000000180019F13                 db    ? ;
.data:0000000180019F14                 db    ? ;
.data:0000000180019F15                 db    ? ;
.data:0000000180019F16                 db    ? ;
.data:0000000180019F17                 db    ? ;
.data:0000000180019F18                 db    ? ;
.data:0000000180019F19                 db    ? ;
.data:0000000180019F1A                 db    ? ;
.data:0000000180019F1B                 db    ? ;
.data:0000000180019F1C                 db    ? ;
.data:0000000180019F1D                 db    ? ;
.data:0000000180019F1E                 db    ? ;
.data:0000000180019F1F                 db    ? ;
.data:0000000180019F20                 db    ? ;
.data:0000000180019F21                 db    ? ;
.data:0000000180019F22                 db    ? ;
.data:0000000180019F23                 db    ? ;
.data:0000000180019F24                 db    ? ;
.data:0000000180019F25                 db    ? ;
.data:0000000180019F26                 db    ? ;
.data:0000000180019F27                 db    ? ;
.data:0000000180019F28                 db    ? ;
.data:0000000180019F29                 db    ? ;
.data:0000000180019F2A                 db    ? ;
.data:0000000180019F2B                 db    ? ;
.data:0000000180019F2C                 db    ? ;
.data:0000000180019F2D                 db    ? ;
.data:0000000180019F2E                 db    ? ;
.data:0000000180019F2F                 db    ? ;
.data:0000000180019F30                 db    ? ;
.data:0000000180019F31                 db    ? ;
.data:0000000180019F32                 db    ? ;
.data:0000000180019F33                 db    ? ;
.data:0000000180019F34                 db    ? ;
.data:0000000180019F35                 db    ? ;
.data:0000000180019F36                 db    ? ;
.data:0000000180019F37                 db    ? ;
.data:0000000180019F38                 db    ? ;
.data:0000000180019F39                 db    ? ;
.data:0000000180019F3A                 db    ? ;
.data:0000000180019F3B                 db    ? ;
.data:0000000180019F3C                 db    ? ;
.data:0000000180019F3D                 db    ? ;
.data:0000000180019F3E                 db    ? ;
.data:0000000180019F3F                 db    ? ;
.data:0000000180019F40                 db    ? ;
.data:0000000180019F41                 db    ? ;
.data:0000000180019F42                 db    ? ;
.data:0000000180019F43                 db    ? ;
.data:0000000180019F44                 db    ? ;
.data:0000000180019F45                 db    ? ;
.data:0000000180019F46                 db    ? ;
.data:0000000180019F47                 db    ? ;
.data:0000000180019F48                 db    ? ;
.data:0000000180019F49                 db    ? ;
.data:0000000180019F4A                 db    ? ;
.data:0000000180019F4B                 db    ? ;
.data:0000000180019F4C                 db    ? ;
.data:0000000180019F4D                 db    ? ;
.data:0000000180019F4E                 db    ? ;
.data:0000000180019F4F                 db    ? ;
.data:0000000180019F50                 db    ? ;
.data:0000000180019F51                 db    ? ;
.data:0000000180019F52                 db    ? ;
.data:0000000180019F53                 db    ? ;
.data:0000000180019F54                 db    ? ;
.data:0000000180019F55                 db    ? ;
.data:0000000180019F56                 db    ? ;
.data:0000000180019F57                 db    ? ;
.data:0000000180019F58                 db    ? ;
.data:0000000180019F59                 db    ? ;
.data:0000000180019F5A                 db    ? ;
.data:0000000180019F5B                 db    ? ;
.data:0000000180019F5C                 db    ? ;
.data:0000000180019F5D                 db    ? ;
.data:0000000180019F5E                 db    ? ;
.data:0000000180019F5F                 db    ? ;
.data:0000000180019F60                 db    ? ;
.data:0000000180019F61                 db    ? ;
.data:0000000180019F62                 db    ? ;
.data:0000000180019F63                 db    ? ;
.data:0000000180019F64                 db    ? ;
.data:0000000180019F65                 db    ? ;
.data:0000000180019F66                 db    ? ;
.data:0000000180019F67                 db    ? ;
.data:0000000180019F68                 db    ? ;
.data:0000000180019F69                 db    ? ;
.data:0000000180019F6A                 db    ? ;
.data:0000000180019F6B                 db    ? ;
.data:0000000180019F6C                 db    ? ;
.data:0000000180019F6D                 db    ? ;
.data:0000000180019F6E                 db    ? ;
.data:0000000180019F6F                 db    ? ;
.data:0000000180019F70                 db    ? ;
.data:0000000180019F71                 db    ? ;
.data:0000000180019F72                 db    ? ;
.data:0000000180019F73                 db    ? ;
.data:0000000180019F74                 db    ? ;
.data:0000000180019F75                 db    ? ;
.data:0000000180019F76                 db    ? ;
.data:0000000180019F77                 db    ? ;
.data:0000000180019F78                 db    ? ;
.data:0000000180019F79                 db    ? ;
.data:0000000180019F7A                 db    ? ;
.data:0000000180019F7B                 db    ? ;
.data:0000000180019F7C                 db    ? ;
.data:0000000180019F7D                 db    ? ;
.data:0000000180019F7E                 db    ? ;
.data:0000000180019F7F                 db    ? ;
.data:0000000180019F80                 db    ? ;
.data:0000000180019F81                 db    ? ;
.data:0000000180019F82                 db    ? ;
.data:0000000180019F83                 db    ? ;
.data:0000000180019F84                 db    ? ;
.data:0000000180019F85                 db    ? ;
.data:0000000180019F86                 db    ? ;
.data:0000000180019F87                 db    ? ;
.data:0000000180019F88                 db    ? ;
.data:0000000180019F89                 db    ? ;
.data:0000000180019F8A                 db    ? ;
.data:0000000180019F8B                 db    ? ;
.data:0000000180019F8C                 db    ? ;
.data:0000000180019F8D                 db    ? ;
.data:0000000180019F8E                 db    ? ;
.data:0000000180019F8F                 db    ? ;
.data:0000000180019F90                 db    ? ;
.data:0000000180019F91                 db    ? ;
.data:0000000180019F92                 db    ? ;
.data:0000000180019F93                 db    ? ;
.data:0000000180019F94                 db    ? ;
.data:0000000180019F95                 db    ? ;
.data:0000000180019F96                 db    ? ;
.data:0000000180019F97                 db    ? ;
.data:0000000180019F98                 db    ? ;
.data:0000000180019F99                 db    ? ;
.data:0000000180019F9A                 db    ? ;
.data:0000000180019F9B                 db    ? ;
.data:0000000180019F9C                 db    ? ;
.data:0000000180019F9D                 db    ? ;
.data:0000000180019F9E                 db    ? ;
.data:0000000180019F9F                 db    ? ;
.data:0000000180019FA0                 db    ? ;
.data:0000000180019FA1                 db    ? ;
.data:0000000180019FA2                 db    ? ;
.data:0000000180019FA3                 db    ? ;
.data:0000000180019FA4                 db    ? ;
.data:0000000180019FA5                 db    ? ;
.data:0000000180019FA6                 db    ? ;
.data:0000000180019FA7                 db    ? ;
.data:0000000180019FA8                 db    ? ;
.data:0000000180019FA9                 db    ? ;
.data:0000000180019FAA                 db    ? ;
.data:0000000180019FAB                 db    ? ;
.data:0000000180019FAC                 db    ? ;
.data:0000000180019FAD                 db    ? ;
.data:0000000180019FAE                 db    ? ;
.data:0000000180019FAF                 db    ? ;
.data:0000000180019FB0                 db    ? ;
.data:0000000180019FB1                 db    ? ;
.data:0000000180019FB2                 db    ? ;
.data:0000000180019FB3                 db    ? ;
.data:0000000180019FB4                 db    ? ;
.data:0000000180019FB5                 db    ? ;
.data:0000000180019FB6                 db    ? ;
.data:0000000180019FB7                 db    ? ;
.data:0000000180019FB8                 db    ? ;
.data:0000000180019FB9                 db    ? ;
.data:0000000180019FBA                 db    ? ;
.data:0000000180019FBB                 db    ? ;
.data:0000000180019FBC                 db    ? ;
.data:0000000180019FBD                 db    ? ;
.data:0000000180019FBE                 db    ? ;
.data:0000000180019FBF                 db    ? ;
.data:0000000180019FC0                 db    ? ;
.data:0000000180019FC1                 db    ? ;
.data:0000000180019FC2                 db    ? ;
.data:0000000180019FC3                 db    ? ;
.data:0000000180019FC4                 db    ? ;
.data:0000000180019FC5                 db    ? ;
.data:0000000180019FC6                 db    ? ;
.data:0000000180019FC7                 db    ? ;
.data:0000000180019FC8                 db    ? ;
.data:0000000180019FC9                 db    ? ;
.data:0000000180019FCA                 db    ? ;
.data:0000000180019FCB                 db    ? ;
.data:0000000180019FCC                 db    ? ;
.data:0000000180019FCD                 db    ? ;
.data:0000000180019FCE                 db    ? ;
.data:0000000180019FCF                 db    ? ;
.data:0000000180019FD0                 db    ? ;
.data:0000000180019FD1                 db    ? ;
.data:0000000180019FD2                 db    ? ;
.data:0000000180019FD3                 db    ? ;
.data:0000000180019FD4                 db    ? ;
.data:0000000180019FD5                 db    ? ;
.data:0000000180019FD6                 db    ? ;
.data:0000000180019FD7                 db    ? ;
.data:0000000180019FD8                 db    ? ;
.data:0000000180019FD9                 db    ? ;
.data:0000000180019FDA                 db    ? ;
.data:0000000180019FDB                 db    ? ;
.data:0000000180019FDC                 db    ? ;
.data:0000000180019FDD                 db    ? ;
.data:0000000180019FDE                 db    ? ;
.data:0000000180019FDF                 db    ? ;
.data:0000000180019FE0                 db    ? ;
.data:0000000180019FE1                 db    ? ;
.data:0000000180019FE2                 db    ? ;
.data:0000000180019FE3                 db    ? ;
.data:0000000180019FE4                 db    ? ;
.data:0000000180019FE5                 db    ? ;
.data:0000000180019FE6                 db    ? ;
.data:0000000180019FE7                 db    ? ;
.data:0000000180019FE8                 db    ? ;
.data:0000000180019FE9                 db    ? ;
.data:0000000180019FEA                 db    ? ;
.data:0000000180019FEB                 db    ? ;
.data:0000000180019FEC                 db    ? ;
.data:0000000180019FED                 db    ? ;
.data:0000000180019FEE                 db    ? ;
.data:0000000180019FEF                 db    ? ;
.data:0000000180019FF0                 db    ? ;
.data:0000000180019FF1                 db    ? ;
.data:0000000180019FF2                 db    ? ;
.data:0000000180019FF3                 db    ? ;
.data:0000000180019FF4                 db    ? ;
.data:0000000180019FF5                 db    ? ;
.data:0000000180019FF6                 db    ? ;
.data:0000000180019FF7                 db    ? ;
.data:0000000180019FF8                 db    ? ;
.data:0000000180019FF9                 db    ? ;
.data:0000000180019FFA                 db    ? ;
.data:0000000180019FFB                 db    ? ;
.data:0000000180019FFC                 db    ? ;
.data:0000000180019FFD                 db    ? ;
.data:0000000180019FFE                 db    ? ;
.data:0000000180019FFF                 db    ? ;
.data:000000018001A000                 db    ? ;
.data:000000018001A001                 db    ? ;
.data:000000018001A002                 db    ? ;
.data:000000018001A003                 db    ? ;
.data:000000018001A004                 db    ? ;
.data:000000018001A005                 db    ? ;
.data:000000018001A006                 db    ? ;
.data:000000018001A007                 db    ? ;
.data:000000018001A008                 db    ? ;
.data:000000018001A009                 db    ? ;
.data:000000018001A00A                 db    ? ;
.data:000000018001A00B                 db    ? ;
.data:000000018001A00C                 db    ? ;
.data:000000018001A00D                 db    ? ;
.data:000000018001A00E                 db    ? ;
.data:000000018001A00F                 db    ? ;
.data:000000018001A010                 db    ? ;
.data:000000018001A011                 db    ? ;
.data:000000018001A012                 db    ? ;
.data:000000018001A013                 db    ? ;
.data:000000018001A014                 db    ? ;
.data:000000018001A015                 db    ? ;
.data:000000018001A016                 db    ? ;
.data:000000018001A017                 db    ? ;
.data:000000018001A018                 db    ? ;
.data:000000018001A019                 db    ? ;
.data:000000018001A01A                 db    ? ;
.data:000000018001A01B                 db    ? ;
.data:000000018001A01C                 db    ? ;
.data:000000018001A01D                 db    ? ;
.data:000000018001A01E                 db    ? ;
.data:000000018001A01F                 db    ? ;
.data:000000018001A020                 db    ? ;
.data:000000018001A021                 db    ? ;
.data:000000018001A022                 db    ? ;
.data:000000018001A023                 db    ? ;
.data:000000018001A024                 db    ? ;
.data:000000018001A025                 db    ? ;
.data:000000018001A026                 db    ? ;
.data:000000018001A027                 db    ? ;
.data:000000018001A028                 db    ? ;
.data:000000018001A029                 db    ? ;
.data:000000018001A02A                 db    ? ;
.data:000000018001A02B                 db    ? ;
.data:000000018001A02C                 db    ? ;
.data:000000018001A02D                 db    ? ;
.data:000000018001A02E                 db    ? ;
.data:000000018001A02F                 db    ? ;
.data:000000018001A030                 db    ? ;
.data:000000018001A031                 db    ? ;
.data:000000018001A032                 db    ? ;
.data:000000018001A033                 db    ? ;
.data:000000018001A034                 db    ? ;
.data:000000018001A035                 db    ? ;
.data:000000018001A036                 db    ? ;
.data:000000018001A037                 db    ? ;
.data:000000018001A038                 db    ? ;
.data:000000018001A039                 db    ? ;
.data:000000018001A03A                 db    ? ;
.data:000000018001A03B                 db    ? ;
.data:000000018001A03C                 db    ? ;
.data:000000018001A03D                 db    ? ;
.data:000000018001A03E                 db    ? ;
.data:000000018001A03F                 db    ? ;
.data:000000018001A040                 db    ? ;
.data:000000018001A041                 db    ? ;
.data:000000018001A042                 db    ? ;
.data:000000018001A043                 db    ? ;
.data:000000018001A044                 db    ? ;
.data:000000018001A045                 db    ? ;
.data:000000018001A046                 db    ? ;
.data:000000018001A047                 db    ? ;
.data:000000018001A048                 db    ? ;
.data:000000018001A049                 db    ? ;
.data:000000018001A04A                 db    ? ;
.data:000000018001A04B                 db    ? ;
.data:000000018001A04C                 db    ? ;
.data:000000018001A04D                 db    ? ;
.data:000000018001A04E                 db    ? ;
.data:000000018001A04F                 db    ? ;
.data:000000018001A050                 db    ? ;
.data:000000018001A051                 db    ? ;
.data:000000018001A052                 db    ? ;
.data:000000018001A053                 db    ? ;
.data:000000018001A054                 db    ? ;
.data:000000018001A055                 db    ? ;
.data:000000018001A056                 db    ? ;
.data:000000018001A057                 db    ? ;
.data:000000018001A058                 db    ? ;
.data:000000018001A059                 db    ? ;
.data:000000018001A05A                 db    ? ;
.data:000000018001A05B                 db    ? ;
.data:000000018001A05C                 db    ? ;
.data:000000018001A05D                 db    ? ;
.data:000000018001A05E                 db    ? ;
.data:000000018001A05F                 db    ? ;
.data:000000018001A060                 db    ? ;
.data:000000018001A061                 db    ? ;
.data:000000018001A062                 db    ? ;
.data:000000018001A063                 db    ? ;
.data:000000018001A064                 db    ? ;
.data:000000018001A065                 db    ? ;
.data:000000018001A066                 db    ? ;
.data:000000018001A067                 db    ? ;
.data:000000018001A068                 db    ? ;
.data:000000018001A069                 db    ? ;
.data:000000018001A06A                 db    ? ;
.data:000000018001A06B                 db    ? ;
.data:000000018001A06C                 db    ? ;
.data:000000018001A06D                 db    ? ;
.data:000000018001A06E                 db    ? ;
.data:000000018001A06F                 db    ? ;
.data:000000018001A070                 db    ? ;
.data:000000018001A071                 db    ? ;
.data:000000018001A072                 db    ? ;
.data:000000018001A073                 db    ? ;
.data:000000018001A074                 db    ? ;
.data:000000018001A075                 db    ? ;
.data:000000018001A076                 db    ? ;
.data:000000018001A077                 db    ? ;
.data:000000018001A078                 db    ? ;
.data:000000018001A079                 db    ? ;
.data:000000018001A07A                 db    ? ;
.data:000000018001A07B                 db    ? ;
.data:000000018001A07C                 db    ? ;
.data:000000018001A07D                 db    ? ;
.data:000000018001A07E                 db    ? ;
.data:000000018001A07F                 db    ? ;
.data:000000018001A080                 db    ? ;
.data:000000018001A081                 db    ? ;
.data:000000018001A082                 db    ? ;
.data:000000018001A083                 db    ? ;
.data:000000018001A084                 db    ? ;
.data:000000018001A085                 db    ? ;
.data:000000018001A086                 db    ? ;
.data:000000018001A087                 db    ? ;
.data:000000018001A088                 db    ? ;
.data:000000018001A089                 db    ? ;
.data:000000018001A08A                 db    ? ;
.data:000000018001A08B                 db    ? ;
.data:000000018001A08C                 db    ? ;
.data:000000018001A08D                 db    ? ;
.data:000000018001A08E                 db    ? ;
.data:000000018001A08F                 db    ? ;
.data:000000018001A090                 db    ? ;
.data:000000018001A091                 db    ? ;
.data:000000018001A092                 db    ? ;
.data:000000018001A093                 db    ? ;
.data:000000018001A094                 db    ? ;
.data:000000018001A095                 db    ? ;
.data:000000018001A096                 db    ? ;
.data:000000018001A097                 db    ? ;
.data:000000018001A098                 db    ? ;
.data:000000018001A099                 db    ? ;
.data:000000018001A09A                 db    ? ;
.data:000000018001A09B                 db    ? ;
.data:000000018001A09C                 db    ? ;
.data:000000018001A09D                 db    ? ;
.data:000000018001A09E                 db    ? ;
.data:000000018001A09F                 db    ? ;
.data:000000018001A0A0                 db    ? ;
.data:000000018001A0A1                 db    ? ;
.data:000000018001A0A2                 db    ? ;
.data:000000018001A0A3                 db    ? ;
.data:000000018001A0A4                 db    ? ;
.data:000000018001A0A5                 db    ? ;
.data:000000018001A0A6                 db    ? ;
.data:000000018001A0A7                 db    ? ;
.data:000000018001A0A8                 db    ? ;
.data:000000018001A0A9                 db    ? ;
.data:000000018001A0AA                 db    ? ;
.data:000000018001A0AB                 db    ? ;
.data:000000018001A0AC                 db    ? ;
.data:000000018001A0AD                 db    ? ;
.data:000000018001A0AE                 db    ? ;
.data:000000018001A0AF                 db    ? ;
.data:000000018001A0B0                 db    ? ;
.data:000000018001A0B1                 db    ? ;
.data:000000018001A0B2                 db    ? ;
.data:000000018001A0B3                 db    ? ;
.data:000000018001A0B4                 db    ? ;
.data:000000018001A0B5                 db    ? ;
.data:000000018001A0B6                 db    ? ;
.data:000000018001A0B7                 db    ? ;
.data:000000018001A0B8                 db    ? ;
.data:000000018001A0B9                 db    ? ;
.data:000000018001A0BA                 db    ? ;
.data:000000018001A0BB                 db    ? ;
.data:000000018001A0BC                 db    ? ;
.data:000000018001A0BD                 db    ? ;
.data:000000018001A0BE                 db    ? ;
.data:000000018001A0BF                 db    ? ;
.data:000000018001A0C0                 db    ? ;
.data:000000018001A0C1                 db    ? ;
.data:000000018001A0C2                 db    ? ;
.data:000000018001A0C3                 db    ? ;
.data:000000018001A0C4                 db    ? ;
.data:000000018001A0C5                 db    ? ;
.data:000000018001A0C6                 db    ? ;
.data:000000018001A0C7                 db    ? ;
.data:000000018001A0C8                 db    ? ;
.data:000000018001A0C9                 db    ? ;
.data:000000018001A0CA                 db    ? ;
.data:000000018001A0CB                 db    ? ;
.data:000000018001A0CC                 db    ? ;
.data:000000018001A0CD                 db    ? ;
.data:000000018001A0CE                 db    ? ;
.data:000000018001A0CF                 db    ? ;
.data:000000018001A0D0                 db    ? ;
.data:000000018001A0D1                 db    ? ;
.data:000000018001A0D2                 db    ? ;
.data:000000018001A0D3                 db    ? ;
.data:000000018001A0D4                 db    ? ;
.data:000000018001A0D5                 db    ? ;
.data:000000018001A0D6                 db    ? ;
.data:000000018001A0D7                 db    ? ;
.data:000000018001A0D8                 db    ? ;
.data:000000018001A0D9                 db    ? ;
.data:000000018001A0DA                 db    ? ;
.data:000000018001A0DB                 db    ? ;
.data:000000018001A0DC                 db    ? ;
.data:000000018001A0DD                 db    ? ;
.data:000000018001A0DE                 db    ? ;
.data:000000018001A0DF                 db    ? ;
.data:000000018001A0E0                 db    ? ;
.data:000000018001A0E1                 db    ? ;
.data:000000018001A0E2                 db    ? ;
.data:000000018001A0E3                 db    ? ;
.data:000000018001A0E4                 db    ? ;
.data:000000018001A0E5                 db    ? ;
.data:000000018001A0E6                 db    ? ;
.data:000000018001A0E7                 db    ? ;
.data:000000018001A0E8                 db    ? ;
.data:000000018001A0E9                 db    ? ;
.data:000000018001A0EA                 db    ? ;
.data:000000018001A0EB                 db    ? ;
.data:000000018001A0EC                 db    ? ;
.data:000000018001A0ED                 db    ? ;
.data:000000018001A0EE                 db    ? ;
.data:000000018001A0EF                 db    ? ;
.data:000000018001A0F0                 db    ? ;
.data:000000018001A0F1                 db    ? ;
.data:000000018001A0F2                 db    ? ;
.data:000000018001A0F3                 db    ? ;
.data:000000018001A0F4                 db    ? ;
.data:000000018001A0F5                 db    ? ;
.data:000000018001A0F6                 db    ? ;
.data:000000018001A0F7                 db    ? ;
.data:000000018001A0F8                 db    ? ;
.data:000000018001A0F9                 db    ? ;
.data:000000018001A0FA                 db    ? ;
.data:000000018001A0FB                 db    ? ;
.data:000000018001A0FC                 db    ? ;
.data:000000018001A0FD                 db    ? ;
.data:000000018001A0FE                 db    ? ;
.data:000000018001A0FF                 db    ? ;
.data:000000018001A100                 db    ? ;
.data:000000018001A101                 db    ? ;
.data:000000018001A102                 db    ? ;
.data:000000018001A103                 db    ? ;
.data:000000018001A104                 db    ? ;
.data:000000018001A105                 db    ? ;
.data:000000018001A106                 db    ? ;
.data:000000018001A107                 db    ? ;
.data:000000018001A108                 db    ? ;
.data:000000018001A109                 db    ? ;
.data:000000018001A10A                 db    ? ;
.data:000000018001A10B                 db    ? ;
.data:000000018001A10C                 db    ? ;
.data:000000018001A10D                 db    ? ;
.data:000000018001A10E                 db    ? ;
.data:000000018001A10F                 db    ? ;
.data:000000018001A110                 db    ? ;
.data:000000018001A111                 db    ? ;
.data:000000018001A112                 db    ? ;
.data:000000018001A113                 db    ? ;
.data:000000018001A114                 db    ? ;
.data:000000018001A115                 db    ? ;
.data:000000018001A116                 db    ? ;
.data:000000018001A117                 db    ? ;
.data:000000018001A118                 db    ? ;
.data:000000018001A119                 db    ? ;
.data:000000018001A11A                 db    ? ;
.data:000000018001A11B                 db    ? ;
.data:000000018001A11C                 db    ? ;
.data:000000018001A11D                 db    ? ;
.data:000000018001A11E                 db    ? ;
.data:000000018001A11F                 db    ? ;
.data:000000018001A120                 db    ? ;
.data:000000018001A121                 db    ? ;
.data:000000018001A122                 db    ? ;
.data:000000018001A123                 db    ? ;
.data:000000018001A124                 db    ? ;
.data:000000018001A125                 db    ? ;
.data:000000018001A126                 db    ? ;
.data:000000018001A127                 db    ? ;
.data:000000018001A128                 db    ? ;
.data:000000018001A129                 db    ? ;
.data:000000018001A12A                 db    ? ;
.data:000000018001A12B                 db    ? ;
.data:000000018001A12C                 db    ? ;
.data:000000018001A12D                 db    ? ;
.data:000000018001A12E                 db    ? ;
.data:000000018001A12F                 db    ? ;
.data:000000018001A130                 db    ? ;
.data:000000018001A131                 db    ? ;
.data:000000018001A132                 db    ? ;
.data:000000018001A133                 db    ? ;
.data:000000018001A134                 db    ? ;
.data:000000018001A135                 db    ? ;
.data:000000018001A136                 db    ? ;
.data:000000018001A137                 db    ? ;
.data:000000018001A138                 db    ? ;
.data:000000018001A139                 db    ? ;
.data:000000018001A13A                 db    ? ;
.data:000000018001A13B                 db    ? ;
.data:000000018001A13C                 db    ? ;
.data:000000018001A13D                 db    ? ;
.data:000000018001A13E                 db    ? ;
.data:000000018001A13F                 db    ? ;
.data:000000018001A140                 db    ? ;
.data:000000018001A141                 db    ? ;
.data:000000018001A142                 db    ? ;
.data:000000018001A143                 db    ? ;
.data:000000018001A144                 db    ? ;
.data:000000018001A145                 db    ? ;
.data:000000018001A146                 db    ? ;
.data:000000018001A147                 db    ? ;
.data:000000018001A148                 db    ? ;
.data:000000018001A149                 db    ? ;
.data:000000018001A14A                 db    ? ;
.data:000000018001A14B                 db    ? ;
.data:000000018001A14C                 db    ? ;
.data:000000018001A14D                 db    ? ;
.data:000000018001A14E                 db    ? ;
.data:000000018001A14F                 db    ? ;
.data:000000018001A150                 db    ? ;
.data:000000018001A151                 db    ? ;
.data:000000018001A152                 db    ? ;
.data:000000018001A153                 db    ? ;
.data:000000018001A154                 db    ? ;
.data:000000018001A155                 db    ? ;
.data:000000018001A156                 db    ? ;
.data:000000018001A157                 db    ? ;
.data:000000018001A158                 db    ? ;
.data:000000018001A159                 db    ? ;
.data:000000018001A15A                 db    ? ;
.data:000000018001A15B                 db    ? ;
.data:000000018001A15C                 db    ? ;
.data:000000018001A15D                 db    ? ;
.data:000000018001A15E                 db    ? ;
.data:000000018001A15F                 db    ? ;
.data:000000018001A160                 db    ? ;
.data:000000018001A161                 db    ? ;
.data:000000018001A162                 db    ? ;
.data:000000018001A163                 db    ? ;
.data:000000018001A164                 db    ? ;
.data:000000018001A165                 db    ? ;
.data:000000018001A166                 db    ? ;
.data:000000018001A167                 db    ? ;
.data:000000018001A168                 db    ? ;
.data:000000018001A169                 db    ? ;
.data:000000018001A16A                 db    ? ;
.data:000000018001A16B                 db    ? ;
.data:000000018001A16C                 db    ? ;
.data:000000018001A16D                 db    ? ;
.data:000000018001A16E                 db    ? ;
.data:000000018001A16F                 db    ? ;
.data:000000018001A170                 db    ? ;
.data:000000018001A171                 db    ? ;
.data:000000018001A172                 db    ? ;
.data:000000018001A173                 db    ? ;
.data:000000018001A174                 db    ? ;
.data:000000018001A175                 db    ? ;
.data:000000018001A176                 db    ? ;
.data:000000018001A177                 db    ? ;
.data:000000018001A178                 db    ? ;
.data:000000018001A179                 db    ? ;
.data:000000018001A17A                 db    ? ;
.data:000000018001A17B                 db    ? ;
.data:000000018001A17C                 db    ? ;
.data:000000018001A17D                 db    ? ;
.data:000000018001A17E                 db    ? ;
.data:000000018001A17F                 db    ? ;
.data:000000018001A180                 db    ? ;
.data:000000018001A181                 db    ? ;
.data:000000018001A182                 db    ? ;
.data:000000018001A183                 db    ? ;
.data:000000018001A184                 db    ? ;
.data:000000018001A185                 db    ? ;
.data:000000018001A186                 db    ? ;
.data:000000018001A187                 db    ? ;
.data:000000018001A188                 db    ? ;
.data:000000018001A189                 db    ? ;
.data:000000018001A18A                 db    ? ;
.data:000000018001A18B                 db    ? ;
.data:000000018001A18C                 db    ? ;
.data:000000018001A18D                 db    ? ;
.data:000000018001A18E                 db    ? ;
.data:000000018001A18F                 db    ? ;
.data:000000018001A190                 db    ? ;
.data:000000018001A191                 db    ? ;
.data:000000018001A192                 db    ? ;
.data:000000018001A193                 db    ? ;
.data:000000018001A194                 db    ? ;
.data:000000018001A195                 db    ? ;
.data:000000018001A196                 db    ? ;
.data:000000018001A197                 db    ? ;
.data:000000018001A198                 db    ? ;
.data:000000018001A199                 db    ? ;
.data:000000018001A19A                 db    ? ;
.data:000000018001A19B                 db    ? ;
.data:000000018001A19C                 db    ? ;
.data:000000018001A19D                 db    ? ;
.data:000000018001A19E                 db    ? ;
.data:000000018001A19F                 db    ? ;
.data:000000018001A1A0                 db    ? ;
.data:000000018001A1A1                 db    ? ;
.data:000000018001A1A2                 db    ? ;
.data:000000018001A1A3                 db    ? ;
.data:000000018001A1A4                 db    ? ;
.data:000000018001A1A5                 db    ? ;
.data:000000018001A1A6                 db    ? ;
.data:000000018001A1A7                 db    ? ;
.data:000000018001A1A8                 db    ? ;
.data:000000018001A1A9                 db    ? ;
.data:000000018001A1AA                 db    ? ;
.data:000000018001A1AB                 db    ? ;
.data:000000018001A1AC                 db    ? ;
.data:000000018001A1AD                 db    ? ;
.data:000000018001A1AE                 db    ? ;
.data:000000018001A1AF                 db    ? ;
.data:000000018001A1B0                 db    ? ;
.data:000000018001A1B1                 db    ? ;
.data:000000018001A1B2                 db    ? ;
.data:000000018001A1B3                 db    ? ;
.data:000000018001A1B4                 db    ? ;
.data:000000018001A1B5                 db    ? ;
.data:000000018001A1B6                 db    ? ;
.data:000000018001A1B7                 db    ? ;
.data:000000018001A1B8                 db    ? ;
.data:000000018001A1B9                 db    ? ;
.data:000000018001A1BA                 db    ? ;
.data:000000018001A1BB                 db    ? ;
.data:000000018001A1BC                 db    ? ;
.data:000000018001A1BD                 db    ? ;
.data:000000018001A1BE                 db    ? ;
.data:000000018001A1BF                 db    ? ;
.data:000000018001A1C0                 db    ? ;
.data:000000018001A1C1                 db    ? ;
.data:000000018001A1C2                 db    ? ;
.data:000000018001A1C3                 db    ? ;
.data:000000018001A1C4                 db    ? ;
.data:000000018001A1C5                 db    ? ;
.data:000000018001A1C6                 db    ? ;
.data:000000018001A1C7                 db    ? ;
.data:000000018001A1C8                 db    ? ;
.data:000000018001A1C9                 db    ? ;
.data:000000018001A1CA                 db    ? ;
.data:000000018001A1CB                 db    ? ;
.data:000000018001A1CC                 db    ? ;
.data:000000018001A1CD                 db    ? ;
.data:000000018001A1CE                 db    ? ;
.data:000000018001A1CF                 db    ? ;
.data:000000018001A1D0                 db    ? ;
.data:000000018001A1D1                 db    ? ;
.data:000000018001A1D2                 db    ? ;
.data:000000018001A1D3                 db    ? ;
.data:000000018001A1D4                 db    ? ;
.data:000000018001A1D5                 db    ? ;
.data:000000018001A1D6                 db    ? ;
.data:000000018001A1D7                 db    ? ;
.data:000000018001A1D8                 db    ? ;
.data:000000018001A1D9                 db    ? ;
.data:000000018001A1DA                 db    ? ;
.data:000000018001A1DB                 db    ? ;
.data:000000018001A1DC                 db    ? ;
.data:000000018001A1DD                 db    ? ;
.data:000000018001A1DE                 db    ? ;
.data:000000018001A1DF                 db    ? ;
.data:000000018001A1E0                 db    ? ;
.data:000000018001A1E1                 db    ? ;
.data:000000018001A1E2                 db    ? ;
.data:000000018001A1E3                 db    ? ;
.data:000000018001A1E4                 db    ? ;
.data:000000018001A1E5                 db    ? ;
.data:000000018001A1E6                 db    ? ;
.data:000000018001A1E7                 db    ? ;
.data:000000018001A1E8                 db    ? ;
.data:000000018001A1E9                 db    ? ;
.data:000000018001A1EA                 db    ? ;
.data:000000018001A1EB                 db    ? ;
.data:000000018001A1EC                 db    ? ;
.data:000000018001A1ED                 db    ? ;
.data:000000018001A1EE                 db    ? ;
.data:000000018001A1EF                 db    ? ;
.data:000000018001A1F0                 db    ? ;
.data:000000018001A1F1                 db    ? ;
.data:000000018001A1F2                 db    ? ;
.data:000000018001A1F3                 db    ? ;
.data:000000018001A1F4                 db    ? ;
.data:000000018001A1F5                 db    ? ;
.data:000000018001A1F6                 db    ? ;
.data:000000018001A1F7                 db    ? ;
.data:000000018001A1F8                 db    ? ;
.data:000000018001A1F9                 db    ? ;
.data:000000018001A1FA                 db    ? ;
.data:000000018001A1FB                 db    ? ;
.data:000000018001A1FC                 db    ? ;
.data:000000018001A1FD                 db    ? ;
.data:000000018001A1FE                 db    ? ;
.data:000000018001A1FF                 db    ? ;
.data:000000018001A200                 db    ? ;
.data:000000018001A201                 db    ? ;
.data:000000018001A202                 db    ? ;
.data:000000018001A203                 db    ? ;
.data:000000018001A204                 db    ? ;
.data:000000018001A205                 db    ? ;
.data:000000018001A206                 db    ? ;
.data:000000018001A207                 db    ? ;
.data:000000018001A208                 db    ? ;
.data:000000018001A209                 db    ? ;
.data:000000018001A20A                 db    ? ;
.data:000000018001A20B                 db    ? ;
.data:000000018001A20C                 db    ? ;
.data:000000018001A20D                 db    ? ;
.data:000000018001A20E                 db    ? ;
.data:000000018001A20F                 db    ? ;
.data:000000018001A210                 db    ? ;
.data:000000018001A211                 db    ? ;
.data:000000018001A212                 db    ? ;
.data:000000018001A213                 db    ? ;
.data:000000018001A214                 db    ? ;
.data:000000018001A215                 db    ? ;
.data:000000018001A216                 db    ? ;
.data:000000018001A217                 db    ? ;
.data:000000018001A218                 db    ? ;
.data:000000018001A219                 db    ? ;
.data:000000018001A21A                 db    ? ;
.data:000000018001A21B                 db    ? ;
.data:000000018001A21C                 db    ? ;
.data:000000018001A21D                 db    ? ;
.data:000000018001A21E                 db    ? ;
.data:000000018001A21F                 db    ? ;
.data:000000018001A220                 db    ? ;
.data:000000018001A221                 db    ? ;
.data:000000018001A222                 db    ? ;
.data:000000018001A223                 db    ? ;
.data:000000018001A224                 db    ? ;
.data:000000018001A225                 db    ? ;
.data:000000018001A226                 db    ? ;
.data:000000018001A227                 db    ? ;
.data:000000018001A228                 db    ? ;
.data:000000018001A229                 db    ? ;
.data:000000018001A22A                 db    ? ;
.data:000000018001A22B                 db    ? ;
.data:000000018001A22C                 db    ? ;
.data:000000018001A22D                 db    ? ;
.data:000000018001A22E                 db    ? ;
.data:000000018001A22F                 db    ? ;
.data:000000018001A230                 db    ? ;
.data:000000018001A231                 db    ? ;
.data:000000018001A232                 db    ? ;
.data:000000018001A233                 db    ? ;
.data:000000018001A234                 db    ? ;
.data:000000018001A235                 db    ? ;
.data:000000018001A236                 db    ? ;
.data:000000018001A237                 db    ? ;
.data:000000018001A238                 db    ? ;
.data:000000018001A239                 db    ? ;
.data:000000018001A23A                 db    ? ;
.data:000000018001A23B                 db    ? ;
.data:000000018001A23C                 db    ? ;
.data:000000018001A23D                 db    ? ;
.data:000000018001A23E                 db    ? ;
.data:000000018001A23F                 db    ? ;
.data:000000018001A240                 db    ? ;
.data:000000018001A241                 db    ? ;
.data:000000018001A242                 db    ? ;
.data:000000018001A243                 db    ? ;
.data:000000018001A244                 db    ? ;
.data:000000018001A245                 db    ? ;
.data:000000018001A246                 db    ? ;
.data:000000018001A247                 db    ? ;
.data:000000018001A248                 db    ? ;
.data:000000018001A249                 db    ? ;
.data:000000018001A24A                 db    ? ;
.data:000000018001A24B                 db    ? ;
.data:000000018001A24C                 db    ? ;
.data:000000018001A24D                 db    ? ;
.data:000000018001A24E                 db    ? ;
.data:000000018001A24F                 db    ? ;
.data:000000018001A250                 db    ? ;
.data:000000018001A251                 db    ? ;
.data:000000018001A252                 db    ? ;
.data:000000018001A253                 db    ? ;
.data:000000018001A254                 db    ? ;
.data:000000018001A255                 db    ? ;
.data:000000018001A256                 db    ? ;
.data:000000018001A257                 db    ? ;
.data:000000018001A258                 db    ? ;
.data:000000018001A259                 db    ? ;
.data:000000018001A25A                 db    ? ;
.data:000000018001A25B                 db    ? ;
.data:000000018001A25C                 db    ? ;
.data:000000018001A25D                 db    ? ;
.data:000000018001A25E                 db    ? ;
.data:000000018001A25F                 db    ? ;
.data:000000018001A260                 db    ? ;
.data:000000018001A261                 db    ? ;
.data:000000018001A262                 db    ? ;
.data:000000018001A263                 db    ? ;
.data:000000018001A264                 db    ? ;
.data:000000018001A265                 db    ? ;
.data:000000018001A266                 db    ? ;
.data:000000018001A267                 db    ? ;
.data:000000018001A268                 db    ? ;
.data:000000018001A269                 db    ? ;
.data:000000018001A26A                 db    ? ;
.data:000000018001A26B                 db    ? ;
.data:000000018001A26C                 db    ? ;
.data:000000018001A26D                 db    ? ;
.data:000000018001A26E                 db    ? ;
.data:000000018001A26F                 db    ? ;
.data:000000018001A270                 db    ? ;
.data:000000018001A271                 db    ? ;
.data:000000018001A272                 db    ? ;
.data:000000018001A273                 db    ? ;
.data:000000018001A274                 db    ? ;
.data:000000018001A275                 db    ? ;
.data:000000018001A276                 db    ? ;
.data:000000018001A277                 db    ? ;
.data:000000018001A278                 db    ? ;
.data:000000018001A279                 db    ? ;
.data:000000018001A27A                 db    ? ;
.data:000000018001A27B                 db    ? ;
.data:000000018001A27C                 db    ? ;
.data:000000018001A27D                 db    ? ;
.data:000000018001A27E                 db    ? ;
.data:000000018001A27F                 db    ? ;
.data:000000018001A280                 db    ? ;
.data:000000018001A281                 db    ? ;
.data:000000018001A282                 db    ? ;
.data:000000018001A283                 db    ? ;
.data:000000018001A284                 db    ? ;
.data:000000018001A285                 db    ? ;
.data:000000018001A286                 db    ? ;
.data:000000018001A287                 db    ? ;
.data:000000018001A288                 db    ? ;
.data:000000018001A289                 db    ? ;
.data:000000018001A28A                 db    ? ;
.data:000000018001A28B                 db    ? ;
.data:000000018001A28C                 db    ? ;
.data:000000018001A28D                 db    ? ;
.data:000000018001A28E                 db    ? ;
.data:000000018001A28F                 db    ? ;
.data:000000018001A290                 db    ? ;
.data:000000018001A291                 db    ? ;
.data:000000018001A292                 db    ? ;
.data:000000018001A293                 db    ? ;
.data:000000018001A294                 db    ? ;
.data:000000018001A295                 db    ? ;
.data:000000018001A296                 db    ? ;
.data:000000018001A297                 db    ? ;
.data:000000018001A298                 db    ? ;
.data:000000018001A299                 db    ? ;
.data:000000018001A29A                 db    ? ;
.data:000000018001A29B                 db    ? ;
.data:000000018001A29C                 db    ? ;
.data:000000018001A29D                 db    ? ;
.data:000000018001A29E                 db    ? ;
.data:000000018001A29F                 db    ? ;
.data:000000018001A2A0                 db    ? ;
.data:000000018001A2A1                 db    ? ;
.data:000000018001A2A2                 db    ? ;
.data:000000018001A2A3                 db    ? ;
.data:000000018001A2A4                 db    ? ;
.data:000000018001A2A5                 db    ? ;
.data:000000018001A2A6                 db    ? ;
.data:000000018001A2A7                 db    ? ;
.data:000000018001A2A8                 db    ? ;
.data:000000018001A2A9                 db    ? ;
.data:000000018001A2AA                 db    ? ;
.data:000000018001A2AB                 db    ? ;
.data:000000018001A2AC                 db    ? ;
.data:000000018001A2AD                 db    ? ;
.data:000000018001A2AE                 db    ? ;
.data:000000018001A2AF                 db    ? ;
.data:000000018001A2B0                 db    ? ;
.data:000000018001A2B1                 db    ? ;
.data:000000018001A2B2                 db    ? ;
.data:000000018001A2B3                 db    ? ;
.data:000000018001A2B4                 db    ? ;
.data:000000018001A2B5                 db    ? ;
.data:000000018001A2B6                 db    ? ;
.data:000000018001A2B7                 db    ? ;
.data:000000018001A2B8                 db    ? ;
.data:000000018001A2B9                 db    ? ;
.data:000000018001A2BA                 db    ? ;
.data:000000018001A2BB                 db    ? ;
.data:000000018001A2BC                 db    ? ;
.data:000000018001A2BD                 db    ? ;
.data:000000018001A2BE                 db    ? ;
.data:000000018001A2BF                 db    ? ;
.data:000000018001A2C0                 db    ? ;
.data:000000018001A2C1                 db    ? ;
.data:000000018001A2C2                 db    ? ;
.data:000000018001A2C3                 db    ? ;
.data:000000018001A2C4                 db    ? ;
.data:000000018001A2C5                 db    ? ;
.data:000000018001A2C6                 db    ? ;
.data:000000018001A2C7                 db    ? ;
.data:000000018001A2C8                 db    ? ;
.data:000000018001A2C9                 db    ? ;
.data:000000018001A2CA                 db    ? ;
.data:000000018001A2CB                 db    ? ;
.data:000000018001A2CC                 db    ? ;
.data:000000018001A2CD                 db    ? ;
.data:000000018001A2CE                 db    ? ;
.data:000000018001A2CF                 db    ? ;
.data:000000018001A2D0                 db    ? ;
.data:000000018001A2D1                 db    ? ;
.data:000000018001A2D2                 db    ? ;
.data:000000018001A2D3                 db    ? ;
.data:000000018001A2D4                 db    ? ;
.data:000000018001A2D5                 db    ? ;
.data:000000018001A2D6                 db    ? ;
.data:000000018001A2D7                 db    ? ;
.data:000000018001A2D8                 db    ? ;
.data:000000018001A2D9                 db    ? ;
.data:000000018001A2DA                 db    ? ;
.data:000000018001A2DB                 db    ? ;
.data:000000018001A2DC                 db    ? ;
.data:000000018001A2DD                 db    ? ;
.data:000000018001A2DE                 db    ? ;
.data:000000018001A2DF                 db    ? ;
.data:000000018001A2E0                 db    ? ;
.data:000000018001A2E1                 db    ? ;
.data:000000018001A2E2                 db    ? ;
.data:000000018001A2E3                 db    ? ;
.data:000000018001A2E4                 db    ? ;
.data:000000018001A2E5                 db    ? ;
.data:000000018001A2E6                 db    ? ;
.data:000000018001A2E7                 db    ? ;
.data:000000018001A2E8                 db    ? ;
.data:000000018001A2E9                 db    ? ;
.data:000000018001A2EA                 db    ? ;
.data:000000018001A2EB                 db    ? ;
.data:000000018001A2EC                 db    ? ;
.data:000000018001A2ED                 db    ? ;
.data:000000018001A2EE                 db    ? ;
.data:000000018001A2EF                 db    ? ;
.data:000000018001A2F0                 db    ? ;
.data:000000018001A2F1                 db    ? ;
.data:000000018001A2F2                 db    ? ;
.data:000000018001A2F3                 db    ? ;
.data:000000018001A2F4                 db    ? ;
.data:000000018001A2F5                 db    ? ;
.data:000000018001A2F6                 db    ? ;
.data:000000018001A2F7                 db    ? ;
.data:000000018001A2F8                 db    ? ;
.data:000000018001A2F9                 db    ? ;
.data:000000018001A2FA                 db    ? ;
.data:000000018001A2FB                 db    ? ;
.data:000000018001A2FC                 db    ? ;
.data:000000018001A2FD                 db    ? ;
.data:000000018001A2FE                 db    ? ;
.data:000000018001A2FF                 db    ? ;
.data:000000018001A300                 db    ? ;
.data:000000018001A301                 db    ? ;
.data:000000018001A302                 db    ? ;
.data:000000018001A303                 db    ? ;
.data:000000018001A304                 db    ? ;
.data:000000018001A305                 db    ? ;
.data:000000018001A306                 db    ? ;
.data:000000018001A307                 db    ? ;
.data:000000018001A308                 db    ? ;
.data:000000018001A309                 db    ? ;
.data:000000018001A30A                 db    ? ;
.data:000000018001A30B                 db    ? ;
.data:000000018001A30C                 db    ? ;
.data:000000018001A30D                 db    ? ;
.data:000000018001A30E                 db    ? ;
.data:000000018001A30F                 db    ? ;
.data:000000018001A310                 db    ? ;
.data:000000018001A311                 db    ? ;
.data:000000018001A312                 db    ? ;
.data:000000018001A313                 db    ? ;
.data:000000018001A314                 db    ? ;
.data:000000018001A315                 db    ? ;
.data:000000018001A316                 db    ? ;
.data:000000018001A317                 db    ? ;
.data:000000018001A318                 db    ? ;
.data:000000018001A319                 db    ? ;
.data:000000018001A31A                 db    ? ;
.data:000000018001A31B                 db    ? ;
.data:000000018001A31C                 db    ? ;
.data:000000018001A31D                 db    ? ;
.data:000000018001A31E                 db    ? ;
.data:000000018001A31F                 db    ? ;
.data:000000018001A320                 db    ? ;
.data:000000018001A321                 db    ? ;
.data:000000018001A322                 db    ? ;
.data:000000018001A323                 db    ? ;
.data:000000018001A324                 db    ? ;
.data:000000018001A325                 db    ? ;
.data:000000018001A326                 db    ? ;
.data:000000018001A327                 db    ? ;
.data:000000018001A328                 db    ? ;
.data:000000018001A329                 db    ? ;
.data:000000018001A32A                 db    ? ;
.data:000000018001A32B                 db    ? ;
.data:000000018001A32C                 db    ? ;
.data:000000018001A32D                 db    ? ;
.data:000000018001A32E                 db    ? ;
.data:000000018001A32F                 db    ? ;
.data:000000018001A330                 db    ? ;
.data:000000018001A331                 db    ? ;
.data:000000018001A332                 db    ? ;
.data:000000018001A333                 db    ? ;
.data:000000018001A334                 db    ? ;
.data:000000018001A335                 db    ? ;
.data:000000018001A336                 db    ? ;
.data:000000018001A337                 db    ? ;
.data:000000018001A338                 db    ? ;
.data:000000018001A339                 db    ? ;
.data:000000018001A33A                 db    ? ;
.data:000000018001A33B                 db    ? ;
.data:000000018001A33C                 db    ? ;
.data:000000018001A33D                 db    ? ;
.data:000000018001A33E                 db    ? ;
.data:000000018001A33F                 db    ? ;
.data:000000018001A340                 db    ? ;
.data:000000018001A341                 db    ? ;
.data:000000018001A342                 db    ? ;
.data:000000018001A343                 db    ? ;
.data:000000018001A344                 db    ? ;
.data:000000018001A345                 db    ? ;
.data:000000018001A346                 db    ? ;
.data:000000018001A347                 db    ? ;
.data:000000018001A348                 db    ? ;
.data:000000018001A349                 db    ? ;
.data:000000018001A34A                 db    ? ;
.data:000000018001A34B                 db    ? ;
.data:000000018001A34C                 db    ? ;
.data:000000018001A34D                 db    ? ;
.data:000000018001A34E                 db    ? ;
.data:000000018001A34F                 db    ? ;
.data:000000018001A350                 db    ? ;
.data:000000018001A351                 db    ? ;
.data:000000018001A352                 db    ? ;
.data:000000018001A353                 db    ? ;
.data:000000018001A354                 db    ? ;
.data:000000018001A355                 db    ? ;
.data:000000018001A356                 db    ? ;
.data:000000018001A357                 db    ? ;
.data:000000018001A358                 db    ? ;
.data:000000018001A359                 db    ? ;
.data:000000018001A35A                 db    ? ;
.data:000000018001A35B                 db    ? ;
.data:000000018001A35C                 db    ? ;
.data:000000018001A35D                 db    ? ;
.data:000000018001A35E                 db    ? ;
.data:000000018001A35F                 db    ? ;
.data:000000018001A360                 db    ? ;
.data:000000018001A361                 db    ? ;
.data:000000018001A362                 db    ? ;
.data:000000018001A363                 db    ? ;
.data:000000018001A364                 db    ? ;
.data:000000018001A365                 db    ? ;
.data:000000018001A366                 db    ? ;
.data:000000018001A367                 db    ? ;
.data:000000018001A368                 db    ? ;
.data:000000018001A369                 db    ? ;
.data:000000018001A36A                 db    ? ;
.data:000000018001A36B                 db    ? ;
.data:000000018001A36C                 db    ? ;
.data:000000018001A36D                 db    ? ;
.data:000000018001A36E                 db    ? ;
.data:000000018001A36F                 db    ? ;
.data:000000018001A370                 db    ? ;
.data:000000018001A371                 db    ? ;
.data:000000018001A372                 db    ? ;
.data:000000018001A373                 db    ? ;
.data:000000018001A374                 db    ? ;
.data:000000018001A375                 db    ? ;
.data:000000018001A376                 db    ? ;
.data:000000018001A377                 db    ? ;
.data:000000018001A378                 db    ? ;
.data:000000018001A379                 db    ? ;
.data:000000018001A37A                 db    ? ;
.data:000000018001A37B                 db    ? ;
.data:000000018001A37C                 db    ? ;
.data:000000018001A37D                 db    ? ;
.data:000000018001A37E                 db    ? ;
.data:000000018001A37F                 db    ? ;
.data:000000018001A380                 db    ? ;
.data:000000018001A381                 db    ? ;
.data:000000018001A382                 db    ? ;
.data:000000018001A383                 db    ? ;
.data:000000018001A384                 db    ? ;
.data:000000018001A385                 db    ? ;
.data:000000018001A386                 db    ? ;
.data:000000018001A387                 db    ? ;
.data:000000018001A388                 db    ? ;
.data:000000018001A389                 db    ? ;
.data:000000018001A38A                 db    ? ;
.data:000000018001A38B                 db    ? ;
.data:000000018001A38C                 db    ? ;
.data:000000018001A38D                 db    ? ;
.data:000000018001A38E                 db    ? ;
.data:000000018001A38F                 db    ? ;
.data:000000018001A390                 db    ? ;
.data:000000018001A391                 db    ? ;
.data:000000018001A392                 db    ? ;
.data:000000018001A393                 db    ? ;
.data:000000018001A394                 db    ? ;
.data:000000018001A395                 db    ? ;
.data:000000018001A396                 db    ? ;
.data:000000018001A397                 db    ? ;
.data:000000018001A398                 db    ? ;
.data:000000018001A399                 db    ? ;
.data:000000018001A39A                 db    ? ;
.data:000000018001A39B                 db    ? ;
.data:000000018001A39C                 db    ? ;
.data:000000018001A39D                 db    ? ;
.data:000000018001A39E                 db    ? ;
.data:000000018001A39F                 db    ? ;
.data:000000018001A3A0                 db    ? ;
.data:000000018001A3A1                 db    ? ;
.data:000000018001A3A2                 db    ? ;
.data:000000018001A3A3                 db    ? ;
.data:000000018001A3A4                 db    ? ;
.data:000000018001A3A5                 db    ? ;
.data:000000018001A3A6                 db    ? ;
.data:000000018001A3A7                 db    ? ;
.data:000000018001A3A8                 db    ? ;
.data:000000018001A3A9                 db    ? ;
.data:000000018001A3AA                 db    ? ;
.data:000000018001A3AB                 db    ? ;
.data:000000018001A3AC                 db    ? ;
.data:000000018001A3AD                 db    ? ;
.data:000000018001A3AE                 db    ? ;
.data:000000018001A3AF                 db    ? ;
.data:000000018001A3B0                 db    ? ;
.data:000000018001A3B1                 db    ? ;
.data:000000018001A3B2                 db    ? ;
.data:000000018001A3B3                 db    ? ;
.data:000000018001A3B4                 db    ? ;
.data:000000018001A3B5                 db    ? ;
.data:000000018001A3B6                 db    ? ;
.data:000000018001A3B7                 db    ? ;
.data:000000018001A3B8                 db    ? ;
.data:000000018001A3B9                 db    ? ;
.data:000000018001A3BA                 db    ? ;
.data:000000018001A3BB                 db    ? ;
.data:000000018001A3BC                 db    ? ;
.data:000000018001A3BD                 db    ? ;
.data:000000018001A3BE                 db    ? ;
.data:000000018001A3BF                 db    ? ;
.data:000000018001A3C0                 db    ? ;
.data:000000018001A3C1                 db    ? ;
.data:000000018001A3C2                 db    ? ;
.data:000000018001A3C3                 db    ? ;
.data:000000018001A3C4                 db    ? ;
.data:000000018001A3C5                 db    ? ;
.data:000000018001A3C6                 db    ? ;
.data:000000018001A3C7                 db    ? ;
.data:000000018001A3C8                 db    ? ;
.data:000000018001A3C9                 db    ? ;
.data:000000018001A3CA                 db    ? ;
.data:000000018001A3CB                 db    ? ;
.data:000000018001A3CC                 db    ? ;
.data:000000018001A3CD                 db    ? ;
.data:000000018001A3CE                 db    ? ;
.data:000000018001A3CF                 db    ? ;
.data:000000018001A3D0                 db    ? ;
.data:000000018001A3D1                 db    ? ;
.data:000000018001A3D2                 db    ? ;
.data:000000018001A3D3                 db    ? ;
.data:000000018001A3D4                 db    ? ;
.data:000000018001A3D5                 db    ? ;
.data:000000018001A3D6                 db    ? ;
.data:000000018001A3D7                 db    ? ;
.data:000000018001A3D8                 db    ? ;
.data:000000018001A3D9                 db    ? ;
.data:000000018001A3DA                 db    ? ;
.data:000000018001A3DB                 db    ? ;
.data:000000018001A3DC                 db    ? ;
.data:000000018001A3DD                 db    ? ;
.data:000000018001A3DE                 db    ? ;
.data:000000018001A3DF                 db    ? ;
.data:000000018001A3E0                 db    ? ;
.data:000000018001A3E1                 db    ? ;
.data:000000018001A3E2                 db    ? ;
.data:000000018001A3E3                 db    ? ;
.data:000000018001A3E4                 db    ? ;
.data:000000018001A3E5                 db    ? ;
.data:000000018001A3E6                 db    ? ;
.data:000000018001A3E7                 db    ? ;
.data:000000018001A3E8                 db    ? ;
.data:000000018001A3E9                 db    ? ;
.data:000000018001A3EA                 db    ? ;
.data:000000018001A3EB                 db    ? ;
.data:000000018001A3EC                 db    ? ;
.data:000000018001A3ED                 db    ? ;
.data:000000018001A3EE                 db    ? ;
.data:000000018001A3EF                 db    ? ;
.data:000000018001A3F0                 db    ? ;
.data:000000018001A3F1                 db    ? ;
.data:000000018001A3F2                 db    ? ;
.data:000000018001A3F3                 db    ? ;
.data:000000018001A3F4                 db    ? ;
.data:000000018001A3F5                 db    ? ;
.data:000000018001A3F6                 db    ? ;
.data:000000018001A3F7                 db    ? ;
.data:000000018001A3F8                 db    ? ;
.data:000000018001A3F9                 db    ? ;
.data:000000018001A3FA                 db    ? ;
.data:000000018001A3FB                 db    ? ;
.data:000000018001A3FC                 db    ? ;
.data:000000018001A3FD                 db    ? ;
.data:000000018001A3FE                 db    ? ;
.data:000000018001A3FF                 db    ? ;
.data:000000018001A400                 db    ? ;
.data:000000018001A401                 db    ? ;
.data:000000018001A402                 db    ? ;
.data:000000018001A403                 db    ? ;
.data:000000018001A404                 db    ? ;
.data:000000018001A405                 db    ? ;
.data:000000018001A406                 db    ? ;
.data:000000018001A407                 db    ? ;
.data:000000018001A408                 db    ? ;
.data:000000018001A409                 db    ? ;
.data:000000018001A40A                 db    ? ;
.data:000000018001A40B                 db    ? ;
.data:000000018001A40C                 db    ? ;
.data:000000018001A40D                 db    ? ;
.data:000000018001A40E                 db    ? ;
.data:000000018001A40F                 db    ? ;
.data:000000018001A410                 db    ? ;
.data:000000018001A411                 db    ? ;
.data:000000018001A412                 db    ? ;
.data:000000018001A413                 db    ? ;
.data:000000018001A414                 db    ? ;
.data:000000018001A415                 db    ? ;
.data:000000018001A416                 db    ? ;
.data:000000018001A417                 db    ? ;
.data:000000018001A418                 db    ? ;
.data:000000018001A419                 db    ? ;
.data:000000018001A41A                 db    ? ;
.data:000000018001A41B                 db    ? ;
.data:000000018001A41C                 db    ? ;
.data:000000018001A41D                 db    ? ;
.data:000000018001A41E                 db    ? ;
.data:000000018001A41F                 db    ? ;
.data:000000018001A420                 db    ? ;
.data:000000018001A421                 db    ? ;
.data:000000018001A422                 db    ? ;
.data:000000018001A423                 db    ? ;
.data:000000018001A424                 db    ? ;
.data:000000018001A425                 db    ? ;
.data:000000018001A426                 db    ? ;
.data:000000018001A427                 db    ? ;
.data:000000018001A428                 db    ? ;
.data:000000018001A429                 db    ? ;
.data:000000018001A42A                 db    ? ;
.data:000000018001A42B                 db    ? ;
.data:000000018001A42C                 db    ? ;
.data:000000018001A42D                 db    ? ;
.data:000000018001A42E                 db    ? ;
.data:000000018001A42F                 db    ? ;
.data:000000018001A430                 db    ? ;
.data:000000018001A431                 db    ? ;
.data:000000018001A432                 db    ? ;
.data:000000018001A433                 db    ? ;
.data:000000018001A434                 db    ? ;
.data:000000018001A435                 db    ? ;
.data:000000018001A436                 db    ? ;
.data:000000018001A437                 db    ? ;
.data:000000018001A438                 db    ? ;
.data:000000018001A439                 db    ? ;
.data:000000018001A43A                 db    ? ;
.data:000000018001A43B                 db    ? ;
.data:000000018001A43C                 db    ? ;
.data:000000018001A43D                 db    ? ;
.data:000000018001A43E                 db    ? ;
.data:000000018001A43F                 db    ? ;
.data:000000018001A440                 db    ? ;
.data:000000018001A441                 db    ? ;
.data:000000018001A442                 db    ? ;
.data:000000018001A443                 db    ? ;
.data:000000018001A444                 db    ? ;
.data:000000018001A445                 db    ? ;
.data:000000018001A446                 db    ? ;
.data:000000018001A447                 db    ? ;
.data:000000018001A448                 db    ? ;
.data:000000018001A449                 db    ? ;
.data:000000018001A44A                 db    ? ;
.data:000000018001A44B                 db    ? ;
.data:000000018001A44C                 db    ? ;
.data:000000018001A44D                 db    ? ;
.data:000000018001A44E                 db    ? ;
.data:000000018001A44F                 db    ? ;
.data:000000018001A450                 db    ? ;
.data:000000018001A451                 db    ? ;
.data:000000018001A452                 db    ? ;
.data:000000018001A453                 db    ? ;
.data:000000018001A454                 db    ? ;
.data:000000018001A455                 db    ? ;
.data:000000018001A456                 db    ? ;
.data:000000018001A457                 db    ? ;
.data:000000018001A458                 db    ? ;
.data:000000018001A459                 db    ? ;
.data:000000018001A45A                 db    ? ;
.data:000000018001A45B                 db    ? ;
.data:000000018001A45C                 db    ? ;
.data:000000018001A45D                 db    ? ;
.data:000000018001A45E                 db    ? ;
.data:000000018001A45F                 db    ? ;
.data:000000018001A460                 db    ? ;
.data:000000018001A461                 db    ? ;
.data:000000018001A462                 db    ? ;
.data:000000018001A463                 db    ? ;
.data:000000018001A464                 db    ? ;
.data:000000018001A465                 db    ? ;
.data:000000018001A466                 db    ? ;
.data:000000018001A467                 db    ? ;
.data:000000018001A468                 db    ? ;
.data:000000018001A469                 db    ? ;
.data:000000018001A46A                 db    ? ;
.data:000000018001A46B                 db    ? ;
.data:000000018001A46C                 db    ? ;
.data:000000018001A46D                 db    ? ;
.data:000000018001A46E                 db    ? ;
.data:000000018001A46F                 db    ? ;
.data:000000018001A470                 db    ? ;
.data:000000018001A471                 db    ? ;
.data:000000018001A472                 db    ? ;
.data:000000018001A473                 db    ? ;
.data:000000018001A474                 db    ? ;
.data:000000018001A475                 db    ? ;
.data:000000018001A476                 db    ? ;
.data:000000018001A477                 db    ? ;
.data:000000018001A478                 db    ? ;
.data:000000018001A479                 db    ? ;
.data:000000018001A47A                 db    ? ;
.data:000000018001A47B                 db    ? ;
.data:000000018001A47C                 db    ? ;
.data:000000018001A47D                 db    ? ;
.data:000000018001A47E                 db    ? ;
.data:000000018001A47F                 db    ? ;
.data:000000018001A480                 db    ? ;
.data:000000018001A481                 db    ? ;
.data:000000018001A482                 db    ? ;
.data:000000018001A483                 db    ? ;
.data:000000018001A484                 db    ? ;
.data:000000018001A485                 db    ? ;
.data:000000018001A486                 db    ? ;
.data:000000018001A487                 db    ? ;
.data:000000018001A488                 db    ? ;
.data:000000018001A489                 db    ? ;
.data:000000018001A48A                 db    ? ;
.data:000000018001A48B                 db    ? ;
.data:000000018001A48C                 db    ? ;
.data:000000018001A48D                 db    ? ;
.data:000000018001A48E                 db    ? ;
.data:000000018001A48F                 db    ? ;
.data:000000018001A490                 db    ? ;
.data:000000018001A491                 db    ? ;
.data:000000018001A492                 db    ? ;
.data:000000018001A493                 db    ? ;
.data:000000018001A494                 db    ? ;
.data:000000018001A495                 db    ? ;
.data:000000018001A496                 db    ? ;
.data:000000018001A497                 db    ? ;
.data:000000018001A498                 db    ? ;
.data:000000018001A499                 db    ? ;
.data:000000018001A49A                 db    ? ;
.data:000000018001A49B                 db    ? ;
.data:000000018001A49C                 db    ? ;
.data:000000018001A49D                 db    ? ;
.data:000000018001A49E                 db    ? ;
.data:000000018001A49F                 db    ? ;
.data:000000018001A4A0                 db    ? ;
.data:000000018001A4A1                 db    ? ;
.data:000000018001A4A2                 db    ? ;
.data:000000018001A4A3                 db    ? ;
.data:000000018001A4A4                 db    ? ;
.data:000000018001A4A5                 db    ? ;
.data:000000018001A4A6                 db    ? ;
.data:000000018001A4A7                 db    ? ;
.data:000000018001A4A8                 db    ? ;
.data:000000018001A4A9                 db    ? ;
.data:000000018001A4AA                 db    ? ;
.data:000000018001A4AB                 db    ? ;
.data:000000018001A4AC                 db    ? ;
.data:000000018001A4AD                 db    ? ;
.data:000000018001A4AE                 db    ? ;
.data:000000018001A4AF                 db    ? ;
.data:000000018001A4B0                 db    ? ;
.data:000000018001A4B1                 db    ? ;
.data:000000018001A4B2                 db    ? ;
.data:000000018001A4B3                 db    ? ;
.data:000000018001A4B4                 db    ? ;
.data:000000018001A4B5                 db    ? ;
.data:000000018001A4B6                 db    ? ;
.data:000000018001A4B7                 db    ? ;
.data:000000018001A4B8                 db    ? ;
.data:000000018001A4B9                 db    ? ;
.data:000000018001A4BA                 db    ? ;
.data:000000018001A4BB                 db    ? ;
.data:000000018001A4BC                 db    ? ;
.data:000000018001A4BD                 db    ? ;
.data:000000018001A4BE                 db    ? ;
.data:000000018001A4BF                 db    ? ;
.data:000000018001A4C0                 db    ? ;
.data:000000018001A4C1                 db    ? ;
.data:000000018001A4C2                 db    ? ;
.data:000000018001A4C3                 db    ? ;
.data:000000018001A4C4                 db    ? ;
.data:000000018001A4C5                 db    ? ;
.data:000000018001A4C6                 db    ? ;
.data:000000018001A4C7                 db    ? ;
.data:000000018001A4C8                 db    ? ;
.data:000000018001A4C9                 db    ? ;
.data:000000018001A4CA                 db    ? ;
.data:000000018001A4CB                 db    ? ;
.data:000000018001A4CC                 db    ? ;
.data:000000018001A4CD                 db    ? ;
.data:000000018001A4CE                 db    ? ;
.data:000000018001A4CF                 db    ? ;
.data:000000018001A4D0                 db    ? ;
.data:000000018001A4D1                 db    ? ;
.data:000000018001A4D2                 db    ? ;
.data:000000018001A4D3                 db    ? ;
.data:000000018001A4D4                 db    ? ;
.data:000000018001A4D5                 db    ? ;
.data:000000018001A4D6                 db    ? ;
.data:000000018001A4D7                 db    ? ;
.data:000000018001A4D8                 db    ? ;
.data:000000018001A4D9                 db    ? ;
.data:000000018001A4DA                 db    ? ;
.data:000000018001A4DB                 db    ? ;
.data:000000018001A4DC                 db    ? ;
.data:000000018001A4DD                 db    ? ;
.data:000000018001A4DE                 db    ? ;
.data:000000018001A4DF                 db    ? ;
.data:000000018001A4E0                 db    ? ;
.data:000000018001A4E1                 db    ? ;
.data:000000018001A4E2                 db    ? ;
.data:000000018001A4E3                 db    ? ;
.data:000000018001A4E4                 db    ? ;
.data:000000018001A4E5                 db    ? ;
.data:000000018001A4E6                 db    ? ;
.data:000000018001A4E7                 db    ? ;
.data:000000018001A4E8                 db    ? ;
.data:000000018001A4E9                 db    ? ;
.data:000000018001A4EA                 db    ? ;
.data:000000018001A4EB                 db    ? ;
.data:000000018001A4EC                 db    ? ;
.data:000000018001A4ED                 db    ? ;
.data:000000018001A4EE                 db    ? ;
.data:000000018001A4EF                 db    ? ;
.data:000000018001A4F0                 db    ? ;
.data:000000018001A4F1                 db    ? ;
.data:000000018001A4F2                 db    ? ;
.data:000000018001A4F3                 db    ? ;
.data:000000018001A4F4                 db    ? ;
.data:000000018001A4F5                 db    ? ;
.data:000000018001A4F6                 db    ? ;
.data:000000018001A4F7                 db    ? ;
.data:000000018001A4F8                 db    ? ;
.data:000000018001A4F9                 db    ? ;
.data:000000018001A4FA                 db    ? ;
.data:000000018001A4FB                 db    ? ;
.data:000000018001A4FC                 db    ? ;
.data:000000018001A4FD                 db    ? ;
.data:000000018001A4FE                 db    ? ;
.data:000000018001A4FF                 db    ? ;
.data:000000018001A500                 db    ? ;
.data:000000018001A501                 db    ? ;
.data:000000018001A502                 db    ? ;
.data:000000018001A503                 db    ? ;
.data:000000018001A504                 db    ? ;
.data:000000018001A505                 db    ? ;
.data:000000018001A506                 db    ? ;
.data:000000018001A507                 db    ? ;
.data:000000018001A508                 db    ? ;
.data:000000018001A509                 db    ? ;
.data:000000018001A50A                 db    ? ;
.data:000000018001A50B                 db    ? ;
.data:000000018001A50C                 db    ? ;
.data:000000018001A50D                 db    ? ;
.data:000000018001A50E                 db    ? ;
.data:000000018001A50F                 db    ? ;
.data:000000018001A510                 db    ? ;
.data:000000018001A511                 db    ? ;
.data:000000018001A512                 db    ? ;
.data:000000018001A513                 db    ? ;
.data:000000018001A514                 db    ? ;
.data:000000018001A515                 db    ? ;
.data:000000018001A516                 db    ? ;
.data:000000018001A517                 db    ? ;
.data:000000018001A518                 db    ? ;
.data:000000018001A519                 db    ? ;
.data:000000018001A51A                 db    ? ;
.data:000000018001A51B                 db    ? ;
.data:000000018001A51C                 db    ? ;
.data:000000018001A51D                 db    ? ;
.data:000000018001A51E                 db    ? ;
.data:000000018001A51F                 db    ? ;
.data:000000018001A520                 db    ? ;
.data:000000018001A521                 db    ? ;
.data:000000018001A522                 db    ? ;
.data:000000018001A523                 db    ? ;
.data:000000018001A524                 db    ? ;
.data:000000018001A525                 db    ? ;
.data:000000018001A526                 db    ? ;
.data:000000018001A527                 db    ? ;
.data:000000018001A528                 db    ? ;
.data:000000018001A529                 db    ? ;
.data:000000018001A52A                 db    ? ;
.data:000000018001A52B                 db    ? ;
.data:000000018001A52C                 db    ? ;
.data:000000018001A52D                 db    ? ;
.data:000000018001A52E                 db    ? ;
.data:000000018001A52F                 db    ? ;
.data:000000018001A530                 db    ? ;
.data:000000018001A531                 db    ? ;
.data:000000018001A532                 db    ? ;
.data:000000018001A533                 db    ? ;
.data:000000018001A534                 db    ? ;
.data:000000018001A535                 db    ? ;
.data:000000018001A536                 db    ? ;
.data:000000018001A537                 db    ? ;
.data:000000018001A538                 db    ? ;
.data:000000018001A539                 db    ? ;
.data:000000018001A53A                 db    ? ;
.data:000000018001A53B                 db    ? ;
.data:000000018001A53C                 db    ? ;
.data:000000018001A53D                 db    ? ;
.data:000000018001A53E                 db    ? ;
.data:000000018001A53F                 db    ? ;
.data:000000018001A540                 db    ? ;
.data:000000018001A541                 db    ? ;
.data:000000018001A542                 db    ? ;
.data:000000018001A543                 db    ? ;
.data:000000018001A544                 db    ? ;
.data:000000018001A545                 db    ? ;
.data:000000018001A546                 db    ? ;
.data:000000018001A547                 db    ? ;
.data:000000018001A548                 db    ? ;
.data:000000018001A549                 db    ? ;
.data:000000018001A54A                 db    ? ;
.data:000000018001A54B                 db    ? ;
.data:000000018001A54C                 db    ? ;
.data:000000018001A54D                 db    ? ;
.data:000000018001A54E                 db    ? ;
.data:000000018001A54F                 db    ? ;
.data:000000018001A550                 db    ? ;
.data:000000018001A551                 db    ? ;
.data:000000018001A552                 db    ? ;
.data:000000018001A553                 db    ? ;
.data:000000018001A554                 db    ? ;
.data:000000018001A555                 db    ? ;
.data:000000018001A556                 db    ? ;
.data:000000018001A557                 db    ? ;
.data:000000018001A558                 db    ? ;
.data:000000018001A559                 db    ? ;
.data:000000018001A55A                 db    ? ;
.data:000000018001A55B                 db    ? ;
.data:000000018001A55C                 db    ? ;
.data:000000018001A55D                 db    ? ;
.data:000000018001A55E                 db    ? ;
.data:000000018001A55F                 db    ? ;
.data:000000018001A560                 db    ? ;
.data:000000018001A561                 db    ? ;
.data:000000018001A562                 db    ? ;
.data:000000018001A563                 db    ? ;
.data:000000018001A564                 db    ? ;
.data:000000018001A565                 db    ? ;
.data:000000018001A566                 db    ? ;
.data:000000018001A567                 db    ? ;
.data:000000018001A568                 db    ? ;
.data:000000018001A569                 db    ? ;
.data:000000018001A56A                 db    ? ;
.data:000000018001A56B                 db    ? ;
.data:000000018001A56C                 db    ? ;
.data:000000018001A56D                 db    ? ;
.data:000000018001A56E                 db    ? ;
.data:000000018001A56F                 db    ? ;
.data:000000018001A570                 db    ? ;
.data:000000018001A571                 db    ? ;
.data:000000018001A572                 db    ? ;
.data:000000018001A573                 db    ? ;
.data:000000018001A574                 db    ? ;
.data:000000018001A575                 db    ? ;
.data:000000018001A576                 db    ? ;
.data:000000018001A577                 db    ? ;
.data:000000018001A578                 db    ? ;
.data:000000018001A579                 db    ? ;
.data:000000018001A57A                 db    ? ;
.data:000000018001A57B                 db    ? ;
.data:000000018001A57C                 db    ? ;
.data:000000018001A57D                 db    ? ;
.data:000000018001A57E                 db    ? ;
.data:000000018001A57F                 db    ? ;
.data:000000018001A580                 db    ? ;
.data:000000018001A581                 db    ? ;
.data:000000018001A582                 db    ? ;
.data:000000018001A583                 db    ? ;
.data:000000018001A584                 db    ? ;
.data:000000018001A585                 db    ? ;
.data:000000018001A586                 db    ? ;
.data:000000018001A587                 db    ? ;
.data:000000018001A588                 db    ? ;
.data:000000018001A589                 db    ? ;
.data:000000018001A58A                 db    ? ;
.data:000000018001A58B                 db    ? ;
.data:000000018001A58C                 db    ? ;
.data:000000018001A58D                 db    ? ;
.data:000000018001A58E                 db    ? ;
.data:000000018001A58F                 db    ? ;
.data:000000018001A590                 db    ? ;
.data:000000018001A591                 db    ? ;
.data:000000018001A592                 db    ? ;
.data:000000018001A593                 db    ? ;
.data:000000018001A594                 db    ? ;
.data:000000018001A595                 db    ? ;
.data:000000018001A596                 db    ? ;
.data:000000018001A597                 db    ? ;
.data:000000018001A598                 db    ? ;
.data:000000018001A599                 db    ? ;
.data:000000018001A59A                 db    ? ;
.data:000000018001A59B                 db    ? ;
.data:000000018001A59C                 db    ? ;
.data:000000018001A59D                 db    ? ;
.data:000000018001A59E                 db    ? ;
.data:000000018001A59F                 db    ? ;
.data:000000018001A5A0                 db    ? ;
.data:000000018001A5A1                 db    ? ;
.data:000000018001A5A2                 db    ? ;
.data:000000018001A5A3                 db    ? ;
.data:000000018001A5A4                 db    ? ;
.data:000000018001A5A5                 db    ? ;
.data:000000018001A5A6                 db    ? ;
.data:000000018001A5A7                 db    ? ;
.data:000000018001A5A8                 db    ? ;
.data:000000018001A5A9                 db    ? ;
.data:000000018001A5AA                 db    ? ;
.data:000000018001A5AB                 db    ? ;
.data:000000018001A5AC                 db    ? ;
.data:000000018001A5AD                 db    ? ;
.data:000000018001A5AE                 db    ? ;
.data:000000018001A5AF                 db    ? ;
.data:000000018001A5B0                 db    ? ;
.data:000000018001A5B1                 db    ? ;
.data:000000018001A5B2                 db    ? ;
.data:000000018001A5B3                 db    ? ;
.data:000000018001A5B4                 db    ? ;
.data:000000018001A5B5                 db    ? ;
.data:000000018001A5B6                 db    ? ;
.data:000000018001A5B7                 db    ? ;
.data:000000018001A5B8                 db    ? ;
.data:000000018001A5B9                 db    ? ;
.data:000000018001A5BA                 db    ? ;
.data:000000018001A5BB                 db    ? ;
.data:000000018001A5BC                 db    ? ;
.data:000000018001A5BD                 db    ? ;
.data:000000018001A5BE                 db    ? ;
.data:000000018001A5BF                 db    ? ;
.data:000000018001A5C0                 db    ? ;
.data:000000018001A5C1                 db    ? ;
.data:000000018001A5C2                 db    ? ;
.data:000000018001A5C3                 db    ? ;
.data:000000018001A5C4                 db    ? ;
.data:000000018001A5C5                 db    ? ;
.data:000000018001A5C6                 db    ? ;
.data:000000018001A5C7                 db    ? ;
.data:000000018001A5C8                 db    ? ;
.data:000000018001A5C9                 db    ? ;
.data:000000018001A5CA                 db    ? ;
.data:000000018001A5CB                 db    ? ;
.data:000000018001A5CC                 db    ? ;
.data:000000018001A5CD                 db    ? ;
.data:000000018001A5CE                 db    ? ;
.data:000000018001A5CF                 db    ? ;
.data:000000018001A5D0                 db    ? ;
.data:000000018001A5D1                 db    ? ;
.data:000000018001A5D2                 db    ? ;
.data:000000018001A5D3                 db    ? ;
.data:000000018001A5D4                 db    ? ;
.data:000000018001A5D5                 db    ? ;
.data:000000018001A5D6                 db    ? ;
.data:000000018001A5D7                 db    ? ;
.data:000000018001A5D8                 db    ? ;
.data:000000018001A5D9                 db    ? ;
.data:000000018001A5DA                 db    ? ;
.data:000000018001A5DB                 db    ? ;
.data:000000018001A5DC                 db    ? ;
.data:000000018001A5DD                 db    ? ;
.data:000000018001A5DE                 db    ? ;
.data:000000018001A5DF                 db    ? ;
.data:000000018001A5E0                 db    ? ;
.data:000000018001A5E1                 db    ? ;
.data:000000018001A5E2                 db    ? ;
.data:000000018001A5E3                 db    ? ;
.data:000000018001A5E4                 db    ? ;
.data:000000018001A5E5                 db    ? ;
.data:000000018001A5E6                 db    ? ;
.data:000000018001A5E7                 db    ? ;
.data:000000018001A5E8                 db    ? ;
.data:000000018001A5E9                 db    ? ;
.data:000000018001A5EA                 db    ? ;
.data:000000018001A5EB                 db    ? ;
.data:000000018001A5EC                 db    ? ;
.data:000000018001A5ED                 db    ? ;
.data:000000018001A5EE                 db    ? ;
.data:000000018001A5EF                 db    ? ;
.data:000000018001A5F0                 db    ? ;
.data:000000018001A5F1                 db    ? ;
.data:000000018001A5F2                 db    ? ;
.data:000000018001A5F3                 db    ? ;
.data:000000018001A5F4                 db    ? ;
.data:000000018001A5F5                 db    ? ;
.data:000000018001A5F6                 db    ? ;
.data:000000018001A5F7                 db    ? ;
.data:000000018001A5F8                 db    ? ;
.data:000000018001A5F9                 db    ? ;
.data:000000018001A5FA                 db    ? ;
.data:000000018001A5FB                 db    ? ;
.data:000000018001A5FC                 db    ? ;
.data:000000018001A5FD                 db    ? ;
.data:000000018001A5FE                 db    ? ;
.data:000000018001A5FF                 db    ? ;
.data:000000018001A600                 db    ? ;
.data:000000018001A601                 db    ? ;
.data:000000018001A602                 db    ? ;
.data:000000018001A603                 db    ? ;
.data:000000018001A604                 db    ? ;
.data:000000018001A605                 db    ? ;
.data:000000018001A606                 db    ? ;
.data:000000018001A607                 db    ? ;
.data:000000018001A608                 db    ? ;
.data:000000018001A609                 db    ? ;
.data:000000018001A60A                 db    ? ;
.data:000000018001A60B                 db    ? ;
.data:000000018001A60C                 db    ? ;
.data:000000018001A60D                 db    ? ;
.data:000000018001A60E                 db    ? ;
.data:000000018001A60F                 db    ? ;
.data:000000018001A610                 db    ? ;
.data:000000018001A611                 db    ? ;
.data:000000018001A612                 db    ? ;
.data:000000018001A613                 db    ? ;
.data:000000018001A614                 db    ? ;
.data:000000018001A615                 db    ? ;
.data:000000018001A616                 db    ? ;
.data:000000018001A617                 db    ? ;
.data:000000018001A618                 db    ? ;
.data:000000018001A619                 db    ? ;
.data:000000018001A61A                 db    ? ;
.data:000000018001A61B                 db    ? ;
.data:000000018001A61C                 db    ? ;
.data:000000018001A61D                 db    ? ;
.data:000000018001A61E                 db    ? ;
.data:000000018001A61F                 db    ? ;
.data:000000018001A620                 db    ? ;
.data:000000018001A621                 db    ? ;
.data:000000018001A622                 db    ? ;
.data:000000018001A623                 db    ? ;
.data:000000018001A624                 db    ? ;
.data:000000018001A625                 db    ? ;
.data:000000018001A626                 db    ? ;
.data:000000018001A627                 db    ? ;
.data:000000018001A628                 db    ? ;
.data:000000018001A629                 db    ? ;
.data:000000018001A62A                 db    ? ;
.data:000000018001A62B                 db    ? ;
.data:000000018001A62C                 db    ? ;
.data:000000018001A62D                 db    ? ;
.data:000000018001A62E                 db    ? ;
.data:000000018001A62F                 db    ? ;
.data:000000018001A630                 db    ? ;
.data:000000018001A631                 db    ? ;
.data:000000018001A632                 db    ? ;
.data:000000018001A633                 db    ? ;
.data:000000018001A634                 db    ? ;
.data:000000018001A635                 db    ? ;
.data:000000018001A636                 db    ? ;
.data:000000018001A637                 db    ? ;
.data:000000018001A638                 db    ? ;
.data:000000018001A639                 db    ? ;
.data:000000018001A63A                 db    ? ;
.data:000000018001A63B                 db    ? ;
.data:000000018001A63C                 db    ? ;
.data:000000018001A63D                 db    ? ;
.data:000000018001A63E                 db    ? ;
.data:000000018001A63F                 db    ? ;
.data:000000018001A640                 db    ? ;
.data:000000018001A641                 db    ? ;
.data:000000018001A642                 db    ? ;
.data:000000018001A643                 db    ? ;
.data:000000018001A644                 db    ? ;
.data:000000018001A645                 db    ? ;
.data:000000018001A646                 db    ? ;
.data:000000018001A647                 db    ? ;
.data:000000018001A648                 db    ? ;
.data:000000018001A649                 db    ? ;
.data:000000018001A64A                 db    ? ;
.data:000000018001A64B                 db    ? ;
.data:000000018001A64C                 db    ? ;
.data:000000018001A64D                 db    ? ;
.data:000000018001A64E                 db    ? ;
.data:000000018001A64F                 db    ? ;
.data:000000018001A650                 db    ? ;
.data:000000018001A651                 db    ? ;
.data:000000018001A652                 db    ? ;
.data:000000018001A653                 db    ? ;
.data:000000018001A654                 db    ? ;
.data:000000018001A655                 db    ? ;
.data:000000018001A656                 db    ? ;
.data:000000018001A657                 db    ? ;
.data:000000018001A658                 db    ? ;
.data:000000018001A659                 db    ? ;
.data:000000018001A65A                 db    ? ;
.data:000000018001A65B                 db    ? ;
.data:000000018001A65C                 db    ? ;
.data:000000018001A65D                 db    ? ;
.data:000000018001A65E                 db    ? ;
.data:000000018001A65F                 db    ? ;
.data:000000018001A660                 db    ? ;
.data:000000018001A661                 db    ? ;
.data:000000018001A662                 db    ? ;
.data:000000018001A663                 db    ? ;
.data:000000018001A664                 db    ? ;
.data:000000018001A665                 db    ? ;
.data:000000018001A666                 db    ? ;
.data:000000018001A667                 db    ? ;
.data:000000018001A668                 db    ? ;
.data:000000018001A669                 db    ? ;
.data:000000018001A66A                 db    ? ;
.data:000000018001A66B                 db    ? ;
.data:000000018001A66C                 db    ? ;
.data:000000018001A66D                 db    ? ;
.data:000000018001A66E                 db    ? ;
.data:000000018001A66F                 db    ? ;
.data:000000018001A670                 db    ? ;
.data:000000018001A671                 db    ? ;
.data:000000018001A672                 db    ? ;
.data:000000018001A673                 db    ? ;
.data:000000018001A674                 db    ? ;
.data:000000018001A675                 db    ? ;
.data:000000018001A676                 db    ? ;
.data:000000018001A677                 db    ? ;
.data:000000018001A678                 db    ? ;
.data:000000018001A679                 db    ? ;
.data:000000018001A67A                 db    ? ;
.data:000000018001A67B                 db    ? ;
.data:000000018001A67C                 db    ? ;
.data:000000018001A67D                 db    ? ;
.data:000000018001A67E                 db    ? ;
.data:000000018001A67F                 db    ? ;
.data:000000018001A680                 db    ? ;
.data:000000018001A681                 db    ? ;
.data:000000018001A682                 db    ? ;
.data:000000018001A683                 db    ? ;
.data:000000018001A684                 db    ? ;
.data:000000018001A685                 db    ? ;
.data:000000018001A686                 db    ? ;
.data:000000018001A687                 db    ? ;
.data:000000018001A688                 db    ? ;
.data:000000018001A689                 db    ? ;
.data:000000018001A68A                 db    ? ;
.data:000000018001A68B                 db    ? ;
.data:000000018001A68C                 db    ? ;
.data:000000018001A68D                 db    ? ;
.data:000000018001A68E                 db    ? ;
.data:000000018001A68F                 db    ? ;
.data:000000018001A690                 db    ? ;
.data:000000018001A691                 db    ? ;
.data:000000018001A692                 db    ? ;
.data:000000018001A693                 db    ? ;
.data:000000018001A694                 db    ? ;
.data:000000018001A695                 db    ? ;
.data:000000018001A696                 db    ? ;
.data:000000018001A697                 db    ? ;
.data:000000018001A698                 db    ? ;
.data:000000018001A699                 db    ? ;
.data:000000018001A69A                 db    ? ;
.data:000000018001A69B                 db    ? ;
.data:000000018001A69C                 db    ? ;
.data:000000018001A69D                 db    ? ;
.data:000000018001A69E                 db    ? ;
.data:000000018001A69F                 db    ? ;
.data:000000018001A6A0                 db    ? ;
.data:000000018001A6A1                 db    ? ;
.data:000000018001A6A2                 db    ? ;
.data:000000018001A6A3                 db    ? ;
.data:000000018001A6A4                 db    ? ;
.data:000000018001A6A5                 db    ? ;
.data:000000018001A6A6                 db    ? ;
.data:000000018001A6A7                 db    ? ;
.data:000000018001A6A8                 db    ? ;
.data:000000018001A6A9                 db    ? ;
.data:000000018001A6AA                 db    ? ;
.data:000000018001A6AB                 db    ? ;
.data:000000018001A6AC                 db    ? ;
.data:000000018001A6AD                 db    ? ;
.data:000000018001A6AE                 db    ? ;
.data:000000018001A6AF                 db    ? ;
.data:000000018001A6B0                 db    ? ;
.data:000000018001A6B1                 db    ? ;
.data:000000018001A6B2                 db    ? ;
.data:000000018001A6B3                 db    ? ;
.data:000000018001A6B4                 db    ? ;
.data:000000018001A6B5                 db    ? ;
.data:000000018001A6B6                 db    ? ;
.data:000000018001A6B7                 db    ? ;
.data:000000018001A6B8                 db    ? ;
.data:000000018001A6B9                 db    ? ;
.data:000000018001A6BA                 db    ? ;
.data:000000018001A6BB                 db    ? ;
.data:000000018001A6BC                 db    ? ;
.data:000000018001A6BD                 db    ? ;
.data:000000018001A6BE                 db    ? ;
.data:000000018001A6BF                 db    ? ;
.data:000000018001A6C0                 db    ? ;
.data:000000018001A6C1                 db    ? ;
.data:000000018001A6C2                 db    ? ;
.data:000000018001A6C3                 db    ? ;
.data:000000018001A6C4                 db    ? ;
.data:000000018001A6C5                 db    ? ;
.data:000000018001A6C6                 db    ? ;
.data:000000018001A6C7                 db    ? ;
.data:000000018001A6C8                 db    ? ;
.data:000000018001A6C9                 db    ? ;
.data:000000018001A6CA                 db    ? ;
.data:000000018001A6CB                 db    ? ;
.data:000000018001A6CC                 db    ? ;
.data:000000018001A6CD                 db    ? ;
.data:000000018001A6CE                 db    ? ;
.data:000000018001A6CF                 db    ? ;
.data:000000018001A6D0                 db    ? ;
.data:000000018001A6D1                 db    ? ;
.data:000000018001A6D2                 db    ? ;
.data:000000018001A6D3                 db    ? ;
.data:000000018001A6D4                 db    ? ;
.data:000000018001A6D5                 db    ? ;
.data:000000018001A6D6                 db    ? ;
.data:000000018001A6D7                 db    ? ;
.data:000000018001A6D8                 db    ? ;
.data:000000018001A6D9                 db    ? ;
.data:000000018001A6DA                 db    ? ;
.data:000000018001A6DB                 db    ? ;
.data:000000018001A6DC                 db    ? ;
.data:000000018001A6DD                 db    ? ;
.data:000000018001A6DE                 db    ? ;
.data:000000018001A6DF                 db    ? ;
.data:000000018001A6E0                 db    ? ;
.data:000000018001A6E1                 db    ? ;
.data:000000018001A6E2                 db    ? ;
.data:000000018001A6E3                 db    ? ;
.data:000000018001A6E4                 db    ? ;
.data:000000018001A6E5                 db    ? ;
.data:000000018001A6E6                 db    ? ;
.data:000000018001A6E7                 db    ? ;
.data:000000018001A6E8                 db    ? ;
.data:000000018001A6E9                 db    ? ;
.data:000000018001A6EA                 db    ? ;
.data:000000018001A6EB                 db    ? ;
.data:000000018001A6EC                 db    ? ;
.data:000000018001A6ED                 db    ? ;
.data:000000018001A6EE                 db    ? ;
.data:000000018001A6EF                 db    ? ;
.data:000000018001A6F0                 db    ? ;
.data:000000018001A6F1                 db    ? ;
.data:000000018001A6F2                 db    ? ;
.data:000000018001A6F3                 db    ? ;
.data:000000018001A6F4                 db    ? ;
.data:000000018001A6F5                 db    ? ;
.data:000000018001A6F6                 db    ? ;
.data:000000018001A6F7                 db    ? ;
.data:000000018001A6F8                 db    ? ;
.data:000000018001A6F9                 db    ? ;
.data:000000018001A6FA                 db    ? ;
.data:000000018001A6FB                 db    ? ;
.data:000000018001A6FC                 db    ? ;
.data:000000018001A6FD                 db    ? ;
.data:000000018001A6FE                 db    ? ;
.data:000000018001A6FF                 db    ? ;
.data:000000018001A700                 db    ? ;
.data:000000018001A701                 db    ? ;
.data:000000018001A702                 db    ? ;
.data:000000018001A703                 db    ? ;
.data:000000018001A704                 db    ? ;
.data:000000018001A705                 db    ? ;
.data:000000018001A706                 db    ? ;
.data:000000018001A707                 db    ? ;
.data:000000018001A708                 db    ? ;
.data:000000018001A709                 db    ? ;
.data:000000018001A70A                 db    ? ;
.data:000000018001A70B                 db    ? ;
.data:000000018001A70C                 db    ? ;
.data:000000018001A70D                 db    ? ;
.data:000000018001A70E                 db    ? ;
.data:000000018001A70F                 db    ? ;
.data:000000018001A710                 db    ? ;
.data:000000018001A711                 db    ? ;
.data:000000018001A712                 db    ? ;
.data:000000018001A713                 db    ? ;
.data:000000018001A714                 db    ? ;
.data:000000018001A715                 db    ? ;
.data:000000018001A716                 db    ? ;
.data:000000018001A717                 db    ? ;
.data:000000018001A718                 db    ? ;
.data:000000018001A719                 db    ? ;
.data:000000018001A71A                 db    ? ;
.data:000000018001A71B                 db    ? ;
.data:000000018001A71C                 db    ? ;
.data:000000018001A71D                 db    ? ;
.data:000000018001A71E                 db    ? ;
.data:000000018001A71F                 db    ? ;
.data:000000018001A720                 db    ? ;
.data:000000018001A721                 db    ? ;
.data:000000018001A722                 db    ? ;
.data:000000018001A723                 db    ? ;
.data:000000018001A724                 db    ? ;
.data:000000018001A725                 db    ? ;
.data:000000018001A726                 db    ? ;
.data:000000018001A727                 db    ? ;
.data:000000018001A728                 db    ? ;
.data:000000018001A729                 db    ? ;
.data:000000018001A72A                 db    ? ;
.data:000000018001A72B                 db    ? ;
.data:000000018001A72C                 db    ? ;
.data:000000018001A72D                 db    ? ;
.data:000000018001A72E                 db    ? ;
.data:000000018001A72F                 db    ? ;
.data:000000018001A730                 db    ? ;
.data:000000018001A731                 db    ? ;
.data:000000018001A732                 db    ? ;
.data:000000018001A733                 db    ? ;
.data:000000018001A734                 db    ? ;
.data:000000018001A735                 db    ? ;
.data:000000018001A736                 db    ? ;
.data:000000018001A737                 db    ? ;
.data:000000018001A738                 db    ? ;
.data:000000018001A739                 db    ? ;
.data:000000018001A73A                 db    ? ;
.data:000000018001A73B                 db    ? ;
.data:000000018001A73C                 db    ? ;
.data:000000018001A73D                 db    ? ;
.data:000000018001A73E                 db    ? ;
.data:000000018001A73F                 db    ? ;
.data:000000018001A740                 db    ? ;
.data:000000018001A741                 db    ? ;
.data:000000018001A742                 db    ? ;
.data:000000018001A743                 db    ? ;
.data:000000018001A744                 db    ? ;
.data:000000018001A745                 db    ? ;
.data:000000018001A746                 db    ? ;
.data:000000018001A747                 db    ? ;
.data:000000018001A748                 db    ? ;
.data:000000018001A749                 db    ? ;
.data:000000018001A74A                 db    ? ;
.data:000000018001A74B                 db    ? ;
.data:000000018001A74C                 db    ? ;
.data:000000018001A74D                 db    ? ;
.data:000000018001A74E                 db    ? ;
.data:000000018001A74F                 db    ? ;
.data:000000018001A750                 db    ? ;
.data:000000018001A751                 db    ? ;
.data:000000018001A752                 db    ? ;
.data:000000018001A753                 db    ? ;
.data:000000018001A754                 db    ? ;
.data:000000018001A755                 db    ? ;
.data:000000018001A756                 db    ? ;
.data:000000018001A757                 db    ? ;
.data:000000018001A758                 db    ? ;
.data:000000018001A759                 db    ? ;
.data:000000018001A75A                 db    ? ;
.data:000000018001A75B                 db    ? ;
.data:000000018001A75C                 db    ? ;
.data:000000018001A75D                 db    ? ;
.data:000000018001A75E                 db    ? ;
.data:000000018001A75F                 db    ? ;
.data:000000018001A760                 db    ? ;
.data:000000018001A761                 db    ? ;
.data:000000018001A762                 db    ? ;
.data:000000018001A763                 db    ? ;
.data:000000018001A764                 db    ? ;
.data:000000018001A765                 db    ? ;
.data:000000018001A766                 db    ? ;
.data:000000018001A767                 db    ? ;
.data:000000018001A768                 db    ? ;
.data:000000018001A769                 db    ? ;
.data:000000018001A76A                 db    ? ;
.data:000000018001A76B                 db    ? ;
.data:000000018001A76C                 db    ? ;
.data:000000018001A76D                 db    ? ;
.data:000000018001A76E                 db    ? ;
.data:000000018001A76F                 db    ? ;
.data:000000018001A770                 db    ? ;
.data:000000018001A771                 db    ? ;
.data:000000018001A772                 db    ? ;
.data:000000018001A773                 db    ? ;
.data:000000018001A774                 db    ? ;
.data:000000018001A775                 db    ? ;
.data:000000018001A776                 db    ? ;
.data:000000018001A777                 db    ? ;
.data:000000018001A778                 db    ? ;
.data:000000018001A779                 db    ? ;
.data:000000018001A77A                 db    ? ;
.data:000000018001A77B                 db    ? ;
.data:000000018001A77C                 db    ? ;
.data:000000018001A77D                 db    ? ;
.data:000000018001A77E                 db    ? ;
.data:000000018001A77F                 db    ? ;
.data:000000018001A780                 db    ? ;
.data:000000018001A781                 db    ? ;
.data:000000018001A782                 db    ? ;
.data:000000018001A783                 db    ? ;
.data:000000018001A784                 db    ? ;
.data:000000018001A785                 db    ? ;
.data:000000018001A786                 db    ? ;
.data:000000018001A787                 db    ? ;
.data:000000018001A788                 db    ? ;
.data:000000018001A789                 db    ? ;
.data:000000018001A78A                 db    ? ;
.data:000000018001A78B                 db    ? ;
.data:000000018001A78C                 db    ? ;
.data:000000018001A78D                 db    ? ;
.data:000000018001A78E                 db    ? ;
.data:000000018001A78F                 db    ? ;
.data:000000018001A790                 db    ? ;
.data:000000018001A791                 db    ? ;
.data:000000018001A792                 db    ? ;
.data:000000018001A793                 db    ? ;
.data:000000018001A794                 db    ? ;
.data:000000018001A795                 db    ? ;
.data:000000018001A796                 db    ? ;
.data:000000018001A797                 db    ? ;
.data:000000018001A798                 db    ? ;
.data:000000018001A799                 db    ? ;
.data:000000018001A79A                 db    ? ;
.data:000000018001A79B                 db    ? ;
.data:000000018001A79C                 db    ? ;
.data:000000018001A79D                 db    ? ;
.data:000000018001A79E                 db    ? ;
.data:000000018001A79F                 db    ? ;
.data:000000018001A7A0                 db    ? ;
.data:000000018001A7A1                 db    ? ;
.data:000000018001A7A2                 db    ? ;
.data:000000018001A7A3                 db    ? ;
.data:000000018001A7A4                 db    ? ;
.data:000000018001A7A5                 db    ? ;
.data:000000018001A7A6                 db    ? ;
.data:000000018001A7A7                 db    ? ;
.data:000000018001A7A8                 db    ? ;
.data:000000018001A7A9                 db    ? ;
.data:000000018001A7AA                 db    ? ;
.data:000000018001A7AB                 db    ? ;
.data:000000018001A7AC                 db    ? ;
.data:000000018001A7AD                 db    ? ;
.data:000000018001A7AE                 db    ? ;
.data:000000018001A7AF                 db    ? ;
.data:000000018001A7B0                 db    ? ;
.data:000000018001A7B1                 db    ? ;
.data:000000018001A7B2                 db    ? ;
.data:000000018001A7B3                 db    ? ;
.data:000000018001A7B4                 db    ? ;
.data:000000018001A7B5                 db    ? ;
.data:000000018001A7B6                 db    ? ;
.data:000000018001A7B7                 db    ? ;
.data:000000018001A7B8                 db    ? ;
.data:000000018001A7B9                 db    ? ;
.data:000000018001A7BA                 db    ? ;
.data:000000018001A7BB                 db    ? ;
.data:000000018001A7BC                 db    ? ;
.data:000000018001A7BD                 db    ? ;
.data:000000018001A7BE                 db    ? ;
.data:000000018001A7BF                 db    ? ;
.data:000000018001A7C0                 db    ? ;
.data:000000018001A7C1                 db    ? ;
.data:000000018001A7C2                 db    ? ;
.data:000000018001A7C3                 db    ? ;
.data:000000018001A7C4                 db    ? ;
.data:000000018001A7C5                 db    ? ;
.data:000000018001A7C6                 db    ? ;
.data:000000018001A7C7                 db    ? ;
.data:000000018001A7C8                 db    ? ;
.data:000000018001A7C9                 db    ? ;
.data:000000018001A7CA                 db    ? ;
.data:000000018001A7CB                 db    ? ;
.data:000000018001A7CC                 db    ? ;
.data:000000018001A7CD                 db    ? ;
.data:000000018001A7CE                 db    ? ;
.data:000000018001A7CF                 db    ? ;
.data:000000018001A7D0                 db    ? ;
.data:000000018001A7D1                 db    ? ;
.data:000000018001A7D2                 db    ? ;
.data:000000018001A7D3                 db    ? ;
.data:000000018001A7D4                 db    ? ;
.data:000000018001A7D5                 db    ? ;
.data:000000018001A7D6                 db    ? ;
.data:000000018001A7D7                 db    ? ;
.data:000000018001A7D8                 db    ? ;
.data:000000018001A7D9                 db    ? ;
.data:000000018001A7DA                 db    ? ;
.data:000000018001A7DB                 db    ? ;
.data:000000018001A7DC                 db    ? ;
.data:000000018001A7DD                 db    ? ;
.data:000000018001A7DE                 db    ? ;
.data:000000018001A7DF                 db    ? ;
.data:000000018001A7E0                 db    ? ;
.data:000000018001A7E1                 db    ? ;
.data:000000018001A7E2                 db    ? ;
.data:000000018001A7E3                 db    ? ;
.data:000000018001A7E4                 db    ? ;
.data:000000018001A7E5                 db    ? ;
.data:000000018001A7E6                 db    ? ;
.data:000000018001A7E7                 db    ? ;
.data:000000018001A7E8                 db    ? ;
.data:000000018001A7E9                 db    ? ;
.data:000000018001A7EA                 db    ? ;
.data:000000018001A7EB                 db    ? ;
.data:000000018001A7EC                 db    ? ;
.data:000000018001A7ED                 db    ? ;
.data:000000018001A7EE                 db    ? ;
.data:000000018001A7EF                 db    ? ;
.data:000000018001A7F0                 db    ? ;
.data:000000018001A7F1                 db    ? ;
.data:000000018001A7F2                 db    ? ;
.data:000000018001A7F3                 db    ? ;
.data:000000018001A7F4                 db    ? ;
.data:000000018001A7F5                 db    ? ;
.data:000000018001A7F6                 db    ? ;
.data:000000018001A7F7                 db    ? ;
.data:000000018001A7F8                 db    ? ;
.data:000000018001A7F9                 db    ? ;
.data:000000018001A7FA                 db    ? ;
.data:000000018001A7FB                 db    ? ;
.data:000000018001A7FC                 db    ? ;
.data:000000018001A7FD                 db    ? ;
.data:000000018001A7FE                 db    ? ;
.data:000000018001A7FF                 db    ? ;
.data:000000018001A800                 db    ? ;
.data:000000018001A801                 db    ? ;
.data:000000018001A802                 db    ? ;
.data:000000018001A803                 db    ? ;
.data:000000018001A804                 db    ? ;
.data:000000018001A805                 db    ? ;
.data:000000018001A806                 db    ? ;
.data:000000018001A807                 db    ? ;
.data:000000018001A808                 db    ? ;
.data:000000018001A809                 db    ? ;
.data:000000018001A80A                 db    ? ;
.data:000000018001A80B                 db    ? ;
.data:000000018001A80C                 db    ? ;
.data:000000018001A80D                 db    ? ;
.data:000000018001A80E                 db    ? ;
.data:000000018001A80F                 db    ? ;
.data:000000018001A810                 db    ? ;
.data:000000018001A811                 db    ? ;
.data:000000018001A812                 db    ? ;
.data:000000018001A813                 db    ? ;
.data:000000018001A814                 db    ? ;
.data:000000018001A815                 db    ? ;
.data:000000018001A816                 db    ? ;
.data:000000018001A817                 db    ? ;
.data:000000018001A818                 db    ? ;
.data:000000018001A819                 db    ? ;
.data:000000018001A81A                 db    ? ;
.data:000000018001A81B                 db    ? ;
.data:000000018001A81C                 db    ? ;
.data:000000018001A81D                 db    ? ;
.data:000000018001A81E                 db    ? ;
.data:000000018001A81F                 db    ? ;
.data:000000018001A820                 db    ? ;
.data:000000018001A821                 db    ? ;
.data:000000018001A822                 db    ? ;
.data:000000018001A823                 db    ? ;
.data:000000018001A824                 db    ? ;
.data:000000018001A825                 db    ? ;
.data:000000018001A826                 db    ? ;
.data:000000018001A827                 db    ? ;
.data:000000018001A828                 db    ? ;
.data:000000018001A829                 db    ? ;
.data:000000018001A82A                 db    ? ;
.data:000000018001A82B                 db    ? ;
.data:000000018001A82C                 db    ? ;
.data:000000018001A82D                 db    ? ;
.data:000000018001A82E                 db    ? ;
.data:000000018001A82F                 db    ? ;
.data:000000018001A830                 db    ? ;
.data:000000018001A831                 db    ? ;
.data:000000018001A832                 db    ? ;
.data:000000018001A833                 db    ? ;
.data:000000018001A834                 db    ? ;
.data:000000018001A835                 db    ? ;
.data:000000018001A836                 db    ? ;
.data:000000018001A837                 db    ? ;
.data:000000018001A838                 db    ? ;
.data:000000018001A839                 db    ? ;
.data:000000018001A83A                 db    ? ;
.data:000000018001A83B                 db    ? ;
.data:000000018001A83C                 db    ? ;
.data:000000018001A83D                 db    ? ;
.data:000000018001A83E                 db    ? ;
.data:000000018001A83F                 db    ? ;
.data:000000018001A840                 db    ? ;
.data:000000018001A841                 db    ? ;
.data:000000018001A842                 db    ? ;
.data:000000018001A843                 db    ? ;
.data:000000018001A844                 db    ? ;
.data:000000018001A845                 db    ? ;
.data:000000018001A846                 db    ? ;
.data:000000018001A847                 db    ? ;
.data:000000018001A848                 db    ? ;
.data:000000018001A849                 db    ? ;
.data:000000018001A84A                 db    ? ;
.data:000000018001A84B                 db    ? ;
.data:000000018001A84C                 db    ? ;
.data:000000018001A84D                 db    ? ;
.data:000000018001A84E                 db    ? ;
.data:000000018001A84F                 db    ? ;
.data:000000018001A850                 db    ? ;
.data:000000018001A851                 db    ? ;
.data:000000018001A852                 db    ? ;
.data:000000018001A853                 db    ? ;
.data:000000018001A854                 db    ? ;
.data:000000018001A855                 db    ? ;
.data:000000018001A856                 db    ? ;
.data:000000018001A857                 db    ? ;
.data:000000018001A858                 db    ? ;
.data:000000018001A859                 db    ? ;
.data:000000018001A85A                 db    ? ;
.data:000000018001A85B                 db    ? ;
.data:000000018001A85C                 db    ? ;
.data:000000018001A85D                 db    ? ;
.data:000000018001A85E                 db    ? ;
.data:000000018001A85F                 db    ? ;
.data:000000018001A860                 db    ? ;
.data:000000018001A861                 db    ? ;
.data:000000018001A862                 db    ? ;
.data:000000018001A863                 db    ? ;
.data:000000018001A864                 db    ? ;
.data:000000018001A865                 db    ? ;
.data:000000018001A866                 db    ? ;
.data:000000018001A867                 db    ? ;
.data:000000018001A868                 db    ? ;
.data:000000018001A869                 db    ? ;
.data:000000018001A86A                 db    ? ;
.data:000000018001A86B                 db    ? ;
.data:000000018001A86C                 db    ? ;
.data:000000018001A86D                 db    ? ;
.data:000000018001A86E                 db    ? ;
.data:000000018001A86F                 db    ? ;
.data:000000018001A870                 db    ? ;
.data:000000018001A871                 db    ? ;
.data:000000018001A872                 db    ? ;
.data:000000018001A873                 db    ? ;
.data:000000018001A874                 db    ? ;
.data:000000018001A875                 db    ? ;
.data:000000018001A876                 db    ? ;
.data:000000018001A877                 db    ? ;
.data:000000018001A878                 db    ? ;
.data:000000018001A879                 db    ? ;
.data:000000018001A87A                 db    ? ;
.data:000000018001A87B                 db    ? ;
.data:000000018001A87C                 db    ? ;
.data:000000018001A87D                 db    ? ;
.data:000000018001A87E                 db    ? ;
.data:000000018001A87F                 db    ? ;
.data:000000018001A880                 db    ? ;
.data:000000018001A881                 db    ? ;
.data:000000018001A882                 db    ? ;
.data:000000018001A883                 db    ? ;
.data:000000018001A884                 db    ? ;
.data:000000018001A885                 db    ? ;
.data:000000018001A886                 db    ? ;
.data:000000018001A887                 db    ? ;
.data:000000018001A888                 db    ? ;
.data:000000018001A889                 db    ? ;
.data:000000018001A88A                 db    ? ;
.data:000000018001A88B                 db    ? ;
.data:000000018001A88C                 db    ? ;
.data:000000018001A88D                 db    ? ;
.data:000000018001A88E                 db    ? ;
.data:000000018001A88F                 db    ? ;
.data:000000018001A890                 db    ? ;
.data:000000018001A891                 db    ? ;
.data:000000018001A892                 db    ? ;
.data:000000018001A893                 db    ? ;
.data:000000018001A894                 db    ? ;
.data:000000018001A895                 db    ? ;
.data:000000018001A896                 db    ? ;
.data:000000018001A897                 db    ? ;
.data:000000018001A898                 db    ? ;
.data:000000018001A899                 db    ? ;
.data:000000018001A89A                 db    ? ;
.data:000000018001A89B                 db    ? ;
.data:000000018001A89C                 db    ? ;
.data:000000018001A89D                 db    ? ;
.data:000000018001A89E                 db    ? ;
.data:000000018001A89F                 db    ? ;
.data:000000018001A8A0                 db    ? ;
.data:000000018001A8A1                 db    ? ;
.data:000000018001A8A2                 db    ? ;
.data:000000018001A8A3                 db    ? ;
.data:000000018001A8A4                 db    ? ;
.data:000000018001A8A5                 db    ? ;
.data:000000018001A8A6                 db    ? ;
.data:000000018001A8A7                 db    ? ;
.data:000000018001A8A8                 db    ? ;
.data:000000018001A8A9                 db    ? ;
.data:000000018001A8AA                 db    ? ;
.data:000000018001A8AB                 db    ? ;
.data:000000018001A8AC                 db    ? ;
.data:000000018001A8AD                 db    ? ;
.data:000000018001A8AE                 db    ? ;
.data:000000018001A8AF                 db    ? ;
.data:000000018001A8B0                 db    ? ;
.data:000000018001A8B1                 db    ? ;
.data:000000018001A8B2                 db    ? ;
.data:000000018001A8B3                 db    ? ;
.data:000000018001A8B4                 db    ? ;
.data:000000018001A8B5                 db    ? ;
.data:000000018001A8B6                 db    ? ;
.data:000000018001A8B7                 db    ? ;
.data:000000018001A8B8                 db    ? ;
.data:000000018001A8B9                 db    ? ;
.data:000000018001A8BA                 db    ? ;
.data:000000018001A8BB                 db    ? ;
.data:000000018001A8BC                 db    ? ;
.data:000000018001A8BD                 db    ? ;
.data:000000018001A8BE                 db    ? ;
.data:000000018001A8BF                 db    ? ;
.data:000000018001A8C0                 db    ? ;
.data:000000018001A8C1                 db    ? ;
.data:000000018001A8C2                 db    ? ;
.data:000000018001A8C3                 db    ? ;
.data:000000018001A8C4                 db    ? ;
.data:000000018001A8C5                 db    ? ;
.data:000000018001A8C6                 db    ? ;
.data:000000018001A8C7                 db    ? ;
.data:000000018001A8C8                 db    ? ;
.data:000000018001A8C9                 db    ? ;
.data:000000018001A8CA                 db    ? ;
.data:000000018001A8CB                 db    ? ;
.data:000000018001A8CC                 db    ? ;
.data:000000018001A8CD                 db    ? ;
.data:000000018001A8CE                 db    ? ;
.data:000000018001A8CF                 db    ? ;
.data:000000018001A8D0                 db    ? ;
.data:000000018001A8D1                 db    ? ;
.data:000000018001A8D2                 db    ? ;
.data:000000018001A8D3                 db    ? ;
.data:000000018001A8D4                 db    ? ;
.data:000000018001A8D5                 db    ? ;
.data:000000018001A8D6                 db    ? ;
.data:000000018001A8D7                 db    ? ;
.data:000000018001A8D8                 db    ? ;
.data:000000018001A8D9                 db    ? ;
.data:000000018001A8DA                 db    ? ;
.data:000000018001A8DB                 db    ? ;
.data:000000018001A8DC                 db    ? ;
.data:000000018001A8DD                 db    ? ;
.data:000000018001A8DE                 db    ? ;
.data:000000018001A8DF                 db    ? ;
.data:000000018001A8E0                 db    ? ;
.data:000000018001A8E1                 db    ? ;
.data:000000018001A8E2                 db    ? ;
.data:000000018001A8E3                 db    ? ;
.data:000000018001A8E4                 db    ? ;
.data:000000018001A8E5                 db    ? ;
.data:000000018001A8E6                 db    ? ;
.data:000000018001A8E7                 db    ? ;
.data:000000018001A8E8                 db    ? ;
.data:000000018001A8E9                 db    ? ;
.data:000000018001A8EA                 db    ? ;
.data:000000018001A8EB                 db    ? ;
.data:000000018001A8EC                 db    ? ;
.data:000000018001A8ED                 db    ? ;
.data:000000018001A8EE                 db    ? ;
.data:000000018001A8EF                 db    ? ;
.data:000000018001A8F0                 db    ? ;
.data:000000018001A8F1                 db    ? ;
.data:000000018001A8F2                 db    ? ;
.data:000000018001A8F3                 db    ? ;
.data:000000018001A8F4                 db    ? ;
.data:000000018001A8F5                 db    ? ;
.data:000000018001A8F6                 db    ? ;
.data:000000018001A8F7                 db    ? ;
.data:000000018001A8F8                 db    ? ;
.data:000000018001A8F9                 db    ? ;
.data:000000018001A8FA                 db    ? ;
.data:000000018001A8FB                 db    ? ;
.data:000000018001A8FC                 db    ? ;
.data:000000018001A8FD                 db    ? ;
.data:000000018001A8FE                 db    ? ;
.data:000000018001A8FF                 db    ? ;
.data:000000018001A900                 db    ? ;
.data:000000018001A901                 db    ? ;
.data:000000018001A902                 db    ? ;
.data:000000018001A903                 db    ? ;
.data:000000018001A904                 db    ? ;
.data:000000018001A905                 db    ? ;
.data:000000018001A906                 db    ? ;
.data:000000018001A907                 db    ? ;
.data:000000018001A908                 db    ? ;
.data:000000018001A909                 db    ? ;
.data:000000018001A90A                 db    ? ;
.data:000000018001A90B                 db    ? ;
.data:000000018001A90C                 db    ? ;
.data:000000018001A90D                 db    ? ;
.data:000000018001A90E                 db    ? ;
.data:000000018001A90F                 db    ? ;
.data:000000018001A910                 db    ? ;
.data:000000018001A911                 db    ? ;
.data:000000018001A912                 db    ? ;
.data:000000018001A913                 db    ? ;
.data:000000018001A914                 db    ? ;
.data:000000018001A915                 db    ? ;
.data:000000018001A916                 db    ? ;
.data:000000018001A917                 db    ? ;
.data:000000018001A918                 db    ? ;
.data:000000018001A919                 db    ? ;
.data:000000018001A91A                 db    ? ;
.data:000000018001A91B                 db    ? ;
.data:000000018001A91C                 db    ? ;
.data:000000018001A91D                 db    ? ;
.data:000000018001A91E                 db    ? ;
.data:000000018001A91F                 db    ? ;
.data:000000018001A920                 db    ? ;
.data:000000018001A921                 db    ? ;
.data:000000018001A922                 db    ? ;
.data:000000018001A923                 db    ? ;
.data:000000018001A924                 db    ? ;
.data:000000018001A925                 db    ? ;
.data:000000018001A926                 db    ? ;
.data:000000018001A927                 db    ? ;
.data:000000018001A928                 db    ? ;
.data:000000018001A929                 db    ? ;
.data:000000018001A92A                 db    ? ;
.data:000000018001A92B                 db    ? ;
.data:000000018001A92C                 db    ? ;
.data:000000018001A92D                 db    ? ;
.data:000000018001A92E                 db    ? ;
.data:000000018001A92F                 db    ? ;
.data:000000018001A930                 db    ? ;
.data:000000018001A931                 db    ? ;
.data:000000018001A932                 db    ? ;
.data:000000018001A933                 db    ? ;
.data:000000018001A934                 db    ? ;
.data:000000018001A935                 db    ? ;
.data:000000018001A936                 db    ? ;
.data:000000018001A937                 db    ? ;
.data:000000018001A938                 db    ? ;
.data:000000018001A939                 db    ? ;
.data:000000018001A93A                 db    ? ;
.data:000000018001A93B                 db    ? ;
.data:000000018001A93C                 db    ? ;
.data:000000018001A93D                 db    ? ;
.data:000000018001A93E                 db    ? ;
.data:000000018001A93F                 db    ? ;
.data:000000018001A940                 db    ? ;
.data:000000018001A941                 db    ? ;
.data:000000018001A942                 db    ? ;
.data:000000018001A943                 db    ? ;
.data:000000018001A944                 db    ? ;
.data:000000018001A945                 db    ? ;
.data:000000018001A946                 db    ? ;
.data:000000018001A947                 db    ? ;
.data:000000018001A948                 db    ? ;
.data:000000018001A949                 db    ? ;
.data:000000018001A94A                 db    ? ;
.data:000000018001A94B                 db    ? ;
.data:000000018001A94C                 db    ? ;
.data:000000018001A94D                 db    ? ;
.data:000000018001A94E                 db    ? ;
.data:000000018001A94F                 db    ? ;
.data:000000018001A950                 db    ? ;
.data:000000018001A951                 db    ? ;
.data:000000018001A952                 db    ? ;
.data:000000018001A953                 db    ? ;
.data:000000018001A954                 db    ? ;
.data:000000018001A955                 db    ? ;
.data:000000018001A956                 db    ? ;
.data:000000018001A957                 db    ? ;
.data:000000018001A958                 db    ? ;
.data:000000018001A959                 db    ? ;
.data:000000018001A95A                 db    ? ;
.data:000000018001A95B                 db    ? ;
.data:000000018001A95C                 db    ? ;
.data:000000018001A95D                 db    ? ;
.data:000000018001A95E                 db    ? ;
.data:000000018001A95F                 db    ? ;
.data:000000018001A960                 db    ? ;
.data:000000018001A961                 db    ? ;
.data:000000018001A962                 db    ? ;
.data:000000018001A963                 db    ? ;
.data:000000018001A964                 db    ? ;
.data:000000018001A965                 db    ? ;
.data:000000018001A966                 db    ? ;
.data:000000018001A967                 db    ? ;
.data:000000018001A968                 db    ? ;
.data:000000018001A969                 db    ? ;
.data:000000018001A96A                 db    ? ;
.data:000000018001A96B                 db    ? ;
.data:000000018001A96C                 db    ? ;
.data:000000018001A96D                 db    ? ;
.data:000000018001A96E                 db    ? ;
.data:000000018001A96F                 db    ? ;
.data:000000018001A970                 db    ? ;
.data:000000018001A971                 db    ? ;
.data:000000018001A972                 db    ? ;
.data:000000018001A973                 db    ? ;
.data:000000018001A974                 db    ? ;
.data:000000018001A975                 db    ? ;
.data:000000018001A976                 db    ? ;
.data:000000018001A977                 db    ? ;
.data:000000018001A978                 db    ? ;
.data:000000018001A979                 db    ? ;
.data:000000018001A97A                 db    ? ;
.data:000000018001A97B                 db    ? ;
.data:000000018001A97C                 db    ? ;
.data:000000018001A97D                 db    ? ;
.data:000000018001A97E                 db    ? ;
.data:000000018001A97F                 db    ? ;
.data:000000018001A980                 db    ? ;
.data:000000018001A981                 db    ? ;
.data:000000018001A982                 db    ? ;
.data:000000018001A983                 db    ? ;
.data:000000018001A984                 db    ? ;
.data:000000018001A985                 db    ? ;
.data:000000018001A986                 db    ? ;
.data:000000018001A987                 db    ? ;
.data:000000018001A988                 db    ? ;
.data:000000018001A989                 db    ? ;
.data:000000018001A98A                 db    ? ;
.data:000000018001A98B                 db    ? ;
.data:000000018001A98C                 db    ? ;
.data:000000018001A98D                 db    ? ;
.data:000000018001A98E                 db    ? ;
.data:000000018001A98F                 db    ? ;
.data:000000018001A990                 db    ? ;
.data:000000018001A991                 db    ? ;
.data:000000018001A992                 db    ? ;
.data:000000018001A993                 db    ? ;
.data:000000018001A994                 db    ? ;
.data:000000018001A995                 db    ? ;
.data:000000018001A996                 db    ? ;
.data:000000018001A997                 db    ? ;
.data:000000018001A998                 db    ? ;
.data:000000018001A999                 db    ? ;
.data:000000018001A99A                 db    ? ;
.data:000000018001A99B                 db    ? ;
.data:000000018001A99C                 db    ? ;
.data:000000018001A99D                 db    ? ;
.data:000000018001A99E                 db    ? ;
.data:000000018001A99F                 db    ? ;
.data:000000018001A9A0                 db    ? ;
.data:000000018001A9A1                 db    ? ;
.data:000000018001A9A2                 db    ? ;
.data:000000018001A9A3                 db    ? ;
.data:000000018001A9A4                 db    ? ;
.data:000000018001A9A5                 db    ? ;
.data:000000018001A9A6                 db    ? ;
.data:000000018001A9A7                 db    ? ;
.data:000000018001A9A8                 db    ? ;
.data:000000018001A9A9                 db    ? ;
.data:000000018001A9AA                 db    ? ;
.data:000000018001A9AB                 db    ? ;
.data:000000018001A9AC                 db    ? ;
.data:000000018001A9AD                 db    ? ;
.data:000000018001A9AE                 db    ? ;
.data:000000018001A9AF                 db    ? ;
.data:000000018001A9B0                 db    ? ;
.data:000000018001A9B1                 db    ? ;
.data:000000018001A9B2                 db    ? ;
.data:000000018001A9B3                 db    ? ;
.data:000000018001A9B4                 db    ? ;
.data:000000018001A9B5                 db    ? ;
.data:000000018001A9B6                 db    ? ;
.data:000000018001A9B7                 db    ? ;
.data:000000018001A9B8                 db    ? ;
.data:000000018001A9B9                 db    ? ;
.data:000000018001A9BA                 db    ? ;
.data:000000018001A9BB                 db    ? ;
.data:000000018001A9BC                 db    ? ;
.data:000000018001A9BD                 db    ? ;
.data:000000018001A9BE                 db    ? ;
.data:000000018001A9BF                 db    ? ;
.data:000000018001A9C0                 db    ? ;
.data:000000018001A9C1                 db    ? ;
.data:000000018001A9C2                 db    ? ;
.data:000000018001A9C3                 db    ? ;
.data:000000018001A9C4                 db    ? ;
.data:000000018001A9C5                 db    ? ;
.data:000000018001A9C6                 db    ? ;
.data:000000018001A9C7                 db    ? ;
.data:000000018001A9C8                 db    ? ;
.data:000000018001A9C9                 db    ? ;
.data:000000018001A9CA                 db    ? ;
.data:000000018001A9CB                 db    ? ;
.data:000000018001A9CC                 db    ? ;
.data:000000018001A9CD                 db    ? ;
.data:000000018001A9CE                 db    ? ;
.data:000000018001A9CF                 db    ? ;
.data:000000018001A9D0                 db    ? ;
.data:000000018001A9D1                 db    ? ;
.data:000000018001A9D2                 db    ? ;
.data:000000018001A9D3                 db    ? ;
.data:000000018001A9D4                 db    ? ;
.data:000000018001A9D5                 db    ? ;
.data:000000018001A9D6                 db    ? ;
.data:000000018001A9D7                 db    ? ;
.data:000000018001A9D8                 db    ? ;
.data:000000018001A9D9                 db    ? ;
.data:000000018001A9DA                 db    ? ;
.data:000000018001A9DB                 db    ? ;
.data:000000018001A9DC                 db    ? ;
.data:000000018001A9DD                 db    ? ;
.data:000000018001A9DE                 db    ? ;
.data:000000018001A9DF                 db    ? ;
.data:000000018001A9E0                 db    ? ;
.data:000000018001A9E1                 db    ? ;
.data:000000018001A9E2                 db    ? ;
.data:000000018001A9E3                 db    ? ;
.data:000000018001A9E4                 db    ? ;
.data:000000018001A9E5                 db    ? ;
.data:000000018001A9E6                 db    ? ;
.data:000000018001A9E7                 db    ? ;
.data:000000018001A9E8                 db    ? ;
.data:000000018001A9E9                 db    ? ;
.data:000000018001A9EA                 db    ? ;
.data:000000018001A9EB                 db    ? ;
.data:000000018001A9EC                 db    ? ;
.data:000000018001A9ED                 db    ? ;
.data:000000018001A9EE                 db    ? ;
.data:000000018001A9EF                 db    ? ;
.data:000000018001A9F0                 db    ? ;
.data:000000018001A9F1                 db    ? ;
.data:000000018001A9F2                 db    ? ;
.data:000000018001A9F3                 db    ? ;
.data:000000018001A9F4                 db    ? ;
.data:000000018001A9F5                 db    ? ;
.data:000000018001A9F6                 db    ? ;
.data:000000018001A9F7                 db    ? ;
.data:000000018001A9F8                 db    ? ;
.data:000000018001A9F9                 db    ? ;
.data:000000018001A9FA                 db    ? ;
.data:000000018001A9FB                 db    ? ;
.data:000000018001A9FC                 db    ? ;
.data:000000018001A9FD                 db    ? ;
.data:000000018001A9FE                 db    ? ;
.data:000000018001A9FF                 db    ? ;
.data:000000018001AA00                 db    ? ;
.data:000000018001AA01                 db    ? ;
.data:000000018001AA02                 db    ? ;
.data:000000018001AA03                 db    ? ;
.data:000000018001AA04                 db    ? ;
.data:000000018001AA05                 db    ? ;
.data:000000018001AA06                 db    ? ;
.data:000000018001AA07                 db    ? ;
.data:000000018001AA08                 db    ? ;
.data:000000018001AA09                 db    ? ;
.data:000000018001AA0A                 db    ? ;
.data:000000018001AA0B                 db    ? ;
.data:000000018001AA0C                 db    ? ;
.data:000000018001AA0D                 db    ? ;
.data:000000018001AA0E                 db    ? ;
.data:000000018001AA0F                 db    ? ;
.data:000000018001AA10                 db    ? ;
.data:000000018001AA11                 db    ? ;
.data:000000018001AA12                 db    ? ;
.data:000000018001AA13                 db    ? ;
.data:000000018001AA14                 db    ? ;
.data:000000018001AA15                 db    ? ;
.data:000000018001AA16                 db    ? ;
.data:000000018001AA17                 db    ? ;
.data:000000018001AA18                 db    ? ;
.data:000000018001AA19                 db    ? ;
.data:000000018001AA1A                 db    ? ;
.data:000000018001AA1B                 db    ? ;
.data:000000018001AA1C                 db    ? ;
.data:000000018001AA1D                 db    ? ;
.data:000000018001AA1E                 db    ? ;
.data:000000018001AA1F                 db    ? ;
.data:000000018001AA20                 db    ? ;
.data:000000018001AA21                 db    ? ;
.data:000000018001AA22                 db    ? ;
.data:000000018001AA23                 db    ? ;
.data:000000018001AA24                 db    ? ;
.data:000000018001AA25                 db    ? ;
.data:000000018001AA26                 db    ? ;
.data:000000018001AA27                 db    ? ;
.data:000000018001AA28                 db    ? ;
.data:000000018001AA29                 db    ? ;
.data:000000018001AA2A                 db    ? ;
.data:000000018001AA2B                 db    ? ;
.data:000000018001AA2C                 db    ? ;
.data:000000018001AA2D                 db    ? ;
.data:000000018001AA2E                 db    ? ;
.data:000000018001AA2F                 db    ? ;
.data:000000018001AA30                 db    ? ;
.data:000000018001AA31                 db    ? ;
.data:000000018001AA32                 db    ? ;
.data:000000018001AA33                 db    ? ;
.data:000000018001AA34                 db    ? ;
.data:000000018001AA35                 db    ? ;
.data:000000018001AA36                 db    ? ;
.data:000000018001AA37                 db    ? ;
.data:000000018001AA38                 db    ? ;
.data:000000018001AA39                 db    ? ;
.data:000000018001AA3A                 db    ? ;
.data:000000018001AA3B                 db    ? ;
.data:000000018001AA3C                 db    ? ;
.data:000000018001AA3D                 db    ? ;
.data:000000018001AA3E                 db    ? ;
.data:000000018001AA3F                 db    ? ;
.data:000000018001AA40                 db    ? ;
.data:000000018001AA41                 db    ? ;
.data:000000018001AA42                 db    ? ;
.data:000000018001AA43                 db    ? ;
.data:000000018001AA44                 db    ? ;
.data:000000018001AA45                 db    ? ;
.data:000000018001AA46                 db    ? ;
.data:000000018001AA47                 db    ? ;
.data:000000018001AA48                 db    ? ;
.data:000000018001AA49                 db    ? ;
.data:000000018001AA4A                 db    ? ;
.data:000000018001AA4B                 db    ? ;
.data:000000018001AA4C                 db    ? ;
.data:000000018001AA4D                 db    ? ;
.data:000000018001AA4E                 db    ? ;
.data:000000018001AA4F                 db    ? ;
.data:000000018001AA50                 db    ? ;
.data:000000018001AA51                 db    ? ;
.data:000000018001AA52                 db    ? ;
.data:000000018001AA53                 db    ? ;
.data:000000018001AA54                 db    ? ;
.data:000000018001AA55                 db    ? ;
.data:000000018001AA56                 db    ? ;
.data:000000018001AA57                 db    ? ;
.data:000000018001AA58                 db    ? ;
.data:000000018001AA59                 db    ? ;
.data:000000018001AA5A                 db    ? ;
.data:000000018001AA5B                 db    ? ;
.data:000000018001AA5C                 db    ? ;
.data:000000018001AA5D                 db    ? ;
.data:000000018001AA5E                 db    ? ;
.data:000000018001AA5F                 db    ? ;
.data:000000018001AA60                 db    ? ;
.data:000000018001AA61                 db    ? ;
.data:000000018001AA62                 db    ? ;
.data:000000018001AA63                 db    ? ;
.data:000000018001AA64                 db    ? ;
.data:000000018001AA65                 db    ? ;
.data:000000018001AA66                 db    ? ;
.data:000000018001AA67                 db    ? ;
.data:000000018001AA68                 db    ? ;
.data:000000018001AA69                 db    ? ;
.data:000000018001AA6A                 db    ? ;
.data:000000018001AA6B                 db    ? ;
.data:000000018001AA6C                 db    ? ;
.data:000000018001AA6D                 db    ? ;
.data:000000018001AA6E                 db    ? ;
.data:000000018001AA6F                 db    ? ;
.data:000000018001AA70                 db    ? ;
.data:000000018001AA71                 db    ? ;
.data:000000018001AA72                 db    ? ;
.data:000000018001AA73                 db    ? ;
.data:000000018001AA74                 db    ? ;
.data:000000018001AA75                 db    ? ;
.data:000000018001AA76                 db    ? ;
.data:000000018001AA77                 db    ? ;
.data:000000018001AA78                 db    ? ;
.data:000000018001AA79                 db    ? ;
.data:000000018001AA7A                 db    ? ;
.data:000000018001AA7B                 db    ? ;
.data:000000018001AA7C                 db    ? ;
.data:000000018001AA7D                 db    ? ;
.data:000000018001AA7E                 db    ? ;
.data:000000018001AA7F                 db    ? ;
.data:000000018001AA80                 db    ? ;
.data:000000018001AA81                 db    ? ;
.data:000000018001AA82                 db    ? ;
.data:000000018001AA83                 db    ? ;
.data:000000018001AA84                 db    ? ;
.data:000000018001AA85                 db    ? ;
.data:000000018001AA86                 db    ? ;
.data:000000018001AA87                 db    ? ;
.data:000000018001AA88                 db    ? ;
.data:000000018001AA89                 db    ? ;
.data:000000018001AA8A                 db    ? ;
.data:000000018001AA8B                 db    ? ;
.data:000000018001AA8C                 db    ? ;
.data:000000018001AA8D                 db    ? ;
.data:000000018001AA8E                 db    ? ;
.data:000000018001AA8F                 db    ? ;
.data:000000018001AA90                 db    ? ;
.data:000000018001AA91                 db    ? ;
.data:000000018001AA92                 db    ? ;
.data:000000018001AA93                 db    ? ;
.data:000000018001AA94                 db    ? ;
.data:000000018001AA95                 db    ? ;
.data:000000018001AA96                 db    ? ;
.data:000000018001AA97                 db    ? ;
.data:000000018001AA98                 db    ? ;
.data:000000018001AA99                 db    ? ;
.data:000000018001AA9A                 db    ? ;
.data:000000018001AA9B                 db    ? ;
.data:000000018001AA9C                 db    ? ;
.data:000000018001AA9D                 db    ? ;
.data:000000018001AA9E                 db    ? ;
.data:000000018001AA9F                 db    ? ;
.data:000000018001AAA0                 db    ? ;
.data:000000018001AAA1                 db    ? ;
.data:000000018001AAA2                 db    ? ;
.data:000000018001AAA3                 db    ? ;
.data:000000018001AAA4                 db    ? ;
.data:000000018001AAA5                 db    ? ;
.data:000000018001AAA6                 db    ? ;
.data:000000018001AAA7                 db    ? ;
.data:000000018001AAA8                 db    ? ;
.data:000000018001AAA9                 db    ? ;
.data:000000018001AAAA                 db    ? ;
.data:000000018001AAAB                 db    ? ;
.data:000000018001AAAC                 db    ? ;
.data:000000018001AAAD                 db    ? ;
.data:000000018001AAAE                 db    ? ;
.data:000000018001AAAF                 db    ? ;
.data:000000018001AAB0                 db    ? ;
.data:000000018001AAB1                 db    ? ;
.data:000000018001AAB2                 db    ? ;
.data:000000018001AAB3                 db    ? ;
.data:000000018001AAB4                 db    ? ;
.data:000000018001AAB5                 db    ? ;
.data:000000018001AAB6                 db    ? ;
.data:000000018001AAB7                 db    ? ;
.data:000000018001AAB8                 db    ? ;
.data:000000018001AAB9                 db    ? ;
.data:000000018001AABA                 db    ? ;
.data:000000018001AABB                 db    ? ;
.data:000000018001AABC                 db    ? ;
.data:000000018001AABD                 db    ? ;
.data:000000018001AABE                 db    ? ;
.data:000000018001AABF                 db    ? ;
.data:000000018001AAC0                 db    ? ;
.data:000000018001AAC1                 db    ? ;
.data:000000018001AAC2                 db    ? ;
.data:000000018001AAC3                 db    ? ;
.data:000000018001AAC4                 db    ? ;
.data:000000018001AAC5                 db    ? ;
.data:000000018001AAC6                 db    ? ;
.data:000000018001AAC7                 db    ? ;
.data:000000018001AAC8                 db    ? ;
.data:000000018001AAC9                 db    ? ;
.data:000000018001AACA                 db    ? ;
.data:000000018001AACB                 db    ? ;
.data:000000018001AACC                 db    ? ;
.data:000000018001AACD                 db    ? ;
.data:000000018001AACE                 db    ? ;
.data:000000018001AACF                 db    ? ;
.data:000000018001AAD0                 db    ? ;
.data:000000018001AAD1                 db    ? ;
.data:000000018001AAD2                 db    ? ;
.data:000000018001AAD3                 db    ? ;
.data:000000018001AAD4                 db    ? ;
.data:000000018001AAD5                 db    ? ;
.data:000000018001AAD6                 db    ? ;
.data:000000018001AAD7                 db    ? ;
.data:000000018001AAD8                 db    ? ;
.data:000000018001AAD9                 db    ? ;
.data:000000018001AADA                 db    ? ;
.data:000000018001AADB                 db    ? ;
.data:000000018001AADC                 db    ? ;
.data:000000018001AADD                 db    ? ;
.data:000000018001AADE                 db    ? ;
.data:000000018001AADF                 db    ? ;
.data:000000018001AAE0                 db    ? ;
.data:000000018001AAE1                 db    ? ;
.data:000000018001AAE2                 db    ? ;
.data:000000018001AAE3                 db    ? ;
.data:000000018001AAE4                 db    ? ;
.data:000000018001AAE5                 db    ? ;
.data:000000018001AAE6                 db    ? ;
.data:000000018001AAE7                 db    ? ;
.data:000000018001AAE8                 db    ? ;
.data:000000018001AAE9                 db    ? ;
.data:000000018001AAEA                 db    ? ;
.data:000000018001AAEB                 db    ? ;
.data:000000018001AAEC                 db    ? ;
.data:000000018001AAED                 db    ? ;
.data:000000018001AAEE                 db    ? ;
.data:000000018001AAEF                 db    ? ;
.data:000000018001AAF0                 db    ? ;
.data:000000018001AAF1                 db    ? ;
.data:000000018001AAF2                 db    ? ;
.data:000000018001AAF3                 db    ? ;
.data:000000018001AAF4                 db    ? ;
.data:000000018001AAF5                 db    ? ;
.data:000000018001AAF6                 db    ? ;
.data:000000018001AAF7                 db    ? ;
.data:000000018001AAF8                 db    ? ;
.data:000000018001AAF9                 db    ? ;
.data:000000018001AAFA                 db    ? ;
.data:000000018001AAFB                 db    ? ;
.data:000000018001AAFC                 db    ? ;
.data:000000018001AAFD                 db    ? ;
.data:000000018001AAFE                 db    ? ;
.data:000000018001AAFF                 db    ? ;
.data:000000018001AB00                 db    ? ;
.data:000000018001AB01                 db    ? ;
.data:000000018001AB02                 db    ? ;
.data:000000018001AB03                 db    ? ;
.data:000000018001AB04                 db    ? ;
.data:000000018001AB05                 db    ? ;
.data:000000018001AB06                 db    ? ;
.data:000000018001AB07                 db    ? ;
.data:000000018001AB08                 db    ? ;
.data:000000018001AB09                 db    ? ;
.data:000000018001AB0A                 db    ? ;
.data:000000018001AB0B                 db    ? ;
.data:000000018001AB0C                 db    ? ;
.data:000000018001AB0D                 db    ? ;
.data:000000018001AB0E                 db    ? ;
.data:000000018001AB0F                 db    ? ;
.data:000000018001AB10                 db    ? ;
.data:000000018001AB11                 db    ? ;
.data:000000018001AB12                 db    ? ;
.data:000000018001AB13                 db    ? ;
.data:000000018001AB14                 db    ? ;
.data:000000018001AB15                 db    ? ;
.data:000000018001AB16                 db    ? ;
.data:000000018001AB17                 db    ? ;
.data:000000018001AB18                 db    ? ;
.data:000000018001AB19                 db    ? ;
.data:000000018001AB1A                 db    ? ;
.data:000000018001AB1B                 db    ? ;
.data:000000018001AB1C                 db    ? ;
.data:000000018001AB1D                 db    ? ;
.data:000000018001AB1E                 db    ? ;
.data:000000018001AB1F                 db    ? ;
.data:000000018001AB20                 db    ? ;
.data:000000018001AB21                 db    ? ;
.data:000000018001AB22                 db    ? ;
.data:000000018001AB23                 db    ? ;
.data:000000018001AB24                 db    ? ;
.data:000000018001AB25                 db    ? ;
.data:000000018001AB26                 db    ? ;
.data:000000018001AB27                 db    ? ;
.data:000000018001AB28                 db    ? ;
.data:000000018001AB29                 db    ? ;
.data:000000018001AB2A                 db    ? ;
.data:000000018001AB2B                 db    ? ;
.data:000000018001AB2C                 db    ? ;
.data:000000018001AB2D                 db    ? ;
.data:000000018001AB2E                 db    ? ;
.data:000000018001AB2F                 db    ? ;
.data:000000018001AB30                 db    ? ;
.data:000000018001AB31                 db    ? ;
.data:000000018001AB32                 db    ? ;
.data:000000018001AB33                 db    ? ;
.data:000000018001AB34                 db    ? ;
.data:000000018001AB35                 db    ? ;
.data:000000018001AB36                 db    ? ;
.data:000000018001AB37                 db    ? ;
.data:000000018001AB38                 db    ? ;
.data:000000018001AB39                 db    ? ;
.data:000000018001AB3A                 db    ? ;
.data:000000018001AB3B                 db    ? ;
.data:000000018001AB3C                 db    ? ;
.data:000000018001AB3D                 db    ? ;
.data:000000018001AB3E                 db    ? ;
.data:000000018001AB3F                 db    ? ;
.data:000000018001AB40                 db    ? ;
.data:000000018001AB41                 db    ? ;
.data:000000018001AB42                 db    ? ;
.data:000000018001AB43                 db    ? ;
.data:000000018001AB44                 db    ? ;
.data:000000018001AB45                 db    ? ;
.data:000000018001AB46                 db    ? ;
.data:000000018001AB47                 db    ? ;
.data:000000018001AB48                 db    ? ;
.data:000000018001AB49                 db    ? ;
.data:000000018001AB4A                 db    ? ;
.data:000000018001AB4B                 db    ? ;
.data:000000018001AB4C                 db    ? ;
.data:000000018001AB4D                 db    ? ;
.data:000000018001AB4E                 db    ? ;
.data:000000018001AB4F                 db    ? ;
.data:000000018001AB50                 db    ? ;
.data:000000018001AB51                 db    ? ;
.data:000000018001AB52                 db    ? ;
.data:000000018001AB53                 db    ? ;
.data:000000018001AB54                 db    ? ;
.data:000000018001AB55                 db    ? ;
.data:000000018001AB56                 db    ? ;
.data:000000018001AB57                 db    ? ;
.data:000000018001AB58                 db    ? ;
.data:000000018001AB59                 db    ? ;
.data:000000018001AB5A                 db    ? ;
.data:000000018001AB5B                 db    ? ;
.data:000000018001AB5C                 db    ? ;
.data:000000018001AB5D                 db    ? ;
.data:000000018001AB5E                 db    ? ;
.data:000000018001AB5F                 db    ? ;
.data:000000018001AB60                 db    ? ;
.data:000000018001AB61                 db    ? ;
.data:000000018001AB62                 db    ? ;
.data:000000018001AB63                 db    ? ;
.data:000000018001AB64                 db    ? ;
.data:000000018001AB65                 db    ? ;
.data:000000018001AB66                 db    ? ;
.data:000000018001AB67                 db    ? ;
.data:000000018001AB68                 db    ? ;
.data:000000018001AB69                 db    ? ;
.data:000000018001AB6A                 db    ? ;
.data:000000018001AB6B                 db    ? ;
.data:000000018001AB6C                 db    ? ;
.data:000000018001AB6D                 db    ? ;
.data:000000018001AB6E                 db    ? ;
.data:000000018001AB6F                 db    ? ;
.data:000000018001AB70                 db    ? ;
.data:000000018001AB71                 db    ? ;
.data:000000018001AB72                 db    ? ;
.data:000000018001AB73                 db    ? ;
.data:000000018001AB74                 db    ? ;
.data:000000018001AB75                 db    ? ;
.data:000000018001AB76                 db    ? ;
.data:000000018001AB77                 db    ? ;
.data:000000018001AB78                 db    ? ;
.data:000000018001AB79                 db    ? ;
.data:000000018001AB7A                 db    ? ;
.data:000000018001AB7B                 db    ? ;
.data:000000018001AB7C                 db    ? ;
.data:000000018001AB7D                 db    ? ;
.data:000000018001AB7E                 db    ? ;
.data:000000018001AB7F                 db    ? ;
.data:000000018001AB80                 db    ? ;
.data:000000018001AB81                 db    ? ;
.data:000000018001AB82                 db    ? ;
.data:000000018001AB83                 db    ? ;
.data:000000018001AB84                 db    ? ;
.data:000000018001AB85                 db    ? ;
.data:000000018001AB86                 db    ? ;
.data:000000018001AB87                 db    ? ;
.data:000000018001AB88                 db    ? ;
.data:000000018001AB89                 db    ? ;
.data:000000018001AB8A                 db    ? ;
.data:000000018001AB8B                 db    ? ;
.data:000000018001AB8C                 db    ? ;
.data:000000018001AB8D                 db    ? ;
.data:000000018001AB8E                 db    ? ;
.data:000000018001AB8F                 db    ? ;
.data:000000018001AB90                 db    ? ;
.data:000000018001AB91                 db    ? ;
.data:000000018001AB92                 db    ? ;
.data:000000018001AB93                 db    ? ;
.data:000000018001AB94                 db    ? ;
.data:000000018001AB95                 db    ? ;
.data:000000018001AB96                 db    ? ;
.data:000000018001AB97                 db    ? ;
.data:000000018001AB98                 db    ? ;
.data:000000018001AB99                 db    ? ;
.data:000000018001AB9A                 db    ? ;
.data:000000018001AB9B                 db    ? ;
.data:000000018001AB9C                 db    ? ;
.data:000000018001AB9D                 db    ? ;
.data:000000018001AB9E                 db    ? ;
.data:000000018001AB9F                 db    ? ;
.data:000000018001ABA0                 db    ? ;
.data:000000018001ABA1                 db    ? ;
.data:000000018001ABA2                 db    ? ;
.data:000000018001ABA3                 db    ? ;
.data:000000018001ABA4                 db    ? ;
.data:000000018001ABA5                 db    ? ;
.data:000000018001ABA6                 db    ? ;
.data:000000018001ABA7                 db    ? ;
.data:000000018001ABA8                 db    ? ;
.data:000000018001ABA9                 db    ? ;
.data:000000018001ABAA                 db    ? ;
.data:000000018001ABAB                 db    ? ;
.data:000000018001ABAC                 db    ? ;
.data:000000018001ABAD                 db    ? ;
.data:000000018001ABAE                 db    ? ;
.data:000000018001ABAF                 db    ? ;
.data:000000018001ABB0                 db    ? ;
.data:000000018001ABB1                 db    ? ;
.data:000000018001ABB2                 db    ? ;
.data:000000018001ABB3                 db    ? ;
.data:000000018001ABB4                 db    ? ;
.data:000000018001ABB5                 db    ? ;
.data:000000018001ABB6                 db    ? ;
.data:000000018001ABB7                 db    ? ;
.data:000000018001ABB8                 db    ? ;
.data:000000018001ABB9                 db    ? ;
.data:000000018001ABBA                 db    ? ;
.data:000000018001ABBB                 db    ? ;
.data:000000018001ABBC                 db    ? ;
.data:000000018001ABBD                 db    ? ;
.data:000000018001ABBE                 db    ? ;
.data:000000018001ABBF                 db    ? ;
.data:000000018001ABC0                 db    ? ;
.data:000000018001ABC1                 db    ? ;
.data:000000018001ABC2                 db    ? ;
.data:000000018001ABC3                 db    ? ;
.data:000000018001ABC4                 db    ? ;
.data:000000018001ABC5                 db    ? ;
.data:000000018001ABC6                 db    ? ;
.data:000000018001ABC7                 db    ? ;
.data:000000018001ABC8                 db    ? ;
.data:000000018001ABC9                 db    ? ;
.data:000000018001ABCA                 db    ? ;
.data:000000018001ABCB                 db    ? ;
.data:000000018001ABCC                 db    ? ;
.data:000000018001ABCD                 db    ? ;
.data:000000018001ABCE                 db    ? ;
.data:000000018001ABCF                 db    ? ;
.data:000000018001ABD0                 db    ? ;
.data:000000018001ABD1                 db    ? ;
.data:000000018001ABD2                 db    ? ;
.data:000000018001ABD3                 db    ? ;
.data:000000018001ABD4                 db    ? ;
.data:000000018001ABD5                 db    ? ;
.data:000000018001ABD6                 db    ? ;
.data:000000018001ABD7                 db    ? ;
.data:000000018001ABD8                 db    ? ;
.data:000000018001ABD9                 db    ? ;
.data:000000018001ABDA                 db    ? ;
.data:000000018001ABDB                 db    ? ;
.data:000000018001ABDC                 db    ? ;
.data:000000018001ABDD                 db    ? ;
.data:000000018001ABDE                 db    ? ;
.data:000000018001ABDF                 db    ? ;
.data:000000018001ABE0                 db    ? ;
.data:000000018001ABE1                 db    ? ;
.data:000000018001ABE2                 db    ? ;
.data:000000018001ABE3                 db    ? ;
.data:000000018001ABE4                 db    ? ;
.data:000000018001ABE5                 db    ? ;
.data:000000018001ABE6                 db    ? ;
.data:000000018001ABE7                 db    ? ;
.data:000000018001ABE8                 db    ? ;
.data:000000018001ABE9                 db    ? ;
.data:000000018001ABEA                 db    ? ;
.data:000000018001ABEB                 db    ? ;
.data:000000018001ABEC                 db    ? ;
.data:000000018001ABED                 db    ? ;
.data:000000018001ABEE                 db    ? ;
.data:000000018001ABEF                 db    ? ;
.data:000000018001ABF0                 db    ? ;
.data:000000018001ABF1                 db    ? ;
.data:000000018001ABF2                 db    ? ;
.data:000000018001ABF3                 db    ? ;
.data:000000018001ABF4                 db    ? ;
.data:000000018001ABF5                 db    ? ;
.data:000000018001ABF6                 db    ? ;
.data:000000018001ABF7                 db    ? ;
.data:000000018001ABF8                 db    ? ;
.data:000000018001ABF9                 db    ? ;
.data:000000018001ABFA                 db    ? ;
.data:000000018001ABFB                 db    ? ;
.data:000000018001ABFC                 db    ? ;
.data:000000018001ABFD                 db    ? ;
.data:000000018001ABFE                 db    ? ;
.data:000000018001ABFF                 db    ? ;
.data:000000018001AC00                 db    ? ;
.data:000000018001AC01                 db    ? ;
.data:000000018001AC02                 db    ? ;
.data:000000018001AC03                 db    ? ;
.data:000000018001AC04                 db    ? ;
.data:000000018001AC05                 db    ? ;
.data:000000018001AC06                 db    ? ;
.data:000000018001AC07                 db    ? ;
.data:000000018001AC08                 db    ? ;
.data:000000018001AC09                 db    ? ;
.data:000000018001AC0A                 db    ? ;
.data:000000018001AC0B                 db    ? ;
.data:000000018001AC0C                 db    ? ;
.data:000000018001AC0D                 db    ? ;
.data:000000018001AC0E                 db    ? ;
.data:000000018001AC0F                 db    ? ;
.data:000000018001AC10                 db    ? ;
.data:000000018001AC11                 db    ? ;
.data:000000018001AC12                 db    ? ;
.data:000000018001AC13                 db    ? ;
.data:000000018001AC14                 db    ? ;
.data:000000018001AC15                 db    ? ;
.data:000000018001AC16                 db    ? ;
.data:000000018001AC17                 db    ? ;
.data:000000018001AC18                 db    ? ;
.data:000000018001AC19                 db    ? ;
.data:000000018001AC1A                 db    ? ;
.data:000000018001AC1B                 db    ? ;
.data:000000018001AC1C                 db    ? ;
.data:000000018001AC1D                 db    ? ;
.data:000000018001AC1E                 db    ? ;
.data:000000018001AC1F                 db    ? ;
.data:000000018001AC20                 db    ? ;
.data:000000018001AC21                 db    ? ;
.data:000000018001AC22                 db    ? ;
.data:000000018001AC23                 db    ? ;
.data:000000018001AC24                 db    ? ;
.data:000000018001AC25                 db    ? ;
.data:000000018001AC26                 db    ? ;
.data:000000018001AC27                 db    ? ;
.data:000000018001AC28                 db    ? ;
.data:000000018001AC29                 db    ? ;
.data:000000018001AC2A                 db    ? ;
.data:000000018001AC2B                 db    ? ;
.data:000000018001AC2C                 db    ? ;
.data:000000018001AC2D                 db    ? ;
.data:000000018001AC2E                 db    ? ;
.data:000000018001AC2F                 db    ? ;
.data:000000018001AC30                 db    ? ;
.data:000000018001AC31                 db    ? ;
.data:000000018001AC32                 db    ? ;
.data:000000018001AC33                 db    ? ;
.data:000000018001AC34                 db    ? ;
.data:000000018001AC35                 db    ? ;
.data:000000018001AC36                 db    ? ;
.data:000000018001AC37                 db    ? ;
.data:000000018001AC38                 db    ? ;
.data:000000018001AC39                 db    ? ;
.data:000000018001AC3A                 db    ? ;
.data:000000018001AC3B                 db    ? ;
.data:000000018001AC3C                 db    ? ;
.data:000000018001AC3D                 db    ? ;
.data:000000018001AC3E                 db    ? ;
.data:000000018001AC3F                 db    ? ;
.data:000000018001AC40                 db    ? ;
.data:000000018001AC41                 db    ? ;
.data:000000018001AC42                 db    ? ;
.data:000000018001AC43                 db    ? ;
.data:000000018001AC44                 db    ? ;
.data:000000018001AC45                 db    ? ;
.data:000000018001AC46                 db    ? ;
.data:000000018001AC47                 db    ? ;
.data:000000018001AC48                 db    ? ;
.data:000000018001AC49                 db    ? ;
.data:000000018001AC4A                 db    ? ;
.data:000000018001AC4B                 db    ? ;
.data:000000018001AC4C                 db    ? ;
.data:000000018001AC4D                 db    ? ;
.data:000000018001AC4E                 db    ? ;
.data:000000018001AC4F                 db    ? ;
.data:000000018001AC50                 db    ? ;
.data:000000018001AC51                 db    ? ;
.data:000000018001AC52                 db    ? ;
.data:000000018001AC53                 db    ? ;
.data:000000018001AC54                 db    ? ;
.data:000000018001AC55                 db    ? ;
.data:000000018001AC56                 db    ? ;
.data:000000018001AC57                 db    ? ;
.data:000000018001AC58                 db    ? ;
.data:000000018001AC59                 db    ? ;
.data:000000018001AC5A                 db    ? ;
.data:000000018001AC5B                 db    ? ;
.data:000000018001AC5C                 db    ? ;
.data:000000018001AC5D                 db    ? ;
.data:000000018001AC5E                 db    ? ;
.data:000000018001AC5F                 db    ? ;
.data:000000018001AC60                 db    ? ;
.data:000000018001AC61                 db    ? ;
.data:000000018001AC62                 db    ? ;
.data:000000018001AC63                 db    ? ;
.data:000000018001AC64                 db    ? ;
.data:000000018001AC65                 db    ? ;
.data:000000018001AC66                 db    ? ;
.data:000000018001AC67                 db    ? ;
.data:000000018001AC68                 db    ? ;
.data:000000018001AC69                 db    ? ;
.data:000000018001AC6A                 db    ? ;
.data:000000018001AC6B                 db    ? ;
.data:000000018001AC6C                 db    ? ;
.data:000000018001AC6D                 db    ? ;
.data:000000018001AC6E                 db    ? ;
.data:000000018001AC6F                 db    ? ;
.data:000000018001AC70                 db    ? ;
.data:000000018001AC71                 db    ? ;
.data:000000018001AC72                 db    ? ;
.data:000000018001AC73                 db    ? ;
.data:000000018001AC74                 db    ? ;
.data:000000018001AC75                 db    ? ;
.data:000000018001AC76                 db    ? ;
.data:000000018001AC77                 db    ? ;
.data:000000018001AC78                 db    ? ;
.data:000000018001AC79                 db    ? ;
.data:000000018001AC7A                 db    ? ;
.data:000000018001AC7B                 db    ? ;
.data:000000018001AC7C                 db    ? ;
.data:000000018001AC7D                 db    ? ;
.data:000000018001AC7E                 db    ? ;
.data:000000018001AC7F                 db    ? ;
.data:000000018001AC80                 db    ? ;
.data:000000018001AC81                 db    ? ;
.data:000000018001AC82                 db    ? ;
.data:000000018001AC83                 db    ? ;
.data:000000018001AC84                 db    ? ;
.data:000000018001AC85                 db    ? ;
.data:000000018001AC86                 db    ? ;
.data:000000018001AC87                 db    ? ;
.data:000000018001AC88                 db    ? ;
.data:000000018001AC89                 db    ? ;
.data:000000018001AC8A                 db    ? ;
.data:000000018001AC8B                 db    ? ;
.data:000000018001AC8C                 db    ? ;
.data:000000018001AC8D                 db    ? ;
.data:000000018001AC8E                 db    ? ;
.data:000000018001AC8F                 db    ? ;
.data:000000018001AC90                 db    ? ;
.data:000000018001AC91                 db    ? ;
.data:000000018001AC92                 db    ? ;
.data:000000018001AC93                 db    ? ;
.data:000000018001AC94                 db    ? ;
.data:000000018001AC95                 db    ? ;
.data:000000018001AC96                 db    ? ;
.data:000000018001AC97                 db    ? ;
.data:000000018001AC98                 db    ? ;
.data:000000018001AC99                 db    ? ;
.data:000000018001AC9A                 db    ? ;
.data:000000018001AC9B                 db    ? ;
.data:000000018001AC9C                 db    ? ;
.data:000000018001AC9D                 db    ? ;
.data:000000018001AC9E                 db    ? ;
.data:000000018001AC9F                 db    ? ;
.data:000000018001ACA0                 db    ? ;
.data:000000018001ACA1                 db    ? ;
.data:000000018001ACA2                 db    ? ;
.data:000000018001ACA3                 db    ? ;
.data:000000018001ACA4                 db    ? ;
.data:000000018001ACA5                 db    ? ;
.data:000000018001ACA6                 db    ? ;
.data:000000018001ACA7                 db    ? ;
.data:000000018001ACA8                 db    ? ;
.data:000000018001ACA9                 db    ? ;
.data:000000018001ACAA                 db    ? ;
.data:000000018001ACAB                 db    ? ;
.data:000000018001ACAC                 db    ? ;
.data:000000018001ACAD                 db    ? ;
.data:000000018001ACAE                 db    ? ;
.data:000000018001ACAF                 db    ? ;
.data:000000018001ACB0                 db    ? ;
.data:000000018001ACB1                 db    ? ;
.data:000000018001ACB2                 db    ? ;
.data:000000018001ACB3                 db    ? ;
.data:000000018001ACB4                 db    ? ;
.data:000000018001ACB5                 db    ? ;
.data:000000018001ACB6                 db    ? ;
.data:000000018001ACB7                 db    ? ;
.data:000000018001ACB8                 db    ? ;
.data:000000018001ACB9                 db    ? ;
.data:000000018001ACBA                 db    ? ;
.data:000000018001ACBB                 db    ? ;
.data:000000018001ACBC                 db    ? ;
.data:000000018001ACBD                 db    ? ;
.data:000000018001ACBE                 db    ? ;
.data:000000018001ACBF                 db    ? ;
.data:000000018001ACC0                 db    ? ;
.data:000000018001ACC1                 db    ? ;
.data:000000018001ACC2                 db    ? ;
.data:000000018001ACC3                 db    ? ;
.data:000000018001ACC4                 db    ? ;
.data:000000018001ACC5                 db    ? ;
.data:000000018001ACC6                 db    ? ;
.data:000000018001ACC7                 db    ? ;
.data:000000018001ACC8                 db    ? ;
.data:000000018001ACC9                 db    ? ;
.data:000000018001ACCA                 db    ? ;
.data:000000018001ACCB                 db    ? ;
.data:000000018001ACCC                 db    ? ;
.data:000000018001ACCD                 db    ? ;
.data:000000018001ACCE                 db    ? ;
.data:000000018001ACCF                 db    ? ;
.data:000000018001ACD0                 db    ? ;
.data:000000018001ACD1                 db    ? ;
.data:000000018001ACD2                 db    ? ;
.data:000000018001ACD3                 db    ? ;
.data:000000018001ACD4                 db    ? ;
.data:000000018001ACD5                 db    ? ;
.data:000000018001ACD6                 db    ? ;
.data:000000018001ACD7                 db    ? ;
.data:000000018001ACD8                 db    ? ;
.data:000000018001ACD9                 db    ? ;
.data:000000018001ACDA                 db    ? ;
.data:000000018001ACDB                 db    ? ;
.data:000000018001ACDC                 db    ? ;
.data:000000018001ACDD                 db    ? ;
.data:000000018001ACDE                 db    ? ;
.data:000000018001ACDF                 db    ? ;
.data:000000018001ACE0                 db    ? ;
.data:000000018001ACE1                 db    ? ;
.data:000000018001ACE2                 db    ? ;
.data:000000018001ACE3                 db    ? ;
.data:000000018001ACE4                 db    ? ;
.data:000000018001ACE5                 db    ? ;
.data:000000018001ACE6                 db    ? ;
.data:000000018001ACE7                 db    ? ;
.data:000000018001ACE8                 db    ? ;
.data:000000018001ACE9                 db    ? ;
.data:000000018001ACEA                 db    ? ;
.data:000000018001ACEB                 db    ? ;
.data:000000018001ACEC                 db    ? ;
.data:000000018001ACED                 db    ? ;
.data:000000018001ACEE                 db    ? ;
.data:000000018001ACEF                 db    ? ;
.data:000000018001ACF0                 db    ? ;
.data:000000018001ACF1                 db    ? ;
.data:000000018001ACF2                 db    ? ;
.data:000000018001ACF3                 db    ? ;
.data:000000018001ACF4                 db    ? ;
.data:000000018001ACF5                 db    ? ;
.data:000000018001ACF6                 db    ? ;
.data:000000018001ACF7                 db    ? ;
.data:000000018001ACF8                 db    ? ;
.data:000000018001ACF9                 db    ? ;
.data:000000018001ACFA                 db    ? ;
.data:000000018001ACFB                 db    ? ;
.data:000000018001ACFC                 db    ? ;
.data:000000018001ACFD                 db    ? ;
.data:000000018001ACFE                 db    ? ;
.data:000000018001ACFF                 db    ? ;
.data:000000018001AD00                 db    ? ;
.data:000000018001AD01                 db    ? ;
.data:000000018001AD02                 db    ? ;
.data:000000018001AD03                 db    ? ;
.data:000000018001AD04                 db    ? ;
.data:000000018001AD05                 db    ? ;
.data:000000018001AD06                 db    ? ;
.data:000000018001AD07                 db    ? ;
.data:000000018001AD08                 db    ? ;
.data:000000018001AD09                 db    ? ;
.data:000000018001AD0A                 db    ? ;
.data:000000018001AD0B                 db    ? ;
.data:000000018001AD0C                 db    ? ;
.data:000000018001AD0D                 db    ? ;
.data:000000018001AD0E                 db    ? ;
.data:000000018001AD0F                 db    ? ;
.data:000000018001AD10                 db    ? ;
.data:000000018001AD11                 db    ? ;
.data:000000018001AD12                 db    ? ;
.data:000000018001AD13                 db    ? ;
.data:000000018001AD14                 db    ? ;
.data:000000018001AD15                 db    ? ;
.data:000000018001AD16                 db    ? ;
.data:000000018001AD17                 db    ? ;
.data:000000018001AD18                 db    ? ;
.data:000000018001AD19                 db    ? ;
.data:000000018001AD1A                 db    ? ;
.data:000000018001AD1B                 db    ? ;
.data:000000018001AD1C                 db    ? ;
.data:000000018001AD1D                 db    ? ;
.data:000000018001AD1E                 db    ? ;
.data:000000018001AD1F                 db    ? ;
.data:000000018001AD20                 db    ? ;
.data:000000018001AD21                 db    ? ;
.data:000000018001AD22                 db    ? ;
.data:000000018001AD23                 db    ? ;
.data:000000018001AD24                 db    ? ;
.data:000000018001AD25                 db    ? ;
.data:000000018001AD26                 db    ? ;
.data:000000018001AD27                 db    ? ;
.data:000000018001AD28                 db    ? ;
.data:000000018001AD29                 db    ? ;
.data:000000018001AD2A                 db    ? ;
.data:000000018001AD2B                 db    ? ;
.data:000000018001AD2C                 db    ? ;
.data:000000018001AD2D                 db    ? ;
.data:000000018001AD2E                 db    ? ;
.data:000000018001AD2F                 db    ? ;
.data:000000018001AD30                 db    ? ;
.data:000000018001AD31                 db    ? ;
.data:000000018001AD32                 db    ? ;
.data:000000018001AD33                 db    ? ;
.data:000000018001AD34                 db    ? ;
.data:000000018001AD35                 db    ? ;
.data:000000018001AD36                 db    ? ;
.data:000000018001AD37                 db    ? ;
.data:000000018001AD38                 db    ? ;
.data:000000018001AD39                 db    ? ;
.data:000000018001AD3A                 db    ? ;
.data:000000018001AD3B                 db    ? ;
.data:000000018001AD3C                 db    ? ;
.data:000000018001AD3D                 db    ? ;
.data:000000018001AD3E                 db    ? ;
.data:000000018001AD3F                 db    ? ;
.data:000000018001AD40                 db    ? ;
.data:000000018001AD41                 db    ? ;
.data:000000018001AD42                 db    ? ;
.data:000000018001AD43                 db    ? ;
.data:000000018001AD44                 db    ? ;
.data:000000018001AD45                 db    ? ;
.data:000000018001AD46                 db    ? ;
.data:000000018001AD47                 db    ? ;
.data:000000018001AD48                 db    ? ;
.data:000000018001AD49                 db    ? ;
.data:000000018001AD4A                 db    ? ;
.data:000000018001AD4B                 db    ? ;
.data:000000018001AD4C                 db    ? ;
.data:000000018001AD4D                 db    ? ;
.data:000000018001AD4E                 db    ? ;
.data:000000018001AD4F                 db    ? ;
.data:000000018001AD50                 db    ? ;
.data:000000018001AD51                 db    ? ;
.data:000000018001AD52                 db    ? ;
.data:000000018001AD53                 db    ? ;
.data:000000018001AD54                 db    ? ;
.data:000000018001AD55                 db    ? ;
.data:000000018001AD56                 db    ? ;
.data:000000018001AD57                 db    ? ;
.data:000000018001AD58                 db    ? ;
.data:000000018001AD59                 db    ? ;
.data:000000018001AD5A                 db    ? ;
.data:000000018001AD5B                 db    ? ;
.data:000000018001AD5C                 db    ? ;
.data:000000018001AD5D                 db    ? ;
.data:000000018001AD5E                 db    ? ;
.data:000000018001AD5F                 db    ? ;
.data:000000018001AD60                 db    ? ;
.data:000000018001AD61                 db    ? ;
.data:000000018001AD62                 db    ? ;
.data:000000018001AD63                 db    ? ;
.data:000000018001AD64                 db    ? ;
.data:000000018001AD65                 db    ? ;
.data:000000018001AD66                 db    ? ;
.data:000000018001AD67                 db    ? ;
.data:000000018001AD68                 db    ? ;
.data:000000018001AD69                 db    ? ;
.data:000000018001AD6A                 db    ? ;
.data:000000018001AD6B                 db    ? ;
.data:000000018001AD6C                 db    ? ;
.data:000000018001AD6D                 db    ? ;
.data:000000018001AD6E                 db    ? ;
.data:000000018001AD6F                 db    ? ;
.data:000000018001AD70                 db    ? ;
.data:000000018001AD71                 db    ? ;
.data:000000018001AD72                 db    ? ;
.data:000000018001AD73                 db    ? ;
.data:000000018001AD74                 db    ? ;
.data:000000018001AD75                 db    ? ;
.data:000000018001AD76                 db    ? ;
.data:000000018001AD77                 db    ? ;
.data:000000018001AD78                 db    ? ;
.data:000000018001AD79                 db    ? ;
.data:000000018001AD7A                 db    ? ;
.data:000000018001AD7B                 db    ? ;
.data:000000018001AD7C                 db    ? ;
.data:000000018001AD7D                 db    ? ;
.data:000000018001AD7E                 db    ? ;
.data:000000018001AD7F                 db    ? ;
.data:000000018001AD80                 db    ? ;
.data:000000018001AD81                 db    ? ;
.data:000000018001AD82                 db    ? ;
.data:000000018001AD83                 db    ? ;
.data:000000018001AD84                 db    ? ;
.data:000000018001AD85                 db    ? ;
.data:000000018001AD86                 db    ? ;
.data:000000018001AD87                 db    ? ;
.data:000000018001AD88                 db    ? ;
.data:000000018001AD89                 db    ? ;
.data:000000018001AD8A                 db    ? ;
.data:000000018001AD8B                 db    ? ;
.data:000000018001AD8C                 db    ? ;
.data:000000018001AD8D                 db    ? ;
.data:000000018001AD8E                 db    ? ;
.data:000000018001AD8F                 db    ? ;
.data:000000018001AD90                 db    ? ;
.data:000000018001AD91                 db    ? ;
.data:000000018001AD92                 db    ? ;
.data:000000018001AD93                 db    ? ;
.data:000000018001AD94                 db    ? ;
.data:000000018001AD95                 db    ? ;
.data:000000018001AD96                 db    ? ;
.data:000000018001AD97                 db    ? ;
.data:000000018001AD98                 db    ? ;
.data:000000018001AD99                 db    ? ;
.data:000000018001AD9A                 db    ? ;
.data:000000018001AD9B                 db    ? ;
.data:000000018001AD9C                 db    ? ;
.data:000000018001AD9D                 db    ? ;
.data:000000018001AD9E                 db    ? ;
.data:000000018001AD9F                 db    ? ;
.data:000000018001ADA0                 db    ? ;
.data:000000018001ADA1                 db    ? ;
.data:000000018001ADA2                 db    ? ;
.data:000000018001ADA3                 db    ? ;
.data:000000018001ADA4                 db    ? ;
.data:000000018001ADA5                 db    ? ;
.data:000000018001ADA6                 db    ? ;
.data:000000018001ADA7                 db    ? ;
.data:000000018001ADA8                 db    ? ;
.data:000000018001ADA9                 db    ? ;
.data:000000018001ADAA                 db    ? ;
.data:000000018001ADAB                 db    ? ;
.data:000000018001ADAC                 db    ? ;
.data:000000018001ADAD                 db    ? ;
.data:000000018001ADAE                 db    ? ;
.data:000000018001ADAF                 db    ? ;
.data:000000018001ADB0                 db    ? ;
.data:000000018001ADB1                 db    ? ;
.data:000000018001ADB2                 db    ? ;
.data:000000018001ADB3                 db    ? ;
.data:000000018001ADB4                 db    ? ;
.data:000000018001ADB5                 db    ? ;
.data:000000018001ADB6                 db    ? ;
.data:000000018001ADB7                 db    ? ;
.data:000000018001ADB8                 db    ? ;
.data:000000018001ADB9                 db    ? ;
.data:000000018001ADBA                 db    ? ;
.data:000000018001ADBB                 db    ? ;
.data:000000018001ADBC                 db    ? ;
.data:000000018001ADBD                 db    ? ;
.data:000000018001ADBE                 db    ? ;
.data:000000018001ADBF                 db    ? ;
.data:000000018001ADC0                 db    ? ;
.data:000000018001ADC1                 db    ? ;
.data:000000018001ADC2                 db    ? ;
.data:000000018001ADC3                 db    ? ;
.data:000000018001ADC4                 db    ? ;
.data:000000018001ADC5                 db    ? ;
.data:000000018001ADC6                 db    ? ;
.data:000000018001ADC7                 db    ? ;
.data:000000018001ADC8                 db    ? ;
.data:000000018001ADC9                 db    ? ;
.data:000000018001ADCA                 db    ? ;
.data:000000018001ADCB                 db    ? ;
.data:000000018001ADCC                 db    ? ;
.data:000000018001ADCD                 db    ? ;
.data:000000018001ADCE                 db    ? ;
.data:000000018001ADCF                 db    ? ;
.data:000000018001ADD0                 db    ? ;
.data:000000018001ADD1                 db    ? ;
.data:000000018001ADD2                 db    ? ;
.data:000000018001ADD3                 db    ? ;
.data:000000018001ADD4                 db    ? ;
.data:000000018001ADD5                 db    ? ;
.data:000000018001ADD6                 db    ? ;
.data:000000018001ADD7                 db    ? ;
.data:000000018001ADD8                 db    ? ;
.data:000000018001ADD9                 db    ? ;
.data:000000018001ADDA                 db    ? ;
.data:000000018001ADDB                 db    ? ;
.data:000000018001ADDC                 db    ? ;
.data:000000018001ADDD                 db    ? ;
.data:000000018001ADDE                 db    ? ;
.data:000000018001ADDF                 db    ? ;
.data:000000018001ADE0                 db    ? ;
.data:000000018001ADE1                 db    ? ;
.data:000000018001ADE2                 db    ? ;
.data:000000018001ADE3                 db    ? ;
.data:000000018001ADE4                 db    ? ;
.data:000000018001ADE5                 db    ? ;
.data:000000018001ADE6                 db    ? ;
.data:000000018001ADE7                 db    ? ;
.data:000000018001ADE8                 db    ? ;
.data:000000018001ADE9                 db    ? ;
.data:000000018001ADEA                 db    ? ;
.data:000000018001ADEB                 db    ? ;
.data:000000018001ADEC                 db    ? ;
.data:000000018001ADED                 db    ? ;
.data:000000018001ADEE                 db    ? ;
.data:000000018001ADEF                 db    ? ;
.data:000000018001ADF0                 db    ? ;
.data:000000018001ADF1                 db    ? ;
.data:000000018001ADF2                 db    ? ;
.data:000000018001ADF3                 db    ? ;
.data:000000018001ADF4                 db    ? ;
.data:000000018001ADF5                 db    ? ;
.data:000000018001ADF6                 db    ? ;
.data:000000018001ADF7                 db    ? ;
.data:000000018001ADF8                 db    ? ;
.data:000000018001ADF9                 db    ? ;
.data:000000018001ADFA                 db    ? ;
.data:000000018001ADFB                 db    ? ;
.data:000000018001ADFC                 db    ? ;
.data:000000018001ADFD                 db    ? ;
.data:000000018001ADFE                 db    ? ;
.data:000000018001ADFF                 db    ? ;
.data:000000018001AE00                 db    ? ;
.data:000000018001AE01                 db    ? ;
.data:000000018001AE02                 db    ? ;
.data:000000018001AE03                 db    ? ;
.data:000000018001AE04                 db    ? ;
.data:000000018001AE05                 db    ? ;
.data:000000018001AE06                 db    ? ;
.data:000000018001AE07                 db    ? ;
.data:000000018001AE08                 db    ? ;
.data:000000018001AE09                 db    ? ;
.data:000000018001AE0A                 db    ? ;
.data:000000018001AE0B                 db    ? ;
.data:000000018001AE0C                 db    ? ;
.data:000000018001AE0D                 db    ? ;
.data:000000018001AE0E                 db    ? ;
.data:000000018001AE0F                 db    ? ;
.data:000000018001AE10                 db    ? ;
.data:000000018001AE11                 db    ? ;
.data:000000018001AE12                 db    ? ;
.data:000000018001AE13                 db    ? ;
.data:000000018001AE14                 db    ? ;
.data:000000018001AE15                 db    ? ;
.data:000000018001AE16                 db    ? ;
.data:000000018001AE17                 db    ? ;
.data:000000018001AE18                 db    ? ;
.data:000000018001AE19                 db    ? ;
.data:000000018001AE1A                 db    ? ;
.data:000000018001AE1B                 db    ? ;
.data:000000018001AE1C                 db    ? ;
.data:000000018001AE1D                 db    ? ;
.data:000000018001AE1E                 db    ? ;
.data:000000018001AE1F                 db    ? ;
.data:000000018001AE20                 db    ? ;
.data:000000018001AE21                 db    ? ;
.data:000000018001AE22                 db    ? ;
.data:000000018001AE23                 db    ? ;
.data:000000018001AE24                 db    ? ;
.data:000000018001AE25                 db    ? ;
.data:000000018001AE26                 db    ? ;
.data:000000018001AE27                 db    ? ;
.data:000000018001AE28                 db    ? ;
.data:000000018001AE29                 db    ? ;
.data:000000018001AE2A                 db    ? ;
.data:000000018001AE2B                 db    ? ;
.data:000000018001AE2C                 db    ? ;
.data:000000018001AE2D                 db    ? ;
.data:000000018001AE2E                 db    ? ;
.data:000000018001AE2F                 db    ? ;
.data:000000018001AE30                 db    ? ;
.data:000000018001AE31                 db    ? ;
.data:000000018001AE32                 db    ? ;
.data:000000018001AE33                 db    ? ;
.data:000000018001AE34                 db    ? ;
.data:000000018001AE35                 db    ? ;
.data:000000018001AE36                 db    ? ;
.data:000000018001AE37                 db    ? ;
.data:000000018001AE38                 db    ? ;
.data:000000018001AE39                 db    ? ;
.data:000000018001AE3A                 db    ? ;
.data:000000018001AE3B                 db    ? ;
.data:000000018001AE3C                 db    ? ;
.data:000000018001AE3D                 db    ? ;
.data:000000018001AE3E                 db    ? ;
.data:000000018001AE3F                 db    ? ;
.data:000000018001AE40                 db    ? ;
.data:000000018001AE41                 db    ? ;
.data:000000018001AE42                 db    ? ;
.data:000000018001AE43                 db    ? ;
.data:000000018001AE44                 db    ? ;
.data:000000018001AE45                 db    ? ;
.data:000000018001AE46                 db    ? ;
.data:000000018001AE47                 db    ? ;
.data:000000018001AE48                 db    ? ;
.data:000000018001AE49                 db    ? ;
.data:000000018001AE4A                 db    ? ;
.data:000000018001AE4B                 db    ? ;
.data:000000018001AE4C                 db    ? ;
.data:000000018001AE4D                 db    ? ;
.data:000000018001AE4E                 db    ? ;
.data:000000018001AE4F                 db    ? ;
.data:000000018001AE50                 db    ? ;
.data:000000018001AE51                 db    ? ;
.data:000000018001AE52                 db    ? ;
.data:000000018001AE53                 db    ? ;
.data:000000018001AE54                 db    ? ;
.data:000000018001AE55                 db    ? ;
.data:000000018001AE56                 db    ? ;
.data:000000018001AE57                 db    ? ;
.data:000000018001AE58                 db    ? ;
.data:000000018001AE59                 db    ? ;
.data:000000018001AE5A                 db    ? ;
.data:000000018001AE5B                 db    ? ;
.data:000000018001AE5C                 db    ? ;
.data:000000018001AE5D                 db    ? ;
.data:000000018001AE5E                 db    ? ;
.data:000000018001AE5F                 db    ? ;
.data:000000018001AE60                 db    ? ;
.data:000000018001AE61                 db    ? ;
.data:000000018001AE62                 db    ? ;
.data:000000018001AE63                 db    ? ;
.data:000000018001AE64                 db    ? ;
.data:000000018001AE65                 db    ? ;
.data:000000018001AE66                 db    ? ;
.data:000000018001AE67                 db    ? ;
.data:000000018001AE68                 db    ? ;
.data:000000018001AE69                 db    ? ;
.data:000000018001AE6A                 db    ? ;
.data:000000018001AE6B                 db    ? ;
.data:000000018001AE6C                 db    ? ;
.data:000000018001AE6D                 db    ? ;
.data:000000018001AE6E                 db    ? ;
.data:000000018001AE6F                 db    ? ;
.data:000000018001AE70                 db    ? ;
.data:000000018001AE71                 db    ? ;
.data:000000018001AE72                 db    ? ;
.data:000000018001AE73                 db    ? ;
.data:000000018001AE74                 db    ? ;
.data:000000018001AE75                 db    ? ;
.data:000000018001AE76                 db    ? ;
.data:000000018001AE77                 db    ? ;
.data:000000018001AE78                 db    ? ;
.data:000000018001AE79                 db    ? ;
.data:000000018001AE7A                 db    ? ;
.data:000000018001AE7B                 db    ? ;
.data:000000018001AE7C                 db    ? ;
.data:000000018001AE7D                 db    ? ;
.data:000000018001AE7E                 db    ? ;
.data:000000018001AE7F                 db    ? ;
.data:000000018001AE80                 db    ? ;
.data:000000018001AE81                 db    ? ;
.data:000000018001AE82                 db    ? ;
.data:000000018001AE83                 db    ? ;
.data:000000018001AE84                 db    ? ;
.data:000000018001AE85                 db    ? ;
.data:000000018001AE86                 db    ? ;
.data:000000018001AE87                 db    ? ;
.data:000000018001AE88                 db    ? ;
.data:000000018001AE89                 db    ? ;
.data:000000018001AE8A                 db    ? ;
.data:000000018001AE8B                 db    ? ;
.data:000000018001AE8C                 db    ? ;
.data:000000018001AE8D                 db    ? ;
.data:000000018001AE8E                 db    ? ;
.data:000000018001AE8F                 db    ? ;
.data:000000018001AE90                 db    ? ;
.data:000000018001AE91                 db    ? ;
.data:000000018001AE92                 db    ? ;
.data:000000018001AE93                 db    ? ;
.data:000000018001AE94                 db    ? ;
.data:000000018001AE95                 db    ? ;
.data:000000018001AE96                 db    ? ;
.data:000000018001AE97                 db    ? ;
.data:000000018001AE98                 db    ? ;
.data:000000018001AE99                 db    ? ;
.data:000000018001AE9A                 db    ? ;
.data:000000018001AE9B                 db    ? ;
.data:000000018001AE9C                 db    ? ;
.data:000000018001AE9D                 db    ? ;
.data:000000018001AE9E                 db    ? ;
.data:000000018001AE9F                 db    ? ;
.data:000000018001AEA0                 db    ? ;
.data:000000018001AEA1                 db    ? ;
.data:000000018001AEA2                 db    ? ;
.data:000000018001AEA3                 db    ? ;
.data:000000018001AEA4                 db    ? ;
.data:000000018001AEA5                 db    ? ;
.data:000000018001AEA6                 db    ? ;
.data:000000018001AEA7                 db    ? ;
.data:000000018001AEA8                 db    ? ;
.data:000000018001AEA9                 db    ? ;
.data:000000018001AEAA                 db    ? ;
.data:000000018001AEAB                 db    ? ;
.data:000000018001AEAC                 db    ? ;
.data:000000018001AEAD                 db    ? ;
.data:000000018001AEAE                 db    ? ;
.data:000000018001AEAF                 db    ? ;
.data:000000018001AEB0                 db    ? ;
.data:000000018001AEB1                 db    ? ;
.data:000000018001AEB2                 db    ? ;
.data:000000018001AEB3                 db    ? ;
.data:000000018001AEB4                 db    ? ;
.data:000000018001AEB5                 db    ? ;
.data:000000018001AEB6                 db    ? ;
.data:000000018001AEB7                 db    ? ;
.data:000000018001AEB8                 db    ? ;
.data:000000018001AEB9                 db    ? ;
.data:000000018001AEBA                 db    ? ;
.data:000000018001AEBB                 db    ? ;
.data:000000018001AEBC                 db    ? ;
.data:000000018001AEBD                 db    ? ;
.data:000000018001AEBE                 db    ? ;
.data:000000018001AEBF                 db    ? ;
.data:000000018001AEC0                 db    ? ;
.data:000000018001AEC1                 db    ? ;
.data:000000018001AEC2                 db    ? ;
.data:000000018001AEC3                 db    ? ;
.data:000000018001AEC4                 db    ? ;
.data:000000018001AEC5                 db    ? ;
.data:000000018001AEC6                 db    ? ;
.data:000000018001AEC7                 db    ? ;
.data:000000018001AEC8                 db    ? ;
.data:000000018001AEC9                 db    ? ;
.data:000000018001AECA                 db    ? ;
.data:000000018001AECB                 db    ? ;
.data:000000018001AECC                 db    ? ;
.data:000000018001AECD                 db    ? ;
.data:000000018001AECE                 db    ? ;
.data:000000018001AECF                 db    ? ;
.data:000000018001AED0                 db    ? ;
.data:000000018001AED1                 db    ? ;
.data:000000018001AED2                 db    ? ;
.data:000000018001AED3                 db    ? ;
.data:000000018001AED4                 db    ? ;
.data:000000018001AED5                 db    ? ;
.data:000000018001AED6                 db    ? ;
.data:000000018001AED7                 db    ? ;
.data:000000018001AED8                 db    ? ;
.data:000000018001AED9                 db    ? ;
.data:000000018001AEDA                 db    ? ;
.data:000000018001AEDB                 db    ? ;
.data:000000018001AEDC                 db    ? ;
.data:000000018001AEDD                 db    ? ;
.data:000000018001AEDE                 db    ? ;
.data:000000018001AEDF                 db    ? ;
.data:000000018001AEE0                 db    ? ;
.data:000000018001AEE1                 db    ? ;
.data:000000018001AEE2                 db    ? ;
.data:000000018001AEE3                 db    ? ;
.data:000000018001AEE4                 db    ? ;
.data:000000018001AEE5                 db    ? ;
.data:000000018001AEE6                 db    ? ;
.data:000000018001AEE7                 db    ? ;
.data:000000018001AEE8                 db    ? ;
.data:000000018001AEE9                 db    ? ;
.data:000000018001AEEA                 db    ? ;
.data:000000018001AEEB                 db    ? ;
.data:000000018001AEEC                 db    ? ;
.data:000000018001AEED                 db    ? ;
.data:000000018001AEEE                 db    ? ;
.data:000000018001AEEF                 db    ? ;
.data:000000018001AEF0                 db    ? ;
.data:000000018001AEF1                 db    ? ;
.data:000000018001AEF2                 db    ? ;
.data:000000018001AEF3                 db    ? ;
.data:000000018001AEF4                 db    ? ;
.data:000000018001AEF5                 db    ? ;
.data:000000018001AEF6                 db    ? ;
.data:000000018001AEF7                 db    ? ;
.data:000000018001AEF8                 db    ? ;
.data:000000018001AEF9                 db    ? ;
.data:000000018001AEFA                 db    ? ;
.data:000000018001AEFB                 db    ? ;
.data:000000018001AEFC                 db    ? ;
.data:000000018001AEFD                 db    ? ;
.data:000000018001AEFE                 db    ? ;
.data:000000018001AEFF                 db    ? ;
.data:000000018001AF00                 db    ? ;
.data:000000018001AF01                 db    ? ;
.data:000000018001AF02                 db    ? ;
.data:000000018001AF03                 db    ? ;
.data:000000018001AF04                 db    ? ;
.data:000000018001AF05                 db    ? ;
.data:000000018001AF06                 db    ? ;
.data:000000018001AF07                 db    ? ;
.data:000000018001AF08                 db    ? ;
.data:000000018001AF09                 db    ? ;
.data:000000018001AF0A                 db    ? ;
.data:000000018001AF0B                 db    ? ;
.data:000000018001AF0C                 db    ? ;
.data:000000018001AF0D                 db    ? ;
.data:000000018001AF0E                 db    ? ;
.data:000000018001AF0F                 db    ? ;
.data:000000018001AF10                 db    ? ;
.data:000000018001AF11                 db    ? ;
.data:000000018001AF12                 db    ? ;
.data:000000018001AF13                 db    ? ;
.data:000000018001AF14                 db    ? ;
.data:000000018001AF15                 db    ? ;
.data:000000018001AF16                 db    ? ;
.data:000000018001AF17                 db    ? ;
.data:000000018001AF18                 db    ? ;
.data:000000018001AF19                 db    ? ;
.data:000000018001AF1A                 db    ? ;
.data:000000018001AF1B                 db    ? ;
.data:000000018001AF1C                 db    ? ;
.data:000000018001AF1D                 db    ? ;
.data:000000018001AF1E                 db    ? ;
.data:000000018001AF1F                 db    ? ;
.data:000000018001AF20                 db    ? ;
.data:000000018001AF21                 db    ? ;
.data:000000018001AF22                 db    ? ;
.data:000000018001AF23                 db    ? ;
.data:000000018001AF24                 db    ? ;
.data:000000018001AF25                 db    ? ;
.data:000000018001AF26                 db    ? ;
.data:000000018001AF27                 db    ? ;
.data:000000018001AF28                 db    ? ;
.data:000000018001AF29                 db    ? ;
.data:000000018001AF2A                 db    ? ;
.data:000000018001AF2B                 db    ? ;
.data:000000018001AF2C                 db    ? ;
.data:000000018001AF2D                 db    ? ;
.data:000000018001AF2E                 db    ? ;
.data:000000018001AF2F                 db    ? ;
.data:000000018001AF30                 db    ? ;
.data:000000018001AF31                 db    ? ;
.data:000000018001AF32                 db    ? ;
.data:000000018001AF33                 db    ? ;
.data:000000018001AF34                 db    ? ;
.data:000000018001AF35                 db    ? ;
.data:000000018001AF36                 db    ? ;
.data:000000018001AF37                 db    ? ;
.data:000000018001AF38                 db    ? ;
.data:000000018001AF39                 db    ? ;
.data:000000018001AF3A                 db    ? ;
.data:000000018001AF3B                 db    ? ;
.data:000000018001AF3C                 db    ? ;
.data:000000018001AF3D                 db    ? ;
.data:000000018001AF3E                 db    ? ;
.data:000000018001AF3F                 db    ? ;
.data:000000018001AF40                 db    ? ;
.data:000000018001AF41                 db    ? ;
.data:000000018001AF42                 db    ? ;
.data:000000018001AF43                 db    ? ;
.data:000000018001AF44                 db    ? ;
.data:000000018001AF45                 db    ? ;
.data:000000018001AF46                 db    ? ;
.data:000000018001AF47                 db    ? ;
.data:000000018001AF48                 db    ? ;
.data:000000018001AF49                 db    ? ;
.data:000000018001AF4A                 db    ? ;
.data:000000018001AF4B                 db    ? ;
.data:000000018001AF4C                 db    ? ;
.data:000000018001AF4D                 db    ? ;
.data:000000018001AF4E                 db    ? ;
.data:000000018001AF4F                 db    ? ;
.data:000000018001AF50                 db    ? ;
.data:000000018001AF51                 db    ? ;
.data:000000018001AF52                 db    ? ;
.data:000000018001AF53                 db    ? ;
.data:000000018001AF54                 db    ? ;
.data:000000018001AF55                 db    ? ;
.data:000000018001AF56                 db    ? ;
.data:000000018001AF57                 db    ? ;
.data:000000018001AF58                 db    ? ;
.data:000000018001AF59                 db    ? ;
.data:000000018001AF5A                 db    ? ;
.data:000000018001AF5B                 db    ? ;
.data:000000018001AF5C                 db    ? ;
.data:000000018001AF5D                 db    ? ;
.data:000000018001AF5E                 db    ? ;
.data:000000018001AF5F                 db    ? ;
.data:000000018001AF60                 db    ? ;
.data:000000018001AF61                 db    ? ;
.data:000000018001AF62                 db    ? ;
.data:000000018001AF63                 db    ? ;
.data:000000018001AF64                 db    ? ;
.data:000000018001AF65                 db    ? ;
.data:000000018001AF66                 db    ? ;
.data:000000018001AF67                 db    ? ;
.data:000000018001AF68                 db    ? ;
.data:000000018001AF69                 db    ? ;
.data:000000018001AF6A                 db    ? ;
.data:000000018001AF6B                 db    ? ;
.data:000000018001AF6C                 db    ? ;
.data:000000018001AF6D                 db    ? ;
.data:000000018001AF6E                 db    ? ;
.data:000000018001AF6F                 db    ? ;
.data:000000018001AF70                 db    ? ;
.data:000000018001AF71                 db    ? ;
.data:000000018001AF72                 db    ? ;
.data:000000018001AF73                 db    ? ;
.data:000000018001AF74                 db    ? ;
.data:000000018001AF75                 db    ? ;
.data:000000018001AF76                 db    ? ;
.data:000000018001AF77                 db    ? ;
.data:000000018001AF78                 db    ? ;
.data:000000018001AF79                 db    ? ;
.data:000000018001AF7A                 db    ? ;
.data:000000018001AF7B                 db    ? ;
.data:000000018001AF7C                 db    ? ;
.data:000000018001AF7D                 db    ? ;
.data:000000018001AF7E                 db    ? ;
.data:000000018001AF7F                 db    ? ;
.data:000000018001AF80                 db    ? ;
.data:000000018001AF81                 db    ? ;
.data:000000018001AF82                 db    ? ;
.data:000000018001AF83                 db    ? ;
.data:000000018001AF84                 db    ? ;
.data:000000018001AF85                 db    ? ;
.data:000000018001AF86                 db    ? ;
.data:000000018001AF87                 db    ? ;
.data:000000018001AF88                 db    ? ;
.data:000000018001AF89                 db    ? ;
.data:000000018001AF8A                 db    ? ;
.data:000000018001AF8B                 db    ? ;
.data:000000018001AF8C                 db    ? ;
.data:000000018001AF8D                 db    ? ;
.data:000000018001AF8E                 db    ? ;
.data:000000018001AF8F                 db    ? ;
.data:000000018001AF90                 db    ? ;
.data:000000018001AF91                 db    ? ;
.data:000000018001AF92                 db    ? ;
.data:000000018001AF93                 db    ? ;
.data:000000018001AF94                 db    ? ;
.data:000000018001AF95                 db    ? ;
.data:000000018001AF96                 db    ? ;
.data:000000018001AF97                 db    ? ;
.data:000000018001AF98                 db    ? ;
.data:000000018001AF99                 db    ? ;
.data:000000018001AF9A                 db    ? ;
.data:000000018001AF9B                 db    ? ;
.data:000000018001AF9C                 db    ? ;
.data:000000018001AF9D                 db    ? ;
.data:000000018001AF9E                 db    ? ;
.data:000000018001AF9F                 db    ? ;
.data:000000018001AFA0                 db    ? ;
.data:000000018001AFA1                 db    ? ;
.data:000000018001AFA2                 db    ? ;
.data:000000018001AFA3                 db    ? ;
.data:000000018001AFA4                 db    ? ;
.data:000000018001AFA5                 db    ? ;
.data:000000018001AFA6                 db    ? ;
.data:000000018001AFA7                 db    ? ;
.data:000000018001AFA8                 db    ? ;
.data:000000018001AFA9                 db    ? ;
.data:000000018001AFAA                 db    ? ;
.data:000000018001AFAB                 db    ? ;
.data:000000018001AFAC                 db    ? ;
.data:000000018001AFAD                 db    ? ;
.data:000000018001AFAE                 db    ? ;
.data:000000018001AFAF                 db    ? ;
.data:000000018001AFB0                 db    ? ;
.data:000000018001AFB1                 db    ? ;
.data:000000018001AFB2                 db    ? ;
.data:000000018001AFB3                 db    ? ;
.data:000000018001AFB4                 db    ? ;
.data:000000018001AFB5                 db    ? ;
.data:000000018001AFB6                 db    ? ;
.data:000000018001AFB7                 db    ? ;
.data:000000018001AFB8                 db    ? ;
.data:000000018001AFB9                 db    ? ;
.data:000000018001AFBA                 db    ? ;
.data:000000018001AFBB                 db    ? ;
.data:000000018001AFBC                 db    ? ;
.data:000000018001AFBD                 db    ? ;
.data:000000018001AFBE                 db    ? ;
.data:000000018001AFBF                 db    ? ;
.data:000000018001AFC0                 db    ? ;
.data:000000018001AFC1                 db    ? ;
.data:000000018001AFC2                 db    ? ;
.data:000000018001AFC3                 db    ? ;
.data:000000018001AFC4                 db    ? ;
.data:000000018001AFC5                 db    ? ;
.data:000000018001AFC6                 db    ? ;
.data:000000018001AFC7                 db    ? ;
.data:000000018001AFC8                 db    ? ;
.data:000000018001AFC9                 db    ? ;
.data:000000018001AFCA                 db    ? ;
.data:000000018001AFCB                 db    ? ;
.data:000000018001AFCC                 db    ? ;
.data:000000018001AFCD                 db    ? ;
.data:000000018001AFCE                 db    ? ;
.data:000000018001AFCF                 db    ? ;
.data:000000018001AFD0                 db    ? ;
.data:000000018001AFD1                 db    ? ;
.data:000000018001AFD2                 db    ? ;
.data:000000018001AFD3                 db    ? ;
.data:000000018001AFD4                 db    ? ;
.data:000000018001AFD5                 db    ? ;
.data:000000018001AFD6                 db    ? ;
.data:000000018001AFD7                 db    ? ;
.data:000000018001AFD8                 db    ? ;
.data:000000018001AFD9                 db    ? ;
.data:000000018001AFDA                 db    ? ;
.data:000000018001AFDB                 db    ? ;
.data:000000018001AFDC                 db    ? ;
.data:000000018001AFDD                 db    ? ;
.data:000000018001AFDE                 db    ? ;
.data:000000018001AFDF                 db    ? ;
.data:000000018001AFE0                 db    ? ;
.data:000000018001AFE1                 db    ? ;
.data:000000018001AFE2                 db    ? ;
.data:000000018001AFE3                 db    ? ;
.data:000000018001AFE4                 db    ? ;
.data:000000018001AFE5                 db    ? ;
.data:000000018001AFE6                 db    ? ;
.data:000000018001AFE7                 db    ? ;
.data:000000018001AFE8                 db    ? ;
.data:000000018001AFE9                 db    ? ;
.data:000000018001AFEA                 db    ? ;
.data:000000018001AFEB                 db    ? ;
.data:000000018001AFEC                 db    ? ;
.data:000000018001AFED                 db    ? ;
.data:000000018001AFEE                 db    ? ;
.data:000000018001AFEF                 db    ? ;
.data:000000018001AFF0                 db    ? ;
.data:000000018001AFF1                 db    ? ;
.data:000000018001AFF2                 db    ? ;
.data:000000018001AFF3                 db    ? ;
.data:000000018001AFF4                 db    ? ;
.data:000000018001AFF5                 db    ? ;
.data:000000018001AFF6                 db    ? ;
.data:000000018001AFF7                 db    ? ;
.data:000000018001AFF8                 db    ? ;
.data:000000018001AFF9                 db    ? ;
.data:000000018001AFFA                 db    ? ;
.data:000000018001AFFB                 db    ? ;
.data:000000018001AFFC                 db    ? ;
.data:000000018001AFFD                 db    ? ;
.data:000000018001AFFE                 db    ? ;
.data:000000018001AFFF                 db    ? ;
.data:000000018001B000                 db    ? ;
.data:000000018001B001                 db    ? ;
.data:000000018001B002                 db    ? ;
.data:000000018001B003                 db    ? ;
.data:000000018001B004                 db    ? ;
.data:000000018001B005                 db    ? ;
.data:000000018001B006                 db    ? ;
.data:000000018001B007                 db    ? ;
.data:000000018001B008                 db    ? ;
.data:000000018001B009                 db    ? ;
.data:000000018001B00A                 db    ? ;
.data:000000018001B00B                 db    ? ;
.data:000000018001B00C                 db    ? ;
.data:000000018001B00D                 db    ? ;
.data:000000018001B00E                 db    ? ;
.data:000000018001B00F                 db    ? ;
.data:000000018001B010                 db    ? ;
.data:000000018001B011                 db    ? ;
.data:000000018001B012                 db    ? ;
.data:000000018001B013                 db    ? ;
.data:000000018001B014                 db    ? ;
.data:000000018001B015                 db    ? ;
.data:000000018001B016                 db    ? ;
.data:000000018001B017                 db    ? ;
.data:000000018001B018                 db    ? ;
.data:000000018001B019                 db    ? ;
.data:000000018001B01A                 db    ? ;
.data:000000018001B01B                 db    ? ;
.data:000000018001B01C                 db    ? ;
.data:000000018001B01D                 db    ? ;
.data:000000018001B01E                 db    ? ;
.data:000000018001B01F                 db    ? ;
.data:000000018001B020                 db    ? ;
.data:000000018001B021                 db    ? ;
.data:000000018001B022                 db    ? ;
.data:000000018001B023                 db    ? ;
.data:000000018001B024                 db    ? ;
.data:000000018001B025                 db    ? ;
.data:000000018001B026                 db    ? ;
.data:000000018001B027                 db    ? ;
.data:000000018001B028                 db    ? ;
.data:000000018001B029                 db    ? ;
.data:000000018001B02A                 db    ? ;
.data:000000018001B02B                 db    ? ;
.data:000000018001B02C                 db    ? ;
.data:000000018001B02D                 db    ? ;
.data:000000018001B02E                 db    ? ;
.data:000000018001B02F                 db    ? ;
.data:000000018001B030                 db    ? ;
.data:000000018001B031                 db    ? ;
.data:000000018001B032                 db    ? ;
.data:000000018001B033                 db    ? ;
.data:000000018001B034                 db    ? ;
.data:000000018001B035                 db    ? ;
.data:000000018001B036                 db    ? ;
.data:000000018001B037                 db    ? ;
.data:000000018001B038                 db    ? ;
.data:000000018001B039                 db    ? ;
.data:000000018001B03A                 db    ? ;
.data:000000018001B03B                 db    ? ;
.data:000000018001B03C                 db    ? ;
.data:000000018001B03D                 db    ? ;
.data:000000018001B03E                 db    ? ;
.data:000000018001B03F                 db    ? ;
.data:000000018001B040                 db    ? ;
.data:000000018001B041                 db    ? ;
.data:000000018001B042                 db    ? ;
.data:000000018001B043                 db    ? ;
.data:000000018001B044                 db    ? ;
.data:000000018001B045                 db    ? ;
.data:000000018001B046                 db    ? ;
.data:000000018001B047                 db    ? ;
.data:000000018001B048                 db    ? ;
.data:000000018001B049                 db    ? ;
.data:000000018001B04A                 db    ? ;
.data:000000018001B04B                 db    ? ;
.data:000000018001B04C                 db    ? ;
.data:000000018001B04D                 db    ? ;
.data:000000018001B04E                 db    ? ;
.data:000000018001B04F                 db    ? ;
.data:000000018001B050                 db    ? ;
.data:000000018001B051                 db    ? ;
.data:000000018001B052                 db    ? ;
.data:000000018001B053                 db    ? ;
.data:000000018001B054                 db    ? ;
.data:000000018001B055                 db    ? ;
.data:000000018001B056                 db    ? ;
.data:000000018001B057                 db    ? ;
.data:000000018001B058                 db    ? ;
.data:000000018001B059                 db    ? ;
.data:000000018001B05A                 db    ? ;
.data:000000018001B05B                 db    ? ;
.data:000000018001B05C                 db    ? ;
.data:000000018001B05D                 db    ? ;
.data:000000018001B05E                 db    ? ;
.data:000000018001B05F                 db    ? ;
.data:000000018001B060                 db    ? ;
.data:000000018001B061                 db    ? ;
.data:000000018001B062                 db    ? ;
.data:000000018001B063                 db    ? ;
.data:000000018001B064                 db    ? ;
.data:000000018001B065                 db    ? ;
.data:000000018001B066                 db    ? ;
.data:000000018001B067                 db    ? ;
.data:000000018001B068                 db    ? ;
.data:000000018001B069                 db    ? ;
.data:000000018001B06A                 db    ? ;
.data:000000018001B06B                 db    ? ;
.data:000000018001B06C                 db    ? ;
.data:000000018001B06D                 db    ? ;
.data:000000018001B06E                 db    ? ;
.data:000000018001B06F                 db    ? ;
.data:000000018001B070                 db    ? ;
.data:000000018001B071                 db    ? ;
.data:000000018001B072                 db    ? ;
.data:000000018001B073                 db    ? ;
.data:000000018001B074                 db    ? ;
.data:000000018001B075                 db    ? ;
.data:000000018001B076                 db    ? ;
.data:000000018001B077                 db    ? ;
.data:000000018001B078                 db    ? ;
.data:000000018001B079                 db    ? ;
.data:000000018001B07A                 db    ? ;
.data:000000018001B07B                 db    ? ;
.data:000000018001B07C                 db    ? ;
.data:000000018001B07D                 db    ? ;
.data:000000018001B07E                 db    ? ;
.data:000000018001B07F                 db    ? ;
.data:000000018001B080                 db    ? ;
.data:000000018001B081                 db    ? ;
.data:000000018001B082                 db    ? ;
.data:000000018001B083                 db    ? ;
.data:000000018001B084                 db    ? ;
.data:000000018001B085                 db    ? ;
.data:000000018001B086                 db    ? ;
.data:000000018001B087                 db    ? ;
.data:000000018001B088                 db    ? ;
.data:000000018001B089                 db    ? ;
.data:000000018001B08A                 db    ? ;
.data:000000018001B08B                 db    ? ;
.data:000000018001B08C                 db    ? ;
.data:000000018001B08D                 db    ? ;
.data:000000018001B08E                 db    ? ;
.data:000000018001B08F                 db    ? ;
.data:000000018001B090                 db    ? ;
.data:000000018001B091                 db    ? ;
.data:000000018001B092                 db    ? ;
.data:000000018001B093                 db    ? ;
.data:000000018001B094                 db    ? ;
.data:000000018001B095                 db    ? ;
.data:000000018001B096                 db    ? ;
.data:000000018001B097                 db    ? ;
.data:000000018001B098                 db    ? ;
.data:000000018001B099                 db    ? ;
.data:000000018001B09A                 db    ? ;
.data:000000018001B09B                 db    ? ;
.data:000000018001B09C                 db    ? ;
.data:000000018001B09D                 db    ? ;
.data:000000018001B09E                 db    ? ;
.data:000000018001B09F                 db    ? ;
.data:000000018001B0A0                 db    ? ;
.data:000000018001B0A1                 db    ? ;
.data:000000018001B0A2                 db    ? ;
.data:000000018001B0A3                 db    ? ;
.data:000000018001B0A4                 db    ? ;
.data:000000018001B0A5                 db    ? ;
.data:000000018001B0A6                 db    ? ;
.data:000000018001B0A7                 db    ? ;
.data:000000018001B0A8                 db    ? ;
.data:000000018001B0A9                 db    ? ;
.data:000000018001B0AA                 db    ? ;
.data:000000018001B0AB                 db    ? ;
.data:000000018001B0AC                 db    ? ;
.data:000000018001B0AD                 db    ? ;
.data:000000018001B0AE                 db    ? ;
.data:000000018001B0AF                 db    ? ;
.data:000000018001B0B0                 db    ? ;
.data:000000018001B0B1                 db    ? ;
.data:000000018001B0B2                 db    ? ;
.data:000000018001B0B3                 db    ? ;
.data:000000018001B0B4                 db    ? ;
.data:000000018001B0B5                 db    ? ;
.data:000000018001B0B6                 db    ? ;
.data:000000018001B0B7                 db    ? ;
.data:000000018001B0B8                 db    ? ;
.data:000000018001B0B9                 db    ? ;
.data:000000018001B0BA                 db    ? ;
.data:000000018001B0BB                 db    ? ;
.data:000000018001B0BC                 db    ? ;
.data:000000018001B0BD                 db    ? ;
.data:000000018001B0BE                 db    ? ;
.data:000000018001B0BF                 db    ? ;
.data:000000018001B0C0                 db    ? ;
.data:000000018001B0C1                 db    ? ;
.data:000000018001B0C2                 db    ? ;
.data:000000018001B0C3                 db    ? ;
.data:000000018001B0C4                 db    ? ;
.data:000000018001B0C5                 db    ? ;
.data:000000018001B0C6                 db    ? ;
.data:000000018001B0C7                 db    ? ;
.data:000000018001B0C8                 db    ? ;
.data:000000018001B0C9                 db    ? ;
.data:000000018001B0CA                 db    ? ;
.data:000000018001B0CB                 db    ? ;
.data:000000018001B0CC                 db    ? ;
.data:000000018001B0CD                 db    ? ;
.data:000000018001B0CE                 db    ? ;
.data:000000018001B0CF                 db    ? ;
.data:000000018001B0D0                 db    ? ;
.data:000000018001B0D1                 db    ? ;
.data:000000018001B0D2                 db    ? ;
.data:000000018001B0D3                 db    ? ;
.data:000000018001B0D4                 db    ? ;
.data:000000018001B0D5                 db    ? ;
.data:000000018001B0D6                 db    ? ;
.data:000000018001B0D7                 db    ? ;
.data:000000018001B0D8                 db    ? ;
.data:000000018001B0D9                 db    ? ;
.data:000000018001B0DA                 db    ? ;
.data:000000018001B0DB                 db    ? ;
.data:000000018001B0DC                 db    ? ;
.data:000000018001B0DD                 db    ? ;
.data:000000018001B0DE                 db    ? ;
.data:000000018001B0DF                 db    ? ;
.data:000000018001B0E0                 db    ? ;
.data:000000018001B0E1                 db    ? ;
.data:000000018001B0E2                 db    ? ;
.data:000000018001B0E3                 db    ? ;
.data:000000018001B0E4                 db    ? ;
.data:000000018001B0E5                 db    ? ;
.data:000000018001B0E6                 db    ? ;
.data:000000018001B0E7                 db    ? ;
.data:000000018001B0E8                 db    ? ;
.data:000000018001B0E9                 db    ? ;
.data:000000018001B0EA                 db    ? ;
.data:000000018001B0EB                 db    ? ;
.data:000000018001B0EC                 db    ? ;
.data:000000018001B0ED                 db    ? ;
.data:000000018001B0EE                 db    ? ;
.data:000000018001B0EF                 db    ? ;
.data:000000018001B0F0                 db    ? ;
.data:000000018001B0F1                 db    ? ;
.data:000000018001B0F2                 db    ? ;
.data:000000018001B0F3                 db    ? ;
.data:000000018001B0F4                 db    ? ;
.data:000000018001B0F5                 db    ? ;
.data:000000018001B0F6                 db    ? ;
.data:000000018001B0F7                 db    ? ;
.data:000000018001B0F8                 db    ? ;
.data:000000018001B0F9                 db    ? ;
.data:000000018001B0FA                 db    ? ;
.data:000000018001B0FB                 db    ? ;
.data:000000018001B0FC                 db    ? ;
.data:000000018001B0FD                 db    ? ;
.data:000000018001B0FE                 db    ? ;
.data:000000018001B0FF                 db    ? ;
.data:000000018001B100                 db    ? ;
.data:000000018001B101                 db    ? ;
.data:000000018001B102                 db    ? ;
.data:000000018001B103                 db    ? ;
.data:000000018001B104                 db    ? ;
.data:000000018001B105                 db    ? ;
.data:000000018001B106                 db    ? ;
.data:000000018001B107                 db    ? ;
.data:000000018001B108                 db    ? ;
.data:000000018001B109                 db    ? ;
.data:000000018001B10A                 db    ? ;
.data:000000018001B10B                 db    ? ;
.data:000000018001B10C                 db    ? ;
.data:000000018001B10D                 db    ? ;
.data:000000018001B10E                 db    ? ;
.data:000000018001B10F                 db    ? ;
.data:000000018001B110                 db    ? ;
.data:000000018001B111                 db    ? ;
.data:000000018001B112                 db    ? ;
.data:000000018001B113                 db    ? ;
.data:000000018001B114                 db    ? ;
.data:000000018001B115                 db    ? ;
.data:000000018001B116                 db    ? ;
.data:000000018001B117                 db    ? ;
.data:000000018001B118                 db    ? ;
.data:000000018001B119                 db    ? ;
.data:000000018001B11A                 db    ? ;
.data:000000018001B11B                 db    ? ;
.data:000000018001B11C                 db    ? ;
.data:000000018001B11D                 db    ? ;
.data:000000018001B11E                 db    ? ;
.data:000000018001B11F                 db    ? ;
.data:000000018001B120                 db    ? ;
.data:000000018001B121                 db    ? ;
.data:000000018001B122                 db    ? ;
.data:000000018001B123                 db    ? ;
.data:000000018001B124                 db    ? ;
.data:000000018001B125                 db    ? ;
.data:000000018001B126                 db    ? ;
.data:000000018001B127                 db    ? ;
.data:000000018001B128                 db    ? ;
.data:000000018001B129                 db    ? ;
.data:000000018001B12A                 db    ? ;
.data:000000018001B12B                 db    ? ;
.data:000000018001B12C                 db    ? ;
.data:000000018001B12D                 db    ? ;
.data:000000018001B12E                 db    ? ;
.data:000000018001B12F                 db    ? ;
.data:000000018001B130                 db    ? ;
.data:000000018001B131                 db    ? ;
.data:000000018001B132                 db    ? ;
.data:000000018001B133                 db    ? ;
.data:000000018001B134                 db    ? ;
.data:000000018001B135                 db    ? ;
.data:000000018001B136                 db    ? ;
.data:000000018001B137                 db    ? ;
.data:000000018001B138                 db    ? ;
.data:000000018001B139                 db    ? ;
.data:000000018001B13A                 db    ? ;
.data:000000018001B13B                 db    ? ;
.data:000000018001B13C                 db    ? ;
.data:000000018001B13D                 db    ? ;
.data:000000018001B13E                 db    ? ;
.data:000000018001B13F                 db    ? ;
.data:000000018001B140                 db    ? ;
.data:000000018001B141                 db    ? ;
.data:000000018001B142                 db    ? ;
.data:000000018001B143                 db    ? ;
.data:000000018001B144                 db    ? ;
.data:000000018001B145                 db    ? ;
.data:000000018001B146                 db    ? ;
.data:000000018001B147                 db    ? ;
.data:000000018001B148                 db    ? ;
.data:000000018001B149                 db    ? ;
.data:000000018001B14A                 db    ? ;
.data:000000018001B14B                 db    ? ;
.data:000000018001B14C                 db    ? ;
.data:000000018001B14D                 db    ? ;
.data:000000018001B14E                 db    ? ;
.data:000000018001B14F                 db    ? ;
.data:000000018001B150                 db    ? ;
.data:000000018001B151                 db    ? ;
.data:000000018001B152                 db    ? ;
.data:000000018001B153                 db    ? ;
.data:000000018001B154                 db    ? ;
.data:000000018001B155                 db    ? ;
.data:000000018001B156                 db    ? ;
.data:000000018001B157                 db    ? ;
.data:000000018001B158                 db    ? ;
.data:000000018001B159                 db    ? ;
.data:000000018001B15A                 db    ? ;
.data:000000018001B15B                 db    ? ;
.data:000000018001B15C                 db    ? ;
.data:000000018001B15D                 db    ? ;
.data:000000018001B15E                 db    ? ;
.data:000000018001B15F                 db    ? ;
.data:000000018001B160                 db    ? ;
.data:000000018001B161                 db    ? ;
.data:000000018001B162                 db    ? ;
.data:000000018001B163                 db    ? ;
.data:000000018001B164                 db    ? ;
.data:000000018001B165                 db    ? ;
.data:000000018001B166                 db    ? ;
.data:000000018001B167                 db    ? ;
.data:000000018001B168                 db    ? ;
.data:000000018001B169                 db    ? ;
.data:000000018001B16A                 db    ? ;
.data:000000018001B16B                 db    ? ;
.data:000000018001B16C                 db    ? ;
.data:000000018001B16D                 db    ? ;
.data:000000018001B16E                 db    ? ;
.data:000000018001B16F                 db    ? ;
.data:000000018001B170                 db    ? ;
.data:000000018001B171                 db    ? ;
.data:000000018001B172                 db    ? ;
.data:000000018001B173                 db    ? ;
.data:000000018001B174                 db    ? ;
.data:000000018001B175                 db    ? ;
.data:000000018001B176                 db    ? ;
.data:000000018001B177                 db    ? ;
.data:000000018001B178                 db    ? ;
.data:000000018001B179                 db    ? ;
.data:000000018001B17A                 db    ? ;
.data:000000018001B17B                 db    ? ;
.data:000000018001B17C                 db    ? ;
.data:000000018001B17D                 db    ? ;
.data:000000018001B17E                 db    ? ;
.data:000000018001B17F                 db    ? ;
.data:000000018001B180                 db    ? ;
.data:000000018001B181                 db    ? ;
.data:000000018001B182                 db    ? ;
.data:000000018001B183                 db    ? ;
.data:000000018001B184                 db    ? ;
.data:000000018001B185                 db    ? ;
.data:000000018001B186                 db    ? ;
.data:000000018001B187                 db    ? ;
.data:000000018001B188                 db    ? ;
.data:000000018001B189                 db    ? ;
.data:000000018001B18A                 db    ? ;
.data:000000018001B18B                 db    ? ;
.data:000000018001B18C                 db    ? ;
.data:000000018001B18D                 db    ? ;
.data:000000018001B18E                 db    ? ;
.data:000000018001B18F                 db    ? ;
.data:000000018001B190                 db    ? ;
.data:000000018001B191                 db    ? ;
.data:000000018001B192                 db    ? ;
.data:000000018001B193                 db    ? ;
.data:000000018001B194                 db    ? ;
.data:000000018001B195                 db    ? ;
.data:000000018001B196                 db    ? ;
.data:000000018001B197                 db    ? ;
.data:000000018001B198                 db    ? ;
.data:000000018001B199                 db    ? ;
.data:000000018001B19A                 db    ? ;
.data:000000018001B19B                 db    ? ;
.data:000000018001B19C                 db    ? ;
.data:000000018001B19D                 db    ? ;
.data:000000018001B19E                 db    ? ;
.data:000000018001B19F                 db    ? ;
.data:000000018001B1A0                 db    ? ;
.data:000000018001B1A1                 db    ? ;
.data:000000018001B1A2                 db    ? ;
.data:000000018001B1A3                 db    ? ;
.data:000000018001B1A4                 db    ? ;
.data:000000018001B1A5                 db    ? ;
.data:000000018001B1A6                 db    ? ;
.data:000000018001B1A7                 db    ? ;
.data:000000018001B1A8                 db    ? ;
.data:000000018001B1A9                 db    ? ;
.data:000000018001B1AA                 db    ? ;
.data:000000018001B1AB                 db    ? ;
.data:000000018001B1AC                 db    ? ;
.data:000000018001B1AD                 db    ? ;
.data:000000018001B1AE                 db    ? ;
.data:000000018001B1AF                 db    ? ;
.data:000000018001B1B0                 db    ? ;
.data:000000018001B1B1                 db    ? ;
.data:000000018001B1B2                 db    ? ;
.data:000000018001B1B3                 db    ? ;
.data:000000018001B1B4                 db    ? ;
.data:000000018001B1B5                 db    ? ;
.data:000000018001B1B6                 db    ? ;
.data:000000018001B1B7                 db    ? ;
.data:000000018001B1B8                 db    ? ;
.data:000000018001B1B9                 db    ? ;
.data:000000018001B1BA                 db    ? ;
.data:000000018001B1BB                 db    ? ;
.data:000000018001B1BC                 db    ? ;
.data:000000018001B1BD                 db    ? ;
.data:000000018001B1BE                 db    ? ;
.data:000000018001B1BF                 db    ? ;
.data:000000018001B1C0                 db    ? ;
.data:000000018001B1C1                 db    ? ;
.data:000000018001B1C2                 db    ? ;
.data:000000018001B1C3                 db    ? ;
.data:000000018001B1C4                 db    ? ;
.data:000000018001B1C5                 db    ? ;
.data:000000018001B1C6                 db    ? ;
.data:000000018001B1C7                 db    ? ;
.data:000000018001B1C8                 db    ? ;
.data:000000018001B1C9                 db    ? ;
.data:000000018001B1CA                 db    ? ;
.data:000000018001B1CB                 db    ? ;
.data:000000018001B1CC                 db    ? ;
.data:000000018001B1CD                 db    ? ;
.data:000000018001B1CE                 db    ? ;
.data:000000018001B1CF                 db    ? ;
.data:000000018001B1D0                 db    ? ;
.data:000000018001B1D1                 db    ? ;
.data:000000018001B1D2                 db    ? ;
.data:000000018001B1D3                 db    ? ;
.data:000000018001B1D4                 db    ? ;
.data:000000018001B1D5                 db    ? ;
.data:000000018001B1D6                 db    ? ;
.data:000000018001B1D7                 db    ? ;
.data:000000018001B1D8                 db    ? ;
.data:000000018001B1D9                 db    ? ;
.data:000000018001B1DA                 db    ? ;
.data:000000018001B1DB                 db    ? ;
.data:000000018001B1DC                 db    ? ;
.data:000000018001B1DD                 db    ? ;
.data:000000018001B1DE                 db    ? ;
.data:000000018001B1DF                 db    ? ;
.data:000000018001B1E0                 db    ? ;
.data:000000018001B1E1                 db    ? ;
.data:000000018001B1E2                 db    ? ;
.data:000000018001B1E3                 db    ? ;
.data:000000018001B1E4                 db    ? ;
.data:000000018001B1E5                 db    ? ;
.data:000000018001B1E6                 db    ? ;
.data:000000018001B1E7                 db    ? ;
.data:000000018001B1E8                 db    ? ;
.data:000000018001B1E9                 db    ? ;
.data:000000018001B1EA                 db    ? ;
.data:000000018001B1EB                 db    ? ;
.data:000000018001B1EC                 db    ? ;
.data:000000018001B1ED                 db    ? ;
.data:000000018001B1EE                 db    ? ;
.data:000000018001B1EF                 db    ? ;
.data:000000018001B1F0                 db    ? ;
.data:000000018001B1F1                 db    ? ;
.data:000000018001B1F2                 db    ? ;
.data:000000018001B1F3                 db    ? ;
.data:000000018001B1F4                 db    ? ;
.data:000000018001B1F5                 db    ? ;
.data:000000018001B1F6                 db    ? ;
.data:000000018001B1F7                 db    ? ;
.data:000000018001B1F8                 db    ? ;
.data:000000018001B1F9                 db    ? ;
.data:000000018001B1FA                 db    ? ;
.data:000000018001B1FB                 db    ? ;
.data:000000018001B1FC                 db    ? ;
.data:000000018001B1FD                 db    ? ;
.data:000000018001B1FE                 db    ? ;
.data:000000018001B1FF                 db    ? ;
.data:000000018001B200                 db    ? ;
.data:000000018001B201                 db    ? ;
.data:000000018001B202                 db    ? ;
.data:000000018001B203                 db    ? ;
.data:000000018001B204                 db    ? ;
.data:000000018001B205                 db    ? ;
.data:000000018001B206                 db    ? ;
.data:000000018001B207                 db    ? ;
.data:000000018001B208                 db    ? ;
.data:000000018001B209                 db    ? ;
.data:000000018001B20A                 db    ? ;
.data:000000018001B20B                 db    ? ;
.data:000000018001B20C                 db    ? ;
.data:000000018001B20D                 db    ? ;
.data:000000018001B20E                 db    ? ;
.data:000000018001B20F                 db    ? ;
.data:000000018001B210                 db    ? ;
.data:000000018001B211                 db    ? ;
.data:000000018001B212                 db    ? ;
.data:000000018001B213                 db    ? ;
.data:000000018001B214                 db    ? ;
.data:000000018001B215                 db    ? ;
.data:000000018001B216                 db    ? ;
.data:000000018001B217                 db    ? ;
.data:000000018001B218                 db    ? ;
.data:000000018001B219                 db    ? ;
.data:000000018001B21A                 db    ? ;
.data:000000018001B21B                 db    ? ;
.data:000000018001B21C                 db    ? ;
.data:000000018001B21D                 db    ? ;
.data:000000018001B21E                 db    ? ;
.data:000000018001B21F                 db    ? ;
.data:000000018001B220                 db    ? ;
.data:000000018001B221                 db    ? ;
.data:000000018001B222                 db    ? ;
.data:000000018001B223                 db    ? ;
.data:000000018001B224                 db    ? ;
.data:000000018001B225                 db    ? ;
.data:000000018001B226                 db    ? ;
.data:000000018001B227                 db    ? ;
.data:000000018001B228                 db    ? ;
.data:000000018001B229                 db    ? ;
.data:000000018001B22A                 db    ? ;
.data:000000018001B22B                 db    ? ;
.data:000000018001B22C                 db    ? ;
.data:000000018001B22D                 db    ? ;
.data:000000018001B22E                 db    ? ;
.data:000000018001B22F                 db    ? ;
.data:000000018001B230                 db    ? ;
.data:000000018001B231                 db    ? ;
.data:000000018001B232                 db    ? ;
.data:000000018001B233                 db    ? ;
.data:000000018001B234                 db    ? ;
.data:000000018001B235                 db    ? ;
.data:000000018001B236                 db    ? ;
.data:000000018001B237                 db    ? ;
.data:000000018001B238                 db    ? ;
.data:000000018001B239                 db    ? ;
.data:000000018001B23A                 db    ? ;
.data:000000018001B23B                 db    ? ;
.data:000000018001B23C                 db    ? ;
.data:000000018001B23D                 db    ? ;
.data:000000018001B23E                 db    ? ;
.data:000000018001B23F                 db    ? ;
.data:000000018001B240                 db    ? ;
.data:000000018001B241                 db    ? ;
.data:000000018001B242                 db    ? ;
.data:000000018001B243                 db    ? ;
.data:000000018001B244                 db    ? ;
.data:000000018001B245                 db    ? ;
.data:000000018001B246                 db    ? ;
.data:000000018001B247                 db    ? ;
.data:000000018001B248                 db    ? ;
.data:000000018001B249                 db    ? ;
.data:000000018001B24A                 db    ? ;
.data:000000018001B24B                 db    ? ;
.data:000000018001B24C                 db    ? ;
.data:000000018001B24D                 db    ? ;
.data:000000018001B24E                 db    ? ;
.data:000000018001B24F                 db    ? ;
.data:000000018001B250                 db    ? ;
.data:000000018001B251                 db    ? ;
.data:000000018001B252                 db    ? ;
.data:000000018001B253                 db    ? ;
.data:000000018001B254                 db    ? ;
.data:000000018001B255                 db    ? ;
.data:000000018001B256                 db    ? ;
.data:000000018001B257                 db    ? ;
.data:000000018001B258                 db    ? ;
.data:000000018001B259                 db    ? ;
.data:000000018001B25A                 db    ? ;
.data:000000018001B25B                 db    ? ;
.data:000000018001B25C                 db    ? ;
.data:000000018001B25D                 db    ? ;
.data:000000018001B25E                 db    ? ;
.data:000000018001B25F                 db    ? ;
.data:000000018001B260                 db    ? ;
.data:000000018001B261                 db    ? ;
.data:000000018001B262                 db    ? ;
.data:000000018001B263                 db    ? ;
.data:000000018001B264                 db    ? ;
.data:000000018001B265                 db    ? ;
.data:000000018001B266                 db    ? ;
.data:000000018001B267                 db    ? ;
.data:000000018001B268                 db    ? ;
.data:000000018001B269                 db    ? ;
.data:000000018001B26A                 db    ? ;
.data:000000018001B26B                 db    ? ;
.data:000000018001B26C                 db    ? ;
.data:000000018001B26D                 db    ? ;
.data:000000018001B26E                 db    ? ;
.data:000000018001B26F                 db    ? ;
.data:000000018001B270                 db    ? ;
.data:000000018001B271                 db    ? ;
.data:000000018001B272                 db    ? ;
.data:000000018001B273                 db    ? ;
.data:000000018001B274                 db    ? ;
.data:000000018001B275                 db    ? ;
.data:000000018001B276                 db    ? ;
.data:000000018001B277                 db    ? ;
.data:000000018001B278                 db    ? ;
.data:000000018001B279                 db    ? ;
.data:000000018001B27A                 db    ? ;
.data:000000018001B27B                 db    ? ;
.data:000000018001B27C                 db    ? ;
.data:000000018001B27D                 db    ? ;
.data:000000018001B27E                 db    ? ;
.data:000000018001B27F                 db    ? ;
.data:000000018001B280                 db    ? ;
.data:000000018001B281                 db    ? ;
.data:000000018001B282                 db    ? ;
.data:000000018001B283                 db    ? ;
.data:000000018001B284                 db    ? ;
.data:000000018001B285                 db    ? ;
.data:000000018001B286                 db    ? ;
.data:000000018001B287                 db    ? ;
.data:000000018001B288                 db    ? ;
.data:000000018001B289                 db    ? ;
.data:000000018001B28A                 db    ? ;
.data:000000018001B28B                 db    ? ;
.data:000000018001B28C                 db    ? ;
.data:000000018001B28D                 db    ? ;
.data:000000018001B28E                 db    ? ;
.data:000000018001B28F                 db    ? ;
.data:000000018001B290                 db    ? ;
.data:000000018001B291                 db    ? ;
.data:000000018001B292                 db    ? ;
.data:000000018001B293                 db    ? ;
.data:000000018001B294                 db    ? ;
.data:000000018001B295                 db    ? ;
.data:000000018001B296                 db    ? ;
.data:000000018001B297                 db    ? ;
.data:000000018001B298 dword_18001B298 dd ?                    ; DATA XREF: sub_1800034B0:loc_180003E18↑w
.data:000000018001B298                                         ; sub_1800034B0+A00↑r ...
.data:000000018001B29C                 align 20h
.data:000000018001B2A0 unk_18001B2A0   db    ? ;               ; DATA XREF: sub_180002960↑o
.data:000000018001B2A1                 db    ? ;
.data:000000018001B2A2                 db    ? ;
.data:000000018001B2A3                 db    ? ;
.data:000000018001B2A4                 db    ? ;
.data:000000018001B2A5                 db    ? ;
.data:000000018001B2A6                 db    ? ;
.data:000000018001B2A7                 db    ? ;
.data:000000018001B2A8 unk_18001B2A8   db    ? ;               ; DATA XREF: sub_180002970↑o
.data:000000018001B2A9                 db    ? ;
.data:000000018001B2AA                 db    ? ;
.data:000000018001B2AB                 db    ? ;
.data:000000018001B2AC                 db    ? ;
.data:000000018001B2AD                 db    ? ;
.data:000000018001B2AE                 db    ? ;
.data:000000018001B2AF                 db    ? ;
.data:000000018001B2B0 qword_18001B2B0 dq ?                    ; DATA XREF: sub_180008800:loc_1800088BD↑r
.data:000000018001B2B0                                         ; sub_180009300+ED↑r ...
.data:000000018001B2B8 qword_18001B2B8 dq ?                    ; DATA XREF: sub_18000A0D0+34↑r
.data:000000018001B2B8                                         ; sub_18000A0D0+D0↑w
.data:000000018001B2C0 qword_18001B2C0 dq ?                    ; DATA XREF: sub_180009C80+BD↑r
.data:000000018001B2C0                                         ; sub_180009C80+16F↑w
.data:000000018001B2C8 unk_18001B2C8   db    ? ;               ; DATA XREF: sub_180010E40↑o
.data:000000018001B2C9                 db    ? ;
.data:000000018001B2CA                 db    ? ;
.data:000000018001B2CB                 db    ? ;
.data:000000018001B2CC                 db    ? ;
.data:000000018001B2CD                 db    ? ;
.data:000000018001B2CE                 db    ? ;
.data:000000018001B2CF                 db    ? ;
.data:000000018001B2D0                 db    ? ;
.data:000000018001B2D1                 db    ? ;
.data:000000018001B2D2                 db    ? ;
.data:000000018001B2D3                 db    ? ;
.data:000000018001B2D4                 db    ? ;
.data:000000018001B2D5                 db    ? ;
.data:000000018001B2D6                 db    ? ;
.data:000000018001B2D7                 db    ? ;
.data:000000018001B2D8                 db    ? ;
.data:000000018001B2D9                 db    ? ;
.data:000000018001B2DA                 db    ? ;
.data:000000018001B2DB                 db    ? ;
.data:000000018001B2DC                 db    ? ;
.data:000000018001B2DD                 db    ? ;
.data:000000018001B2DE                 db    ? ;
.data:000000018001B2DF                 db    ? ;
.data:000000018001B2E0                 db    ? ;
.data:000000018001B2E1                 db    ? ;
.data:000000018001B2E2                 db    ? ;
.data:000000018001B2E3                 db    ? ;
.data:000000018001B2E4                 db    ? ;
.data:000000018001B2E5                 db    ? ;
.data:000000018001B2E6                 db    ? ;
.data:000000018001B2E7                 db    ? ;
.data:000000018001B2E8                 db    ? ;
.data:000000018001B2E9                 db    ? ;
.data:000000018001B2EA                 db    ? ;
.data:000000018001B2EB                 db    ? ;
.data:000000018001B2EC                 db    ? ;
.data:000000018001B2ED                 db    ? ;
.data:000000018001B2EE                 db    ? ;
.data:000000018001B2EF                 db    ? ;
.data:000000018001B2F0                 db    ? ;
.data:000000018001B2F1                 db    ? ;
.data:000000018001B2F2                 db    ? ;
.data:000000018001B2F3                 db    ? ;
.data:000000018001B2F4                 db    ? ;
.data:000000018001B2F5                 db    ? ;
.data:000000018001B2F6                 db    ? ;
.data:000000018001B2F7                 db    ? ;
.data:000000018001B2F8                 db    ? ;
.data:000000018001B2F9                 db    ? ;
.data:000000018001B2FA                 db    ? ;
.data:000000018001B2FB                 db    ? ;
.data:000000018001B2FC                 db    ? ;
.data:000000018001B2FD                 db    ? ;
.data:000000018001B2FE                 db    ? ;
.data:000000018001B2FF                 db    ? ;
.data:000000018001B300                 db    ? ;
.data:000000018001B301                 db    ? ;
.data:000000018001B302                 db    ? ;
.data:000000018001B303                 db    ? ;
.data:000000018001B304                 db    ? ;
.data:000000018001B305                 db    ? ;
.data:000000018001B306                 db    ? ;
.data:000000018001B307                 db    ? ;
.data:000000018001B308                 db    ? ;
.data:000000018001B309                 db    ? ;
.data:000000018001B30A                 db    ? ;
.data:000000018001B30B                 db    ? ;
.data:000000018001B30C                 db    ? ;
.data:000000018001B30D                 db    ? ;
.data:000000018001B30E                 db    ? ;
.data:000000018001B30F                 db    ? ;
.data:000000018001B310                 db    ? ;
.data:000000018001B311                 db    ? ;
.data:000000018001B312                 db    ? ;
.data:000000018001B313                 db    ? ;
.data:000000018001B314                 db    ? ;
.data:000000018001B315                 db    ? ;
.data:000000018001B316                 db    ? ;
.data:000000018001B317                 db    ? ;
.data:000000018001B318                 db    ? ;
.data:000000018001B319                 db    ? ;
.data:000000018001B31A                 db    ? ;
.data:000000018001B31B                 db    ? ;
.data:000000018001B31C                 db    ? ;
.data:000000018001B31D                 db    ? ;
.data:000000018001B31E                 db    ? ;
.data:000000018001B31F                 db    ? ;
.data:000000018001B320                 db    ? ;
.data:000000018001B321                 db    ? ;
.data:000000018001B322                 db    ? ;
.data:000000018001B323                 db    ? ;
.data:000000018001B324                 db    ? ;
.data:000000018001B325                 db    ? ;
.data:000000018001B326                 db    ? ;
.data:000000018001B327                 db    ? ;
.data:000000018001B328                 db    ? ;
.data:000000018001B329                 db    ? ;
.data:000000018001B32A                 db    ? ;
.data:000000018001B32B                 db    ? ;
.data:000000018001B32C                 db    ? ;
.data:000000018001B32D                 db    ? ;
.data:000000018001B32E                 db    ? ;
.data:000000018001B32F                 db    ? ;
.data:000000018001B330                 db    ? ;
.data:000000018001B331                 db    ? ;
.data:000000018001B332                 db    ? ;
.data:000000018001B333                 db    ? ;
.data:000000018001B334                 db    ? ;
.data:000000018001B335                 db    ? ;
.data:000000018001B336                 db    ? ;
.data:000000018001B337                 db    ? ;
.data:000000018001B338                 db    ? ;
.data:000000018001B339                 db    ? ;
.data:000000018001B33A                 db    ? ;
.data:000000018001B33B                 db    ? ;
.data:000000018001B33C                 db    ? ;
.data:000000018001B33D                 db    ? ;
.data:000000018001B33E                 db    ? ;
.data:000000018001B33F                 db    ? ;
.data:000000018001B340                 db    ? ;
.data:000000018001B341                 db    ? ;
.data:000000018001B342                 db    ? ;
.data:000000018001B343                 db    ? ;
.data:000000018001B344                 db    ? ;
.data:000000018001B345                 db    ? ;
.data:000000018001B346                 db    ? ;
.data:000000018001B347                 db    ? ;
.data:000000018001B348                 db    ? ;
.data:000000018001B349                 db    ? ;
.data:000000018001B34A                 db    ? ;
.data:000000018001B34B                 db    ? ;
.data:000000018001B34C                 db    ? ;
.data:000000018001B34D                 db    ? ;
.data:000000018001B34E                 db    ? ;
.data:000000018001B34F                 db    ? ;
.data:000000018001B350                 db    ? ;
.data:000000018001B351                 db    ? ;
.data:000000018001B352                 db    ? ;
.data:000000018001B353                 db    ? ;
.data:000000018001B354                 db    ? ;
.data:000000018001B355                 db    ? ;
.data:000000018001B356                 db    ? ;
.data:000000018001B357                 db    ? ;
.data:000000018001B358                 db    ? ;
.data:000000018001B359                 db    ? ;
.data:000000018001B35A                 db    ? ;
.data:000000018001B35B                 db    ? ;
.data:000000018001B35C                 db    ? ;
.data:000000018001B35D                 db    ? ;
.data:000000018001B35E                 db    ? ;
.data:000000018001B35F                 db    ? ;
.data:000000018001B360                 db    ? ;
.data:000000018001B361                 db    ? ;
.data:000000018001B362                 db    ? ;
.data:000000018001B363                 db    ? ;
.data:000000018001B364                 db    ? ;
.data:000000018001B365                 db    ? ;
.data:000000018001B366                 db    ? ;
.data:000000018001B367                 db    ? ;
.data:000000018001B368                 db    ? ;
.data:000000018001B369                 db    ? ;
.data:000000018001B36A                 db    ? ;
.data:000000018001B36B                 db    ? ;
.data:000000018001B36C                 db    ? ;
.data:000000018001B36D                 db    ? ;
.data:000000018001B36E                 db    ? ;
.data:000000018001B36F                 db    ? ;
.data:000000018001B370                 db    ? ;
.data:000000018001B371                 db    ? ;
.data:000000018001B372                 db    ? ;
.data:000000018001B373                 db    ? ;
.data:000000018001B374                 db    ? ;
.data:000000018001B375                 db    ? ;
.data:000000018001B376                 db    ? ;
.data:000000018001B377                 db    ? ;
.data:000000018001B378                 db    ? ;
.data:000000018001B379                 db    ? ;
.data:000000018001B37A                 db    ? ;
.data:000000018001B37B                 db    ? ;
.data:000000018001B37C                 db    ? ;
.data:000000018001B37D                 db    ? ;
.data:000000018001B37E                 db    ? ;
.data:000000018001B37F                 db    ? ;
.data:000000018001B380                 db    ? ;
.data:000000018001B381                 db    ? ;
.data:000000018001B382                 db    ? ;
.data:000000018001B383                 db    ? ;
.data:000000018001B384                 db    ? ;
.data:000000018001B385                 db    ? ;
.data:000000018001B386                 db    ? ;
.data:000000018001B387                 db    ? ;
.data:000000018001B388                 db    ? ;
.data:000000018001B389                 db    ? ;
.data:000000018001B38A                 db    ? ;
.data:000000018001B38B                 db    ? ;
.data:000000018001B38C                 db    ? ;
.data:000000018001B38D                 db    ? ;
.data:000000018001B38E                 db    ? ;
.data:000000018001B38F                 db    ? ;
.data:000000018001B390                 db    ? ;
.data:000000018001B391                 db    ? ;
.data:000000018001B392                 db    ? ;
.data:000000018001B393                 db    ? ;
.data:000000018001B394                 db    ? ;
.data:000000018001B395                 db    ? ;
.data:000000018001B396                 db    ? ;
.data:000000018001B397                 db    ? ;
.data:000000018001B398                 db    ? ;
.data:000000018001B399                 db    ? ;
.data:000000018001B39A                 db    ? ;
.data:000000018001B39B                 db    ? ;
.data:000000018001B39C                 db    ? ;
.data:000000018001B39D                 db    ? ;
.data:000000018001B39E                 db    ? ;
.data:000000018001B39F                 db    ? ;
.data:000000018001B3A0                 db    ? ;
.data:000000018001B3A1                 db    ? ;
.data:000000018001B3A2                 db    ? ;
.data:000000018001B3A3                 db    ? ;
.data:000000018001B3A4                 db    ? ;
.data:000000018001B3A5                 db    ? ;
.data:000000018001B3A6                 db    ? ;
.data:000000018001B3A7                 db    ? ;
.data:000000018001B3A8                 db    ? ;
.data:000000018001B3A9                 db    ? ;
.data:000000018001B3AA                 db    ? ;
.data:000000018001B3AB                 db    ? ;
.data:000000018001B3AC                 db    ? ;
.data:000000018001B3AD                 db    ? ;
.data:000000018001B3AE                 db    ? ;
.data:000000018001B3AF                 db    ? ;
.data:000000018001B3B0                 db    ? ;
.data:000000018001B3B1                 db    ? ;
.data:000000018001B3B2                 db    ? ;
.data:000000018001B3B3                 db    ? ;
.data:000000018001B3B4                 db    ? ;
.data:000000018001B3B5                 db    ? ;
.data:000000018001B3B6                 db    ? ;
.data:000000018001B3B7                 db    ? ;
.data:000000018001B3B8                 db    ? ;
.data:000000018001B3B9                 db    ? ;
.data:000000018001B3BA                 db    ? ;
.data:000000018001B3BB                 db    ? ;
.data:000000018001B3BC                 db    ? ;
.data:000000018001B3BD                 db    ? ;
.data:000000018001B3BE                 db    ? ;
.data:000000018001B3BF                 db    ? ;
.data:000000018001B3C0                 db    ? ;
.data:000000018001B3C1                 db    ? ;
.data:000000018001B3C2                 db    ? ;
.data:000000018001B3C3                 db    ? ;
.data:000000018001B3C4                 db    ? ;
.data:000000018001B3C5                 db    ? ;
.data:000000018001B3C6                 db    ? ;
.data:000000018001B3C7                 db    ? ;
.data:000000018001B3C8                 db    ? ;
.data:000000018001B3C9                 db    ? ;
.data:000000018001B3CA                 db    ? ;
.data:000000018001B3CB                 db    ? ;
.data:000000018001B3CC                 db    ? ;
.data:000000018001B3CD                 db    ? ;
.data:000000018001B3CE                 db    ? ;
.data:000000018001B3CF                 db    ? ;
.data:000000018001B3D0                 db    ? ;
.data:000000018001B3D1                 db    ? ;
.data:000000018001B3D2                 db    ? ;
.data:000000018001B3D3                 db    ? ;
.data:000000018001B3D4                 db    ? ;
.data:000000018001B3D5                 db    ? ;
.data:000000018001B3D6                 db    ? ;
.data:000000018001B3D7                 db    ? ;
.data:000000018001B3D8                 db    ? ;
.data:000000018001B3D9                 db    ? ;
.data:000000018001B3DA                 db    ? ;
.data:000000018001B3DB                 db    ? ;
.data:000000018001B3DC                 db    ? ;
.data:000000018001B3DD                 db    ? ;
.data:000000018001B3DE                 db    ? ;
.data:000000018001B3DF                 db    ? ;
.data:000000018001B3E0                 db    ? ;
.data:000000018001B3E1                 db    ? ;
.data:000000018001B3E2                 db    ? ;
.data:000000018001B3E3                 db    ? ;
.data:000000018001B3E4                 db    ? ;
.data:000000018001B3E5                 db    ? ;
.data:000000018001B3E6                 db    ? ;
.data:000000018001B3E7                 db    ? ;
.data:000000018001B3E8                 db    ? ;
.data:000000018001B3E9                 db    ? ;
.data:000000018001B3EA                 db    ? ;
.data:000000018001B3EB                 db    ? ;
.data:000000018001B3EC                 db    ? ;
.data:000000018001B3ED                 db    ? ;
.data:000000018001B3EE                 db    ? ;
.data:000000018001B3EF                 db    ? ;
.data:000000018001B3F0                 db    ? ;
.data:000000018001B3F1                 db    ? ;
.data:000000018001B3F2                 db    ? ;
.data:000000018001B3F3                 db    ? ;
.data:000000018001B3F4                 db    ? ;
.data:000000018001B3F5                 db    ? ;
.data:000000018001B3F6                 db    ? ;
.data:000000018001B3F7                 db    ? ;
.data:000000018001B3F8                 db    ? ;
.data:000000018001B3F9                 db    ? ;
.data:000000018001B3FA                 db    ? ;
.data:000000018001B3FB                 db    ? ;
.data:000000018001B3FC                 db    ? ;
.data:000000018001B3FD                 db    ? ;
.data:000000018001B3FE                 db    ? ;
.data:000000018001B3FF                 db    ? ;
.data:000000018001B400                 db    ? ;
.data:000000018001B401                 db    ? ;
.data:000000018001B402                 db    ? ;
.data:000000018001B403                 db    ? ;
.data:000000018001B404                 db    ? ;
.data:000000018001B405                 db    ? ;
.data:000000018001B406                 db    ? ;
.data:000000018001B407                 db    ? ;
.data:000000018001B408                 db    ? ;
.data:000000018001B409                 db    ? ;
.data:000000018001B40A                 db    ? ;
.data:000000018001B40B                 db    ? ;
.data:000000018001B40C                 db    ? ;
.data:000000018001B40D                 db    ? ;
.data:000000018001B40E                 db    ? ;
.data:000000018001B40F                 db    ? ;
.data:000000018001B410                 db    ? ;
.data:000000018001B411                 db    ? ;
.data:000000018001B412                 db    ? ;
.data:000000018001B413                 db    ? ;
.data:000000018001B414                 db    ? ;
.data:000000018001B415                 db    ? ;
.data:000000018001B416                 db    ? ;
.data:000000018001B417                 db    ? ;
.data:000000018001B418                 db    ? ;
.data:000000018001B419                 db    ? ;
.data:000000018001B41A                 db    ? ;
.data:000000018001B41B                 db    ? ;
.data:000000018001B41C                 db    ? ;
.data:000000018001B41D                 db    ? ;
.data:000000018001B41E                 db    ? ;
.data:000000018001B41F                 db    ? ;
.data:000000018001B420                 db    ? ;
.data:000000018001B421                 db    ? ;
.data:000000018001B422                 db    ? ;
.data:000000018001B423                 db    ? ;
.data:000000018001B424                 db    ? ;
.data:000000018001B425                 db    ? ;
.data:000000018001B426                 db    ? ;
.data:000000018001B427                 db    ? ;
.data:000000018001B428                 db    ? ;
.data:000000018001B429                 db    ? ;
.data:000000018001B42A                 db    ? ;
.data:000000018001B42B                 db    ? ;
.data:000000018001B42C                 db    ? ;
.data:000000018001B42D                 db    ? ;
.data:000000018001B42E                 db    ? ;
.data:000000018001B42F                 db    ? ;
.data:000000018001B430                 db    ? ;
.data:000000018001B431                 db    ? ;
.data:000000018001B432                 db    ? ;
.data:000000018001B433                 db    ? ;
.data:000000018001B434                 db    ? ;
.data:000000018001B435                 db    ? ;
.data:000000018001B436                 db    ? ;
.data:000000018001B437                 db    ? ;
.data:000000018001B438                 db    ? ;
.data:000000018001B439                 db    ? ;
.data:000000018001B43A                 db    ? ;
.data:000000018001B43B                 db    ? ;
.data:000000018001B43C                 db    ? ;
.data:000000018001B43D                 db    ? ;
.data:000000018001B43E                 db    ? ;
.data:000000018001B43F                 db    ? ;
.data:000000018001B440                 db    ? ;
.data:000000018001B441                 db    ? ;
.data:000000018001B442                 db    ? ;
.data:000000018001B443                 db    ? ;
.data:000000018001B444                 db    ? ;
.data:000000018001B445                 db    ? ;
.data:000000018001B446                 db    ? ;
.data:000000018001B447                 db    ? ;
.data:000000018001B448                 db    ? ;
.data:000000018001B449                 db    ? ;
.data:000000018001B44A                 db    ? ;
.data:000000018001B44B                 db    ? ;
.data:000000018001B44C                 db    ? ;
.data:000000018001B44D                 db    ? ;
.data:000000018001B44E                 db    ? ;
.data:000000018001B44F                 db    ? ;
.data:000000018001B450                 db    ? ;
.data:000000018001B451                 db    ? ;
.data:000000018001B452                 db    ? ;
.data:000000018001B453                 db    ? ;
.data:000000018001B454                 db    ? ;
.data:000000018001B455                 db    ? ;
.data:000000018001B456                 db    ? ;
.data:000000018001B457                 db    ? ;
.data:000000018001B458                 db    ? ;
.data:000000018001B459                 db    ? ;
.data:000000018001B45A                 db    ? ;
.data:000000018001B45B                 db    ? ;
.data:000000018001B45C                 db    ? ;
.data:000000018001B45D                 db    ? ;
.data:000000018001B45E                 db    ? ;
.data:000000018001B45F                 db    ? ;
.data:000000018001B460                 db    ? ;
.data:000000018001B461                 db    ? ;
.data:000000018001B462                 db    ? ;
.data:000000018001B463                 db    ? ;
.data:000000018001B464                 db    ? ;
.data:000000018001B465                 db    ? ;
.data:000000018001B466                 db    ? ;
.data:000000018001B467                 db    ? ;
.data:000000018001B468                 db    ? ;
.data:000000018001B469                 db    ? ;
.data:000000018001B46A                 db    ? ;
.data:000000018001B46B                 db    ? ;
.data:000000018001B46C                 db    ? ;
.data:000000018001B46D                 db    ? ;
.data:000000018001B46E                 db    ? ;
.data:000000018001B46F                 db    ? ;
.data:000000018001B470                 db    ? ;
.data:000000018001B471                 db    ? ;
.data:000000018001B472                 db    ? ;
.data:000000018001B473                 db    ? ;
.data:000000018001B474                 db    ? ;
.data:000000018001B475                 db    ? ;
.data:000000018001B476                 db    ? ;
.data:000000018001B477                 db    ? ;
.data:000000018001B478                 db    ? ;
.data:000000018001B479                 db    ? ;
.data:000000018001B47A                 db    ? ;
.data:000000018001B47B                 db    ? ;
.data:000000018001B47C                 db    ? ;
.data:000000018001B47D                 db    ? ;
.data:000000018001B47E                 db    ? ;
.data:000000018001B47F                 db    ? ;
.data:000000018001B480                 db    ? ;
.data:000000018001B481                 db    ? ;
.data:000000018001B482                 db    ? ;
.data:000000018001B483                 db    ? ;
.data:000000018001B484                 db    ? ;
.data:000000018001B485                 db    ? ;
.data:000000018001B486                 db    ? ;
.data:000000018001B487                 db    ? ;
.data:000000018001B488                 db    ? ;
.data:000000018001B489                 db    ? ;
.data:000000018001B48A                 db    ? ;
.data:000000018001B48B                 db    ? ;
.data:000000018001B48C                 db    ? ;
.data:000000018001B48D                 db    ? ;
.data:000000018001B48E                 db    ? ;
.data:000000018001B48F                 db    ? ;
.data:000000018001B490                 db    ? ;
.data:000000018001B491                 db    ? ;
.data:000000018001B492                 db    ? ;
.data:000000018001B493                 db    ? ;
.data:000000018001B494                 db    ? ;
.data:000000018001B495                 db    ? ;
.data:000000018001B496                 db    ? ;
.data:000000018001B497                 db    ? ;
.data:000000018001B498                 db    ? ;
.data:000000018001B499                 db    ? ;
.data:000000018001B49A                 db    ? ;
.data:000000018001B49B                 db    ? ;
.data:000000018001B49C                 db    ? ;
.data:000000018001B49D                 db    ? ;
.data:000000018001B49E                 db    ? ;
.data:000000018001B49F                 db    ? ;
.data:000000018001B4A0                 db    ? ;
.data:000000018001B4A1                 db    ? ;
.data:000000018001B4A2                 db    ? ;
.data:000000018001B4A3                 db    ? ;
.data:000000018001B4A4                 db    ? ;
.data:000000018001B4A5                 db    ? ;
.data:000000018001B4A6                 db    ? ;
.data:000000018001B4A7                 db    ? ;
.data:000000018001B4A8                 db    ? ;
.data:000000018001B4A9                 db    ? ;
.data:000000018001B4AA                 db    ? ;
.data:000000018001B4AB                 db    ? ;
.data:000000018001B4AC                 db    ? ;
.data:000000018001B4AD                 db    ? ;
.data:000000018001B4AE                 db    ? ;
.data:000000018001B4AF                 db    ? ;
.data:000000018001B4B0                 db    ? ;
.data:000000018001B4B1                 db    ? ;
.data:000000018001B4B2                 db    ? ;
.data:000000018001B4B3                 db    ? ;
.data:000000018001B4B4                 db    ? ;
.data:000000018001B4B5                 db    ? ;
.data:000000018001B4B6                 db    ? ;
.data:000000018001B4B7                 db    ? ;
.data:000000018001B4B8                 db    ? ;
.data:000000018001B4B9                 db    ? ;
.data:000000018001B4BA                 db    ? ;
.data:000000018001B4BB                 db    ? ;
.data:000000018001B4BC                 db    ? ;
.data:000000018001B4BD                 db    ? ;
.data:000000018001B4BE                 db    ? ;
.data:000000018001B4BF                 db    ? ;
.data:000000018001B4C0                 db    ? ;
.data:000000018001B4C1                 db    ? ;
.data:000000018001B4C2                 db    ? ;
.data:000000018001B4C3                 db    ? ;
.data:000000018001B4C4                 db    ? ;
.data:000000018001B4C5                 db    ? ;
.data:000000018001B4C6                 db    ? ;
.data:000000018001B4C7                 db    ? ;
.data:000000018001B4C8                 db    ? ;
.data:000000018001B4C9                 db    ? ;
.data:000000018001B4CA                 db    ? ;
.data:000000018001B4CB                 db    ? ;
.data:000000018001B4CC                 db    ? ;
.data:000000018001B4CD                 db    ? ;
.data:000000018001B4CE                 db    ? ;
.data:000000018001B4CF                 db    ? ;
.data:000000018001B4D0                 db    ? ;
.data:000000018001B4D1                 db    ? ;
.data:000000018001B4D2                 db    ? ;
.data:000000018001B4D3                 db    ? ;
.data:000000018001B4D4                 db    ? ;
.data:000000018001B4D5                 db    ? ;
.data:000000018001B4D6                 db    ? ;
.data:000000018001B4D7                 db    ? ;
.data:000000018001B4D8                 db    ? ;
.data:000000018001B4D9                 db    ? ;
.data:000000018001B4DA                 db    ? ;
.data:000000018001B4DB                 db    ? ;
.data:000000018001B4DC                 db    ? ;
.data:000000018001B4DD                 db    ? ;
.data:000000018001B4DE                 db    ? ;
.data:000000018001B4DF                 db    ? ;
.data:000000018001B4E0                 db    ? ;
.data:000000018001B4E1                 db    ? ;
.data:000000018001B4E2                 db    ? ;
.data:000000018001B4E3                 db    ? ;
.data:000000018001B4E4                 db    ? ;
.data:000000018001B4E5                 db    ? ;
.data:000000018001B4E6                 db    ? ;
.data:000000018001B4E7                 db    ? ;
.data:000000018001B4E8                 db    ? ;
.data:000000018001B4E9                 db    ? ;
.data:000000018001B4EA                 db    ? ;
.data:000000018001B4EB                 db    ? ;
.data:000000018001B4EC                 db    ? ;
.data:000000018001B4ED                 db    ? ;
.data:000000018001B4EE                 db    ? ;
.data:000000018001B4EF                 db    ? ;
.data:000000018001B4F0                 db    ? ;
.data:000000018001B4F1                 db    ? ;
.data:000000018001B4F2                 db    ? ;
.data:000000018001B4F3                 db    ? ;
.data:000000018001B4F4                 db    ? ;
.data:000000018001B4F5                 db    ? ;
.data:000000018001B4F6                 db    ? ;
.data:000000018001B4F7                 db    ? ;
.data:000000018001B4F8                 db    ? ;
.data:000000018001B4F9                 db    ? ;
.data:000000018001B4FA                 db    ? ;
.data:000000018001B4FB                 db    ? ;
.data:000000018001B4FC                 db    ? ;
.data:000000018001B4FD                 db    ? ;
.data:000000018001B4FE                 db    ? ;
.data:000000018001B4FF                 db    ? ;
.data:000000018001B500                 db    ? ;
.data:000000018001B501                 db    ? ;
.data:000000018001B502                 db    ? ;
.data:000000018001B503                 db    ? ;
.data:000000018001B504                 db    ? ;
.data:000000018001B505                 db    ? ;
.data:000000018001B506                 db    ? ;
.data:000000018001B507                 db    ? ;
.data:000000018001B508                 db    ? ;
.data:000000018001B509                 db    ? ;
.data:000000018001B50A                 db    ? ;
.data:000000018001B50B                 db    ? ;
.data:000000018001B50C                 db    ? ;
.data:000000018001B50D                 db    ? ;
.data:000000018001B50E                 db    ? ;
.data:000000018001B50F                 db    ? ;
.data:000000018001B510                 db    ? ;
.data:000000018001B511                 db    ? ;
.data:000000018001B512                 db    ? ;
.data:000000018001B513                 db    ? ;
.data:000000018001B514                 db    ? ;
.data:000000018001B515                 db    ? ;
.data:000000018001B516                 db    ? ;
.data:000000018001B517                 db    ? ;
.data:000000018001B518                 db    ? ;
.data:000000018001B519                 db    ? ;
.data:000000018001B51A                 db    ? ;
.data:000000018001B51B                 db    ? ;
.data:000000018001B51C                 db    ? ;
.data:000000018001B51D                 db    ? ;
.data:000000018001B51E                 db    ? ;
.data:000000018001B51F                 db    ? ;
.data:000000018001B520                 db    ? ;
.data:000000018001B521                 db    ? ;
.data:000000018001B522                 db    ? ;
.data:000000018001B523                 db    ? ;
.data:000000018001B524                 db    ? ;
.data:000000018001B525                 db    ? ;
.data:000000018001B526                 db    ? ;
.data:000000018001B527                 db    ? ;
.data:000000018001B528                 db    ? ;
.data:000000018001B529                 db    ? ;
.data:000000018001B52A                 db    ? ;
.data:000000018001B52B                 db    ? ;
.data:000000018001B52C                 db    ? ;
.data:000000018001B52D                 db    ? ;
.data:000000018001B52E                 db    ? ;
.data:000000018001B52F                 db    ? ;
.data:000000018001B530                 db    ? ;
.data:000000018001B531                 db    ? ;
.data:000000018001B532                 db    ? ;
.data:000000018001B533                 db    ? ;
.data:000000018001B534                 db    ? ;
.data:000000018001B535                 db    ? ;
.data:000000018001B536                 db    ? ;
.data:000000018001B537                 db    ? ;
.data:000000018001B538                 db    ? ;
.data:000000018001B539                 db    ? ;
.data:000000018001B53A                 db    ? ;
.data:000000018001B53B                 db    ? ;
.data:000000018001B53C                 db    ? ;
.data:000000018001B53D                 db    ? ;
.data:000000018001B53E                 db    ? ;
.data:000000018001B53F                 db    ? ;
.data:000000018001B540                 db    ? ;
.data:000000018001B541                 db    ? ;
.data:000000018001B542                 db    ? ;
.data:000000018001B543                 db    ? ;
.data:000000018001B544                 db    ? ;
.data:000000018001B545                 db    ? ;
.data:000000018001B546                 db    ? ;
.data:000000018001B547                 db    ? ;
.data:000000018001B548                 db    ? ;
.data:000000018001B549                 db    ? ;
.data:000000018001B54A                 db    ? ;
.data:000000018001B54B                 db    ? ;
.data:000000018001B54C                 db    ? ;
.data:000000018001B54D                 db    ? ;
.data:000000018001B54E                 db    ? ;
.data:000000018001B54F                 db    ? ;
.data:000000018001B550                 db    ? ;
.data:000000018001B551                 db    ? ;
.data:000000018001B552                 db    ? ;
.data:000000018001B553                 db    ? ;
.data:000000018001B554                 db    ? ;
.data:000000018001B555                 db    ? ;
.data:000000018001B556                 db    ? ;
.data:000000018001B557                 db    ? ;
.data:000000018001B558                 db    ? ;
.data:000000018001B559                 db    ? ;
.data:000000018001B55A                 db    ? ;
.data:000000018001B55B                 db    ? ;
.data:000000018001B55C                 db    ? ;
.data:000000018001B55D                 db    ? ;
.data:000000018001B55E                 db    ? ;
.data:000000018001B55F                 db    ? ;
.data:000000018001B560                 db    ? ;
.data:000000018001B561                 db    ? ;
.data:000000018001B562                 db    ? ;
.data:000000018001B563                 db    ? ;
.data:000000018001B564                 db    ? ;
.data:000000018001B565                 db    ? ;
.data:000000018001B566                 db    ? ;
.data:000000018001B567                 db    ? ;
.data:000000018001B568                 db    ? ;
.data:000000018001B569                 db    ? ;
.data:000000018001B56A                 db    ? ;
.data:000000018001B56B                 db    ? ;
.data:000000018001B56C                 db    ? ;
.data:000000018001B56D                 db    ? ;
.data:000000018001B56E                 db    ? ;
.data:000000018001B56F                 db    ? ;
.data:000000018001B570                 db    ? ;
.data:000000018001B571                 db    ? ;
.data:000000018001B572                 db    ? ;
.data:000000018001B573                 db    ? ;
.data:000000018001B574                 db    ? ;
.data:000000018001B575                 db    ? ;
.data:000000018001B576                 db    ? ;
.data:000000018001B577                 db    ? ;
.data:000000018001B578                 db    ? ;
.data:000000018001B579                 db    ? ;
.data:000000018001B57A                 db    ? ;
.data:000000018001B57B                 db    ? ;
.data:000000018001B57C                 db    ? ;
.data:000000018001B57D                 db    ? ;
.data:000000018001B57E                 db    ? ;
.data:000000018001B57F                 db    ? ;
.data:000000018001B580                 db    ? ;
.data:000000018001B581                 db    ? ;
.data:000000018001B582                 db    ? ;
.data:000000018001B583                 db    ? ;
.data:000000018001B584                 db    ? ;
.data:000000018001B585                 db    ? ;
.data:000000018001B586                 db    ? ;
.data:000000018001B587                 db    ? ;
.data:000000018001B588                 db    ? ;
.data:000000018001B589                 db    ? ;
.data:000000018001B58A                 db    ? ;
.data:000000018001B58B                 db    ? ;
.data:000000018001B58C                 db    ? ;
.data:000000018001B58D                 db    ? ;
.data:000000018001B58E                 db    ? ;
.data:000000018001B58F                 db    ? ;
.data:000000018001B590                 db    ? ;
.data:000000018001B591                 db    ? ;
.data:000000018001B592                 db    ? ;
.data:000000018001B593                 db    ? ;
.data:000000018001B594                 db    ? ;
.data:000000018001B595                 db    ? ;
.data:000000018001B596                 db    ? ;
.data:000000018001B597                 db    ? ;
.data:000000018001B598                 db    ? ;
.data:000000018001B599                 db    ? ;
.data:000000018001B59A                 db    ? ;
.data:000000018001B59B                 db    ? ;
.data:000000018001B59C                 db    ? ;
.data:000000018001B59D                 db    ? ;
.data:000000018001B59E                 db    ? ;
.data:000000018001B59F                 db    ? ;
.data:000000018001B5A0                 db    ? ;
.data:000000018001B5A1                 db    ? ;
.data:000000018001B5A2                 db    ? ;
.data:000000018001B5A3                 db    ? ;
.data:000000018001B5A4                 db    ? ;
.data:000000018001B5A5                 db    ? ;
.data:000000018001B5A6                 db    ? ;
.data:000000018001B5A7                 db    ? ;
.data:000000018001B5A8                 db    ? ;
.data:000000018001B5A9                 db    ? ;
.data:000000018001B5AA                 db    ? ;
.data:000000018001B5AB                 db    ? ;
.data:000000018001B5AC                 db    ? ;
.data:000000018001B5AD                 db    ? ;
.data:000000018001B5AE                 db    ? ;
.data:000000018001B5AF                 db    ? ;
.data:000000018001B5B0                 db    ? ;
.data:000000018001B5B1                 db    ? ;
.data:000000018001B5B2                 db    ? ;
.data:000000018001B5B3                 db    ? ;
.data:000000018001B5B4                 db    ? ;
.data:000000018001B5B5                 db    ? ;
.data:000000018001B5B6                 db    ? ;
.data:000000018001B5B7                 db    ? ;
.data:000000018001B5B8                 db    ? ;
.data:000000018001B5B9                 db    ? ;
.data:000000018001B5BA                 db    ? ;
.data:000000018001B5BB                 db    ? ;
.data:000000018001B5BC                 db    ? ;
.data:000000018001B5BD                 db    ? ;
.data:000000018001B5BE                 db    ? ;
.data:000000018001B5BF                 db    ? ;
.data:000000018001B5C0                 db    ? ;
.data:000000018001B5C1                 db    ? ;
.data:000000018001B5C2                 db    ? ;
.data:000000018001B5C3                 db    ? ;
.data:000000018001B5C4                 db    ? ;
.data:000000018001B5C5                 db    ? ;
.data:000000018001B5C6                 db    ? ;
.data:000000018001B5C7                 db    ? ;
.data:000000018001B5C8                 db    ? ;
.data:000000018001B5C9                 db    ? ;
.data:000000018001B5CA                 db    ? ;
.data:000000018001B5CB                 db    ? ;
.data:000000018001B5CC                 db    ? ;
.data:000000018001B5CD                 db    ? ;
.data:000000018001B5CE                 db    ? ;
.data:000000018001B5CF                 db    ? ;
.data:000000018001B5D0                 db    ? ;
.data:000000018001B5D1                 db    ? ;
.data:000000018001B5D2                 db    ? ;
.data:000000018001B5D3                 db    ? ;
.data:000000018001B5D4                 db    ? ;
.data:000000018001B5D5                 db    ? ;
.data:000000018001B5D6                 db    ? ;
.data:000000018001B5D7                 db    ? ;
.data:000000018001B5D8                 db    ? ;
.data:000000018001B5D9                 db    ? ;
.data:000000018001B5DA                 db    ? ;
.data:000000018001B5DB                 db    ? ;
.data:000000018001B5DC                 db    ? ;
.data:000000018001B5DD                 db    ? ;
.data:000000018001B5DE                 db    ? ;
.data:000000018001B5DF                 db    ? ;
.data:000000018001B5E0                 db    ? ;
.data:000000018001B5E1                 db    ? ;
.data:000000018001B5E2                 db    ? ;
.data:000000018001B5E3                 db    ? ;
.data:000000018001B5E4                 db    ? ;
.data:000000018001B5E5                 db    ? ;
.data:000000018001B5E6                 db    ? ;
.data:000000018001B5E7                 db    ? ;
.data:000000018001B5E8                 db    ? ;
.data:000000018001B5E9                 db    ? ;
.data:000000018001B5EA                 db    ? ;
.data:000000018001B5EB                 db    ? ;
.data:000000018001B5EC                 db    ? ;
.data:000000018001B5ED                 db    ? ;
.data:000000018001B5EE                 db    ? ;
.data:000000018001B5EF                 db    ? ;
.data:000000018001B5F0                 db    ? ;
.data:000000018001B5F1                 db    ? ;
.data:000000018001B5F2                 db    ? ;
.data:000000018001B5F3                 db    ? ;
.data:000000018001B5F4                 db    ? ;
.data:000000018001B5F5                 db    ? ;
.data:000000018001B5F6                 db    ? ;
.data:000000018001B5F7                 db    ? ;
.data:000000018001B5F8                 db    ? ;
.data:000000018001B5F9                 db    ? ;
.data:000000018001B5FA                 db    ? ;
.data:000000018001B5FB                 db    ? ;
.data:000000018001B5FC                 db    ? ;
.data:000000018001B5FD                 db    ? ;
.data:000000018001B5FE                 db    ? ;
.data:000000018001B5FF                 db    ? ;
.data:000000018001B600                 db    ? ;
.data:000000018001B601                 db    ? ;
.data:000000018001B602                 db    ? ;
.data:000000018001B603                 db    ? ;
.data:000000018001B604                 db    ? ;
.data:000000018001B605                 db    ? ;
.data:000000018001B606                 db    ? ;
.data:000000018001B607                 db    ? ;
.data:000000018001B608                 db    ? ;
.data:000000018001B609                 db    ? ;
.data:000000018001B60A                 db    ? ;
.data:000000018001B60B                 db    ? ;
.data:000000018001B60C                 db    ? ;
.data:000000018001B60D                 db    ? ;
.data:000000018001B60E                 db    ? ;
.data:000000018001B60F                 db    ? ;
.data:000000018001B610                 db    ? ;
.data:000000018001B611                 db    ? ;
.data:000000018001B612                 db    ? ;
.data:000000018001B613                 db    ? ;
.data:000000018001B614                 db    ? ;
.data:000000018001B615                 db    ? ;
.data:000000018001B616                 db    ? ;
.data:000000018001B617                 db    ? ;
.data:000000018001B618                 db    ? ;
.data:000000018001B619                 db    ? ;
.data:000000018001B61A                 db    ? ;
.data:000000018001B61B                 db    ? ;
.data:000000018001B61C                 db    ? ;
.data:000000018001B61D                 db    ? ;
.data:000000018001B61E                 db    ? ;
.data:000000018001B61F                 db    ? ;
.data:000000018001B620                 db    ? ;
.data:000000018001B621                 db    ? ;
.data:000000018001B622                 db    ? ;
.data:000000018001B623                 db    ? ;
.data:000000018001B624                 db    ? ;
.data:000000018001B625                 db    ? ;
.data:000000018001B626                 db    ? ;
.data:000000018001B627                 db    ? ;
.data:000000018001B628                 db    ? ;
.data:000000018001B629                 db    ? ;
.data:000000018001B62A                 db    ? ;
.data:000000018001B62B                 db    ? ;
.data:000000018001B62C                 db    ? ;
.data:000000018001B62D                 db    ? ;
.data:000000018001B62E                 db    ? ;
.data:000000018001B62F                 db    ? ;
.data:000000018001B630                 db    ? ;
.data:000000018001B631                 db    ? ;
.data:000000018001B632                 db    ? ;
.data:000000018001B633                 db    ? ;
.data:000000018001B634                 db    ? ;
.data:000000018001B635                 db    ? ;
.data:000000018001B636                 db    ? ;
.data:000000018001B637                 db    ? ;
.data:000000018001B638                 db    ? ;
.data:000000018001B639                 db    ? ;
.data:000000018001B63A                 db    ? ;
.data:000000018001B63B                 db    ? ;
.data:000000018001B63C                 db    ? ;
.data:000000018001B63D                 db    ? ;
.data:000000018001B63E                 db    ? ;
.data:000000018001B63F                 db    ? ;
.data:000000018001B640                 db    ? ;
.data:000000018001B641                 db    ? ;
.data:000000018001B642                 db    ? ;
.data:000000018001B643                 db    ? ;
.data:000000018001B644                 db    ? ;
.data:000000018001B645                 db    ? ;
.data:000000018001B646                 db    ? ;
.data:000000018001B647                 db    ? ;
.data:000000018001B648                 db    ? ;
.data:000000018001B649                 db    ? ;
.data:000000018001B64A                 db    ? ;
.data:000000018001B64B                 db    ? ;
.data:000000018001B64C                 db    ? ;
.data:000000018001B64D                 db    ? ;
.data:000000018001B64E                 db    ? ;
.data:000000018001B64F                 db    ? ;
.data:000000018001B650                 db    ? ;
.data:000000018001B651                 db    ? ;
.data:000000018001B652                 db    ? ;
.data:000000018001B653                 db    ? ;
.data:000000018001B654                 db    ? ;
.data:000000018001B655                 db    ? ;
.data:000000018001B656                 db    ? ;
.data:000000018001B657                 db    ? ;
.data:000000018001B658                 db    ? ;
.data:000000018001B659                 db    ? ;
.data:000000018001B65A                 db    ? ;
.data:000000018001B65B                 db    ? ;
.data:000000018001B65C                 db    ? ;
.data:000000018001B65D                 db    ? ;
.data:000000018001B65E                 db    ? ;
.data:000000018001B65F                 db    ? ;
.data:000000018001B660                 db    ? ;
.data:000000018001B661                 db    ? ;
.data:000000018001B662                 db    ? ;
.data:000000018001B663                 db    ? ;
.data:000000018001B664                 db    ? ;
.data:000000018001B665                 db    ? ;
.data:000000018001B666                 db    ? ;
.data:000000018001B667                 db    ? ;
.data:000000018001B668                 db    ? ;
.data:000000018001B669                 db    ? ;
.data:000000018001B66A                 db    ? ;
.data:000000018001B66B                 db    ? ;
.data:000000018001B66C                 db    ? ;
.data:000000018001B66D                 db    ? ;
.data:000000018001B66E                 db    ? ;
.data:000000018001B66F                 db    ? ;
.data:000000018001B670                 db    ? ;
.data:000000018001B671                 db    ? ;
.data:000000018001B672                 db    ? ;
.data:000000018001B673                 db    ? ;
.data:000000018001B674                 db    ? ;
.data:000000018001B675                 db    ? ;
.data:000000018001B676                 db    ? ;
.data:000000018001B677                 db    ? ;
.data:000000018001B678                 db    ? ;
.data:000000018001B679                 db    ? ;
.data:000000018001B67A                 db    ? ;
.data:000000018001B67B                 db    ? ;
.data:000000018001B67C                 db    ? ;
.data:000000018001B67D                 db    ? ;
.data:000000018001B67E                 db    ? ;
.data:000000018001B67F                 db    ? ;
.data:000000018001B680                 db    ? ;
.data:000000018001B681                 db    ? ;
.data:000000018001B682                 db    ? ;
.data:000000018001B683                 db    ? ;
.data:000000018001B684                 db    ? ;
.data:000000018001B685                 db    ? ;
.data:000000018001B686                 db    ? ;
.data:000000018001B687                 db    ? ;
.data:000000018001B688                 db    ? ;
.data:000000018001B689                 db    ? ;
.data:000000018001B68A                 db    ? ;
.data:000000018001B68B                 db    ? ;
.data:000000018001B68C                 db    ? ;
.data:000000018001B68D                 db    ? ;
.data:000000018001B68E                 db    ? ;
.data:000000018001B68F                 db    ? ;
.data:000000018001B690                 db    ? ;
.data:000000018001B691                 db    ? ;
.data:000000018001B692                 db    ? ;
.data:000000018001B693                 db    ? ;
.data:000000018001B694                 db    ? ;
.data:000000018001B695                 db    ? ;
.data:000000018001B696                 db    ? ;
.data:000000018001B697                 db    ? ;
.data:000000018001B698                 db    ? ;
.data:000000018001B699                 db    ? ;
.data:000000018001B69A                 db    ? ;
.data:000000018001B69B                 db    ? ;
.data:000000018001B69C                 db    ? ;
.data:000000018001B69D                 db    ? ;
.data:000000018001B69E                 db    ? ;
.data:000000018001B69F                 db    ? ;
.data:000000018001B6A0                 db    ? ;
.data:000000018001B6A1                 db    ? ;
.data:000000018001B6A2                 db    ? ;
.data:000000018001B6A3                 db    ? ;
.data:000000018001B6A4                 db    ? ;
.data:000000018001B6A5                 db    ? ;
.data:000000018001B6A6                 db    ? ;
.data:000000018001B6A7                 db    ? ;
.data:000000018001B6A8                 db    ? ;
.data:000000018001B6A9                 db    ? ;
.data:000000018001B6AA                 db    ? ;
.data:000000018001B6AB                 db    ? ;
.data:000000018001B6AC                 db    ? ;
.data:000000018001B6AD                 db    ? ;
.data:000000018001B6AE                 db    ? ;
.data:000000018001B6AF                 db    ? ;
.data:000000018001B6B0                 db    ? ;
.data:000000018001B6B1                 db    ? ;
.data:000000018001B6B2                 db    ? ;
.data:000000018001B6B3                 db    ? ;
.data:000000018001B6B4                 db    ? ;
.data:000000018001B6B5                 db    ? ;
.data:000000018001B6B6                 db    ? ;
.data:000000018001B6B7                 db    ? ;
.data:000000018001B6B8                 db    ? ;
.data:000000018001B6B9                 db    ? ;
.data:000000018001B6BA                 db    ? ;
.data:000000018001B6BB                 db    ? ;
.data:000000018001B6BC                 db    ? ;
.data:000000018001B6BD                 db    ? ;
.data:000000018001B6BE                 db    ? ;
.data:000000018001B6BF                 db    ? ;
.data:000000018001B6C0                 db    ? ;
.data:000000018001B6C1                 db    ? ;
.data:000000018001B6C2                 db    ? ;
.data:000000018001B6C3                 db    ? ;
.data:000000018001B6C4                 db    ? ;
.data:000000018001B6C5                 db    ? ;
.data:000000018001B6C6                 db    ? ;
.data:000000018001B6C7                 db    ? ;
.data:000000018001B6C8                 db    ? ;
.data:000000018001B6C9                 db    ? ;
.data:000000018001B6CA                 db    ? ;
.data:000000018001B6CB                 db    ? ;
.data:000000018001B6CC                 db    ? ;
.data:000000018001B6CD                 db    ? ;
.data:000000018001B6CE                 db    ? ;
.data:000000018001B6CF                 db    ? ;
.data:000000018001B6D0                 db    ? ;
.data:000000018001B6D1                 db    ? ;
.data:000000018001B6D2                 db    ? ;
.data:000000018001B6D3                 db    ? ;
.data:000000018001B6D4                 db    ? ;
.data:000000018001B6D5                 db    ? ;
.data:000000018001B6D6                 db    ? ;
.data:000000018001B6D7                 db    ? ;
.data:000000018001B6D8                 db    ? ;
.data:000000018001B6D9                 db    ? ;
.data:000000018001B6DA                 db    ? ;
.data:000000018001B6DB                 db    ? ;
.data:000000018001B6DC                 db    ? ;
.data:000000018001B6DD                 db    ? ;
.data:000000018001B6DE                 db    ? ;
.data:000000018001B6DF                 db    ? ;
.data:000000018001B6E0                 db    ? ;
.data:000000018001B6E1                 db    ? ;
.data:000000018001B6E2                 db    ? ;
.data:000000018001B6E3                 db    ? ;
.data:000000018001B6E4                 db    ? ;
.data:000000018001B6E5                 db    ? ;
.data:000000018001B6E6                 db    ? ;
.data:000000018001B6E7                 db    ? ;
.data:000000018001B6E8                 db    ? ;
.data:000000018001B6E9                 db    ? ;
.data:000000018001B6EA                 db    ? ;
.data:000000018001B6EB                 db    ? ;
.data:000000018001B6EC                 db    ? ;
.data:000000018001B6ED                 db    ? ;
.data:000000018001B6EE                 db    ? ;
.data:000000018001B6EF                 db    ? ;
.data:000000018001B6F0                 db    ? ;
.data:000000018001B6F1                 db    ? ;
.data:000000018001B6F2                 db    ? ;
.data:000000018001B6F3                 db    ? ;
.data:000000018001B6F4                 db    ? ;
.data:000000018001B6F5                 db    ? ;
.data:000000018001B6F6                 db    ? ;
.data:000000018001B6F7                 db    ? ;
.data:000000018001B6F8                 db    ? ;
.data:000000018001B6F9                 db    ? ;
.data:000000018001B6FA                 db    ? ;
.data:000000018001B6FB                 db    ? ;
.data:000000018001B6FC                 db    ? ;
.data:000000018001B6FD                 db    ? ;
.data:000000018001B6FE                 db    ? ;
.data:000000018001B6FF                 db    ? ;
.data:000000018001B700                 db    ? ;
.data:000000018001B701                 db    ? ;
.data:000000018001B702                 db    ? ;
.data:000000018001B703                 db    ? ;
.data:000000018001B704                 db    ? ;
.data:000000018001B705                 db    ? ;
.data:000000018001B706                 db    ? ;
.data:000000018001B707                 db    ? ;
.data:000000018001B708                 db    ? ;
.data:000000018001B709                 db    ? ;
.data:000000018001B70A                 db    ? ;
.data:000000018001B70B                 db    ? ;
.data:000000018001B70C                 db    ? ;
.data:000000018001B70D                 db    ? ;
.data:000000018001B70E                 db    ? ;
.data:000000018001B70F                 db    ? ;
.data:000000018001B710                 db    ? ;
.data:000000018001B711                 db    ? ;
.data:000000018001B712                 db    ? ;
.data:000000018001B713                 db    ? ;
.data:000000018001B714                 db    ? ;
.data:000000018001B715                 db    ? ;
.data:000000018001B716                 db    ? ;
.data:000000018001B717                 db    ? ;
.data:000000018001B718                 db    ? ;
.data:000000018001B719                 db    ? ;
.data:000000018001B71A                 db    ? ;
.data:000000018001B71B                 db    ? ;
.data:000000018001B71C                 db    ? ;
.data:000000018001B71D                 db    ? ;
.data:000000018001B71E                 db    ? ;
.data:000000018001B71F                 db    ? ;
.data:000000018001B720                 db    ? ;
.data:000000018001B721                 db    ? ;
.data:000000018001B722                 db    ? ;
.data:000000018001B723                 db    ? ;
.data:000000018001B724                 db    ? ;
.data:000000018001B725                 db    ? ;
.data:000000018001B726                 db    ? ;
.data:000000018001B727                 db    ? ;
.data:000000018001B728                 db    ? ;
.data:000000018001B729                 db    ? ;
.data:000000018001B72A                 db    ? ;
.data:000000018001B72B                 db    ? ;
.data:000000018001B72C                 db    ? ;
.data:000000018001B72D                 db    ? ;
.data:000000018001B72E                 db    ? ;
.data:000000018001B72F                 db    ? ;
.data:000000018001B730                 db    ? ;
.data:000000018001B731                 db    ? ;
.data:000000018001B732                 db    ? ;
.data:000000018001B733                 db    ? ;
.data:000000018001B734                 db    ? ;
.data:000000018001B735                 db    ? ;
.data:000000018001B736                 db    ? ;
.data:000000018001B737                 db    ? ;
.data:000000018001B738                 db    ? ;
.data:000000018001B739                 db    ? ;
.data:000000018001B73A                 db    ? ;
.data:000000018001B73B                 db    ? ;
.data:000000018001B73C                 db    ? ;
.data:000000018001B73D                 db    ? ;
.data:000000018001B73E                 db    ? ;
.data:000000018001B73F                 db    ? ;
.data:000000018001B740                 db    ? ;
.data:000000018001B741                 db    ? ;
.data:000000018001B742                 db    ? ;
.data:000000018001B743                 db    ? ;
.data:000000018001B744                 db    ? ;
.data:000000018001B745                 db    ? ;
.data:000000018001B746                 db    ? ;
.data:000000018001B747                 db    ? ;
.data:000000018001B748                 db    ? ;
.data:000000018001B749                 db    ? ;
.data:000000018001B74A                 db    ? ;
.data:000000018001B74B                 db    ? ;
.data:000000018001B74C                 db    ? ;
.data:000000018001B74D                 db    ? ;
.data:000000018001B74E                 db    ? ;
.data:000000018001B74F                 db    ? ;
.data:000000018001B750                 db    ? ;
.data:000000018001B751                 db    ? ;
.data:000000018001B752                 db    ? ;
.data:000000018001B753                 db    ? ;
.data:000000018001B754                 db    ? ;
.data:000000018001B755                 db    ? ;
.data:000000018001B756                 db    ? ;
.data:000000018001B757                 db    ? ;
.data:000000018001B758                 db    ? ;
.data:000000018001B759                 db    ? ;
.data:000000018001B75A                 db    ? ;
.data:000000018001B75B                 db    ? ;
.data:000000018001B75C                 db    ? ;
.data:000000018001B75D                 db    ? ;
.data:000000018001B75E                 db    ? ;
.data:000000018001B75F                 db    ? ;
.data:000000018001B760                 db    ? ;
.data:000000018001B761                 db    ? ;
.data:000000018001B762                 db    ? ;
.data:000000018001B763                 db    ? ;
.data:000000018001B764                 db    ? ;
.data:000000018001B765                 db    ? ;
.data:000000018001B766                 db    ? ;
.data:000000018001B767                 db    ? ;
.data:000000018001B768                 db    ? ;
.data:000000018001B769                 db    ? ;
.data:000000018001B76A                 db    ? ;
.data:000000018001B76B                 db    ? ;
.data:000000018001B76C                 db    ? ;
.data:000000018001B76D                 db    ? ;
.data:000000018001B76E                 db    ? ;
.data:000000018001B76F                 db    ? ;
.data:000000018001B770                 db    ? ;
.data:000000018001B771                 db    ? ;
.data:000000018001B772                 db    ? ;
.data:000000018001B773                 db    ? ;
.data:000000018001B774                 db    ? ;
.data:000000018001B775                 db    ? ;
.data:000000018001B776                 db    ? ;
.data:000000018001B777                 db    ? ;
.data:000000018001B778                 db    ? ;
.data:000000018001B779                 db    ? ;
.data:000000018001B77A                 db    ? ;
.data:000000018001B77B                 db    ? ;
.data:000000018001B77C                 db    ? ;
.data:000000018001B77D                 db    ? ;
.data:000000018001B77E                 db    ? ;
.data:000000018001B77F                 db    ? ;
.data:000000018001B780                 db    ? ;
.data:000000018001B781                 db    ? ;
.data:000000018001B782                 db    ? ;
.data:000000018001B783                 db    ? ;
.data:000000018001B784                 db    ? ;
.data:000000018001B785                 db    ? ;
.data:000000018001B786                 db    ? ;
.data:000000018001B787                 db    ? ;
.data:000000018001B788                 db    ? ;
.data:000000018001B789                 db    ? ;
.data:000000018001B78A                 db    ? ;
.data:000000018001B78B                 db    ? ;
.data:000000018001B78C                 db    ? ;
.data:000000018001B78D                 db    ? ;
.data:000000018001B78E                 db    ? ;
.data:000000018001B78F                 db    ? ;
.data:000000018001B790                 db    ? ;
.data:000000018001B791                 db    ? ;
.data:000000018001B792                 db    ? ;
.data:000000018001B793                 db    ? ;
.data:000000018001B794                 db    ? ;
.data:000000018001B795                 db    ? ;
.data:000000018001B796                 db    ? ;
.data:000000018001B797                 db    ? ;
.data:000000018001B798                 db    ? ;
.data:000000018001B799                 db    ? ;
.data:000000018001B79A                 db    ? ;
.data:000000018001B79B                 db    ? ;
.data:000000018001B79C                 db    ? ;
.data:000000018001B79D                 db    ? ;
.data:000000018001B79E                 db    ? ;
.data:000000018001B79F                 db    ? ;
.data:000000018001B7A0                 db    ? ;
.data:000000018001B7A1                 db    ? ;
.data:000000018001B7A2                 db    ? ;
.data:000000018001B7A3                 db    ? ;
.data:000000018001B7A4                 db    ? ;
.data:000000018001B7A5                 db    ? ;
.data:000000018001B7A6                 db    ? ;
.data:000000018001B7A7                 db    ? ;
.data:000000018001B7A8                 db    ? ;
.data:000000018001B7A9                 db    ? ;
.data:000000018001B7AA                 db    ? ;
.data:000000018001B7AB                 db    ? ;
.data:000000018001B7AC                 db    ? ;
.data:000000018001B7AD                 db    ? ;
.data:000000018001B7AE                 db    ? ;
.data:000000018001B7AF                 db    ? ;
.data:000000018001B7B0                 db    ? ;
.data:000000018001B7B1                 db    ? ;
.data:000000018001B7B2                 db    ? ;
.data:000000018001B7B3                 db    ? ;
.data:000000018001B7B4                 db    ? ;
.data:000000018001B7B5                 db    ? ;
.data:000000018001B7B6                 db    ? ;
.data:000000018001B7B7                 db    ? ;
.data:000000018001B7B8                 db    ? ;
.data:000000018001B7B9                 db    ? ;
.data:000000018001B7BA                 db    ? ;
.data:000000018001B7BB                 db    ? ;
.data:000000018001B7BC                 db    ? ;
.data:000000018001B7BD                 db    ? ;
.data:000000018001B7BE                 db    ? ;
.data:000000018001B7BF                 db    ? ;
.data:000000018001B7C0                 db    ? ;
.data:000000018001B7C1                 db    ? ;
.data:000000018001B7C2                 db    ? ;
.data:000000018001B7C3                 db    ? ;
.data:000000018001B7C4                 db    ? ;
.data:000000018001B7C5                 db    ? ;
.data:000000018001B7C6                 db    ? ;
.data:000000018001B7C7                 db    ? ;
.data:000000018001B7C8                 db    ? ;
.data:000000018001B7C9                 db    ? ;
.data:000000018001B7CA                 db    ? ;
.data:000000018001B7CB                 db    ? ;
.data:000000018001B7CC                 db    ? ;
.data:000000018001B7CD                 db    ? ;
.data:000000018001B7CE                 db    ? ;
.data:000000018001B7CF                 db    ? ;
.data:000000018001B7D0                 db    ? ;
.data:000000018001B7D1                 db    ? ;
.data:000000018001B7D2                 db    ? ;
.data:000000018001B7D3                 db    ? ;
.data:000000018001B7D4                 db    ? ;
.data:000000018001B7D5                 db    ? ;
.data:000000018001B7D6                 db    ? ;
.data:000000018001B7D7                 db    ? ;
.data:000000018001B7D8                 db    ? ;
.data:000000018001B7D9                 db    ? ;
.data:000000018001B7DA                 db    ? ;
.data:000000018001B7DB                 db    ? ;
.data:000000018001B7DC                 db    ? ;
.data:000000018001B7DD                 db    ? ;
.data:000000018001B7DE                 db    ? ;
.data:000000018001B7DF                 db    ? ;
.data:000000018001B7E0                 db    ? ;
.data:000000018001B7E1                 db    ? ;
.data:000000018001B7E2                 db    ? ;
.data:000000018001B7E3                 db    ? ;
.data:000000018001B7E4                 db    ? ;
.data:000000018001B7E5                 db    ? ;
.data:000000018001B7E6                 db    ? ;
.data:000000018001B7E7                 db    ? ;
.data:000000018001B7E8                 db    ? ;
.data:000000018001B7E9                 db    ? ;
.data:000000018001B7EA                 db    ? ;
.data:000000018001B7EB                 db    ? ;
.data:000000018001B7EC                 db    ? ;
.data:000000018001B7ED                 db    ? ;
.data:000000018001B7EE                 db    ? ;
.data:000000018001B7EF                 db    ? ;
.data:000000018001B7F0                 db    ? ;
.data:000000018001B7F1                 db    ? ;
.data:000000018001B7F2                 db    ? ;
.data:000000018001B7F3                 db    ? ;
.data:000000018001B7F4                 db    ? ;
.data:000000018001B7F5                 db    ? ;
.data:000000018001B7F6                 db    ? ;
.data:000000018001B7F7                 db    ? ;
.data:000000018001B7F8                 db    ? ;
.data:000000018001B7F9                 db    ? ;
.data:000000018001B7FA                 db    ? ;
.data:000000018001B7FB                 db    ? ;
.data:000000018001B7FC                 db    ? ;
.data:000000018001B7FD                 db    ? ;
.data:000000018001B7FE                 db    ? ;
.data:000000018001B7FF                 db    ? ;
.data:000000018001B800                 db    ? ;
.data:000000018001B801                 db    ? ;
.data:000000018001B802                 db    ? ;
.data:000000018001B803                 db    ? ;
.data:000000018001B804                 db    ? ;
.data:000000018001B805                 db    ? ;
.data:000000018001B806                 db    ? ;
.data:000000018001B807                 db    ? ;
.data:000000018001B808                 db    ? ;
.data:000000018001B809                 db    ? ;
.data:000000018001B80A                 db    ? ;
.data:000000018001B80B                 db    ? ;
.data:000000018001B80C                 db    ? ;
.data:000000018001B80D                 db    ? ;
.data:000000018001B80E                 db    ? ;
.data:000000018001B80F                 db    ? ;
.data:000000018001B810                 db    ? ;
.data:000000018001B811                 db    ? ;
.data:000000018001B812                 db    ? ;
.data:000000018001B813                 db    ? ;
.data:000000018001B814                 db    ? ;
.data:000000018001B815                 db    ? ;
.data:000000018001B816                 db    ? ;
.data:000000018001B817                 db    ? ;
.data:000000018001B818                 db    ? ;
.data:000000018001B819                 db    ? ;
.data:000000018001B81A                 db    ? ;
.data:000000018001B81B                 db    ? ;
.data:000000018001B81C                 db    ? ;
.data:000000018001B81D                 db    ? ;
.data:000000018001B81E                 db    ? ;
.data:000000018001B81F                 db    ? ;
.data:000000018001B820                 db    ? ;
.data:000000018001B821                 db    ? ;
.data:000000018001B822                 db    ? ;
.data:000000018001B823                 db    ? ;
.data:000000018001B824                 db    ? ;
.data:000000018001B825                 db    ? ;
.data:000000018001B826                 db    ? ;
.data:000000018001B827                 db    ? ;
.data:000000018001B828                 db    ? ;
.data:000000018001B829                 db    ? ;
.data:000000018001B82A                 db    ? ;
.data:000000018001B82B                 db    ? ;
.data:000000018001B82C                 db    ? ;
.data:000000018001B82D                 db    ? ;
.data:000000018001B82E                 db    ? ;
.data:000000018001B82F                 db    ? ;
.data:000000018001B830                 db    ? ;
.data:000000018001B831                 db    ? ;
.data:000000018001B832                 db    ? ;
.data:000000018001B833                 db    ? ;
.data:000000018001B834                 db    ? ;
.data:000000018001B835                 db    ? ;
.data:000000018001B836                 db    ? ;
.data:000000018001B837                 db    ? ;
.data:000000018001B838                 db    ? ;
.data:000000018001B839                 db    ? ;
.data:000000018001B83A                 db    ? ;
.data:000000018001B83B                 db    ? ;
.data:000000018001B83C                 db    ? ;
.data:000000018001B83D                 db    ? ;
.data:000000018001B83E                 db    ? ;
.data:000000018001B83F                 db    ? ;
.data:000000018001B840                 db    ? ;
.data:000000018001B841                 db    ? ;
.data:000000018001B842                 db    ? ;
.data:000000018001B843                 db    ? ;
.data:000000018001B844                 db    ? ;
.data:000000018001B845                 db    ? ;
.data:000000018001B846                 db    ? ;
.data:000000018001B847                 db    ? ;
.data:000000018001B848                 db    ? ;
.data:000000018001B849                 db    ? ;
.data:000000018001B84A                 db    ? ;
.data:000000018001B84B                 db    ? ;
.data:000000018001B84C                 db    ? ;
.data:000000018001B84D                 db    ? ;
.data:000000018001B84E                 db    ? ;
.data:000000018001B84F                 db    ? ;
.data:000000018001B850                 db    ? ;
.data:000000018001B851                 db    ? ;
.data:000000018001B852                 db    ? ;
.data:000000018001B853                 db    ? ;
.data:000000018001B854                 db    ? ;
.data:000000018001B855                 db    ? ;
.data:000000018001B856                 db    ? ;
.data:000000018001B857                 db    ? ;
.data:000000018001B858                 db    ? ;
.data:000000018001B859                 db    ? ;
.data:000000018001B85A                 db    ? ;
.data:000000018001B85B                 db    ? ;
.data:000000018001B85C                 db    ? ;
.data:000000018001B85D                 db    ? ;
.data:000000018001B85E                 db    ? ;
.data:000000018001B85F                 db    ? ;
.data:000000018001B860                 db    ? ;
.data:000000018001B861                 db    ? ;
.data:000000018001B862                 db    ? ;
.data:000000018001B863                 db    ? ;
.data:000000018001B864                 db    ? ;
.data:000000018001B865                 db    ? ;
.data:000000018001B866                 db    ? ;
.data:000000018001B867                 db    ? ;
.data:000000018001B868                 db    ? ;
.data:000000018001B869                 db    ? ;
.data:000000018001B86A                 db    ? ;
.data:000000018001B86B                 db    ? ;
.data:000000018001B86C                 db    ? ;
.data:000000018001B86D                 db    ? ;
.data:000000018001B86E                 db    ? ;
.data:000000018001B86F                 db    ? ;
.data:000000018001B870                 db    ? ;
.data:000000018001B871                 db    ? ;
.data:000000018001B872                 db    ? ;
.data:000000018001B873                 db    ? ;
.data:000000018001B874                 db    ? ;
.data:000000018001B875                 db    ? ;
.data:000000018001B876                 db    ? ;
.data:000000018001B877                 db    ? ;
.data:000000018001B878                 db    ? ;
.data:000000018001B879                 db    ? ;
.data:000000018001B87A                 db    ? ;
.data:000000018001B87B                 db    ? ;
.data:000000018001B87C                 db    ? ;
.data:000000018001B87D                 db    ? ;
.data:000000018001B87E                 db    ? ;
.data:000000018001B87F                 db    ? ;
.data:000000018001B880                 db    ? ;
.data:000000018001B881                 db    ? ;
.data:000000018001B882                 db    ? ;
.data:000000018001B883                 db    ? ;
.data:000000018001B884                 db    ? ;
.data:000000018001B885                 db    ? ;
.data:000000018001B886                 db    ? ;
.data:000000018001B887                 db    ? ;
.data:000000018001B888                 db    ? ;
.data:000000018001B889                 db    ? ;
.data:000000018001B88A                 db    ? ;
.data:000000018001B88B                 db    ? ;
.data:000000018001B88C                 db    ? ;
.data:000000018001B88D                 db    ? ;
.data:000000018001B88E                 db    ? ;
.data:000000018001B88F                 db    ? ;
.data:000000018001B890                 db    ? ;
.data:000000018001B891                 db    ? ;
.data:000000018001B892                 db    ? ;
.data:000000018001B893                 db    ? ;
.data:000000018001B894                 db    ? ;
.data:000000018001B895                 db    ? ;
.data:000000018001B896                 db    ? ;
.data:000000018001B897                 db    ? ;
.data:000000018001B898                 db    ? ;
.data:000000018001B899                 db    ? ;
.data:000000018001B89A                 db    ? ;
.data:000000018001B89B                 db    ? ;
.data:000000018001B89C                 db    ? ;
.data:000000018001B89D                 db    ? ;
.data:000000018001B89E                 db    ? ;
.data:000000018001B89F                 db    ? ;
.data:000000018001B8A0                 db    ? ;
.data:000000018001B8A1                 db    ? ;
.data:000000018001B8A2                 db    ? ;
.data:000000018001B8A3                 db    ? ;
.data:000000018001B8A4                 db    ? ;
.data:000000018001B8A5                 db    ? ;
.data:000000018001B8A6                 db    ? ;
.data:000000018001B8A7                 db    ? ;
.data:000000018001B8A8                 db    ? ;
.data:000000018001B8A9                 db    ? ;
.data:000000018001B8AA                 db    ? ;
.data:000000018001B8AB                 db    ? ;
.data:000000018001B8AC                 db    ? ;
.data:000000018001B8AD                 db    ? ;
.data:000000018001B8AE                 db    ? ;
.data:000000018001B8AF                 db    ? ;
.data:000000018001B8B0                 db    ? ;
.data:000000018001B8B1                 db    ? ;
.data:000000018001B8B2                 db    ? ;
.data:000000018001B8B3                 db    ? ;
.data:000000018001B8B4                 db    ? ;
.data:000000018001B8B5                 db    ? ;
.data:000000018001B8B6                 db    ? ;
.data:000000018001B8B7                 db    ? ;
.data:000000018001B8B8                 db    ? ;
.data:000000018001B8B9                 db    ? ;
.data:000000018001B8BA                 db    ? ;
.data:000000018001B8BB                 db    ? ;
.data:000000018001B8BC                 db    ? ;
.data:000000018001B8BD                 db    ? ;
.data:000000018001B8BE                 db    ? ;
.data:000000018001B8BF                 db    ? ;
.data:000000018001B8C0                 db    ? ;
.data:000000018001B8C1                 db    ? ;
.data:000000018001B8C2                 db    ? ;
.data:000000018001B8C3                 db    ? ;
.data:000000018001B8C4                 db    ? ;
.data:000000018001B8C5                 db    ? ;
.data:000000018001B8C6                 db    ? ;
.data:000000018001B8C7                 db    ? ;
.data:000000018001B8C8                 db    ? ;
.data:000000018001B8C9                 db    ? ;
.data:000000018001B8CA                 db    ? ;
.data:000000018001B8CB                 db    ? ;
.data:000000018001B8CC                 db    ? ;
.data:000000018001B8CD                 db    ? ;
.data:000000018001B8CE                 db    ? ;
.data:000000018001B8CF                 db    ? ;
.data:000000018001B8D0                 db    ? ;
.data:000000018001B8D1                 db    ? ;
.data:000000018001B8D2                 db    ? ;
.data:000000018001B8D3                 db    ? ;
.data:000000018001B8D4                 db    ? ;
.data:000000018001B8D5                 db    ? ;
.data:000000018001B8D6                 db    ? ;
.data:000000018001B8D7                 db    ? ;
.data:000000018001B8D8                 db    ? ;
.data:000000018001B8D9                 db    ? ;
.data:000000018001B8DA                 db    ? ;
.data:000000018001B8DB                 db    ? ;
.data:000000018001B8DC                 db    ? ;
.data:000000018001B8DD                 db    ? ;
.data:000000018001B8DE                 db    ? ;
.data:000000018001B8DF                 db    ? ;
.data:000000018001B8E0                 db    ? ;
.data:000000018001B8E1                 db    ? ;
.data:000000018001B8E2                 db    ? ;
.data:000000018001B8E3                 db    ? ;
.data:000000018001B8E4                 db    ? ;
.data:000000018001B8E5                 db    ? ;
.data:000000018001B8E6                 db    ? ;
.data:000000018001B8E7                 db    ? ;
.data:000000018001B8E8                 db    ? ;
.data:000000018001B8E9                 db    ? ;
.data:000000018001B8EA                 db    ? ;
.data:000000018001B8EB                 db    ? ;
.data:000000018001B8EC                 db    ? ;
.data:000000018001B8ED                 db    ? ;
.data:000000018001B8EE                 db    ? ;
.data:000000018001B8EF                 db    ? ;
.data:000000018001B8F0                 db    ? ;
.data:000000018001B8F1                 db    ? ;
.data:000000018001B8F2                 db    ? ;
.data:000000018001B8F3                 db    ? ;
.data:000000018001B8F4                 db    ? ;
.data:000000018001B8F5                 db    ? ;
.data:000000018001B8F6                 db    ? ;
.data:000000018001B8F7                 db    ? ;
.data:000000018001B8F8                 db    ? ;
.data:000000018001B8F9                 db    ? ;
.data:000000018001B8FA                 db    ? ;
.data:000000018001B8FB                 db    ? ;
.data:000000018001B8FC                 db    ? ;
.data:000000018001B8FD                 db    ? ;
.data:000000018001B8FE                 db    ? ;
.data:000000018001B8FF                 db    ? ;
.data:000000018001B900                 db    ? ;
.data:000000018001B901                 db    ? ;
.data:000000018001B902                 db    ? ;
.data:000000018001B903                 db    ? ;
.data:000000018001B904                 db    ? ;
.data:000000018001B905                 db    ? ;
.data:000000018001B906                 db    ? ;
.data:000000018001B907                 db    ? ;
.data:000000018001B908                 db    ? ;
.data:000000018001B909                 db    ? ;
.data:000000018001B90A                 db    ? ;
.data:000000018001B90B                 db    ? ;
.data:000000018001B90C                 db    ? ;
.data:000000018001B90D                 db    ? ;
.data:000000018001B90E                 db    ? ;
.data:000000018001B90F                 db    ? ;
.data:000000018001B910                 db    ? ;
.data:000000018001B911                 db    ? ;
.data:000000018001B912                 db    ? ;
.data:000000018001B913                 db    ? ;
.data:000000018001B914                 db    ? ;
.data:000000018001B915                 db    ? ;
.data:000000018001B916                 db    ? ;
.data:000000018001B917                 db    ? ;
.data:000000018001B918                 db    ? ;
.data:000000018001B919                 db    ? ;
.data:000000018001B91A                 db    ? ;
.data:000000018001B91B                 db    ? ;
.data:000000018001B91C                 db    ? ;
.data:000000018001B91D                 db    ? ;
.data:000000018001B91E                 db    ? ;
.data:000000018001B91F                 db    ? ;
.data:000000018001B920                 db    ? ;
.data:000000018001B921                 db    ? ;
.data:000000018001B922                 db    ? ;
.data:000000018001B923                 db    ? ;
.data:000000018001B924                 db    ? ;
.data:000000018001B925                 db    ? ;
.data:000000018001B926                 db    ? ;
.data:000000018001B927                 db    ? ;
.data:000000018001B928                 db    ? ;
.data:000000018001B929                 db    ? ;
.data:000000018001B92A                 db    ? ;
.data:000000018001B92B                 db    ? ;
.data:000000018001B92C                 db    ? ;
.data:000000018001B92D                 db    ? ;
.data:000000018001B92E                 db    ? ;
.data:000000018001B92F                 db    ? ;
.data:000000018001B930                 db    ? ;
.data:000000018001B931                 db    ? ;
.data:000000018001B932                 db    ? ;
.data:000000018001B933                 db    ? ;
.data:000000018001B934                 db    ? ;
.data:000000018001B935                 db    ? ;
.data:000000018001B936                 db    ? ;
.data:000000018001B937                 db    ? ;
.data:000000018001B938                 db    ? ;
.data:000000018001B939                 db    ? ;
.data:000000018001B93A                 db    ? ;
.data:000000018001B93B                 db    ? ;
.data:000000018001B93C                 db    ? ;
.data:000000018001B93D                 db    ? ;
.data:000000018001B93E                 db    ? ;
.data:000000018001B93F                 db    ? ;
.data:000000018001B940                 db    ? ;
.data:000000018001B941                 db    ? ;
.data:000000018001B942                 db    ? ;
.data:000000018001B943                 db    ? ;
.data:000000018001B944                 db    ? ;
.data:000000018001B945                 db    ? ;
.data:000000018001B946                 db    ? ;
.data:000000018001B947                 db    ? ;
.data:000000018001B948                 db    ? ;
.data:000000018001B949                 db    ? ;
.data:000000018001B94A                 db    ? ;
.data:000000018001B94B                 db    ? ;
.data:000000018001B94C                 db    ? ;
.data:000000018001B94D                 db    ? ;
.data:000000018001B94E                 db    ? ;
.data:000000018001B94F                 db    ? ;
.data:000000018001B950                 db    ? ;
.data:000000018001B951                 db    ? ;
.data:000000018001B952                 db    ? ;
.data:000000018001B953                 db    ? ;
.data:000000018001B954                 db    ? ;
.data:000000018001B955                 db    ? ;
.data:000000018001B956                 db    ? ;
.data:000000018001B957                 db    ? ;
.data:000000018001B958                 db    ? ;
.data:000000018001B959                 db    ? ;
.data:000000018001B95A                 db    ? ;
.data:000000018001B95B                 db    ? ;
.data:000000018001B95C                 db    ? ;
.data:000000018001B95D                 db    ? ;
.data:000000018001B95E                 db    ? ;
.data:000000018001B95F                 db    ? ;
.data:000000018001B960                 db    ? ;
.data:000000018001B961                 db    ? ;
.data:000000018001B962                 db    ? ;
.data:000000018001B963                 db    ? ;
.data:000000018001B964                 db    ? ;
.data:000000018001B965                 db    ? ;
.data:000000018001B966                 db    ? ;
.data:000000018001B967                 db    ? ;
.data:000000018001B968                 db    ? ;
.data:000000018001B969                 db    ? ;
.data:000000018001B96A                 db    ? ;
.data:000000018001B96B                 db    ? ;
.data:000000018001B96C                 db    ? ;
.data:000000018001B96D                 db    ? ;
.data:000000018001B96E                 db    ? ;
.data:000000018001B96F                 db    ? ;
.data:000000018001B970                 db    ? ;
.data:000000018001B971                 db    ? ;
.data:000000018001B972                 db    ? ;
.data:000000018001B973                 db    ? ;
.data:000000018001B974                 db    ? ;
.data:000000018001B975                 db    ? ;
.data:000000018001B976                 db    ? ;
.data:000000018001B977                 db    ? ;
.data:000000018001B978                 db    ? ;
.data:000000018001B979                 db    ? ;
.data:000000018001B97A                 db    ? ;
.data:000000018001B97B                 db    ? ;
.data:000000018001B97C                 db    ? ;
.data:000000018001B97D                 db    ? ;
.data:000000018001B97E                 db    ? ;
.data:000000018001B97F                 db    ? ;
.data:000000018001B980                 db    ? ;
.data:000000018001B981                 db    ? ;
.data:000000018001B982                 db    ? ;
.data:000000018001B983                 db    ? ;
.data:000000018001B984                 db    ? ;
.data:000000018001B985                 db    ? ;
.data:000000018001B986                 db    ? ;
.data:000000018001B987                 db    ? ;
.data:000000018001B988                 db    ? ;
.data:000000018001B989                 db    ? ;
.data:000000018001B98A                 db    ? ;
.data:000000018001B98B                 db    ? ;
.data:000000018001B98C                 db    ? ;
.data:000000018001B98D                 db    ? ;
.data:000000018001B98E                 db    ? ;
.data:000000018001B98F                 db    ? ;
.data:000000018001B990                 db    ? ;
.data:000000018001B991                 db    ? ;
.data:000000018001B992                 db    ? ;
.data:000000018001B993                 db    ? ;
.data:000000018001B994                 db    ? ;
.data:000000018001B995                 db    ? ;
.data:000000018001B996                 db    ? ;
.data:000000018001B997                 db    ? ;
.data:000000018001B998                 db    ? ;
.data:000000018001B999                 db    ? ;
.data:000000018001B99A                 db    ? ;
.data:000000018001B99B                 db    ? ;
.data:000000018001B99C                 db    ? ;
.data:000000018001B99D                 db    ? ;
.data:000000018001B99E                 db    ? ;
.data:000000018001B99F                 db    ? ;
.data:000000018001B9A0                 db    ? ;
.data:000000018001B9A1                 db    ? ;
.data:000000018001B9A2                 db    ? ;
.data:000000018001B9A3                 db    ? ;
.data:000000018001B9A4                 db    ? ;
.data:000000018001B9A5                 db    ? ;
.data:000000018001B9A6                 db    ? ;
.data:000000018001B9A7                 db    ? ;
.data:000000018001B9A8                 db    ? ;
.data:000000018001B9A9                 db    ? ;
.data:000000018001B9AA                 db    ? ;
.data:000000018001B9AB                 db    ? ;
.data:000000018001B9AC                 db    ? ;
.data:000000018001B9AD                 db    ? ;
.data:000000018001B9AE                 db    ? ;
.data:000000018001B9AF                 db    ? ;
.data:000000018001B9B0                 db    ? ;
.data:000000018001B9B1                 db    ? ;
.data:000000018001B9B2                 db    ? ;
.data:000000018001B9B3                 db    ? ;
.data:000000018001B9B4                 db    ? ;
.data:000000018001B9B5                 db    ? ;
.data:000000018001B9B6                 db    ? ;
.data:000000018001B9B7                 db    ? ;
.data:000000018001B9B8                 db    ? ;
.data:000000018001B9B9                 db    ? ;
.data:000000018001B9BA                 db    ? ;
.data:000000018001B9BB                 db    ? ;
.data:000000018001B9BC                 db    ? ;
.data:000000018001B9BD                 db    ? ;
.data:000000018001B9BE                 db    ? ;
.data:000000018001B9BF                 db    ? ;
.data:000000018001B9C0                 db    ? ;
.data:000000018001B9C1                 db    ? ;
.data:000000018001B9C2                 db    ? ;
.data:000000018001B9C3                 db    ? ;
.data:000000018001B9C4                 db    ? ;
.data:000000018001B9C5                 db    ? ;
.data:000000018001B9C6                 db    ? ;
.data:000000018001B9C7                 db    ? ;
.data:000000018001B9C8                 db    ? ;
.data:000000018001B9C9                 db    ? ;
.data:000000018001B9CA                 db    ? ;
.data:000000018001B9CB                 db    ? ;
.data:000000018001B9CC                 db    ? ;
.data:000000018001B9CD                 db    ? ;
.data:000000018001B9CE                 db    ? ;
.data:000000018001B9CF                 db    ? ;
.data:000000018001B9D0                 db    ? ;
.data:000000018001B9D1                 db    ? ;
.data:000000018001B9D2                 db    ? ;
.data:000000018001B9D3                 db    ? ;
.data:000000018001B9D4                 db    ? ;
.data:000000018001B9D5                 db    ? ;
.data:000000018001B9D6                 db    ? ;
.data:000000018001B9D7                 db    ? ;
.data:000000018001B9D8                 db    ? ;
.data:000000018001B9D9                 db    ? ;
.data:000000018001B9DA                 db    ? ;
.data:000000018001B9DB                 db    ? ;
.data:000000018001B9DC                 db    ? ;
.data:000000018001B9DD                 db    ? ;
.data:000000018001B9DE                 db    ? ;
.data:000000018001B9DF                 db    ? ;
.data:000000018001B9E0                 db    ? ;
.data:000000018001B9E1                 db    ? ;
.data:000000018001B9E2                 db    ? ;
.data:000000018001B9E3                 db    ? ;
.data:000000018001B9E4                 db    ? ;
.data:000000018001B9E5                 db    ? ;
.data:000000018001B9E6                 db    ? ;
.data:000000018001B9E7                 db    ? ;
.data:000000018001B9E8                 db    ? ;
.data:000000018001B9E9                 db    ? ;
.data:000000018001B9EA                 db    ? ;
.data:000000018001B9EB                 db    ? ;
.data:000000018001B9EC                 db    ? ;
.data:000000018001B9ED                 db    ? ;
.data:000000018001B9EE                 db    ? ;
.data:000000018001B9EF                 db    ? ;
.data:000000018001B9F0                 db    ? ;
.data:000000018001B9F1                 db    ? ;
.data:000000018001B9F2                 db    ? ;
.data:000000018001B9F3                 db    ? ;
.data:000000018001B9F4                 db    ? ;
.data:000000018001B9F5                 db    ? ;
.data:000000018001B9F6                 db    ? ;
.data:000000018001B9F7                 db    ? ;
.data:000000018001B9F8                 db    ? ;
.data:000000018001B9F9                 db    ? ;
.data:000000018001B9FA                 db    ? ;
.data:000000018001B9FB                 db    ? ;
.data:000000018001B9FC                 db    ? ;
.data:000000018001B9FD                 db    ? ;
.data:000000018001B9FE                 db    ? ;
.data:000000018001B9FF                 db    ? ;
.data:000000018001BA00                 db    ? ;
.data:000000018001BA01                 db    ? ;
.data:000000018001BA02                 db    ? ;
.data:000000018001BA03                 db    ? ;
.data:000000018001BA04                 db    ? ;
.data:000000018001BA05                 db    ? ;
.data:000000018001BA06                 db    ? ;
.data:000000018001BA07                 db    ? ;
.data:000000018001BA08                 db    ? ;
.data:000000018001BA09                 db    ? ;
.data:000000018001BA0A                 db    ? ;
.data:000000018001BA0B                 db    ? ;
.data:000000018001BA0C                 db    ? ;
.data:000000018001BA0D                 db    ? ;
.data:000000018001BA0E                 db    ? ;
.data:000000018001BA0F                 db    ? ;
.data:000000018001BA10                 db    ? ;
.data:000000018001BA11                 db    ? ;
.data:000000018001BA12                 db    ? ;
.data:000000018001BA13                 db    ? ;
.data:000000018001BA14                 db    ? ;
.data:000000018001BA15                 db    ? ;
.data:000000018001BA16                 db    ? ;
.data:000000018001BA17                 db    ? ;
.data:000000018001BA18                 db    ? ;
.data:000000018001BA19                 db    ? ;
.data:000000018001BA1A                 db    ? ;
.data:000000018001BA1B                 db    ? ;
.data:000000018001BA1C                 db    ? ;
.data:000000018001BA1D                 db    ? ;
.data:000000018001BA1E                 db    ? ;
.data:000000018001BA1F                 db    ? ;
.data:000000018001BA20                 db    ? ;
.data:000000018001BA21                 db    ? ;
.data:000000018001BA22                 db    ? ;
.data:000000018001BA23                 db    ? ;
.data:000000018001BA24                 db    ? ;
.data:000000018001BA25                 db    ? ;
.data:000000018001BA26                 db    ? ;
.data:000000018001BA27                 db    ? ;
.data:000000018001BA28                 db    ? ;
.data:000000018001BA29                 db    ? ;
.data:000000018001BA2A                 db    ? ;
.data:000000018001BA2B                 db    ? ;
.data:000000018001BA2C                 db    ? ;
.data:000000018001BA2D                 db    ? ;
.data:000000018001BA2E                 db    ? ;
.data:000000018001BA2F                 db    ? ;
.data:000000018001BA30                 db    ? ;
.data:000000018001BA31                 db    ? ;
.data:000000018001BA32                 db    ? ;
.data:000000018001BA33                 db    ? ;
.data:000000018001BA34                 db    ? ;
.data:000000018001BA35                 db    ? ;
.data:000000018001BA36                 db    ? ;
.data:000000018001BA37                 db    ? ;
.data:000000018001BA38                 db    ? ;
.data:000000018001BA39                 db    ? ;
.data:000000018001BA3A                 db    ? ;
.data:000000018001BA3B                 db    ? ;
.data:000000018001BA3C                 db    ? ;
.data:000000018001BA3D                 db    ? ;
.data:000000018001BA3E                 db    ? ;
.data:000000018001BA3F                 db    ? ;
.data:000000018001BA40                 db    ? ;
.data:000000018001BA41                 db    ? ;
.data:000000018001BA42                 db    ? ;
.data:000000018001BA43                 db    ? ;
.data:000000018001BA44                 db    ? ;
.data:000000018001BA45                 db    ? ;
.data:000000018001BA46                 db    ? ;
.data:000000018001BA47                 db    ? ;
.data:000000018001BA48                 db    ? ;
.data:000000018001BA49                 db    ? ;
.data:000000018001BA4A                 db    ? ;
.data:000000018001BA4B                 db    ? ;
.data:000000018001BA4C                 db    ? ;
.data:000000018001BA4D                 db    ? ;
.data:000000018001BA4E                 db    ? ;
.data:000000018001BA4F                 db    ? ;
.data:000000018001BA50                 db    ? ;
.data:000000018001BA51                 db    ? ;
.data:000000018001BA52                 db    ? ;
.data:000000018001BA53                 db    ? ;
.data:000000018001BA54                 db    ? ;
.data:000000018001BA55                 db    ? ;
.data:000000018001BA56                 db    ? ;
.data:000000018001BA57                 db    ? ;
.data:000000018001BA58                 db    ? ;
.data:000000018001BA59                 db    ? ;
.data:000000018001BA5A                 db    ? ;
.data:000000018001BA5B                 db    ? ;
.data:000000018001BA5C                 db    ? ;
.data:000000018001BA5D                 db    ? ;
.data:000000018001BA5E                 db    ? ;
.data:000000018001BA5F                 db    ? ;
.data:000000018001BA60                 db    ? ;
.data:000000018001BA61                 db    ? ;
.data:000000018001BA62                 db    ? ;
.data:000000018001BA63                 db    ? ;
.data:000000018001BA64                 db    ? ;
.data:000000018001BA65                 db    ? ;
.data:000000018001BA66                 db    ? ;
.data:000000018001BA67                 db    ? ;
.data:000000018001BA68                 db    ? ;
.data:000000018001BA69                 db    ? ;
.data:000000018001BA6A                 db    ? ;
.data:000000018001BA6B                 db    ? ;
.data:000000018001BA6C                 db    ? ;
.data:000000018001BA6D                 db    ? ;
.data:000000018001BA6E                 db    ? ;
.data:000000018001BA6F                 db    ? ;
.data:000000018001BA70                 db    ? ;
.data:000000018001BA71                 db    ? ;
.data:000000018001BA72                 db    ? ;
.data:000000018001BA73                 db    ? ;
.data:000000018001BA74                 db    ? ;
.data:000000018001BA75                 db    ? ;
.data:000000018001BA76                 db    ? ;
.data:000000018001BA77                 db    ? ;
.data:000000018001BA78                 db    ? ;
.data:000000018001BA79                 db    ? ;
.data:000000018001BA7A                 db    ? ;
.data:000000018001BA7B                 db    ? ;
.data:000000018001BA7C                 db    ? ;
.data:000000018001BA7D                 db    ? ;
.data:000000018001BA7E                 db    ? ;
.data:000000018001BA7F                 db    ? ;
.data:000000018001BA80                 db    ? ;
.data:000000018001BA81                 db    ? ;
.data:000000018001BA82                 db    ? ;
.data:000000018001BA83                 db    ? ;
.data:000000018001BA84                 db    ? ;
.data:000000018001BA85                 db    ? ;
.data:000000018001BA86                 db    ? ;
.data:000000018001BA87                 db    ? ;
.data:000000018001BA88                 db    ? ;
.data:000000018001BA89                 db    ? ;
.data:000000018001BA8A                 db    ? ;
.data:000000018001BA8B                 db    ? ;
.data:000000018001BA8C                 db    ? ;
.data:000000018001BA8D                 db    ? ;
.data:000000018001BA8E                 db    ? ;
.data:000000018001BA8F                 db    ? ;
.data:000000018001BA90                 db    ? ;
.data:000000018001BA91                 db    ? ;
.data:000000018001BA92                 db    ? ;
.data:000000018001BA93                 db    ? ;
.data:000000018001BA94                 db    ? ;
.data:000000018001BA95                 db    ? ;
.data:000000018001BA96                 db    ? ;
.data:000000018001BA97                 db    ? ;
.data:000000018001BA98                 db    ? ;
.data:000000018001BA99                 db    ? ;
.data:000000018001BA9A                 db    ? ;
.data:000000018001BA9B                 db    ? ;
.data:000000018001BA9C                 db    ? ;
.data:000000018001BA9D                 db    ? ;
.data:000000018001BA9E                 db    ? ;
.data:000000018001BA9F                 db    ? ;
.data:000000018001BAA0                 db    ? ;
.data:000000018001BAA1                 db    ? ;
.data:000000018001BAA2                 db    ? ;
.data:000000018001BAA3                 db    ? ;
.data:000000018001BAA4                 db    ? ;
.data:000000018001BAA5                 db    ? ;
.data:000000018001BAA6                 db    ? ;
.data:000000018001BAA7                 db    ? ;
.data:000000018001BAA8                 db    ? ;
.data:000000018001BAA9                 db    ? ;
.data:000000018001BAAA                 db    ? ;
.data:000000018001BAAB                 db    ? ;
.data:000000018001BAAC                 db    ? ;
.data:000000018001BAAD                 db    ? ;
.data:000000018001BAAE                 db    ? ;
.data:000000018001BAAF                 db    ? ;
.data:000000018001BAB0                 db    ? ;
.data:000000018001BAB1                 db    ? ;
.data:000000018001BAB2                 db    ? ;
.data:000000018001BAB3                 db    ? ;
.data:000000018001BAB4                 db    ? ;
.data:000000018001BAB5                 db    ? ;
.data:000000018001BAB6                 db    ? ;
.data:000000018001BAB7                 db    ? ;
.data:000000018001BAB8                 db    ? ;
.data:000000018001BAB9                 db    ? ;
.data:000000018001BABA                 db    ? ;
.data:000000018001BABB                 db    ? ;
.data:000000018001BABC                 db    ? ;
.data:000000018001BABD                 db    ? ;
.data:000000018001BABE                 db    ? ;
.data:000000018001BABF                 db    ? ;
.data:000000018001BAC0                 db    ? ;
.data:000000018001BAC1                 db    ? ;
.data:000000018001BAC2                 db    ? ;
.data:000000018001BAC3                 db    ? ;
.data:000000018001BAC4                 db    ? ;
.data:000000018001BAC5                 db    ? ;
.data:000000018001BAC6                 db    ? ;
.data:000000018001BAC7                 db    ? ;
.data:000000018001BAC8                 db    ? ;
.data:000000018001BAC9                 db    ? ;
.data:000000018001BACA                 db    ? ;
.data:000000018001BACB                 db    ? ;
.data:000000018001BACC                 db    ? ;
.data:000000018001BACD                 db    ? ;
.data:000000018001BACE                 db    ? ;
.data:000000018001BACF                 db    ? ;
.data:000000018001BAD0                 db    ? ;
.data:000000018001BAD1                 db    ? ;
.data:000000018001BAD2                 db    ? ;
.data:000000018001BAD3                 db    ? ;
.data:000000018001BAD4                 db    ? ;
.data:000000018001BAD5                 db    ? ;
.data:000000018001BAD6                 db    ? ;
.data:000000018001BAD7                 db    ? ;
.data:000000018001BAD8                 db    ? ;
.data:000000018001BAD9                 db    ? ;
.data:000000018001BADA                 db    ? ;
.data:000000018001BADB                 db    ? ;
.data:000000018001BADC                 db    ? ;
.data:000000018001BADD                 db    ? ;
.data:000000018001BADE                 db    ? ;
.data:000000018001BADF                 db    ? ;
.data:000000018001BAE0                 db    ? ;
.data:000000018001BAE1                 db    ? ;
.data:000000018001BAE2                 db    ? ;
.data:000000018001BAE3                 db    ? ;
.data:000000018001BAE4                 db    ? ;
.data:000000018001BAE5                 db    ? ;
.data:000000018001BAE6                 db    ? ;
.data:000000018001BAE7                 db    ? ;
.data:000000018001BAE8                 db    ? ;
.data:000000018001BAE9                 db    ? ;
.data:000000018001BAEA                 db    ? ;
.data:000000018001BAEB                 db    ? ;
.data:000000018001BAEC                 db    ? ;
.data:000000018001BAED                 db    ? ;
.data:000000018001BAEE                 db    ? ;
.data:000000018001BAEF                 db    ? ;
.data:000000018001BAF0                 db    ? ;
.data:000000018001BAF1                 db    ? ;
.data:000000018001BAF2                 db    ? ;
.data:000000018001BAF3                 db    ? ;
.data:000000018001BAF4                 db    ? ;
.data:000000018001BAF5                 db    ? ;
.data:000000018001BAF6                 db    ? ;
.data:000000018001BAF7                 db    ? ;
.data:000000018001BAF8                 db    ? ;
.data:000000018001BAF9                 db    ? ;
.data:000000018001BAFA                 db    ? ;
.data:000000018001BAFB                 db    ? ;
.data:000000018001BAFC                 db    ? ;
.data:000000018001BAFD                 db    ? ;
.data:000000018001BAFE                 db    ? ;
.data:000000018001BAFF                 db    ? ;
.data:000000018001BB00                 db    ? ;
.data:000000018001BB01                 db    ? ;
.data:000000018001BB02                 db    ? ;
.data:000000018001BB03                 db    ? ;
.data:000000018001BB04                 db    ? ;
.data:000000018001BB05                 db    ? ;
.data:000000018001BB06                 db    ? ;
.data:000000018001BB07                 db    ? ;
.data:000000018001BB08                 db    ? ;
.data:000000018001BB09                 db    ? ;
.data:000000018001BB0A                 db    ? ;
.data:000000018001BB0B                 db    ? ;
.data:000000018001BB0C                 db    ? ;
.data:000000018001BB0D                 db    ? ;
.data:000000018001BB0E                 db    ? ;
.data:000000018001BB0F                 db    ? ;
.data:000000018001BB10                 db    ? ;
.data:000000018001BB11                 db    ? ;
.data:000000018001BB12                 db    ? ;
.data:000000018001BB13                 db    ? ;
.data:000000018001BB14                 db    ? ;
.data:000000018001BB15                 db    ? ;
.data:000000018001BB16                 db    ? ;
.data:000000018001BB17                 db    ? ;
.data:000000018001BB18                 db    ? ;
.data:000000018001BB19                 db    ? ;
.data:000000018001BB1A                 db    ? ;
.data:000000018001BB1B                 db    ? ;
.data:000000018001BB1C                 db    ? ;
.data:000000018001BB1D                 db    ? ;
.data:000000018001BB1E                 db    ? ;
.data:000000018001BB1F                 db    ? ;
.data:000000018001BB20                 db    ? ;
.data:000000018001BB21                 db    ? ;
.data:000000018001BB22                 db    ? ;
.data:000000018001BB23                 db    ? ;
.data:000000018001BB24                 db    ? ;
.data:000000018001BB25                 db    ? ;
.data:000000018001BB26                 db    ? ;
.data:000000018001BB27                 db    ? ;
.data:000000018001BB28                 db    ? ;
.data:000000018001BB29                 db    ? ;
.data:000000018001BB2A                 db    ? ;
.data:000000018001BB2B                 db    ? ;
.data:000000018001BB2C                 db    ? ;
.data:000000018001BB2D                 db    ? ;
.data:000000018001BB2E                 db    ? ;
.data:000000018001BB2F                 db    ? ;
.data:000000018001BB30                 db    ? ;
.data:000000018001BB31                 db    ? ;
.data:000000018001BB32                 db    ? ;
.data:000000018001BB33                 db    ? ;
.data:000000018001BB34                 db    ? ;
.data:000000018001BB35                 db    ? ;
.data:000000018001BB36                 db    ? ;
.data:000000018001BB37                 db    ? ;
.data:000000018001BB38                 db    ? ;
.data:000000018001BB39                 db    ? ;
.data:000000018001BB3A                 db    ? ;
.data:000000018001BB3B                 db    ? ;
.data:000000018001BB3C                 db    ? ;
.data:000000018001BB3D                 db    ? ;
.data:000000018001BB3E                 db    ? ;
.data:000000018001BB3F                 db    ? ;
.data:000000018001BB40                 db    ? ;
.data:000000018001BB41                 db    ? ;
.data:000000018001BB42                 db    ? ;
.data:000000018001BB43                 db    ? ;
.data:000000018001BB44                 db    ? ;
.data:000000018001BB45                 db    ? ;
.data:000000018001BB46                 db    ? ;
.data:000000018001BB47                 db    ? ;
.data:000000018001BB48                 db    ? ;
.data:000000018001BB49                 db    ? ;
.data:000000018001BB4A                 db    ? ;
.data:000000018001BB4B                 db    ? ;
.data:000000018001BB4C                 db    ? ;
.data:000000018001BB4D                 db    ? ;
.data:000000018001BB4E                 db    ? ;
.data:000000018001BB4F                 db    ? ;
.data:000000018001BB50                 db    ? ;
.data:000000018001BB51                 db    ? ;
.data:000000018001BB52                 db    ? ;
.data:000000018001BB53                 db    ? ;
.data:000000018001BB54                 db    ? ;
.data:000000018001BB55                 db    ? ;
.data:000000018001BB56                 db    ? ;
.data:000000018001BB57                 db    ? ;
.data:000000018001BB58                 db    ? ;
.data:000000018001BB59                 db    ? ;
.data:000000018001BB5A                 db    ? ;
.data:000000018001BB5B                 db    ? ;
.data:000000018001BB5C                 db    ? ;
.data:000000018001BB5D                 db    ? ;
.data:000000018001BB5E                 db    ? ;
.data:000000018001BB5F                 db    ? ;
.data:000000018001BB60                 db    ? ;
.data:000000018001BB61                 db    ? ;
.data:000000018001BB62                 db    ? ;
.data:000000018001BB63                 db    ? ;
.data:000000018001BB64                 db    ? ;
.data:000000018001BB65                 db    ? ;
.data:000000018001BB66                 db    ? ;
.data:000000018001BB67                 db    ? ;
.data:000000018001BB68                 db    ? ;
.data:000000018001BB69                 db    ? ;
.data:000000018001BB6A                 db    ? ;
.data:000000018001BB6B                 db    ? ;
.data:000000018001BB6C                 db    ? ;
.data:000000018001BB6D                 db    ? ;
.data:000000018001BB6E                 db    ? ;
.data:000000018001BB6F                 db    ? ;
.data:000000018001BB70                 db    ? ;
.data:000000018001BB71                 db    ? ;
.data:000000018001BB72                 db    ? ;
.data:000000018001BB73                 db    ? ;
.data:000000018001BB74                 db    ? ;
.data:000000018001BB75                 db    ? ;
.data:000000018001BB76                 db    ? ;
.data:000000018001BB77                 db    ? ;
.data:000000018001BB78                 db    ? ;
.data:000000018001BB79                 db    ? ;
.data:000000018001BB7A                 db    ? ;
.data:000000018001BB7B                 db    ? ;
.data:000000018001BB7C                 db    ? ;
.data:000000018001BB7D                 db    ? ;
.data:000000018001BB7E                 db    ? ;
.data:000000018001BB7F                 db    ? ;
.data:000000018001BB80                 db    ? ;
.data:000000018001BB81                 db    ? ;
.data:000000018001BB82                 db    ? ;
.data:000000018001BB83                 db    ? ;
.data:000000018001BB84                 db    ? ;
.data:000000018001BB85                 db    ? ;
.data:000000018001BB86                 db    ? ;
.data:000000018001BB87                 db    ? ;
.data:000000018001BB88                 db    ? ;
.data:000000018001BB89                 db    ? ;
.data:000000018001BB8A                 db    ? ;
.data:000000018001BB8B                 db    ? ;
.data:000000018001BB8C                 db    ? ;
.data:000000018001BB8D                 db    ? ;
.data:000000018001BB8E                 db    ? ;
.data:000000018001BB8F                 db    ? ;
.data:000000018001BB90                 db    ? ;
.data:000000018001BB91                 db    ? ;
.data:000000018001BB92                 db    ? ;
.data:000000018001BB93                 db    ? ;
.data:000000018001BB94                 db    ? ;
.data:000000018001BB95                 db    ? ;
.data:000000018001BB96                 db    ? ;
.data:000000018001BB97                 db    ? ;
.data:000000018001BB98                 db    ? ;
.data:000000018001BB99                 db    ? ;
.data:000000018001BB9A                 db    ? ;
.data:000000018001BB9B                 db    ? ;
.data:000000018001BB9C                 db    ? ;
.data:000000018001BB9D                 db    ? ;
.data:000000018001BB9E                 db    ? ;
.data:000000018001BB9F                 db    ? ;
.data:000000018001BBA0                 db    ? ;
.data:000000018001BBA1                 db    ? ;
.data:000000018001BBA2                 db    ? ;
.data:000000018001BBA3                 db    ? ;
.data:000000018001BBA4                 db    ? ;
.data:000000018001BBA5                 db    ? ;
.data:000000018001BBA6                 db    ? ;
.data:000000018001BBA7                 db    ? ;
.data:000000018001BBA8                 db    ? ;
.data:000000018001BBA9                 db    ? ;
.data:000000018001BBAA                 db    ? ;
.data:000000018001BBAB                 db    ? ;
.data:000000018001BBAC                 db    ? ;
.data:000000018001BBAD                 db    ? ;
.data:000000018001BBAE                 db    ? ;
.data:000000018001BBAF                 db    ? ;
.data:000000018001BBB0                 db    ? ;
.data:000000018001BBB1                 db    ? ;
.data:000000018001BBB2                 db    ? ;
.data:000000018001BBB3                 db    ? ;
.data:000000018001BBB4                 db    ? ;
.data:000000018001BBB5                 db    ? ;
.data:000000018001BBB6                 db    ? ;
.data:000000018001BBB7                 db    ? ;
.data:000000018001BBB8                 db    ? ;
.data:000000018001BBB9                 db    ? ;
.data:000000018001BBBA                 db    ? ;
.data:000000018001BBBB                 db    ? ;
.data:000000018001BBBC                 db    ? ;
.data:000000018001BBBD                 db    ? ;
.data:000000018001BBBE                 db    ? ;
.data:000000018001BBBF                 db    ? ;
.data:000000018001BBC0                 db    ? ;
.data:000000018001BBC1                 db    ? ;
.data:000000018001BBC2                 db    ? ;
.data:000000018001BBC3                 db    ? ;
.data:000000018001BBC4                 db    ? ;
.data:000000018001BBC5                 db    ? ;
.data:000000018001BBC6                 db    ? ;
.data:000000018001BBC7                 db    ? ;
.data:000000018001BBC8                 db    ? ;
.data:000000018001BBC9                 db    ? ;
.data:000000018001BBCA                 db    ? ;
.data:000000018001BBCB                 db    ? ;
.data:000000018001BBCC                 db    ? ;
.data:000000018001BBCD                 db    ? ;
.data:000000018001BBCE                 db    ? ;
.data:000000018001BBCF                 db    ? ;
.data:000000018001BBD0                 db    ? ;
.data:000000018001BBD1                 db    ? ;
.data:000000018001BBD2                 db    ? ;
.data:000000018001BBD3                 db    ? ;
.data:000000018001BBD4                 db    ? ;
.data:000000018001BBD5                 db    ? ;
.data:000000018001BBD6                 db    ? ;
.data:000000018001BBD7                 db    ? ;
.data:000000018001BBD8                 db    ? ;
.data:000000018001BBD9                 db    ? ;
.data:000000018001BBDA                 db    ? ;
.data:000000018001BBDB                 db    ? ;
.data:000000018001BBDC                 db    ? ;
.data:000000018001BBDD                 db    ? ;
.data:000000018001BBDE                 db    ? ;
.data:000000018001BBDF                 db    ? ;
.data:000000018001BBE0                 db    ? ;
.data:000000018001BBE1                 db    ? ;
.data:000000018001BBE2                 db    ? ;
.data:000000018001BBE3                 db    ? ;
.data:000000018001BBE4                 db    ? ;
.data:000000018001BBE5                 db    ? ;
.data:000000018001BBE6                 db    ? ;
.data:000000018001BBE7                 db    ? ;
.data:000000018001BBE8                 db    ? ;
.data:000000018001BBE9                 db    ? ;
.data:000000018001BBEA                 db    ? ;
.data:000000018001BBEB                 db    ? ;
.data:000000018001BBEC                 db    ? ;
.data:000000018001BBED                 db    ? ;
.data:000000018001BBEE                 db    ? ;
.data:000000018001BBEF                 db    ? ;
.data:000000018001BBF0                 db    ? ;
.data:000000018001BBF1                 db    ? ;
.data:000000018001BBF2                 db    ? ;
.data:000000018001BBF3                 db    ? ;
.data:000000018001BBF4                 db    ? ;
.data:000000018001BBF5                 db    ? ;
.data:000000018001BBF6                 db    ? ;
.data:000000018001BBF7                 db    ? ;
.data:000000018001BBF8                 db    ? ;
.data:000000018001BBF9                 db    ? ;
.data:000000018001BBFA                 db    ? ;
.data:000000018001BBFB                 db    ? ;
.data:000000018001BBFC                 db    ? ;
.data:000000018001BBFD                 db    ? ;
.data:000000018001BBFE                 db    ? ;
.data:000000018001BBFF                 db    ? ;
.data:000000018001BC00                 db    ? ;
.data:000000018001BC01                 db    ? ;
.data:000000018001BC02                 db    ? ;
.data:000000018001BC03                 db    ? ;
.data:000000018001BC04                 db    ? ;
.data:000000018001BC05                 db    ? ;
.data:000000018001BC06                 db    ? ;
.data:000000018001BC07                 db    ? ;
.data:000000018001BC08                 db    ? ;
.data:000000018001BC09                 db    ? ;
.data:000000018001BC0A                 db    ? ;
.data:000000018001BC0B                 db    ? ;
.data:000000018001BC0C                 db    ? ;
.data:000000018001BC0D                 db    ? ;
.data:000000018001BC0E                 db    ? ;
.data:000000018001BC0F                 db    ? ;
.data:000000018001BC10                 db    ? ;
.data:000000018001BC11                 db    ? ;
.data:000000018001BC12                 db    ? ;
.data:000000018001BC13                 db    ? ;
.data:000000018001BC14                 db    ? ;
.data:000000018001BC15                 db    ? ;
.data:000000018001BC16                 db    ? ;
.data:000000018001BC17                 db    ? ;
.data:000000018001BC18                 db    ? ;
.data:000000018001BC19                 db    ? ;
.data:000000018001BC1A                 db    ? ;
.data:000000018001BC1B                 db    ? ;
.data:000000018001BC1C                 db    ? ;
.data:000000018001BC1D                 db    ? ;
.data:000000018001BC1E                 db    ? ;
.data:000000018001BC1F                 db    ? ;
.data:000000018001BC20                 db    ? ;
.data:000000018001BC21                 db    ? ;
.data:000000018001BC22                 db    ? ;
.data:000000018001BC23                 db    ? ;
.data:000000018001BC24                 db    ? ;
.data:000000018001BC25                 db    ? ;
.data:000000018001BC26                 db    ? ;
.data:000000018001BC27                 db    ? ;
.data:000000018001BC28                 db    ? ;
.data:000000018001BC29                 db    ? ;
.data:000000018001BC2A                 db    ? ;
.data:000000018001BC2B                 db    ? ;
.data:000000018001BC2C                 db    ? ;
.data:000000018001BC2D                 db    ? ;
.data:000000018001BC2E                 db    ? ;
.data:000000018001BC2F                 db    ? ;
.data:000000018001BC30                 db    ? ;
.data:000000018001BC31                 db    ? ;
.data:000000018001BC32                 db    ? ;
.data:000000018001BC33                 db    ? ;
.data:000000018001BC34                 db    ? ;
.data:000000018001BC35                 db    ? ;
.data:000000018001BC36                 db    ? ;
.data:000000018001BC37                 db    ? ;
.data:000000018001BC38                 db    ? ;
.data:000000018001BC39                 db    ? ;
.data:000000018001BC3A                 db    ? ;
.data:000000018001BC3B                 db    ? ;
.data:000000018001BC3C                 db    ? ;
.data:000000018001BC3D                 db    ? ;
.data:000000018001BC3E                 db    ? ;
.data:000000018001BC3F                 db    ? ;
.data:000000018001BC40                 db    ? ;
.data:000000018001BC41                 db    ? ;
.data:000000018001BC42                 db    ? ;
.data:000000018001BC43                 db    ? ;
.data:000000018001BC44                 db    ? ;
.data:000000018001BC45                 db    ? ;
.data:000000018001BC46                 db    ? ;
.data:000000018001BC47                 db    ? ;
.data:000000018001BC48                 db    ? ;
.data:000000018001BC49                 db    ? ;
.data:000000018001BC4A                 db    ? ;
.data:000000018001BC4B                 db    ? ;
.data:000000018001BC4C                 db    ? ;
.data:000000018001BC4D                 db    ? ;
.data:000000018001BC4E                 db    ? ;
.data:000000018001BC4F                 db    ? ;
.data:000000018001BC50                 db    ? ;
.data:000000018001BC51                 db    ? ;
.data:000000018001BC52                 db    ? ;
.data:000000018001BC53                 db    ? ;
.data:000000018001BC54                 db    ? ;
.data:000000018001BC55                 db    ? ;
.data:000000018001BC56                 db    ? ;
.data:000000018001BC57                 db    ? ;
.data:000000018001BC58                 db    ? ;
.data:000000018001BC59                 db    ? ;
.data:000000018001BC5A                 db    ? ;
.data:000000018001BC5B                 db    ? ;
.data:000000018001BC5C                 db    ? ;
.data:000000018001BC5D                 db    ? ;
.data:000000018001BC5E                 db    ? ;
.data:000000018001BC5F                 db    ? ;
.data:000000018001BC60                 db    ? ;
.data:000000018001BC61                 db    ? ;
.data:000000018001BC62                 db    ? ;
.data:000000018001BC63                 db    ? ;
.data:000000018001BC64                 db    ? ;
.data:000000018001BC65                 db    ? ;
.data:000000018001BC66                 db    ? ;
.data:000000018001BC67                 db    ? ;
.data:000000018001BC68                 db    ? ;
.data:000000018001BC69                 db    ? ;
.data:000000018001BC6A                 db    ? ;
.data:000000018001BC6B                 db    ? ;
.data:000000018001BC6C                 db    ? ;
.data:000000018001BC6D                 db    ? ;
.data:000000018001BC6E                 db    ? ;
.data:000000018001BC6F                 db    ? ;
.data:000000018001BC70                 db    ? ;
.data:000000018001BC71                 db    ? ;
.data:000000018001BC72                 db    ? ;
.data:000000018001BC73                 db    ? ;
.data:000000018001BC74                 db    ? ;
.data:000000018001BC75                 db    ? ;
.data:000000018001BC76                 db    ? ;
.data:000000018001BC77                 db    ? ;
.data:000000018001BC78                 db    ? ;
.data:000000018001BC79                 db    ? ;
.data:000000018001BC7A                 db    ? ;
.data:000000018001BC7B                 db    ? ;
.data:000000018001BC7C                 db    ? ;
.data:000000018001BC7D                 db    ? ;
.data:000000018001BC7E                 db    ? ;
.data:000000018001BC7F                 db    ? ;
.data:000000018001BC80                 db    ? ;
.data:000000018001BC81                 db    ? ;
.data:000000018001BC82                 db    ? ;
.data:000000018001BC83                 db    ? ;
.data:000000018001BC84                 db    ? ;
.data:000000018001BC85                 db    ? ;
.data:000000018001BC86                 db    ? ;
.data:000000018001BC87                 db    ? ;
.data:000000018001BC88                 db    ? ;
.data:000000018001BC89                 db    ? ;
.data:000000018001BC8A                 db    ? ;
.data:000000018001BC8B                 db    ? ;
.data:000000018001BC8C                 db    ? ;
.data:000000018001BC8D                 db    ? ;
.data:000000018001BC8E                 db    ? ;
.data:000000018001BC8F                 db    ? ;
.data:000000018001BC90                 db    ? ;
.data:000000018001BC91                 db    ? ;
.data:000000018001BC92                 db    ? ;
.data:000000018001BC93                 db    ? ;
.data:000000018001BC94                 db    ? ;
.data:000000018001BC95                 db    ? ;
.data:000000018001BC96                 db    ? ;
.data:000000018001BC97                 db    ? ;
.data:000000018001BC98                 db    ? ;
.data:000000018001BC99                 db    ? ;
.data:000000018001BC9A                 db    ? ;
.data:000000018001BC9B                 db    ? ;
.data:000000018001BC9C                 db    ? ;
.data:000000018001BC9D                 db    ? ;
.data:000000018001BC9E                 db    ? ;
.data:000000018001BC9F                 db    ? ;
.data:000000018001BCA0                 db    ? ;
.data:000000018001BCA1                 db    ? ;
.data:000000018001BCA2                 db    ? ;
.data:000000018001BCA3                 db    ? ;
.data:000000018001BCA4                 db    ? ;
.data:000000018001BCA5                 db    ? ;
.data:000000018001BCA6                 db    ? ;
.data:000000018001BCA7                 db    ? ;
.data:000000018001BCA8                 db    ? ;
.data:000000018001BCA9                 db    ? ;
.data:000000018001BCAA                 db    ? ;
.data:000000018001BCAB                 db    ? ;
.data:000000018001BCAC                 db    ? ;
.data:000000018001BCAD                 db    ? ;
.data:000000018001BCAE                 db    ? ;
.data:000000018001BCAF                 db    ? ;
.data:000000018001BCB0                 db    ? ;
.data:000000018001BCB1                 db    ? ;
.data:000000018001BCB2                 db    ? ;
.data:000000018001BCB3                 db    ? ;
.data:000000018001BCB4                 db    ? ;
.data:000000018001BCB5                 db    ? ;
.data:000000018001BCB6                 db    ? ;
.data:000000018001BCB7                 db    ? ;
.data:000000018001BCB8                 db    ? ;
.data:000000018001BCB9                 db    ? ;
.data:000000018001BCBA                 db    ? ;
.data:000000018001BCBB                 db    ? ;
.data:000000018001BCBC                 db    ? ;
.data:000000018001BCBD                 db    ? ;
.data:000000018001BCBE                 db    ? ;
.data:000000018001BCBF                 db    ? ;
.data:000000018001BCC0                 db    ? ;
.data:000000018001BCC1                 db    ? ;
.data:000000018001BCC2                 db    ? ;
.data:000000018001BCC3                 db    ? ;
.data:000000018001BCC4                 db    ? ;
.data:000000018001BCC5                 db    ? ;
.data:000000018001BCC6                 db    ? ;
.data:000000018001BCC7                 db    ? ;
.data:000000018001BCC8                 db    ? ;
.data:000000018001BCC9                 db    ? ;
.data:000000018001BCCA                 db    ? ;
.data:000000018001BCCB                 db    ? ;
.data:000000018001BCCC                 db    ? ;
.data:000000018001BCCD                 db    ? ;
.data:000000018001BCCE                 db    ? ;
.data:000000018001BCCF                 db    ? ;
.data:000000018001BCD0                 db    ? ;
.data:000000018001BCD1                 db    ? ;
.data:000000018001BCD2                 db    ? ;
.data:000000018001BCD3                 db    ? ;
.data:000000018001BCD4                 db    ? ;
.data:000000018001BCD5                 db    ? ;
.data:000000018001BCD6                 db    ? ;
.data:000000018001BCD7                 db    ? ;
.data:000000018001BCD8                 db    ? ;
.data:000000018001BCD9                 db    ? ;
.data:000000018001BCDA                 db    ? ;
.data:000000018001BCDB                 db    ? ;
.data:000000018001BCDC                 db    ? ;
.data:000000018001BCDD                 db    ? ;
.data:000000018001BCDE                 db    ? ;
.data:000000018001BCDF                 db    ? ;
.data:000000018001BCE0                 db    ? ;
.data:000000018001BCE1                 db    ? ;
.data:000000018001BCE2                 db    ? ;
.data:000000018001BCE3                 db    ? ;
.data:000000018001BCE4                 db    ? ;
.data:000000018001BCE5                 db    ? ;
.data:000000018001BCE6                 db    ? ;
.data:000000018001BCE7                 db    ? ;
.data:000000018001BCE8                 db    ? ;
.data:000000018001BCE9                 db    ? ;
.data:000000018001BCEA                 db    ? ;
.data:000000018001BCEB                 db    ? ;
.data:000000018001BCEC                 db    ? ;
.data:000000018001BCED                 db    ? ;
.data:000000018001BCEE                 db    ? ;
.data:000000018001BCEF                 db    ? ;
.data:000000018001BCF0                 db    ? ;
.data:000000018001BCF1                 db    ? ;
.data:000000018001BCF2                 db    ? ;
.data:000000018001BCF3                 db    ? ;
.data:000000018001BCF4                 db    ? ;
.data:000000018001BCF5                 db    ? ;
.data:000000018001BCF6                 db    ? ;
.data:000000018001BCF7                 db    ? ;
.data:000000018001BCF8                 db    ? ;
.data:000000018001BCF9                 db    ? ;
.data:000000018001BCFA                 db    ? ;
.data:000000018001BCFB                 db    ? ;
.data:000000018001BCFC                 db    ? ;
.data:000000018001BCFD                 db    ? ;
.data:000000018001BCFE                 db    ? ;
.data:000000018001BCFF                 db    ? ;
.data:000000018001BD00                 db    ? ;
.data:000000018001BD01                 db    ? ;
.data:000000018001BD02                 db    ? ;
.data:000000018001BD03                 db    ? ;
.data:000000018001BD04                 db    ? ;
.data:000000018001BD05                 db    ? ;
.data:000000018001BD06                 db    ? ;
.data:000000018001BD07                 db    ? ;
.data:000000018001BD08                 db    ? ;
.data:000000018001BD09                 db    ? ;
.data:000000018001BD0A                 db    ? ;
.data:000000018001BD0B                 db    ? ;
.data:000000018001BD0C                 db    ? ;
.data:000000018001BD0D                 db    ? ;
.data:000000018001BD0E                 db    ? ;
.data:000000018001BD0F                 db    ? ;
.data:000000018001BD10                 db    ? ;
.data:000000018001BD11                 db    ? ;
.data:000000018001BD12                 db    ? ;
.data:000000018001BD13                 db    ? ;
.data:000000018001BD14                 db    ? ;
.data:000000018001BD15                 db    ? ;
.data:000000018001BD16                 db    ? ;
.data:000000018001BD17                 db    ? ;
.data:000000018001BD18                 db    ? ;
.data:000000018001BD19                 db    ? ;
.data:000000018001BD1A                 db    ? ;
.data:000000018001BD1B                 db    ? ;
.data:000000018001BD1C                 db    ? ;
.data:000000018001BD1D                 db    ? ;
.data:000000018001BD1E                 db    ? ;
.data:000000018001BD1F                 db    ? ;
.data:000000018001BD20                 db    ? ;
.data:000000018001BD21                 db    ? ;
.data:000000018001BD22                 db    ? ;
.data:000000018001BD23                 db    ? ;
.data:000000018001BD24                 db    ? ;
.data:000000018001BD25                 db    ? ;
.data:000000018001BD26                 db    ? ;
.data:000000018001BD27                 db    ? ;
.data:000000018001BD28                 db    ? ;
.data:000000018001BD29                 db    ? ;
.data:000000018001BD2A                 db    ? ;
.data:000000018001BD2B                 db    ? ;
.data:000000018001BD2C                 db    ? ;
.data:000000018001BD2D                 db    ? ;
.data:000000018001BD2E                 db    ? ;
.data:000000018001BD2F                 db    ? ;
.data:000000018001BD30                 db    ? ;
.data:000000018001BD31                 db    ? ;
.data:000000018001BD32                 db    ? ;
.data:000000018001BD33                 db    ? ;
.data:000000018001BD34                 db    ? ;
.data:000000018001BD35                 db    ? ;
.data:000000018001BD36                 db    ? ;
.data:000000018001BD37                 db    ? ;
.data:000000018001BD38                 db    ? ;
.data:000000018001BD39                 db    ? ;
.data:000000018001BD3A                 db    ? ;
.data:000000018001BD3B                 db    ? ;
.data:000000018001BD3C                 db    ? ;
.data:000000018001BD3D                 db    ? ;
.data:000000018001BD3E                 db    ? ;
.data:000000018001BD3F                 db    ? ;
.data:000000018001BD40                 db    ? ;
.data:000000018001BD41                 db    ? ;
.data:000000018001BD42                 db    ? ;
.data:000000018001BD43                 db    ? ;
.data:000000018001BD44                 db    ? ;
.data:000000018001BD45                 db    ? ;
.data:000000018001BD46                 db    ? ;
.data:000000018001BD47                 db    ? ;
.data:000000018001BD48                 db    ? ;
.data:000000018001BD49                 db    ? ;
.data:000000018001BD4A                 db    ? ;
.data:000000018001BD4B                 db    ? ;
.data:000000018001BD4C                 db    ? ;
.data:000000018001BD4D                 db    ? ;
.data:000000018001BD4E                 db    ? ;
.data:000000018001BD4F                 db    ? ;
.data:000000018001BD50                 db    ? ;
.data:000000018001BD51                 db    ? ;
.data:000000018001BD52                 db    ? ;
.data:000000018001BD53                 db    ? ;
.data:000000018001BD54                 db    ? ;
.data:000000018001BD55                 db    ? ;
.data:000000018001BD56                 db    ? ;
.data:000000018001BD57                 db    ? ;
.data:000000018001BD58                 db    ? ;
.data:000000018001BD59                 db    ? ;
.data:000000018001BD5A                 db    ? ;
.data:000000018001BD5B                 db    ? ;
.data:000000018001BD5C                 db    ? ;
.data:000000018001BD5D                 db    ? ;
.data:000000018001BD5E                 db    ? ;
.data:000000018001BD5F                 db    ? ;
.data:000000018001BD60                 db    ? ;
.data:000000018001BD61                 db    ? ;
.data:000000018001BD62                 db    ? ;
.data:000000018001BD63                 db    ? ;
.data:000000018001BD64                 db    ? ;
.data:000000018001BD65                 db    ? ;
.data:000000018001BD66                 db    ? ;
.data:000000018001BD67                 db    ? ;
.data:000000018001BD68                 db    ? ;
.data:000000018001BD69                 db    ? ;
.data:000000018001BD6A                 db    ? ;
.data:000000018001BD6B                 db    ? ;
.data:000000018001BD6C                 db    ? ;
.data:000000018001BD6D                 db    ? ;
.data:000000018001BD6E                 db    ? ;
.data:000000018001BD6F                 db    ? ;
.data:000000018001BD70                 db    ? ;
.data:000000018001BD71                 db    ? ;
.data:000000018001BD72                 db    ? ;
.data:000000018001BD73                 db    ? ;
.data:000000018001BD74                 db    ? ;
.data:000000018001BD75                 db    ? ;
.data:000000018001BD76                 db    ? ;
.data:000000018001BD77                 db    ? ;
.data:000000018001BD78                 db    ? ;
.data:000000018001BD79                 db    ? ;
.data:000000018001BD7A                 db    ? ;
.data:000000018001BD7B                 db    ? ;
.data:000000018001BD7C                 db    ? ;
.data:000000018001BD7D                 db    ? ;
.data:000000018001BD7E                 db    ? ;
.data:000000018001BD7F                 db    ? ;
.data:000000018001BD80                 db    ? ;
.data:000000018001BD81                 db    ? ;
.data:000000018001BD82                 db    ? ;
.data:000000018001BD83                 db    ? ;
.data:000000018001BD84                 db    ? ;
.data:000000018001BD85                 db    ? ;
.data:000000018001BD86                 db    ? ;
.data:000000018001BD87                 db    ? ;
.data:000000018001BD88                 db    ? ;
.data:000000018001BD89                 db    ? ;
.data:000000018001BD8A                 db    ? ;
.data:000000018001BD8B                 db    ? ;
.data:000000018001BD8C                 db    ? ;
.data:000000018001BD8D                 db    ? ;
.data:000000018001BD8E                 db    ? ;
.data:000000018001BD8F                 db    ? ;
.data:000000018001BD90                 db    ? ;
.data:000000018001BD91                 db    ? ;
.data:000000018001BD92                 db    ? ;
.data:000000018001BD93                 db    ? ;
.data:000000018001BD94                 db    ? ;
.data:000000018001BD95                 db    ? ;
.data:000000018001BD96                 db    ? ;
.data:000000018001BD97                 db    ? ;
.data:000000018001BD98                 db    ? ;
.data:000000018001BD99                 db    ? ;
.data:000000018001BD9A                 db    ? ;
.data:000000018001BD9B                 db    ? ;
.data:000000018001BD9C                 db    ? ;
.data:000000018001BD9D                 db    ? ;
.data:000000018001BD9E                 db    ? ;
.data:000000018001BD9F                 db    ? ;
.data:000000018001BDA0                 db    ? ;
.data:000000018001BDA1                 db    ? ;
.data:000000018001BDA2                 db    ? ;
.data:000000018001BDA3                 db    ? ;
.data:000000018001BDA4                 db    ? ;
.data:000000018001BDA5                 db    ? ;
.data:000000018001BDA6                 db    ? ;
.data:000000018001BDA7                 db    ? ;
.data:000000018001BDA8                 db    ? ;
.data:000000018001BDA9                 db    ? ;
.data:000000018001BDAA                 db    ? ;
.data:000000018001BDAB                 db    ? ;
.data:000000018001BDAC                 db    ? ;
.data:000000018001BDAD                 db    ? ;
.data:000000018001BDAE                 db    ? ;
.data:000000018001BDAF                 db    ? ;
.data:000000018001BDB0                 db    ? ;
.data:000000018001BDB1                 db    ? ;
.data:000000018001BDB2                 db    ? ;
.data:000000018001BDB3                 db    ? ;
.data:000000018001BDB4                 db    ? ;
.data:000000018001BDB5                 db    ? ;
.data:000000018001BDB6                 db    ? ;
.data:000000018001BDB7                 db    ? ;
.data:000000018001BDB8                 db    ? ;
.data:000000018001BDB9                 db    ? ;
.data:000000018001BDBA                 db    ? ;
.data:000000018001BDBB                 db    ? ;
.data:000000018001BDBC                 db    ? ;
.data:000000018001BDBD                 db    ? ;
.data:000000018001BDBE                 db    ? ;
.data:000000018001BDBF                 db    ? ;
.data:000000018001BDC0                 db    ? ;
.data:000000018001BDC1                 db    ? ;
.data:000000018001BDC2                 db    ? ;
.data:000000018001BDC3                 db    ? ;
.data:000000018001BDC4                 db    ? ;
.data:000000018001BDC5                 db    ? ;
.data:000000018001BDC6                 db    ? ;
.data:000000018001BDC7                 db    ? ;
.data:000000018001BDC8                 db    ? ;
.data:000000018001BDC9                 db    ? ;
.data:000000018001BDCA                 db    ? ;
.data:000000018001BDCB                 db    ? ;
.data:000000018001BDCC                 db    ? ;
.data:000000018001BDCD                 db    ? ;
.data:000000018001BDCE                 db    ? ;
.data:000000018001BDCF                 db    ? ;
.data:000000018001BDD0                 db    ? ;
.data:000000018001BDD1                 db    ? ;
.data:000000018001BDD2                 db    ? ;
.data:000000018001BDD3                 db    ? ;
.data:000000018001BDD4                 db    ? ;
.data:000000018001BDD5                 db    ? ;
.data:000000018001BDD6                 db    ? ;
.data:000000018001BDD7                 db    ? ;
.data:000000018001BDD8                 db    ? ;
.data:000000018001BDD9                 db    ? ;
.data:000000018001BDDA                 db    ? ;
.data:000000018001BDDB                 db    ? ;
.data:000000018001BDDC                 db    ? ;
.data:000000018001BDDD                 db    ? ;
.data:000000018001BDDE                 db    ? ;
.data:000000018001BDDF                 db    ? ;
.data:000000018001BDE0                 db    ? ;
.data:000000018001BDE1                 db    ? ;
.data:000000018001BDE2                 db    ? ;
.data:000000018001BDE3                 db    ? ;
.data:000000018001BDE4                 db    ? ;
.data:000000018001BDE5                 db    ? ;
.data:000000018001BDE6                 db    ? ;
.data:000000018001BDE7                 db    ? ;
.data:000000018001BDE8                 db    ? ;
.data:000000018001BDE9                 db    ? ;
.data:000000018001BDEA                 db    ? ;
.data:000000018001BDEB                 db    ? ;
.data:000000018001BDEC                 db    ? ;
.data:000000018001BDED                 db    ? ;
.data:000000018001BDEE                 db    ? ;
.data:000000018001BDEF                 db    ? ;
.data:000000018001BDF0                 db    ? ;
.data:000000018001BDF1                 db    ? ;
.data:000000018001BDF2                 db    ? ;
.data:000000018001BDF3                 db    ? ;
.data:000000018001BDF4                 db    ? ;
.data:000000018001BDF5                 db    ? ;
.data:000000018001BDF6                 db    ? ;
.data:000000018001BDF7                 db    ? ;
.data:000000018001BDF8                 db    ? ;
.data:000000018001BDF9                 db    ? ;
.data:000000018001BDFA                 db    ? ;
.data:000000018001BDFB                 db    ? ;
.data:000000018001BDFC                 db    ? ;
.data:000000018001BDFD                 db    ? ;
.data:000000018001BDFE                 db    ? ;
.data:000000018001BDFF                 db    ? ;
.data:000000018001BE00                 db    ? ;
.data:000000018001BE01                 db    ? ;
.data:000000018001BE02                 db    ? ;
.data:000000018001BE03                 db    ? ;
.data:000000018001BE04                 db    ? ;
.data:000000018001BE05                 db    ? ;
.data:000000018001BE06                 db    ? ;
.data:000000018001BE07                 db    ? ;
.data:000000018001BE08                 db    ? ;
.data:000000018001BE09                 db    ? ;
.data:000000018001BE0A                 db    ? ;
.data:000000018001BE0B                 db    ? ;
.data:000000018001BE0C                 db    ? ;
.data:000000018001BE0D                 db    ? ;
.data:000000018001BE0E                 db    ? ;
.data:000000018001BE0F                 db    ? ;
.data:000000018001BE10                 db    ? ;
.data:000000018001BE11                 db    ? ;
.data:000000018001BE12                 db    ? ;
.data:000000018001BE13                 db    ? ;
.data:000000018001BE14                 db    ? ;
.data:000000018001BE15                 db    ? ;
.data:000000018001BE16                 db    ? ;
.data:000000018001BE17                 db    ? ;
.data:000000018001BE18                 db    ? ;
.data:000000018001BE19                 db    ? ;
.data:000000018001BE1A                 db    ? ;
.data:000000018001BE1B                 db    ? ;
.data:000000018001BE1C                 db    ? ;
.data:000000018001BE1D                 db    ? ;
.data:000000018001BE1E                 db    ? ;
.data:000000018001BE1F                 db    ? ;
.data:000000018001BE20                 db    ? ;
.data:000000018001BE21                 db    ? ;
.data:000000018001BE22                 db    ? ;
.data:000000018001BE23                 db    ? ;
.data:000000018001BE24                 db    ? ;
.data:000000018001BE25                 db    ? ;
.data:000000018001BE26                 db    ? ;
.data:000000018001BE27                 db    ? ;
.data:000000018001BE28                 db    ? ;
.data:000000018001BE29                 db    ? ;
.data:000000018001BE2A                 db    ? ;
.data:000000018001BE2B                 db    ? ;
.data:000000018001BE2C                 db    ? ;
.data:000000018001BE2D                 db    ? ;
.data:000000018001BE2E                 db    ? ;
.data:000000018001BE2F                 db    ? ;
.data:000000018001BE30                 db    ? ;
.data:000000018001BE31                 db    ? ;
.data:000000018001BE32                 db    ? ;
.data:000000018001BE33                 db    ? ;
.data:000000018001BE34                 db    ? ;
.data:000000018001BE35                 db    ? ;
.data:000000018001BE36                 db    ? ;
.data:000000018001BE37                 db    ? ;
.data:000000018001BE38                 db    ? ;
.data:000000018001BE39                 db    ? ;
.data:000000018001BE3A                 db    ? ;
.data:000000018001BE3B                 db    ? ;
.data:000000018001BE3C                 db    ? ;
.data:000000018001BE3D                 db    ? ;
.data:000000018001BE3E                 db    ? ;
.data:000000018001BE3F                 db    ? ;
.data:000000018001BE40                 db    ? ;
.data:000000018001BE41                 db    ? ;
.data:000000018001BE42                 db    ? ;
.data:000000018001BE43                 db    ? ;
.data:000000018001BE44                 db    ? ;
.data:000000018001BE45                 db    ? ;
.data:000000018001BE46                 db    ? ;
.data:000000018001BE47                 db    ? ;
.data:000000018001BE48                 db    ? ;
.data:000000018001BE49                 db    ? ;
.data:000000018001BE4A                 db    ? ;
.data:000000018001BE4B                 db    ? ;
.data:000000018001BE4C                 db    ? ;
.data:000000018001BE4D                 db    ? ;
.data:000000018001BE4E                 db    ? ;
.data:000000018001BE4F                 db    ? ;
.data:000000018001BE50                 db    ? ;
.data:000000018001BE51                 db    ? ;
.data:000000018001BE52                 db    ? ;
.data:000000018001BE53                 db    ? ;
.data:000000018001BE54                 db    ? ;
.data:000000018001BE55                 db    ? ;
.data:000000018001BE56                 db    ? ;
.data:000000018001BE57                 db    ? ;
.data:000000018001BE58                 db    ? ;
.data:000000018001BE59                 db    ? ;
.data:000000018001BE5A                 db    ? ;
.data:000000018001BE5B                 db    ? ;
.data:000000018001BE5C                 db    ? ;
.data:000000018001BE5D                 db    ? ;
.data:000000018001BE5E                 db    ? ;
.data:000000018001BE5F                 db    ? ;
.data:000000018001BE60                 db    ? ;
.data:000000018001BE61                 db    ? ;
.data:000000018001BE62                 db    ? ;
.data:000000018001BE63                 db    ? ;
.data:000000018001BE64                 db    ? ;
.data:000000018001BE65                 db    ? ;
.data:000000018001BE66                 db    ? ;
.data:000000018001BE67                 db    ? ;
.data:000000018001BE68                 db    ? ;
.data:000000018001BE69                 db    ? ;
.data:000000018001BE6A                 db    ? ;
.data:000000018001BE6B                 db    ? ;
.data:000000018001BE6C                 db    ? ;
.data:000000018001BE6D                 db    ? ;
.data:000000018001BE6E                 db    ? ;
.data:000000018001BE6F                 db    ? ;
.data:000000018001BE70                 db    ? ;
.data:000000018001BE71                 db    ? ;
.data:000000018001BE72                 db    ? ;
.data:000000018001BE73                 db    ? ;
.data:000000018001BE74                 db    ? ;
.data:000000018001BE75                 db    ? ;
.data:000000018001BE76                 db    ? ;
.data:000000018001BE77                 db    ? ;
.data:000000018001BE78                 db    ? ;
.data:000000018001BE79                 db    ? ;
.data:000000018001BE7A                 db    ? ;
.data:000000018001BE7B                 db    ? ;
.data:000000018001BE7C                 db    ? ;
.data:000000018001BE7D                 db    ? ;
.data:000000018001BE7E                 db    ? ;
.data:000000018001BE7F                 db    ? ;
.data:000000018001BE80                 db    ? ;
.data:000000018001BE81                 db    ? ;
.data:000000018001BE82                 db    ? ;
.data:000000018001BE83                 db    ? ;
.data:000000018001BE84                 db    ? ;
.data:000000018001BE85                 db    ? ;
.data:000000018001BE86                 db    ? ;
.data:000000018001BE87                 db    ? ;
.data:000000018001BE88                 db    ? ;
.data:000000018001BE89                 db    ? ;
.data:000000018001BE8A                 db    ? ;
.data:000000018001BE8B                 db    ? ;
.data:000000018001BE8C                 db    ? ;
.data:000000018001BE8D                 db    ? ;
.data:000000018001BE8E                 db    ? ;
.data:000000018001BE8F                 db    ? ;
.data:000000018001BE90                 db    ? ;
.data:000000018001BE91                 db    ? ;
.data:000000018001BE92                 db    ? ;
.data:000000018001BE93                 db    ? ;
.data:000000018001BE94                 db    ? ;
.data:000000018001BE95                 db    ? ;
.data:000000018001BE96                 db    ? ;
.data:000000018001BE97                 db    ? ;
.data:000000018001BE98                 db    ? ;
.data:000000018001BE99                 db    ? ;
.data:000000018001BE9A                 db    ? ;
.data:000000018001BE9B                 db    ? ;
.data:000000018001BE9C                 db    ? ;
.data:000000018001BE9D                 db    ? ;
.data:000000018001BE9E                 db    ? ;
.data:000000018001BE9F                 db    ? ;
.data:000000018001BEA0                 db    ? ;
.data:000000018001BEA1                 db    ? ;
.data:000000018001BEA2                 db    ? ;
.data:000000018001BEA3                 db    ? ;
.data:000000018001BEA4                 db    ? ;
.data:000000018001BEA5                 db    ? ;
.data:000000018001BEA6                 db    ? ;
.data:000000018001BEA7                 db    ? ;
.data:000000018001BEA8                 db    ? ;
.data:000000018001BEA9                 db    ? ;
.data:000000018001BEAA                 db    ? ;
.data:000000018001BEAB                 db    ? ;
.data:000000018001BEAC                 db    ? ;
.data:000000018001BEAD                 db    ? ;
.data:000000018001BEAE                 db    ? ;
.data:000000018001BEAF                 db    ? ;
.data:000000018001BEB0                 db    ? ;
.data:000000018001BEB1                 db    ? ;
.data:000000018001BEB2                 db    ? ;
.data:000000018001BEB3                 db    ? ;
.data:000000018001BEB4                 db    ? ;
.data:000000018001BEB5                 db    ? ;
.data:000000018001BEB6                 db    ? ;
.data:000000018001BEB7                 db    ? ;
.data:000000018001BEB8                 db    ? ;
.data:000000018001BEB9                 db    ? ;
.data:000000018001BEBA                 db    ? ;
.data:000000018001BEBB                 db    ? ;
.data:000000018001BEBC                 db    ? ;
.data:000000018001BEBD                 db    ? ;
.data:000000018001BEBE                 db    ? ;
.data:000000018001BEBF                 db    ? ;
.data:000000018001BEC0                 db    ? ;
.data:000000018001BEC1                 db    ? ;
.data:000000018001BEC2                 db    ? ;
.data:000000018001BEC3                 db    ? ;
.data:000000018001BEC4                 db    ? ;
.data:000000018001BEC5                 db    ? ;
.data:000000018001BEC6                 db    ? ;
.data:000000018001BEC7                 db    ? ;
.data:000000018001BEC8                 db    ? ;
.data:000000018001BEC9                 db    ? ;
.data:000000018001BECA                 db    ? ;
.data:000000018001BECB                 db    ? ;
.data:000000018001BECC                 db    ? ;
.data:000000018001BECD                 db    ? ;
.data:000000018001BECE                 db    ? ;
.data:000000018001BECF                 db    ? ;
.data:000000018001BED0                 db    ? ;
.data:000000018001BED1                 db    ? ;
.data:000000018001BED2                 db    ? ;
.data:000000018001BED3                 db    ? ;
.data:000000018001BED4                 db    ? ;
.data:000000018001BED5                 db    ? ;
.data:000000018001BED6                 db    ? ;
.data:000000018001BED7                 db    ? ;
.data:000000018001BED8                 db    ? ;
.data:000000018001BED9                 db    ? ;
.data:000000018001BEDA                 db    ? ;
.data:000000018001BEDB                 db    ? ;
.data:000000018001BEDC                 db    ? ;
.data:000000018001BEDD                 db    ? ;
.data:000000018001BEDE                 db    ? ;
.data:000000018001BEDF                 db    ? ;
.data:000000018001BEE0                 db    ? ;
.data:000000018001BEE1                 db    ? ;
.data:000000018001BEE2                 db    ? ;
.data:000000018001BEE3                 db    ? ;
.data:000000018001BEE4                 db    ? ;
.data:000000018001BEE5                 db    ? ;
.data:000000018001BEE6                 db    ? ;
.data:000000018001BEE7                 db    ? ;
.data:000000018001BEE8                 db    ? ;
.data:000000018001BEE9                 db    ? ;
.data:000000018001BEEA                 db    ? ;
.data:000000018001BEEB                 db    ? ;
.data:000000018001BEEC                 db    ? ;
.data:000000018001BEED                 db    ? ;
.data:000000018001BEEE                 db    ? ;
.data:000000018001BEEF                 db    ? ;
.data:000000018001BEF0                 db    ? ;
.data:000000018001BEF1                 db    ? ;
.data:000000018001BEF2                 db    ? ;
.data:000000018001BEF3                 db    ? ;
.data:000000018001BEF4                 db    ? ;
.data:000000018001BEF5                 db    ? ;
.data:000000018001BEF6                 db    ? ;
.data:000000018001BEF7                 db    ? ;
.data:000000018001BEF8                 db    ? ;
.data:000000018001BEF9                 db    ? ;
.data:000000018001BEFA                 db    ? ;
.data:000000018001BEFB                 db    ? ;
.data:000000018001BEFC                 db    ? ;
.data:000000018001BEFD                 db    ? ;
.data:000000018001BEFE                 db    ? ;
.data:000000018001BEFF                 db    ? ;
.data:000000018001BF00                 db    ? ;
.data:000000018001BF01                 db    ? ;
.data:000000018001BF02                 db    ? ;
.data:000000018001BF03                 db    ? ;
.data:000000018001BF04                 db    ? ;
.data:000000018001BF05                 db    ? ;
.data:000000018001BF06                 db    ? ;
.data:000000018001BF07                 db    ? ;
.data:000000018001BF08                 db    ? ;
.data:000000018001BF09                 db    ? ;
.data:000000018001BF0A                 db    ? ;
.data:000000018001BF0B                 db    ? ;
.data:000000018001BF0C                 db    ? ;
.data:000000018001BF0D                 db    ? ;
.data:000000018001BF0E                 db    ? ;
.data:000000018001BF0F                 db    ? ;
.data:000000018001BF10                 db    ? ;
.data:000000018001BF11                 db    ? ;
.data:000000018001BF12                 db    ? ;
.data:000000018001BF13                 db    ? ;
.data:000000018001BF14                 db    ? ;
.data:000000018001BF15                 db    ? ;
.data:000000018001BF16                 db    ? ;
.data:000000018001BF17                 db    ? ;
.data:000000018001BF18                 db    ? ;
.data:000000018001BF19                 db    ? ;
.data:000000018001BF1A                 db    ? ;
.data:000000018001BF1B                 db    ? ;
.data:000000018001BF1C                 db    ? ;
.data:000000018001BF1D                 db    ? ;
.data:000000018001BF1E                 db    ? ;
.data:000000018001BF1F                 db    ? ;
.data:000000018001BF20                 db    ? ;
.data:000000018001BF21                 db    ? ;
.data:000000018001BF22                 db    ? ;
.data:000000018001BF23                 db    ? ;
.data:000000018001BF24                 db    ? ;
.data:000000018001BF25                 db    ? ;
.data:000000018001BF26                 db    ? ;
.data:000000018001BF27                 db    ? ;
.data:000000018001BF28                 db    ? ;
.data:000000018001BF29                 db    ? ;
.data:000000018001BF2A                 db    ? ;
.data:000000018001BF2B                 db    ? ;
.data:000000018001BF2C                 db    ? ;
.data:000000018001BF2D                 db    ? ;
.data:000000018001BF2E                 db    ? ;
.data:000000018001BF2F                 db    ? ;
.data:000000018001BF30                 db    ? ;
.data:000000018001BF31                 db    ? ;
.data:000000018001BF32                 db    ? ;
.data:000000018001BF33                 db    ? ;
.data:000000018001BF34                 db    ? ;
.data:000000018001BF35                 db    ? ;
.data:000000018001BF36                 db    ? ;
.data:000000018001BF37                 db    ? ;
.data:000000018001BF38                 db    ? ;
.data:000000018001BF39                 db    ? ;
.data:000000018001BF3A                 db    ? ;
.data:000000018001BF3B                 db    ? ;
.data:000000018001BF3C                 db    ? ;
.data:000000018001BF3D                 db    ? ;
.data:000000018001BF3E                 db    ? ;
.data:000000018001BF3F                 db    ? ;
.data:000000018001BF40                 db    ? ;
.data:000000018001BF41                 db    ? ;
.data:000000018001BF42                 db    ? ;
.data:000000018001BF43                 db    ? ;
.data:000000018001BF44                 db    ? ;
.data:000000018001BF45                 db    ? ;
.data:000000018001BF46                 db    ? ;
.data:000000018001BF47                 db    ? ;
.data:000000018001BF48                 db    ? ;
.data:000000018001BF49                 db    ? ;
.data:000000018001BF4A                 db    ? ;
.data:000000018001BF4B                 db    ? ;
.data:000000018001BF4C                 db    ? ;
.data:000000018001BF4D                 db    ? ;
.data:000000018001BF4E                 db    ? ;
.data:000000018001BF4F                 db    ? ;
.data:000000018001BF50                 db    ? ;
.data:000000018001BF51                 db    ? ;
.data:000000018001BF52                 db    ? ;
.data:000000018001BF53                 db    ? ;
.data:000000018001BF54                 db    ? ;
.data:000000018001BF55                 db    ? ;
.data:000000018001BF56                 db    ? ;
.data:000000018001BF57                 db    ? ;
.data:000000018001BF58                 db    ? ;
.data:000000018001BF59                 db    ? ;
.data:000000018001BF5A                 db    ? ;
.data:000000018001BF5B                 db    ? ;
.data:000000018001BF5C                 db    ? ;
.data:000000018001BF5D                 db    ? ;
.data:000000018001BF5E                 db    ? ;
.data:000000018001BF5F                 db    ? ;
.data:000000018001BF60                 db    ? ;
.data:000000018001BF61                 db    ? ;
.data:000000018001BF62                 db    ? ;
.data:000000018001BF63                 db    ? ;
.data:000000018001BF64                 db    ? ;
.data:000000018001BF65                 db    ? ;
.data:000000018001BF66                 db    ? ;
.data:000000018001BF67                 db    ? ;
.data:000000018001BF68                 db    ? ;
.data:000000018001BF69                 db    ? ;
.data:000000018001BF6A                 db    ? ;
.data:000000018001BF6B                 db    ? ;
.data:000000018001BF6C                 db    ? ;
.data:000000018001BF6D                 db    ? ;
.data:000000018001BF6E                 db    ? ;
.data:000000018001BF6F                 db    ? ;
.data:000000018001BF70                 db    ? ;
.data:000000018001BF71                 db    ? ;
.data:000000018001BF72                 db    ? ;
.data:000000018001BF73                 db    ? ;
.data:000000018001BF74                 db    ? ;
.data:000000018001BF75                 db    ? ;
.data:000000018001BF76                 db    ? ;
.data:000000018001BF77                 db    ? ;
.data:000000018001BF78                 db    ? ;
.data:000000018001BF79                 db    ? ;
.data:000000018001BF7A                 db    ? ;
.data:000000018001BF7B                 db    ? ;
.data:000000018001BF7C                 db    ? ;
.data:000000018001BF7D                 db    ? ;
.data:000000018001BF7E                 db    ? ;
.data:000000018001BF7F                 db    ? ;
.data:000000018001BF80                 db    ? ;
.data:000000018001BF81                 db    ? ;
.data:000000018001BF82                 db    ? ;
.data:000000018001BF83                 db    ? ;
.data:000000018001BF84                 db    ? ;
.data:000000018001BF85                 db    ? ;
.data:000000018001BF86                 db    ? ;
.data:000000018001BF87                 db    ? ;
.data:000000018001BF88                 db    ? ;
.data:000000018001BF89                 db    ? ;
.data:000000018001BF8A                 db    ? ;
.data:000000018001BF8B                 db    ? ;
.data:000000018001BF8C                 db    ? ;
.data:000000018001BF8D                 db    ? ;
.data:000000018001BF8E                 db    ? ;
.data:000000018001BF8F                 db    ? ;
.data:000000018001BF90                 db    ? ;
.data:000000018001BF91                 db    ? ;
.data:000000018001BF92                 db    ? ;
.data:000000018001BF93                 db    ? ;
.data:000000018001BF94                 db    ? ;
.data:000000018001BF95                 db    ? ;
.data:000000018001BF96                 db    ? ;
.data:000000018001BF97                 db    ? ;
.data:000000018001BF98                 db    ? ;
.data:000000018001BF99                 db    ? ;
.data:000000018001BF9A                 db    ? ;
.data:000000018001BF9B                 db    ? ;
.data:000000018001BF9C                 db    ? ;
.data:000000018001BF9D                 db    ? ;
.data:000000018001BF9E                 db    ? ;
.data:000000018001BF9F                 db    ? ;
.data:000000018001BFA0                 db    ? ;
.data:000000018001BFA1                 db    ? ;
.data:000000018001BFA2                 db    ? ;
.data:000000018001BFA3                 db    ? ;
.data:000000018001BFA4                 db    ? ;
.data:000000018001BFA5                 db    ? ;
.data:000000018001BFA6                 db    ? ;
.data:000000018001BFA7                 db    ? ;
.data:000000018001BFA8                 db    ? ;
.data:000000018001BFA9                 db    ? ;
.data:000000018001BFAA                 db    ? ;
.data:000000018001BFAB                 db    ? ;
.data:000000018001BFAC                 db    ? ;
.data:000000018001BFAD                 db    ? ;
.data:000000018001BFAE                 db    ? ;
.data:000000018001BFAF                 db    ? ;
.data:000000018001BFB0                 db    ? ;
.data:000000018001BFB1                 db    ? ;
.data:000000018001BFB2                 db    ? ;
.data:000000018001BFB3                 db    ? ;
.data:000000018001BFB4                 db    ? ;
.data:000000018001BFB5                 db    ? ;
.data:000000018001BFB6                 db    ? ;
.data:000000018001BFB7                 db    ? ;
.data:000000018001BFB8                 db    ? ;
.data:000000018001BFB9                 db    ? ;
.data:000000018001BFBA                 db    ? ;
.data:000000018001BFBB                 db    ? ;
.data:000000018001BFBC                 db    ? ;
.data:000000018001BFBD                 db    ? ;
.data:000000018001BFBE                 db    ? ;
.data:000000018001BFBF                 db    ? ;
.data:000000018001BFC0                 db    ? ;
.data:000000018001BFC1                 db    ? ;
.data:000000018001BFC2                 db    ? ;
.data:000000018001BFC3                 db    ? ;
.data:000000018001BFC4                 db    ? ;
.data:000000018001BFC5                 db    ? ;
.data:000000018001BFC6                 db    ? ;
.data:000000018001BFC7                 db    ? ;
.data:000000018001BFC8                 db    ? ;
.data:000000018001BFC9                 db    ? ;
.data:000000018001BFCA                 db    ? ;
.data:000000018001BFCB                 db    ? ;
.data:000000018001BFCC                 db    ? ;
.data:000000018001BFCD                 db    ? ;
.data:000000018001BFCE                 db    ? ;
.data:000000018001BFCF                 db    ? ;
.data:000000018001BFD0                 db    ? ;
.data:000000018001BFD1                 db    ? ;
.data:000000018001BFD2                 db    ? ;
.data:000000018001BFD3                 db    ? ;
.data:000000018001BFD4                 db    ? ;
.data:000000018001BFD5                 db    ? ;
.data:000000018001BFD6                 db    ? ;
.data:000000018001BFD7                 db    ? ;
.data:000000018001BFD8                 db    ? ;
.data:000000018001BFD9                 db    ? ;
.data:000000018001BFDA                 db    ? ;
.data:000000018001BFDB                 db    ? ;
.data:000000018001BFDC                 db    ? ;
.data:000000018001BFDD                 db    ? ;
.data:000000018001BFDE                 db    ? ;
.data:000000018001BFDF                 db    ? ;
.data:000000018001BFE0                 db    ? ;
.data:000000018001BFE1                 db    ? ;
.data:000000018001BFE2                 db    ? ;
.data:000000018001BFE3                 db    ? ;
.data:000000018001BFE4                 db    ? ;
.data:000000018001BFE5                 db    ? ;
.data:000000018001BFE6                 db    ? ;
.data:000000018001BFE7                 db    ? ;
.data:000000018001BFE8                 db    ? ;
.data:000000018001BFE9                 db    ? ;
.data:000000018001BFEA                 db    ? ;
.data:000000018001BFEB                 db    ? ;
.data:000000018001BFEC                 db    ? ;
.data:000000018001BFED                 db    ? ;
.data:000000018001BFEE                 db    ? ;
.data:000000018001BFEF                 db    ? ;
.data:000000018001BFF0                 db    ? ;
.data:000000018001BFF1                 db    ? ;
.data:000000018001BFF2                 db    ? ;
.data:000000018001BFF3                 db    ? ;
.data:000000018001BFF4                 db    ? ;
.data:000000018001BFF5                 db    ? ;
.data:000000018001BFF6                 db    ? ;
.data:000000018001BFF7                 db    ? ;
.data:000000018001BFF8                 db    ? ;
.data:000000018001BFF9                 db    ? ;
.data:000000018001BFFA                 db    ? ;
.data:000000018001BFFB                 db    ? ;
.data:000000018001BFFC                 db    ? ;
.data:000000018001BFFD                 db    ? ;
.data:000000018001BFFE                 db    ? ;
.data:000000018001BFFF                 db    ? ;
.data:000000018001BFFF _data           ends
.data:000000018001BFFF
.pdata:000000018001C000 ; Section 4. (virtual address 0001C000)
.pdata:000000018001C000 ; Virtual size                  : 00001188 (   4488.)
.pdata:000000018001C000 ; Section size in file          : 00001200 (   4608.)
.pdata:000000018001C000 ; Offset to raw data for section: 00017E00
.pdata:000000018001C000 ; Flags 40000040: Data Readable
.pdata:000000018001C000 ; Alignment     : default
.pdata:000000018001C000 ; ===========================================================================
.pdata:000000018001C000
.pdata:000000018001C000 ; Segment type: Pure data
.pdata:000000018001C000 ; Segment permissions: Read
.pdata:000000018001C000 _pdata          segment para public 'DATA' use64
.pdata:000000018001C000                 assume cs:_pdata
.pdata:000000018001C000                 ;org 18001C000h
.pdata:000000018001C000 ExceptionDir    RUNTIME_FUNCTION <rva sub_180001010, rva algn_180001043, \
.pdata:000000018001C000                                   rva stru_180014BA0>
.pdata:000000018001C00C                 RUNTIME_FUNCTION <rva sub_180001070, rva algn_1800010B3, \
.pdata:000000018001C00C                                   rva stru_180014BA8>
.pdata:000000018001C018                 RUNTIME_FUNCTION <rva ?cancel_current_task@Concurrency@@YAXXZ, \ ; Concurrency::cancel_current_task(void)
.pdata:000000018001C018                                   rva sub_180001130, rva stru_180014BB4>
.pdata:000000018001C024                 RUNTIME_FUNCTION <rva sub_180001130, rva algn_18000116D, \
.pdata:000000018001C024                                   rva stru_180014BA0>
.pdata:000000018001C030                 RUNTIME_FUNCTION <rva sub_180001170, rva algn_1800011AD, \
.pdata:000000018001C030                                   rva stru_180014BA0>
.pdata:000000018001C03C                 RUNTIME_FUNCTION <rva fsuipcw_init, rva loc_1800011DA, \
.pdata:000000018001C03C                                   rva stru_180014BBC>
.pdata:000000018001C048                 RUNTIME_FUNCTION <rva loc_1800011DA, rva loc_1800012E2, \
.pdata:000000018001C048                                   rva stru_180014BC4>
.pdata:000000018001C054                 RUNTIME_FUNCTION <rva loc_1800012E2, rva algn_1800012F6, \
.pdata:000000018001C054                                   rva stru_180014BD8>
.pdata:000000018001C060                 RUNTIME_FUNCTION <rva fsuipcw_start, rva loc_18000132B, \
.pdata:000000018001C060                                   rva stru_180014BE8>
.pdata:000000018001C06C                 RUNTIME_FUNCTION <rva loc_18000132B, rva loc_1800014AC, \
.pdata:000000018001C06C                                   rva stru_180014BFC>
.pdata:000000018001C078                 RUNTIME_FUNCTION <rva loc_1800014AC, rva algn_1800014C5, \
.pdata:000000018001C078                                   rva stru_180014C10>
.pdata:000000018001C084                 RUNTIME_FUNCTION <rva fsuipcw_createAircraftLvarFile, \
.pdata:000000018001C084                                   rva algn_180001542, rva stru_180014C20>
.pdata:000000018001C090                 RUNTIME_FUNCTION <rva fsuipcw_reload, rva algn_1800015A2, \
.pdata:000000018001C090                                   rva stru_180014C20>
.pdata:000000018001C09C                 RUNTIME_FUNCTION <rva fsuipcw_getLvarFromId, rva loc_18000163D, \
.pdata:000000018001C09C                                   rva stru_180014C28>
.pdata:000000018001C0A8                 RUNTIME_FUNCTION <rva loc_18000163D, rva loc_18000169C, \
.pdata:000000018001C0A8                                   rva stru_180014C34>
.pdata:000000018001C0B4                 RUNTIME_FUNCTION <rva loc_18000169C, rva loc_1800016C4, \
.pdata:000000018001C0B4                                   rva stru_180014C4C>
.pdata:000000018001C0C0                 RUNTIME_FUNCTION <rva loc_1800016C4, rva algn_1800016D2, \
.pdata:000000018001C0C0                                   rva stru_180014C64>
.pdata:000000018001C0CC                 RUNTIME_FUNCTION <rva fsuipcw_getLvarFromName, rva loc_1800016FD, \
.pdata:000000018001C0CC                                   rva stru_180014C74>
.pdata:000000018001C0D8                 RUNTIME_FUNCTION <rva loc_1800016FD, rva loc_1800017F3, \
.pdata:000000018001C0D8                                   rva stru_180014C80>
.pdata:000000018001C0E4                 RUNTIME_FUNCTION <rva loc_1800017F3, rva loc_180001801, \
.pdata:000000018001C0E4                                   rva stru_180014CA0>
.pdata:000000018001C0F0                 RUNTIME_FUNCTION <rva loc_180001801, rva algn_180001807, \
.pdata:000000018001C0F0                                   rva stru_180014CB0>
.pdata:000000018001C0FC                 RUNTIME_FUNCTION <rva fsuipcw_setHvar, rva algn_18000193C, \
.pdata:000000018001C0FC                                   rva stru_180014CCC>
.pdata:000000018001C108                 RUNTIME_FUNCTION <rva fsuipcw_logLvars, rva loc_18000196D, \
.pdata:000000018001C108                                   rva stru_180014CE0>
.pdata:000000018001C114                 RUNTIME_FUNCTION <rva loc_18000196D, rva loc_180001AE7, \
.pdata:000000018001C114                                   rva stru_180014CF4>
.pdata:000000018001C120                 RUNTIME_FUNCTION <rva loc_180001AE7, rva loc_180001B00, \
.pdata:000000018001C120                                   rva stru_180014D18>
.pdata:000000018001C12C                 RUNTIME_FUNCTION <rva loc_180001B00, rva algn_180001B0C, \
.pdata:000000018001C12C                                   rva stru_180014D28>
.pdata:000000018001C138                 RUNTIME_FUNCTION <rva fsuipcw_logHvars, rva loc_180001B3D, \
.pdata:000000018001C138                                   rva stru_180014D4C>
.pdata:000000018001C144                 RUNTIME_FUNCTION <rva loc_180001B3D, rva loc_180001C25, \
.pdata:000000018001C144                                   rva stru_180014D60>
.pdata:000000018001C150                 RUNTIME_FUNCTION <rva loc_180001C25, rva loc_180001C3E, \
.pdata:000000018001C150                                   rva stru_180014D80>
.pdata:000000018001C15C                 RUNTIME_FUNCTION <rva loc_180001C3E, rva algn_180001C44, \
.pdata:000000018001C15C                                   rva stru_180014D90>
.pdata:000000018001C168                 RUNTIME_FUNCTION <rva fsuipcw_getLvarValues, rva loc_180001C7C, \
.pdata:000000018001C168                                   rva stru_180014DB0>
.pdata:000000018001C174                 RUNTIME_FUNCTION <rva loc_180001C7C, rva loc_180001EB5, \
.pdata:000000018001C174                                   rva stru_180014DC4>
.pdata:000000018001C180                 RUNTIME_FUNCTION <rva loc_180001EB5, rva loc_180001ECC, \
.pdata:000000018001C180                                   rva stru_180014DEC>
.pdata:000000018001C18C                 RUNTIME_FUNCTION <rva loc_180001ECC, rva algn_180001ED8, \
.pdata:000000018001C18C                                   rva stru_180014DFC>
.pdata:000000018001C198                 RUNTIME_FUNCTION <rva fsuipcw_getLvarList, rva loc_180001F0E, \
.pdata:000000018001C198                                   rva stru_180014E24>
.pdata:000000018001C1A4                 RUNTIME_FUNCTION <rva loc_180001F0E, rva loc_1800020BF, \
.pdata:000000018001C1A4                                   rva stru_180014E38>
.pdata:000000018001C1B0                 RUNTIME_FUNCTION <rva loc_1800020BF, rva loc_1800020D8, \
.pdata:000000018001C1B0                                   rva stru_180014E54>
.pdata:000000018001C1BC                 RUNTIME_FUNCTION <rva loc_1800020D8, rva algn_1800020E5, \
.pdata:000000018001C1BC                                   rva stru_180014E64>
.pdata:000000018001C1C8                 RUNTIME_FUNCTION <rva sub_1800020F0, rva algn_180002164, \
.pdata:000000018001C1C8                                   rva stru_180014BA0>
.pdata:000000018001C1D4                 RUNTIME_FUNCTION <rva fsuipcw_getHvarList, rva loc_18000219E, \
.pdata:000000018001C1D4                                   rva stru_180014E24>
.pdata:000000018001C1E0                 RUNTIME_FUNCTION <rva loc_18000219E, rva loc_18000234F, \
.pdata:000000018001C1E0                                   rva stru_180014E80>
.pdata:000000018001C1EC                 RUNTIME_FUNCTION <rva loc_18000234F, rva loc_180002368, \
.pdata:000000018001C1EC                                   rva stru_180014E9C>
.pdata:000000018001C1F8                 RUNTIME_FUNCTION <rva loc_180002368, rva algn_180002375, \
.pdata:000000018001C1F8                                   rva stru_180014EAC>
.pdata:000000018001C204                 RUNTIME_FUNCTION <rva fsuipcw_getLvarNameFromId, rva loc_180002408, \
.pdata:000000018001C204                                   rva stru_180014EC8>
.pdata:000000018001C210                 RUNTIME_FUNCTION <rva loc_180002408, rva loc_18000247D, \
.pdata:000000018001C210                                   rva stru_180014ED8>
.pdata:000000018001C21C                 RUNTIME_FUNCTION <rva loc_18000247D, rva algn_18000248D, \
.pdata:000000018001C21C                                   rva stru_180014EEC>
.pdata:000000018001C228                 RUNTIME_FUNCTION <rva fsuipcw_createLvar, rva algn_18000251A, \
.pdata:000000018001C228                                   rva stru_180014EFC>
.pdata:000000018001C234                 RUNTIME_FUNCTION <rva fsuipcw_flagLvarForUpdateCallbackByName, \
.pdata:000000018001C234                                   rva algn_180002655, rva stru_180014F10>
.pdata:000000018001C240                 RUNTIME_FUNCTION <rva sub_180002660, rva algn_1800026BF, \
.pdata:000000018001C240                                   rva stru_180014BA0>
.pdata:000000018001C24C                 RUNTIME_FUNCTION <rva sub_1800026C0, rva loc_1800026F6, \
.pdata:000000018001C24C                                   rva stru_180014F28>
.pdata:000000018001C258                 RUNTIME_FUNCTION <rva loc_1800026F6, rva loc_1800027C1, \
.pdata:000000018001C258                                   rva stru_180014F34>
.pdata:000000018001C264                 RUNTIME_FUNCTION <rva loc_1800027C1, rva loc_1800027CA, \
.pdata:000000018001C264                                   rva stru_180014F48>
.pdata:000000018001C270                 RUNTIME_FUNCTION <rva loc_1800027CA, rva loc_1800027D1, \
.pdata:000000018001C270                                   rva stru_180014F58>
.pdata:000000018001C27C                 RUNTIME_FUNCTION <rva loc_1800027D1, rva loc_1800027F9, \
.pdata:000000018001C27C                                   rva stru_180014F48>
.pdata:000000018001C288                 RUNTIME_FUNCTION <rva loc_1800027F9, rva algn_1800027FF, \
.pdata:000000018001C288                                   rva stru_180014F58>
.pdata:000000018001C294                 RUNTIME_FUNCTION <rva sub_180002800, rva loc_18000281B, \
.pdata:000000018001C294                                   rva stru_180014F6C>
.pdata:000000018001C2A0                 RUNTIME_FUNCTION <rva loc_18000281B, rva loc_180002884, \
.pdata:000000018001C2A0                                   rva stru_180014F78>
.pdata:000000018001C2AC                 RUNTIME_FUNCTION <rva loc_180002884, rva loc_18000288F, \
.pdata:000000018001C2AC                                   rva stru_180014F8C>
.pdata:000000018001C2B8                 RUNTIME_FUNCTION <rva loc_18000288F, rva algn_180002896, \
.pdata:000000018001C2B8                                   rva stru_180014F9C>
.pdata:000000018001C2C4                 RUNTIME_FUNCTION <rva sub_1800028A0, rva loc_1800028BC, \
.pdata:000000018001C2C4                                   rva stru_180014FB0>
.pdata:000000018001C2D0                 RUNTIME_FUNCTION <rva loc_1800028BC, rva loc_180002949, \
.pdata:000000018001C2D0                                   rva stru_180014FBC>
.pdata:000000018001C2DC                 RUNTIME_FUNCTION <rva loc_180002949, rva loc_180002951, \
.pdata:000000018001C2DC                                   rva stru_180014FD4>
.pdata:000000018001C2E8                 RUNTIME_FUNCTION <rva loc_180002951, rva algn_180002958, \
.pdata:000000018001C2E8                                   rva stru_180014FE4>
.pdata:000000018001C2F4                 RUNTIME_FUNCTION <rva sub_180002980, rva algn_1800029DE, \
.pdata:000000018001C2F4                                   rva stru_180014FFC>
.pdata:000000018001C300                 RUNTIME_FUNCTION <rva sub_1800029E0, rva algn_180002A38, \
.pdata:000000018001C300                                   rva stru_180015008>
.pdata:000000018001C30C                 RUNTIME_FUNCTION <rva sub_180002A40, rva algn_180002A96, \
.pdata:000000018001C30C                                   rva stru_180014FFC>
.pdata:000000018001C318                 RUNTIME_FUNCTION <rva sub_180002AA0, rva algn_180002AB2, \
.pdata:000000018001C318                                   rva stru_180015018>
.pdata:000000018001C324                 RUNTIME_FUNCTION <rva sub_180002AC0, rva algn_180002AD2, \
.pdata:000000018001C324                                   rva stru_180015018>
.pdata:000000018001C330                 RUNTIME_FUNCTION <rva sub_180002AE0, rva algn_180002E15, \
.pdata:000000018001C330                                   rva stru_180014BA8>
.pdata:000000018001C33C                 RUNTIME_FUNCTION <rva sub_180002E20, rva algn_18000318D, \
.pdata:000000018001C33C                                   rva stru_180015020>
.pdata:000000018001C348                 RUNTIME_FUNCTION <rva Callback, rva algn_1800031F6, \
.pdata:000000018001C348                                   rva stru_180015064>
.pdata:000000018001C354                 RUNTIME_FUNCTION <rva sub_180003200, rva algn_180003246, \
.pdata:000000018001C354                                   rva stru_180014C20>
.pdata:000000018001C360                 RUNTIME_FUNCTION <rva sub_180003260, rva algn_1800034AF, \
.pdata:000000018001C360                                   rva stru_18001506C>
.pdata:000000018001C36C                 RUNTIME_FUNCTION <rva sub_1800034B0, rva algn_180004D0B, \
.pdata:000000018001C36C                                   rva stru_18001508C>
.pdata:000000018001C378                 RUNTIME_FUNCTION <rva sub_180004D10, rva algn_180004ECA, \
.pdata:000000018001C378                                   rva stru_180015128>
.pdata:000000018001C384                 RUNTIME_FUNCTION <rva sub_180004ED0, rva algn_180004FF8, \
.pdata:000000018001C384                                   rva stru_180015144>
.pdata:000000018001C390                 RUNTIME_FUNCTION <rva sub_180005000, rva algn_1800050DE, \
.pdata:000000018001C390                                   rva stru_180015158>
.pdata:000000018001C39C                 RUNTIME_FUNCTION <rva sub_1800050E0, rva algn_1800051BB, \
.pdata:000000018001C39C                                   rva stru_180015158>
.pdata:000000018001C3A8                 RUNTIME_FUNCTION <rva sub_1800051C0, rva algn_18000538B, \
.pdata:000000018001C3A8                                   rva stru_180015170>
.pdata:000000018001C3B4                 RUNTIME_FUNCTION <rva sub_180005390, rva algn_1800054F2, \
.pdata:000000018001C3B4                                   rva stru_18001518C>
.pdata:000000018001C3C0                 RUNTIME_FUNCTION <rva sub_180005500, rva algn_18000558B, \
.pdata:000000018001C3C0                                   rva stru_180015018>
.pdata:000000018001C3CC                 RUNTIME_FUNCTION <rva sub_180005590, rva algn_1800055EC, \
.pdata:000000018001C3CC                                   rva stru_180014BA0>
.pdata:000000018001C3D8                 RUNTIME_FUNCTION <rva sub_1800055F0, rva algn_18000564C, \
.pdata:000000018001C3D8                                   rva stru_180014BA0>
.pdata:000000018001C3E4                 RUNTIME_FUNCTION <rva sub_180005650, rva algn_18000576F, \
.pdata:000000018001C3E4                                   rva stru_1800151C4>
.pdata:000000018001C3F0                 RUNTIME_FUNCTION <rva sub_180005770, rva algn_180005889, \
.pdata:000000018001C3F0                                   rva stru_1800151D8>
.pdata:000000018001C3FC                 RUNTIME_FUNCTION <rva sub_180005890, rva algn_1800058A2, \
.pdata:000000018001C3FC                                   rva stru_180015018>
.pdata:000000018001C408                 RUNTIME_FUNCTION <rva sub_1800058B0, rva algn_1800058C2, \
.pdata:000000018001C408                                   rva stru_180015018>
.pdata:000000018001C414                 RUNTIME_FUNCTION <rva sub_1800058D0, rva algn_180005A3A, \
.pdata:000000018001C414                                   rva stru_1800151E8>
.pdata:000000018001C420                 RUNTIME_FUNCTION <rva sub_180005A40, rva loc_180005A86, \
.pdata:000000018001C420                                   rva stru_1800151FC>
.pdata:000000018001C42C                 RUNTIME_FUNCTION <rva loc_180005A86, rva loc_180005B01, \
.pdata:000000018001C42C                                   rva stru_18001520C>
.pdata:000000018001C438                 RUNTIME_FUNCTION <rva loc_180005B01, rva algn_180005C59, \
.pdata:000000018001C438                                   rva stru_180015220>
.pdata:000000018001C444                 RUNTIME_FUNCTION <rva sub_180005C60, rva algn_180005C72, \
.pdata:000000018001C444                                   rva stru_180015018>
.pdata:000000018001C450                 RUNTIME_FUNCTION <rva sub_180005C80, rva loc_180005C8F, \
.pdata:000000018001C450                                   rva stru_180015230>
.pdata:000000018001C45C                 RUNTIME_FUNCTION <rva loc_180005C8F, rva locret_180005CFD, \
.pdata:000000018001C45C                                   rva stru_18001523C>
.pdata:000000018001C468                 RUNTIME_FUNCTION <rva locret_180005CFD, rva loc_180005CFE, \
.pdata:000000018001C468                                   rva stru_180015250>
.pdata:000000018001C474                 RUNTIME_FUNCTION <rva loc_180005CFE, rva algn_180005D05, \
.pdata:000000018001C474                                   rva stru_180015260>
.pdata:000000018001C480                 RUNTIME_FUNCTION <rva sub_180005D10, rva algn_180005FE9, \
.pdata:000000018001C480                                   rva stru_180015274>
.pdata:000000018001C48C                 RUNTIME_FUNCTION <rva sub_180005FF0, rva loc_180006036, \
.pdata:000000018001C48C                                   rva stru_1800152B4>
.pdata:000000018001C498                 RUNTIME_FUNCTION <rva loc_180006036, rva loc_18000616D, \
.pdata:000000018001C498                                   rva stru_1800152C4>
.pdata:000000018001C4A4                 RUNTIME_FUNCTION <rva loc_18000616D, rva loc_180006174, \
.pdata:000000018001C4A4                                   rva stru_1800152E0>
.pdata:000000018001C4B0                 RUNTIME_FUNCTION <rva loc_180006174, rva loc_18000617A, \
.pdata:000000018001C4B0                                   rva stru_1800152FC>
.pdata:000000018001C4BC                 RUNTIME_FUNCTION <rva loc_18000617A, rva sub_180006180, \
.pdata:000000018001C4BC                                   rva stru_1800152E0>
.pdata:000000018001C4C8                 RUNTIME_FUNCTION <rva sub_180006180, rva loc_1800061C6, \
.pdata:000000018001C4C8                                   rva stru_1800152B4>
.pdata:000000018001C4D4                 RUNTIME_FUNCTION <rva loc_1800061C6, rva loc_1800062FD, \
.pdata:000000018001C4D4                                   rva stru_18001530C>
.pdata:000000018001C4E0                 RUNTIME_FUNCTION <rva loc_1800062FD, rva loc_180006304, \
.pdata:000000018001C4E0                                   rva stru_180015328>
.pdata:000000018001C4EC                 RUNTIME_FUNCTION <rva loc_180006304, rva loc_18000630A, \
.pdata:000000018001C4EC                                   rva stru_180015344>
.pdata:000000018001C4F8                 RUNTIME_FUNCTION <rva loc_18000630A, rva sub_180006310, \
.pdata:000000018001C4F8                                   rva stru_180015328>
.pdata:000000018001C504                 RUNTIME_FUNCTION <rva sub_180006310, rva loc_180006352, \
.pdata:000000018001C504                                   rva stru_180015354>
.pdata:000000018001C510                 RUNTIME_FUNCTION <rva loc_180006352, rva loc_18000658D, \
.pdata:000000018001C510                                   rva stru_180015364>
.pdata:000000018001C51C                 RUNTIME_FUNCTION <rva loc_18000658D, rva loc_180006594, \
.pdata:000000018001C51C                                   rva stru_180015384>
.pdata:000000018001C528                 RUNTIME_FUNCTION <rva loc_180006594, rva loc_18000659A, \
.pdata:000000018001C528                                   rva stru_1800153A4>
.pdata:000000018001C534                 RUNTIME_FUNCTION <rva loc_18000659A, rva sub_1800065A0, \
.pdata:000000018001C534                                   rva stru_180015384>
.pdata:000000018001C540                 RUNTIME_FUNCTION <rva sub_1800065A0, rva loc_1800065C5, \
.pdata:000000018001C540                                   rva stru_1800153B4>
.pdata:000000018001C54C                 RUNTIME_FUNCTION <rva loc_1800065C5, rva loc_180006715, \
.pdata:000000018001C54C                                   rva stru_1800153C0>
.pdata:000000018001C558                 RUNTIME_FUNCTION <rva loc_180006715, rva loc_18000671C, \
.pdata:000000018001C558                                   rva stru_1800153DC>
.pdata:000000018001C564                 RUNTIME_FUNCTION <rva loc_18000671C, rva loc_180006722, \
.pdata:000000018001C564                                   rva stru_1800153F8>
.pdata:000000018001C570                 RUNTIME_FUNCTION <rva loc_180006722, rva algn_180006728, \
.pdata:000000018001C570                                   rva stru_1800153DC>
.pdata:000000018001C57C                 RUNTIME_FUNCTION <rva sub_180006730, rva algn_1800067B6, \
.pdata:000000018001C57C                                   rva stru_180015408>
.pdata:000000018001C588                 RUNTIME_FUNCTION <rva sub_1800067C0, rva algn_1800067D2, \
.pdata:000000018001C588                                   rva stru_180015018>
.pdata:000000018001C594                 RUNTIME_FUNCTION <rva sub_180006800, rva loc_180006839, \
.pdata:000000018001C594                                   rva stru_180015414>
.pdata:000000018001C5A0                 RUNTIME_FUNCTION <rva loc_180006839, rva loc_180006882, \
.pdata:000000018001C5A0                                   rva stru_180015420>
.pdata:000000018001C5AC                 RUNTIME_FUNCTION <rva loc_180006882, rva loc_180006976, \
.pdata:000000018001C5AC                                   rva stru_180015438>
.pdata:000000018001C5B8                 RUNTIME_FUNCTION <rva loc_180006976, rva loc_180006987, \
.pdata:000000018001C5B8                                   rva stru_18001544C>
.pdata:000000018001C5C4                 RUNTIME_FUNCTION <rva loc_180006987, rva algn_1800069AD, \
.pdata:000000018001C5C4                                   rva stru_18001545C>
.pdata:000000018001C5D0                 RUNTIME_FUNCTION <rva sub_1800069B0, rva algn_180006B93, \
.pdata:000000018001C5D0                                   rva stru_180015478>
.pdata:000000018001C5DC                 RUNTIME_FUNCTION <rva sub_180006E20, rva algn_180006EAC, \
.pdata:000000018001C5DC                                   rva stru_1800154B0>
.pdata:000000018001C5E8                 RUNTIME_FUNCTION <rva ?cancel_current_task@Concurrency@@YAXXZ_0, \ ; Concurrency::cancel_current_task(void)
.pdata:000000018001C5E8                                   rva sub_180006F00, rva stru_180014BB4>
.pdata:000000018001C5F4                 RUNTIME_FUNCTION <rva sub_180006F00, rva algn_180006F3D, \
.pdata:000000018001C5F4                                   rva stru_180014BA0>
.pdata:000000018001C600                 RUNTIME_FUNCTION <rva sub_180006F40, rva algn_180006F6F, \
.pdata:000000018001C600                                   rva stru_180015018>
.pdata:000000018001C60C                 RUNTIME_FUNCTION <rva sub_180006F70, rva algn_18000702E, \
.pdata:000000018001C60C                                   rva stru_1800154BC>
.pdata:000000018001C618                 RUNTIME_FUNCTION <rva sub_180007030, rva algn_180007423, \
.pdata:000000018001C618                                   rva stru_1800154E4>
.pdata:000000018001C624                 RUNTIME_FUNCTION <rva sub_180007430, rva loc_180007449, \
.pdata:000000018001C624                                   rva stru_180015018>
.pdata:000000018001C630                 RUNTIME_FUNCTION <rva loc_180007449, rva loc_1800074E4, \
.pdata:000000018001C630                                   rva stru_180015544>
.pdata:000000018001C63C                 RUNTIME_FUNCTION <rva loc_1800074E4, rva algn_1800074E9, \
.pdata:000000018001C63C                                   rva stru_180015558>
.pdata:000000018001C648                 RUNTIME_FUNCTION <rva sub_1800074F0, rva algn_1800075F4, \
.pdata:000000018001C648                                   rva stru_180015568>
.pdata:000000018001C654                 RUNTIME_FUNCTION <rva sub_180007600, rva algn_1800078C4, \
.pdata:000000018001C654                                   rva stru_180015590>
.pdata:000000018001C660                 RUNTIME_FUNCTION <rva sub_1800078D0, rva algn_18000792B, \
.pdata:000000018001C660                                   rva stru_180014BA0>
.pdata:000000018001C66C                 RUNTIME_FUNCTION <rva sub_180007930, rva loc_18000795E, \
.pdata:000000018001C66C                                   rva stru_1800155E8>
.pdata:000000018001C678                 RUNTIME_FUNCTION <rva loc_18000795E, rva loc_18000797F, \
.pdata:000000018001C678                                   rva stru_1800155F8>
.pdata:000000018001C684                 RUNTIME_FUNCTION <rva loc_18000797F, rva loc_1800079B8, \
.pdata:000000018001C684                                   rva stru_18001560C>
.pdata:000000018001C690                 RUNTIME_FUNCTION <rva loc_1800079B8, rva loc_1800079E6, \
.pdata:000000018001C690                                   rva stru_180015620>
.pdata:000000018001C69C                 RUNTIME_FUNCTION <rva loc_1800079E6, rva loc_180007A11, \
.pdata:000000018001C69C                                   rva stru_180015634>
.pdata:000000018001C6A8                 RUNTIME_FUNCTION <rva loc_180007A11, rva loc_180007A3A, \
.pdata:000000018001C6A8                                   rva stru_180015644>
.pdata:000000018001C6B4                 RUNTIME_FUNCTION <rva loc_180007A3A, rva algn_180007B2C, \
.pdata:000000018001C6B4                                   rva stru_180015654>
.pdata:000000018001C6C0                 RUNTIME_FUNCTION <rva sub_180007B30, rva loc_180007B6D, \
.pdata:000000018001C6C0                                   rva stru_180015664>
.pdata:000000018001C6CC                 RUNTIME_FUNCTION <rva loc_180007B6D, rva loc_180007BB8, \
.pdata:000000018001C6CC                                   rva stru_180015674>
.pdata:000000018001C6D8                 RUNTIME_FUNCTION <rva loc_180007BB8, rva loc_180007BE6, \
.pdata:000000018001C6D8                                   rva stru_180015688>
.pdata:000000018001C6E4                 RUNTIME_FUNCTION <rva loc_180007BE6, rva loc_180007C11, \
.pdata:000000018001C6E4                                   rva stru_18001569C>
.pdata:000000018001C6F0                 RUNTIME_FUNCTION <rva loc_180007C11, rva algn_180007D3B, \
.pdata:000000018001C6F0                                   rva stru_1800156AC>
.pdata:000000018001C6FC                 RUNTIME_FUNCTION <rva sub_180007D40, rva loc_180007D7D, \
.pdata:000000018001C6FC                                   rva stru_180015664>
.pdata:000000018001C708                 RUNTIME_FUNCTION <rva loc_180007D7D, rva loc_180007DC8, \
.pdata:000000018001C708                                   rva stru_1800156BC>
.pdata:000000018001C714                 RUNTIME_FUNCTION <rva loc_180007DC8, rva loc_180007DF6, \
.pdata:000000018001C714                                   rva stru_1800156D0>
.pdata:000000018001C720                 RUNTIME_FUNCTION <rva loc_180007DF6, rva loc_180007E21, \
.pdata:000000018001C720                                   rva stru_1800156E4>
.pdata:000000018001C72C                 RUNTIME_FUNCTION <rva loc_180007E21, rva algn_180007F4B, \
.pdata:000000018001C72C                                   rva stru_1800156F4>
.pdata:000000018001C738                 RUNTIME_FUNCTION <rva sub_180007F50, rva loc_180007F8D, \
.pdata:000000018001C738                                   rva stru_180015664>
.pdata:000000018001C744                 RUNTIME_FUNCTION <rva loc_180007F8D, rva loc_180007FD8, \
.pdata:000000018001C744                                   rva stru_180015704>
.pdata:000000018001C750                 RUNTIME_FUNCTION <rva loc_180007FD8, rva loc_180008006, \
.pdata:000000018001C750                                   rva stru_180015718>
.pdata:000000018001C75C                 RUNTIME_FUNCTION <rva loc_180008006, rva loc_180008031, \
.pdata:000000018001C75C                                   rva stru_18001572C>
.pdata:000000018001C768                 RUNTIME_FUNCTION <rva loc_180008031, rva algn_18000815B, \
.pdata:000000018001C768                                   rva stru_18001573C>
.pdata:000000018001C774                 RUNTIME_FUNCTION <rva sub_180008160, rva algn_18000825A, \
.pdata:000000018001C774                                   rva stru_18001574C>
.pdata:000000018001C780                 RUNTIME_FUNCTION <rva sub_180008260, rva algn_1800083C9, \
.pdata:000000018001C780                                   rva stru_180015760>
.pdata:000000018001C78C                 RUNTIME_FUNCTION <rva sub_1800083D0, rva algn_18000844A, \
.pdata:000000018001C78C                                   rva stru_180015778>
.pdata:000000018001C798                 RUNTIME_FUNCTION <rva sub_1800084B0, rva algn_180008694, \
.pdata:000000018001C798                                   rva stru_180015780>
.pdata:000000018001C7A4                 RUNTIME_FUNCTION <rva sub_1800086A0, rva algn_180008757, \
.pdata:000000018001C7A4                                   rva stru_180014BA0>
.pdata:000000018001C7B0                 RUNTIME_FUNCTION <rva sub_180008760, rva sub_1800087B0, \
.pdata:000000018001C7B0                                   rva stru_180014BA8>
.pdata:000000018001C7BC                 RUNTIME_FUNCTION <rva sub_1800087B0, rva algn_1800087F8, \
.pdata:000000018001C7BC                                   rva stru_180014BA0>
.pdata:000000018001C7C8                 RUNTIME_FUNCTION <rva sub_180008800, rva loc_18000884D, \
.pdata:000000018001C7C8                                   rva stru_180015798>
.pdata:000000018001C7D4                 RUNTIME_FUNCTION <rva loc_18000884D, rva loc_1800088DD, \
.pdata:000000018001C7D4                                   rva stru_1800157AC>
.pdata:000000018001C7E0                 RUNTIME_FUNCTION <rva loc_1800088DD, rva algn_1800088F3, \
.pdata:000000018001C7E0                                   rva stru_1800157C0>
.pdata:000000018001C7EC                 RUNTIME_FUNCTION <rva sub_180008900, rva algn_1800089D3, \
.pdata:000000018001C7EC                                   rva stru_1800157D0>
.pdata:000000018001C7F8                 RUNTIME_FUNCTION <rva sub_1800089E0, rva algn_180008AE6, \
.pdata:000000018001C7F8                                   rva stru_1800157E4>
.pdata:000000018001C804                 RUNTIME_FUNCTION <rva sub_180008AF0, rva algn_180008BB7, \
.pdata:000000018001C804                                   rva stru_1800157FC>
.pdata:000000018001C810                 RUNTIME_FUNCTION <rva sub_180008BC0, rva loc_180008C1D, \
.pdata:000000018001C810                                   rva stru_180015814>
.pdata:000000018001C81C                 RUNTIME_FUNCTION <rva loc_180008C1D, rva loc_180008C52, \
.pdata:000000018001C81C                                   rva stru_180015824>
.pdata:000000018001C828                 RUNTIME_FUNCTION <rva loc_180008C52, rva algn_180008D02, \
.pdata:000000018001C828                                   rva stru_180015838>
.pdata:000000018001C834                 RUNTIME_FUNCTION <rva sub_180008D10, rva algn_180008FBF, \
.pdata:000000018001C834                                   rva stru_180015848>
.pdata:000000018001C840                 RUNTIME_FUNCTION <rva sub_180008FC0, rva loc_180008FF3, \
.pdata:000000018001C840                                   rva stru_180014BA0>
.pdata:000000018001C84C                 RUNTIME_FUNCTION <rva loc_180008FF3, rva loc_18000900D, \
.pdata:000000018001C84C                                   rva stru_180015880>
.pdata:000000018001C858                 RUNTIME_FUNCTION <rva loc_18000900D, rva algn_180009025, \
.pdata:000000018001C858                                   rva stru_180015894>
.pdata:000000018001C864                 RUNTIME_FUNCTION <rva sub_180009030, rva sub_180009110, \
.pdata:000000018001C864                                   rva stru_1800154B0>
.pdata:000000018001C870                 RUNTIME_FUNCTION <rva sub_180009110, rva loc_180009170, \
.pdata:000000018001C870                                   rva stru_1800158A8>
.pdata:000000018001C87C                 RUNTIME_FUNCTION <rva loc_180009170, rva loc_18000929A, \
.pdata:000000018001C87C                                   rva stru_1800158BC>
.pdata:000000018001C888                 RUNTIME_FUNCTION <rva loc_18000929A, rva algn_1800092B8, \
.pdata:000000018001C888                                   rva stru_1800158D0>
.pdata:000000018001C894                 RUNTIME_FUNCTION <rva sub_180009300, rva sub_180009480, \
.pdata:000000018001C894                                   rva stru_1800158E0>
.pdata:000000018001C8A0                 RUNTIME_FUNCTION <rva sub_180009480, rva algn_18000954A, \
.pdata:000000018001C8A0                                   rva stru_180015914>
.pdata:000000018001C8AC                 RUNTIME_FUNCTION <rva ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z,\ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char>>::`scalar deleting destructor'(uint)
.pdata:000000018001C8AC                                   rva algn_180009584, rva stru_180014BA8>
.pdata:000000018001C8B8                 RUNTIME_FUNCTION <rva sub_180009590, rva algn_180009622, \
.pdata:000000018001C8B8                                   rva stru_18001594C>
.pdata:000000018001C8C4                 RUNTIME_FUNCTION <rva sub_180009630, rva algn_1800096B9, \
.pdata:000000018001C8C4                                   rva stru_18001595C>
.pdata:000000018001C8D0                 RUNTIME_FUNCTION <rva sub_1800096C0, rva algn_1800096FB, \
.pdata:000000018001C8D0                                   rva stru_180014BA8>
.pdata:000000018001C8DC                 RUNTIME_FUNCTION <rva sub_180009700, rva algn_18000973E, \
.pdata:000000018001C8DC                                   rva stru_18001597C>
.pdata:000000018001C8E8                 RUNTIME_FUNCTION <rva sub_180009740, rva loc_180009775, \
.pdata:000000018001C8E8                                   rva stru_18001599C>
.pdata:000000018001C8F4                 RUNTIME_FUNCTION <rva loc_180009775, rva loc_1800097D4, \
.pdata:000000018001C8F4                                   rva stru_1800159AC>
.pdata:000000018001C900                 RUNTIME_FUNCTION <rva loc_1800097D4, rva loc_180009813, \
.pdata:000000018001C900                                   rva stru_1800159C0>
.pdata:000000018001C90C                 RUNTIME_FUNCTION <rva loc_180009813, rva algn_180009828, \
.pdata:000000018001C90C                                   rva stru_1800159D4>
.pdata:000000018001C918                 RUNTIME_FUNCTION <rva sub_180009830, rva algn_1800098DE, \
.pdata:000000018001C918                                   rva stru_1800159E4>
.pdata:000000018001C924                 RUNTIME_FUNCTION <rva sub_1800098E0, rva algn_180009904, \
.pdata:000000018001C924                                   rva stru_1800159F4>
.pdata:000000018001C930                 RUNTIME_FUNCTION <rva sub_180009910, rva loc_18000999B, \
.pdata:000000018001C930                                   rva stru_180015A0C>
.pdata:000000018001C93C                 RUNTIME_FUNCTION <rva loc_18000999B, rva loc_180009A5A, \
.pdata:000000018001C93C                                   rva stru_180015A1C>
.pdata:000000018001C948                 RUNTIME_FUNCTION <rva loc_180009A5A, rva loc_180009A67, \
.pdata:000000018001C948                                   rva stru_180015A30>
.pdata:000000018001C954                 RUNTIME_FUNCTION <rva loc_180009A67, rva algn_180009A6D, \
.pdata:000000018001C954                                   rva stru_180015A44>
.pdata:000000018001C960                 RUNTIME_FUNCTION <rva sub_180009A70, rva algn_180009A82, \
.pdata:000000018001C960                                   rva stru_180015018>
.pdata:000000018001C96C                 RUNTIME_FUNCTION <rva sub_180009A90, rva algn_180009C35, \
.pdata:000000018001C96C                                   rva stru_180015A54>
.pdata:000000018001C978                 RUNTIME_FUNCTION <rva sub_180009C40, rva algn_180009C79, \
.pdata:000000018001C978                                   rva stru_180014BA0>
.pdata:000000018001C984                 RUNTIME_FUNCTION <rva sub_180009C80, rva algn_180009F14, \
.pdata:000000018001C984                                   rva stru_180015ABC>
.pdata:000000018001C990                 RUNTIME_FUNCTION <rva sub_180009F20, rva algn_18000A0C3, \
.pdata:000000018001C990                                   rva stru_180015B50>
.pdata:000000018001C99C                 RUNTIME_FUNCTION <rva sub_18000A0D0, rva algn_18000A1DD, \
.pdata:000000018001C99C                                   rva stru_180015B98>
.pdata:000000018001C9A8                 RUNTIME_FUNCTION <rva sub_18000A1E0, rva loc_18000A20F, \
.pdata:000000018001C9A8                                   rva stru_180015BD8>
.pdata:000000018001C9B4                 RUNTIME_FUNCTION <rva loc_18000A20F, rva loc_18000A333, \
.pdata:000000018001C9B4                                   rva stru_180015BE8>
.pdata:000000018001C9C0                 RUNTIME_FUNCTION <rva loc_18000A333, rva loc_18000A339, \
.pdata:000000018001C9C0                                   rva stru_180015C04>
.pdata:000000018001C9CC                 RUNTIME_FUNCTION <rva loc_18000A339, rva algn_18000A33F, \
.pdata:000000018001C9CC                                   rva stru_180015C20>
.pdata:000000018001C9D8                 RUNTIME_FUNCTION <rva sub_18000A340, rva loc_18000A36E, \
.pdata:000000018001C9D8                                   rva stru_180015C30>
.pdata:000000018001C9E4                 RUNTIME_FUNCTION <rva loc_18000A36E, rva loc_18000A4C1, \
.pdata:000000018001C9E4                                   rva stru_180015C40>
.pdata:000000018001C9F0                 RUNTIME_FUNCTION <rva loc_18000A4C1, rva loc_18000A4C7, \
.pdata:000000018001C9F0                                   rva stru_180015C60>
.pdata:000000018001C9FC                 RUNTIME_FUNCTION <rva loc_18000A4C7, rva algn_18000A4CD, \
.pdata:000000018001C9FC                                   rva stru_180015C80>
.pdata:000000018001CA08                 RUNTIME_FUNCTION <rva sub_18000A4F0, rva sub_18000A6A4, \
.pdata:000000018001CA08                                   rva stru_180015C90>
.pdata:000000018001CA14                 RUNTIME_FUNCTION <rva sub_18000A6C0, rva algn_18000A6EA, \
.pdata:000000018001CA14                                   rva stru_180014BA0>
.pdata:000000018001CA20                 RUNTIME_FUNCTION <rva sub_18000A6F0, rva algn_18000ADCE, \
.pdata:000000018001CA20                                   rva stru_180015CDC>
.pdata:000000018001CA2C                 RUNTIME_FUNCTION <rva sub_18000ADD0, rva algn_18000B1B9, \
.pdata:000000018001CA2C                                   rva stru_180015D40>
.pdata:000000018001CA38                 RUNTIME_FUNCTION <rva sub_18000B1C0, rva loc_18000B1F1, \
.pdata:000000018001CA38                                   rva stru_180015DA0>
.pdata:000000018001CA44                 RUNTIME_FUNCTION <rva loc_18000B1F1, rva loc_18000B25A, \
.pdata:000000018001CA44                                   rva stru_180015DB0>
.pdata:000000018001CA50                 RUNTIME_FUNCTION <rva loc_18000B25A, rva loc_18000B26B, \
.pdata:000000018001CA50                                   rva stru_180015DC8>
.pdata:000000018001CA5C                 RUNTIME_FUNCTION <rva loc_18000B26B, rva algn_18000B27A, \
.pdata:000000018001CA5C                                   rva stru_180015DD8>
.pdata:000000018001CA68                 RUNTIME_FUNCTION <rva sub_18000B280, rva loc_18000B433, \
.pdata:000000018001CA68                                   rva stru_180015DF0>
.pdata:000000018001CA74                 RUNTIME_FUNCTION <rva loc_18000B433, rva loc_18000B73E, \
.pdata:000000018001CA74                                   rva stru_180015DFC>
.pdata:000000018001CA80                 RUNTIME_FUNCTION <rva loc_18000B73E, rva algn_18000B75D, \
.pdata:000000018001CA80                                   rva stru_180015E10>
.pdata:000000018001CA8C                 RUNTIME_FUNCTION <rva sub_18000B760, rva algn_18000B92D, \
.pdata:000000018001CA8C                                   rva stru_180015E20>
.pdata:000000018001CA98                 RUNTIME_FUNCTION <rva sub_18000B930, rva algn_18000B9B6, \
.pdata:000000018001CA98                                   rva stru_180015408>
.pdata:000000018001CAA4                 RUNTIME_FUNCTION <rva sub_18000B9C0, rva algn_18000BAC2, \
.pdata:000000018001CAA4                                   rva stru_180015E74>
.pdata:000000018001CAB0                 RUNTIME_FUNCTION <rva sub_18000BAD0, rva algn_18000BB14, \
.pdata:000000018001CAB0                                   rva stru_180015EB8>
.pdata:000000018001CABC                 RUNTIME_FUNCTION <rva sub_18000BB20, rva algn_18000BC08, \
.pdata:000000018001CABC                                   rva stru_180015EC0>
.pdata:000000018001CAC8                 RUNTIME_FUNCTION <rva sub_18000BC10, rva algn_18000BC52, \
.pdata:000000018001CAC8                                   rva stru_18001594C>
.pdata:000000018001CAD4                 RUNTIME_FUNCTION <rva sub_18000BC60, rva algn_18000BD46, \
.pdata:000000018001CAD4                                   rva stru_180015E74>
.pdata:000000018001CAE0                 RUNTIME_FUNCTION <rva sub_18000BD50, rva algn_18000BD8D, \
.pdata:000000018001CAE0                                   rva stru_180014BA0>
.pdata:000000018001CAEC                 RUNTIME_FUNCTION <rva sub_18000BD90, rva algn_18000BEAE, \
.pdata:000000018001CAEC                                   rva stru_180015E60>
.pdata:000000018001CAF8                 RUNTIME_FUNCTION <rva sub_18000BEB0, rva algn_18000BFC3, \
.pdata:000000018001CAF8                                   rva stru_180015E60>
.pdata:000000018001CB04                 RUNTIME_FUNCTION <rva sub_18000BFD0, rva algn_18000C174, \
.pdata:000000018001CB04                                   rva stru_180015EA0>
.pdata:000000018001CB10                 RUNTIME_FUNCTION <rva sub_18000C180, rva algn_18000C2A5, \
.pdata:000000018001CB10                                   rva stru_180015E74>
.pdata:000000018001CB1C                 RUNTIME_FUNCTION <rva sub_18000C2B0, rva algn_18000C3D2, \
.pdata:000000018001CB1C                                   rva stru_180015ED0>
.pdata:000000018001CB28                 RUNTIME_FUNCTION <rva sub_18000C3E0, rva algn_18000C4AD, \
.pdata:000000018001CB28                                   rva stru_180015E8C>
.pdata:000000018001CB34                 RUNTIME_FUNCTION <rva sub_18000C4B0, rva algn_18000C5AE, \
.pdata:000000018001CB34                                   rva stru_180015E74>
.pdata:000000018001CB40                 RUNTIME_FUNCTION <rva sub_18000C5B0, rva algn_18000C752, \
.pdata:000000018001CB40                                   rva stru_180016288>
.pdata:000000018001CB4C                 RUNTIME_FUNCTION <rva sub_18000C760, rva loc_18000C789, \
.pdata:000000018001CB4C                                   rva stru_180014F28>
.pdata:000000018001CB58                 RUNTIME_FUNCTION <rva loc_18000C789, rva loc_18000C898, \
.pdata:000000018001CB58                                   rva stru_1800162CC>
.pdata:000000018001CB64                 RUNTIME_FUNCTION <rva loc_18000C898, rva loc_18000C89E, \
.pdata:000000018001CB64                                   rva stru_1800162E8>
.pdata:000000018001CB70                 RUNTIME_FUNCTION <rva loc_18000C89E, rva algn_18000C8A4, \
.pdata:000000018001CB70                                   rva stru_1800162F8>
.pdata:000000018001CB7C                 RUNTIME_FUNCTION <rva sub_18000C8B0, rva algn_18000CA24, \
.pdata:000000018001CB7C                                   rva stru_180016124>
.pdata:000000018001CB88                 RUNTIME_FUNCTION <rva sub_18000CA30, rva loc_18000CAB0, \
.pdata:000000018001CB88                                   rva stru_180016194>
.pdata:000000018001CB94                 RUNTIME_FUNCTION <rva loc_18000CAB0, rva loc_18000CAF8, \
.pdata:000000018001CB94                                   rva stru_1800161A4>
.pdata:000000018001CBA0                 RUNTIME_FUNCTION <rva loc_18000CAF8, rva algn_18000CB1F, \
.pdata:000000018001CBA0                                   rva stru_1800161B8>
.pdata:000000018001CBAC                 RUNTIME_FUNCTION <rva sub_18000CBB0, rva algn_18000CC47, \
.pdata:000000018001CBAC                                   rva stru_180015E8C>
.pdata:000000018001CBB8                 RUNTIME_FUNCTION <rva sub_18000CC50, rva algn_18000CCA7, \
.pdata:000000018001CBB8                                   rva stru_180014BA8>
.pdata:000000018001CBC4                 RUNTIME_FUNCTION <rva sub_18000CCB0, rva loc_18000CCDC, \
.pdata:000000018001CBC4                                   rva stru_180015FCC>
.pdata:000000018001CBD0                 RUNTIME_FUNCTION <rva loc_18000CCDC, rva loc_18000CDD3, \
.pdata:000000018001CBD0                                   rva stru_180015FD8>
.pdata:000000018001CBDC                 RUNTIME_FUNCTION <rva loc_18000CDD3, rva loc_18000CDE6, \
.pdata:000000018001CBDC                                   rva stru_180015FF4>
.pdata:000000018001CBE8                 RUNTIME_FUNCTION <rva loc_18000CDE6, rva loc_18000CDF4, \
.pdata:000000018001CBE8                                   rva stru_180016010>
.pdata:000000018001CBF4                 RUNTIME_FUNCTION <rva loc_18000CDF4, rva algn_18000CDFF, \
.pdata:000000018001CBF4                                   rva stru_180016024>
.pdata:000000018001CC00                 RUNTIME_FUNCTION <rva sub_18000CE00, rva loc_18000CE17, \
.pdata:000000018001CC00                                   rva stru_180014BA0>
.pdata:000000018001CC0C                 RUNTIME_FUNCTION <rva loc_18000CE17, rva loc_18000CE95, \
.pdata:000000018001CC0C                                   rva stru_180015FA8>
.pdata:000000018001CC18                 RUNTIME_FUNCTION <rva loc_18000CE95, rva algn_18000CF82, \
.pdata:000000018001CC18                                   rva stru_180015FBC>
.pdata:000000018001CC24                 RUNTIME_FUNCTION <rva sub_18000CFD0, rva sub_18000DA20, \
.pdata:000000018001CC24                                   rva stru_180015F30>
.pdata:000000018001CC30                 RUNTIME_FUNCTION <rva sub_18000DA20, rva loc_18000DB10, \
.pdata:000000018001CC30                                   rva stru_180016090>
.pdata:000000018001CC3C                 RUNTIME_FUNCTION <rva loc_18000DB10, rva loc_18000DBB7, \
.pdata:000000018001CC3C                                   rva stru_1800160A4>
.pdata:000000018001CC48                 RUNTIME_FUNCTION <rva loc_18000DBB7, rva algn_18000DBDA, \
.pdata:000000018001CC48                                   rva stru_1800160BC>
.pdata:000000018001CC54                 RUNTIME_FUNCTION <rva sub_18000DBE0, rva algn_18000DC9D, \
.pdata:000000018001CC54                                   rva stru_180014BA8>
.pdata:000000018001CC60                 RUNTIME_FUNCTION <rva sub_18000DCA0, rva algn_18000DDEB, \
.pdata:000000018001CC60                                   rva stru_180015E8C>
.pdata:000000018001CC6C                 RUNTIME_FUNCTION <rva sub_18000DDF0, rva loc_18000DE09, \
.pdata:000000018001CC6C                                   rva stru_180014BA0>
.pdata:000000018001CC78                 RUNTIME_FUNCTION <rva loc_18000DE09, rva loc_18000DF04, \
.pdata:000000018001CC78                                   rva stru_180016034>
.pdata:000000018001CC84                 RUNTIME_FUNCTION <rva loc_18000DF04, rva loc_18000DF14, \
.pdata:000000018001CC84                                   rva stru_180016050>
.pdata:000000018001CC90                 RUNTIME_FUNCTION <rva loc_18000DF14, rva loc_18000DF24, \
.pdata:000000018001CC90                                   rva stru_18001606C>
.pdata:000000018001CC9C                 RUNTIME_FUNCTION <rva loc_18000DF24, rva algn_18000DF2F, \
.pdata:000000018001CC9C                                   rva stru_180016080>
.pdata:000000018001CCA8                 RUNTIME_FUNCTION <rva sub_18000DF60, rva algn_18000E35D, \
.pdata:000000018001CCA8                                   rva stru_180016154>
.pdata:000000018001CCB4                 RUNTIME_FUNCTION <rva sub_18000E360, rva algn_18000E465, \
.pdata:000000018001CCB4                                   rva stru_1800161D8>
.pdata:000000018001CCC0                 RUNTIME_FUNCTION <rva sub_18000E470, rva algn_18000E4E1, \
.pdata:000000018001CCC0                                   rva stru_180014BA8>
.pdata:000000018001CCCC                 RUNTIME_FUNCTION <rva sub_18000E4F0, rva algn_18000E58C, \
.pdata:000000018001CCCC                                   rva stru_180014BA8>
.pdata:000000018001CCD8                 RUNTIME_FUNCTION <rva sub_18000E590, rva algn_18000E5E2, \
.pdata:000000018001CCD8                                   rva stru_180015EB8>
.pdata:000000018001CCE4                 RUNTIME_FUNCTION <rva sub_18000E6B0, rva loc_18000E6EA, \
.pdata:000000018001CCE4                                   rva stru_1800160CC>
.pdata:000000018001CCF0                 RUNTIME_FUNCTION <rva loc_18000E6EA, rva loc_18000E6FA, \
.pdata:000000018001CCF0                                   rva stru_1800160D8>
.pdata:000000018001CCFC                 RUNTIME_FUNCTION <rva loc_18000E6FA, rva loc_18000E73C, \
.pdata:000000018001CCFC                                   rva stru_1800160F0>
.pdata:000000018001CD08                 RUNTIME_FUNCTION <rva loc_18000E73C, rva loc_18000E760, \
.pdata:000000018001CD08                                   rva stru_180016104>
.pdata:000000018001CD14                 RUNTIME_FUNCTION <rva loc_18000E760, rva algn_18000E767, \
.pdata:000000018001CD14                                   rva stru_180016114>
.pdata:000000018001CD20                 RUNTIME_FUNCTION <rva sub_18000E770, rva algn_18000E7E7, \
.pdata:000000018001CD20                                   rva stru_1800161C8>
.pdata:000000018001CD2C                 RUNTIME_FUNCTION <rva ?_Xlen@?$vector@PEAXV?$allocator@PEAX@std@@@std@@IEBAXXZ,\ ; std::vector<void *,std::allocator<void *>>::_Xlen(void)
.pdata:000000018001CD2C                                   rva algn_18000E801, rva stru_180015018>
.pdata:000000018001CD38                 RUNTIME_FUNCTION <rva sub_18000E810, rva algn_18000E852, \
.pdata:000000018001CD38                                   rva stru_180015018>
.pdata:000000018001CD44                 RUNTIME_FUNCTION <rva sub_18000E860, rva loc_18000E8E8, \
.pdata:000000018001CD44                                   rva stru_1800161F0>
.pdata:000000018001CD50                 RUNTIME_FUNCTION <rva loc_18000E8E8, rva loc_18000EAC4, \
.pdata:000000018001CD50                                   rva stru_180016210>
.pdata:000000018001CD5C                 RUNTIME_FUNCTION <rva loc_18000EAC4, rva algn_18000EAE6, \
.pdata:000000018001CD5C                                   rva stru_180016224>
.pdata:000000018001CD68                 RUNTIME_FUNCTION <rva sub_18000EAF0, rva algn_18000EFD1, \
.pdata:000000018001CD68                                   rva stru_180016234>
.pdata:000000018001CD74                 RUNTIME_FUNCTION <rva sub_18000EFE0, rva loc_18000F02B, \
.pdata:000000018001CD74                                   rva stru_180015EEC>
.pdata:000000018001CD80                 RUNTIME_FUNCTION <rva loc_18000F02B, rva loc_18000F07C, \
.pdata:000000018001CD80                                   rva stru_180015EF8>
.pdata:000000018001CD8C                 RUNTIME_FUNCTION <rva loc_18000F07C, rva loc_18000F087, \
.pdata:000000018001CD8C                                   rva stru_180015F0C>
.pdata:000000018001CD98                 RUNTIME_FUNCTION <rva loc_18000F087, rva algn_18000F08E, \
.pdata:000000018001CD98                                   rva stru_180015F1C>
.pdata:000000018001CDA4                 RUNTIME_FUNCTION <rva sub_18000F090, rva algn_18000F175, \
.pdata:000000018001CDA4                                   rva stru_180016278>
.pdata:000000018001CDB0                 RUNTIME_FUNCTION <rva sub_18000F180, rva algn_18000F271, \
.pdata:000000018001CDB0                                   rva stru_1800159E4>
.pdata:000000018001CDBC                 RUNTIME_FUNCTION <rva sub_18000F280, rva algn_18000F2D1, \
.pdata:000000018001CDBC                                   rva stru_180014BA8>
.pdata:000000018001CDC8                 RUNTIME_FUNCTION <rva sub_18000F2E0, rva algn_18000F353, \
.pdata:000000018001CDC8                                   rva stru_18001594C>
.pdata:000000018001CDD4                 RUNTIME_FUNCTION <rva sub_18000F360, rva algn_18000F4B3, \
.pdata:000000018001CDD4                                   rva stru_180016390>
.pdata:000000018001CDE0                 RUNTIME_FUNCTION <rva sub_18000F4C0, rva algn_18000F537, \
.pdata:000000018001CDE0                                   rva stru_180014BA8>
.pdata:000000018001CDEC                 RUNTIME_FUNCTION <rva Function, rva loc_18000F54E, rva stru_180016360>
.pdata:000000018001CDF8                 RUNTIME_FUNCTION <rva loc_18000F54E, rva locret_18000F7B6, \
.pdata:000000018001CDF8                                   rva stru_180016368>
.pdata:000000018001CE04                 RUNTIME_FUNCTION <rva locret_18000F7B6, rva algn_18000F7B7, \
.pdata:000000018001CE04                                   rva stru_180016380>
.pdata:000000018001CE10                 RUNTIME_FUNCTION <rva sub_18000F7C0, rva algn_18000F82D, \
.pdata:000000018001CE10                                   rva stru_180014BA8>
.pdata:000000018001CE1C                 RUNTIME_FUNCTION <rva sub_18000F830, rva algn_18000F95D, \
.pdata:000000018001CE1C                                   rva stru_180015408>
.pdata:000000018001CE28                 RUNTIME_FUNCTION <rva sub_18000F960, rva algn_18000FA84, \
.pdata:000000018001CE28                                   rva stru_180016320>
.pdata:000000018001CE34                 RUNTIME_FUNCTION <rva sub_18000FA90, rva algn_18000FB6C, \
.pdata:000000018001CE34                                   rva stru_1800163A8>
.pdata:000000018001CE40                 RUNTIME_FUNCTION <rva sub_18000FB70, rva algn_18000FC05, \
.pdata:000000018001CE40                                   rva stru_1800163B0>
.pdata:000000018001CE4C                 RUNTIME_FUNCTION <rva sub_18000FC20, rva algn_18000FDE7, \
.pdata:000000018001CE4C                                   rva stru_1800163BC>
.pdata:000000018001CE58                 RUNTIME_FUNCTION <rva sub_18000FDF0, rva loc_18000FE0F, \
.pdata:000000018001CE58                                   rva stru_180014BA0>
.pdata:000000018001CE64                 RUNTIME_FUNCTION <rva loc_18000FE0F, rva loc_18000FE63, \
.pdata:000000018001CE64                                   rva stru_18001633C>
.pdata:000000018001CE70                 RUNTIME_FUNCTION <rva loc_18000FE63, rva algn_18000FE91, \
.pdata:000000018001CE70                                   rva stru_180016350>
.pdata:000000018001CE7C                 RUNTIME_FUNCTION <rva sub_18000FEA0, rva algn_18000FFA5, \
.pdata:000000018001CE7C                                   rva stru_18001594C>
.pdata:000000018001CE88                 RUNTIME_FUNCTION <rva sub_18000FFB0, rva loc_180010011, \
.pdata:000000018001CE88                                   rva stru_1800163D0>
.pdata:000000018001CE94                 RUNTIME_FUNCTION <rva loc_180010011, rva loc_180010104, \
.pdata:000000018001CE94                                   rva stru_1800163E4>
.pdata:000000018001CEA0                 RUNTIME_FUNCTION <rva loc_180010104, rva algn_18001013F, \
.pdata:000000018001CEA0                                   rva stru_1800163F8>
.pdata:000000018001CEAC                 RUNTIME_FUNCTION <rva sub_180010140, rva sub_180010210, \
.pdata:000000018001CEAC                                   rva stru_18001594C>
.pdata:000000018001CEB8                 RUNTIME_FUNCTION <rva sub_180010210, \ ; std::_Xlength_error(char const *)
.pdata:000000018001CEB8                                   rva ?_Xlength_error@std@@YAXPEBD@Z, \
.pdata:000000018001CEB8                                   rva stru_180016314>
.pdata:000000018001CEC4                 RUNTIME_FUNCTION <rva ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z, \ ; std::_Facet_Register(std::_Facet_base *) ...
.pdata:000000018001CEC4                                   rva ??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ,\
.pdata:000000018001CEC4                                   rva stru_180014BA0>
.pdata:000000018001CED0                 RUNTIME_FUNCTION <rva __security_check_cookie, rva algn_18001031E, \
.pdata:000000018001CED0                                   rva stru_180016408>
.pdata:000000018001CEDC                 RUNTIME_FUNCTION <rva ??2@YAPEAX_K@Z, rva j_j_free, \ ; operator new(unsigned __int64)
.pdata:000000018001CEDC                                   rva stru_180014BA0>
.pdata:000000018001CEE8                 RUNTIME_FUNCTION <rva sub_180010364, rva algn_18001038F, \
.pdata:000000018001CEE8                                   rva stru_180014BA0>
.pdata:000000018001CEF4                 RUNTIME_FUNCTION <rva ?dllmain_crt_dispatch@@YAHQEAUHINSTANCE__@@KQEAX@Z,\ ; dllmain_crt_dispatch(HINSTANCE__ * const,ulong,void * const) ...
.pdata:000000018001CEF4                                   rva ?dllmain_crt_process_attach@@YAHQEAUHINSTANCE__@@QEAX@Z,\
.pdata:000000018001CEF4                                   rva stru_180015018>
.pdata:000000018001CF00                 RUNTIME_FUNCTION <rva ?dllmain_crt_process_attach@@YAHQEAUHINSTANCE__@@QEAX@Z,\ ; dllmain_crt_process_attach(HINSTANCE__ * const,void * const)
.pdata:000000018001CF00                                   rva loc_1800104F6, rva stru_18001640C>
.pdata:000000018001CF0C                 RUNTIME_FUNCTION <rva ?dllmain_crt_process_detach@@YAH_N@Z, \ ; dllmain_crt_process_detach(bool) ...
.pdata:000000018001CF0C                                   rva ?dllmain_dispatch@@YAHQEAUHINSTANCE__@@KQEAX@Z, \
.pdata:000000018001CF0C                                   rva stru_180016448>
.pdata:000000018001CF18                 RUNTIME_FUNCTION <rva ?dllmain_dispatch@@YAHQEAUHINSTANCE__@@KQEAX@Z, \ ; dllmain_dispatch(HINSTANCE__ * const,ulong,void * const)
.pdata:000000018001CF18                                   rva algn_1800106AD, rva stru_18001649C>
.pdata:000000018001CF24                 RUNTIME_FUNCTION <rva DllEntryPoint, rva algn_1800106ED, \
.pdata:000000018001CF24                                   rva stru_18001594C>
.pdata:000000018001CF30                 RUNTIME_FUNCTION <rva __GSHandlerCheck, rva algn_18001070D, \
.pdata:000000018001CF30                                   rva stru_180015018>
.pdata:000000018001CF3C                 RUNTIME_FUNCTION <rva __GSHandlerCheckCommon, rva algn_18001076B, \
.pdata:000000018001CF3C                                   rva stru_1800164CC>
.pdata:000000018001CF48                 RUNTIME_FUNCTION <rva __GSHandlerCheck_EH4, rva algn_1800107EB, \
.pdata:000000018001CF48                                   rva stru_1800164D4>
.pdata:000000018001CF54                 RUNTIME_FUNCTION <rva __scrt_acquire_startup_lock, rva algn_18001082D,\
.pdata:000000018001CF54                                   rva stru_180015018>
.pdata:000000018001CF60                 RUNTIME_FUNCTION <rva __scrt_dllmain_after_initialize_c, \
.pdata:000000018001CF60                                   rva __scrt_dllmain_before_initialize_c, \
.pdata:000000018001CF60                                   rva stru_180015018>
.pdata:000000018001CF6C                 RUNTIME_FUNCTION <rva __scrt_dllmain_before_initialize_c, \
.pdata:000000018001CF6C                                   rva algn_180010879, rva stru_180015018>
.pdata:000000018001CF78                 RUNTIME_FUNCTION <rva sub_18001087C, \
.pdata:000000018001CF78                                   rva __scrt_dllmain_crt_thread_detach, \
.pdata:000000018001CF78                                   rva stru_180015018>
.pdata:000000018001CF84                 RUNTIME_FUNCTION <rva __scrt_dllmain_crt_thread_detach, \
.pdata:000000018001CF84                                   rva algn_1800108B9, rva stru_180015018>
.pdata:000000018001CF90                 RUNTIME_FUNCTION <rva __scrt_dllmain_exception_filter, \
.pdata:000000018001CF90                                   rva __scrt_dllmain_uninitialize_c, \
.pdata:000000018001CF90                                   rva stru_1800163BC>
.pdata:000000018001CF9C                 RUNTIME_FUNCTION <rva __scrt_dllmain_uninitialize_c, \
.pdata:000000018001CF9C                                   rva __scrt_dllmain_uninitialize_critical, \
.pdata:000000018001CF9C                                   rva stru_180015018>
.pdata:000000018001CFA8                 RUNTIME_FUNCTION <rva __scrt_dllmain_uninitialize_critical, \
.pdata:000000018001CFA8                                   rva __scrt_initialize_crt, rva stru_180015018>
.pdata:000000018001CFB4                 RUNTIME_FUNCTION <rva __scrt_initialize_crt, rva algn_1800109A9, \
.pdata:000000018001CFB4                                   rva stru_180014BA0>
.pdata:000000018001CFC0                 RUNTIME_FUNCTION <rva __scrt_initialize_onexit_tables, \
.pdata:000000018001CFC0                                   rva algn_180010A37, rva stru_180014BA0>
.pdata:000000018001CFCC                 RUNTIME_FUNCTION <rva __scrt_is_nonwritable_in_current_image, \
.pdata:000000018001CFCC                                   rva __scrt_release_startup_lock, rva stru_1800164EC>
.pdata:000000018001CFD8                 RUNTIME_FUNCTION <rva __scrt_release_startup_lock, \
.pdata:000000018001CFD8                                   rva __scrt_uninitialize_crt, rva stru_180014BA0>
.pdata:000000018001CFE4                 RUNTIME_FUNCTION <rva __scrt_uninitialize_crt, rva algn_180010B1D, \
.pdata:000000018001CFE4                                   rva stru_180014BA0>
.pdata:000000018001CFF0                 RUNTIME_FUNCTION <rva _onexit, rva algn_180010B5A, rva stru_180014BA0>
.pdata:000000018001CFFC                 RUNTIME_FUNCTION <rva atexit, rva algn_180010B73, rva stru_180015018>
.pdata:000000018001D008                 RUNTIME_FUNCTION <rva __raise_securityfailure, rva __report_gsfailure,\
.pdata:000000018001D008                                   rva stru_180014BA0>
.pdata:000000018001D014                 RUNTIME_FUNCTION <rva __report_gsfailure, rva algn_180010C7A, \
.pdata:000000018001D014                                   rva stru_180016514>
.pdata:000000018001D020                 RUNTIME_FUNCTION <rva capture_previous_context, rva algn_180010CED, \
.pdata:000000018001D020                                   rva stru_18001651C>
.pdata:000000018001D02C                 RUNTIME_FUNCTION <rva ?cancel_current_task@Concurrency@@YAXXZ_1, \ ; Concurrency::cancel_current_task(void)
.pdata:000000018001D02C                                   rva j_free, rva stru_180014BB4>
.pdata:000000018001D038                 RUNTIME_FUNCTION <rva __security_init_cookie, rva DllMain, \
.pdata:000000018001D038                                   rva stru_180016528>
.pdata:000000018001D044                 RUNTIME_FUNCTION <rva DllMain, rva algn_180010E07, rva stru_180015018>
.pdata:000000018001D050                 RUNTIME_FUNCTION <rva __scrt_initialize_default_local_stdio_options, \
.pdata:000000018001D050                                   rva algn_180010E3F, rva stru_180015018>
.pdata:000000018001D05C                 RUNTIME_FUNCTION <rva __scrt_fastfail, rva algn_180010F9B, \
.pdata:000000018001D05C                                   rva stru_180016534>
.pdata:000000018001D068                 RUNTIME_FUNCTION <rva sub_180010F9C, rva sub_180010FD8, \
.pdata:000000018001D068                                   rva stru_180014BA8>
.pdata:000000018001D074                 RUNTIME_FUNCTION <rva sub_180010FD8, rva __isa_available_init, \
.pdata:000000018001D074                                   rva stru_180014BA8>
.pdata:000000018001D080                 RUNTIME_FUNCTION <rva __isa_available_init, \ ; charNode::raw_length(void)
.pdata:000000018001D080                                   rva ?raw_length@charNode@@UEBAHXZ, \
.pdata:000000018001D080                                   rva stru_180016544>
.pdata:000000018001D08C                 RUNTIME_FUNCTION <rva __alloca_probe, rva ceilf, rva stru_180016568>
.pdata:000000018001D098                 RUNTIME_FUNCTION <rva _guard_dispatch_icall_nop, rva byte_1800112F2, \
.pdata:000000018001D098                                   rva stru_180016558>
.pdata:000000018001D0A4                 RUNTIME_FUNCTION <rva _guard_xfg_dispatch_icall_nop, \
.pdata:000000018001D0A4                                   rva algn_180011316, rva stru_180016560>
.pdata:000000018001D0B0                 RUNTIME_FUNCTION <rva loc_180011320, rva loc_18001133D, \
.pdata:000000018001D0B0                                   rva stru_18001505C>
.pdata:000000018001D0BC                 RUNTIME_FUNCTION <rva loc_18001135C, rva loc_18001137C, \
.pdata:000000018001D0BC                                   rva stru_18001505C>
.pdata:000000018001D0C8                 RUNTIME_FUNCTION <rva loc_18001137C, \ ; int `std::ctype<char>::_Getcat(ctype<char>::locale::facet const * *,ctype<char>::facet const *)'::`1'::dtor$0
.pdata:000000018001D0C8                                   rva ?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA,\
.pdata:000000018001D0C8                                   rva stru_18001505C>
.pdata:000000018001D0D4                 RUNTIME_FUNCTION <rva loc_180011480, rva loc_1800114AE, \
.pdata:000000018001D0D4                                   rva stru_18001505C>
.pdata:000000018001D0E0                 RUNTIME_FUNCTION <rva loc_1800114CC, rva algn_1800114F2, \
.pdata:000000018001D0E0                                   rva stru_18001505C>
.pdata:000000018001D0EC                 RUNTIME_FUNCTION <rva loc_180011520, rva loc_18001154E, \
.pdata:000000018001D0EC                                   rva stru_18001505C>
.pdata:000000018001D0F8                 RUNTIME_FUNCTION <rva loc_180011588, rva algn_1800115C3, \
.pdata:000000018001D0F8                                   rva stru_180015AB4>
.pdata:000000018001D104                 RUNTIME_FUNCTION <rva loc_18001160E, rva algn_180011649, \
.pdata:000000018001D104                                   rva stru_180015B48>
.pdata:000000018001D110                 RUNTIME_FUNCTION <rva loc_180011668, rva algn_1800116A3, \
.pdata:000000018001D110                                   rva stru_180015AB4>
.pdata:000000018001D11C                 RUNTIME_FUNCTION <rva loc_1800116DC, rva sub_180011702, \
.pdata:000000018001D11C                                   rva stru_18001505C>
.pdata:000000018001D128                 RUNTIME_FUNCTION <rva loc_180011790, rva algn_1800117B8, \
.pdata:000000018001D128                                   rva stru_180015AB4>
.pdata:000000018001D134                 RUNTIME_FUNCTION <rva loc_1800117F0, rva algn_18001180D, \
.pdata:000000018001D134                                   rva stru_18001505C>
.pdata:000000018001D140                 RUNTIME_FUNCTION <rva ?fin$0@?0??dllmain_crt_process_attach@@YAHQEAUHINSTANCE__@@QEAX@Z@4HA,\ ; int `dllmain_crt_process_attach(HINSTANCE__ * const,void * const)'::`1'::fin$0 ...
.pdata:000000018001D140                                   rva ?fin$0@?0??dllmain_crt_process_detach@@YAH_N@Z@4HA,\
.pdata:000000018001D140                                   rva stru_18001505C>
.pdata:000000018001D14C                 RUNTIME_FUNCTION <rva ?fin$0@?0??dllmain_crt_process_detach@@YAH_N@Z@4HA,\ ; int `dllmain_crt_process_detach(bool)'::`1'::fin$0
.pdata:000000018001D14C                                   rva _onexit$fin$0, rva stru_18001505C>
.pdata:000000018001D158                 RUNTIME_FUNCTION <rva _onexit$fin$0, \ ; int `dllmain_dispatch(HINSTANCE__ * const,ulong,void * const)'::`1'::filt$0
.pdata:000000018001D158                                   rva ?filt$0@?0??dllmain_dispatch@@YAHQEAUHINSTANCE__@@KQEAX@Z@4HA,\
.pdata:000000018001D158                                   rva stru_18001505C>
.pdata:000000018001D164                 RUNTIME_FUNCTION <rva ?filt$0@?0??dllmain_dispatch@@YAHQEAUHINSTANCE__@@KQEAX@Z@4HA,\ ; int `dllmain_dispatch(HINSTANCE__ * const,ulong,void * const)'::`1'::filt$0
.pdata:000000018001D164                                   rva __scrt_is_nonwritable_in_current_image$filt$0, \
.pdata:000000018001D164                                   rva stru_1800164C4>
.pdata:000000018001D170                 RUNTIME_FUNCTION <rva __scrt_is_nonwritable_in_current_image$filt$0, \
.pdata:000000018001D170                                   rva algn_1800118CE, rva stru_18001650C>
.pdata:000000018001D17C                 RUNTIME_FUNCTION <rva unknown_libname_8, rva algn_18001192B, \ ; Microsoft VisualC v14 64bit runtime
.pdata:000000018001D17C                                   rva stru_180014BA0>
.pdata:000000018001D188                 align 1000h
.pdata:000000018001D188 _pdata          ends
.pdata:000000018001D188
.pdata:000000018001D188
.pdata:000000018001D188                 end DllEntryPoint