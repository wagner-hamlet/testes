using System;
using System.Runtime.InteropServices;
using Microsoft.FlightSimulator.SimConnect;

namespace SimConnectTest
{
    class Program
    {
        static void Main(string[] args)
        {
            SimConnect simConnect = new SimConnect("SimConnectTest", IntPtr.Zero, 0, null, 0);

            // Definição de dados
            enum DEFINITIONS
            {
                Struct1
            };
            struct Struct1
            {
                public double verticalSpeed;
            };

            simConnect.AddToDataDefinition(DEFINITIONS.Struct1, "VERTICAL SPEED", "feet per minute", SIMCONNECT_DATATYPE.FLOAT64, 0.0f, SimConnect.SIMCONNECT_UNUSED);

            simConnect.RegisterDataDefineStruct<Struct1>(DEFINITIONS.Struct1);

            // Requisição de dados
            enum DATA_REQUESTS
            {
                Request1
            };
            simConnect.RequestDataOnSimObject(DATA_REQUESTS.Request1, DEFINITIONS.Struct1, SimConnect.SIMCONNECT_OBJECT_ID_USER, SIMCONNECT_PERIOD.SECOND, SIMCONNECT_DATA_REQUEST_FLAG.DEFAULT, 0, 0, 0);

            // Tratamento de eventos do SimConnect
            simConnect.OnRecvOpen += new SimConnect.RecvOpenEventHandler(SimConnect_OnRecvOpen);
            simConnect.OnRecvQuit += new SimConnect.RecvQuitEventHandler(SimConnect_OnRecvQuit);
            simConnect.OnRecvSimobjectDataBytype += new SimConnect.RecvSimobjectDataBytypeEventHandler(SimConnect_OnRecvSimobjectDataBytype);

            // Inscrição para receber eventos do SimConnect
            simConnect.SubscribeToSystemEvent(DEFINITIONS.Struct1, "Sim");
            simConnect.SubscribeToSystemEvent(DEFINITIONS.Struct1, "Frame");

            while (true)
            {
                simConnect.ReceiveMessage();
                System.Threading.Thread.Sleep(1);
            }
        }

        static void SimConnect_OnRecvOpen(SimConnect sender, SIMCONNECT_RECV_OPEN data)
        {
            Console.WriteLine("Conexão estabelecida!");
        }

        static void SimConnect_OnRecvQuit(SimConnect sender, SIMCONNECT_RECV data)
        {
            Console.WriteLine("Conexão encerrada!");
            Environment.Exit(0);
        }

        static void SimConnect_OnRecvSimobjectDataBytype(SimConnect sender, SIMCONNECT_RECV_SIMOBJECT_DATA_BYTYPE data)
        {
            switch ((SIMCONNECT_DATA_DEFINITION_ID)data.dwDefineID)
            {
                case SIMCONNECT_DATA_DEFINITION_ID.Struct1:
                    Struct1 s1 = (Struct1)data.dwData[0];
                    Console.WriteLine($"Vertical Speed: {s1.verticalSpeed}");
                    break;
                default:
                    break;
            }
        }
    }
}
